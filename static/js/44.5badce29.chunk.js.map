{"version":3,"sources":["apps/Portfolio/screens/Settings/index.tsx"],"names":["memo","dispatch","useRootDispatch","themes","Object","values","ColorTheme","currentTheme","useRootSelector","state","theme","currentColor","nav","useNav","themePress","useCallback","changeTheme","renderItem","item","key","title","onPress","contained","secondary","renderHeader","disable","onLeftPress","to","ListHeaderComponent","horizontal","keyExtractor","data"],"mappings":"qGAAA,oEAOeA,0BAAK,WAClB,IAAMC,EAAWC,cACXC,EAASC,OAAOC,OAAOC,KACvBC,EAAeC,aAAgB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,gBACpDC,EAAMC,cACNC,EAAaC,uBACjB,SAACL,GAAD,OAAuB,kBAAMT,EAASe,YAAYN,OAClD,CAACT,IAEGgB,EAAaF,uBACjB,gBAAGG,EAAH,EAAGA,KAAH,OACE,kBAAC,IAAD,CACEC,IAAKD,EACLE,MAAOF,EACPG,QAASP,EAAWI,GACpBI,UAAWf,IAAiBW,EAC5BK,UAAWhB,IAAiBW,MAGhC,CAACX,EAAcO,IAGXU,EAAeT,uBAAY,kBAAM,kBAAC,IAAD,CAAQU,SAAO,EAACL,MAAM,YAAY,IACzE,OACE,kBAAC,IAAD,CAAQM,YAAad,EAAIe,GAAG,oBAAqBP,MAAM,YACrD,kBAAC,IAAD,CACEQ,oBAAqBJ,EACrBK,YAAU,EACVC,aAAc,SAAAZ,GAAI,OAAIA,GACtBa,KAAM5B,EACNc,WAAYA","file":"static/js/44.5badce29.chunk.js","sourcesContent":["import React, { memo, useCallback } from \"react\";\nimport { FlatList } from \"react-native\";\nimport { Button, Screen } from \"../../../../components\";\nimport { ColorTheme, changeTheme } from \"../../../../models\";\nimport { useRootDispatch, useRootSelector } from \"../../../../utils\";\nimport { useNav } from \"../../../../hooks\";\n\nexport default memo(function PortfolioSettings() {\n  const dispatch = useRootDispatch();\n  const themes = Object.values(ColorTheme);\n  const currentTheme = useRootSelector(state => state.theme.currentColor);\n  const nav = useNav();\n  const themePress = useCallback(\n    (theme: ColorTheme) => () => dispatch(changeTheme(theme)),\n    [dispatch]\n  );\n  const renderItem = useCallback(\n    ({ item }) => \n      <Button\n        key={item}\n        title={item}\n        onPress={themePress(item)}\n        contained={currentTheme === item}\n        secondary={currentTheme !== item}\n      />\n    ,\n    [currentTheme, themePress]\n  );\n\n  const renderHeader = useCallback(() => <Button disable title=\"Theme\" />, []);\n  return (\n    <Screen onLeftPress={nav.to(\"portfolioLanding\")} title=\"Settings\">\n      <FlatList\n        ListHeaderComponent={renderHeader}\n        horizontal\n        keyExtractor={item => item}\n        data={themes}\n        renderItem={renderItem}\n      />\n    </Screen>\n  );\n});\n"],"sourceRoot":""}