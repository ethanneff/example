{"version":3,"sources":["apps/Debug/screens/Ball/index.tsx"],"names":["styles","StyleSheet","create","ball","borderColor","borderRadius","borderWidth","height","marginLeft","marginTop","width","button","flex","flexDirection","justifyContent","Container","props","ballPosition","nav","to","navigate","Animated","ValueXY","x","y","onLeftPress","this","View","style","getLayout","title","onPress","animate","Math","random","dx","dy","spring","toValue","start","React","PureComponent","mapDispatchToProps","connect","state","getHeight","getWidth"],"mappings":"wNAYMA,EAASC,IAAWC,OAAO,CAC/BC,KAAM,CACJC,YAAa,QACbC,aAAc,GACdC,YAAa,GACbC,OAAQ,GACRC,YAAa,GACbC,WAAY,GACZC,MAAO,IAETC,OAAQ,CACNC,KAAM,EACNC,cAAe,MACfC,eAAgB,kBAedC,E,YAGJ,WAAmBC,GAAe,IAAD,uBAC/B,4CAAMA,KAHAC,kBAEyB,IAoBzBC,IAAM,SAACC,GAAD,OAA0B,kBAAM,EAAKH,MAAMI,SAASD,KApBjC,MAEL,EAAKH,MAAvBN,EAFuB,EAEvBA,MAAOH,EAFgB,EAEhBA,OAFgB,OAG/B,EAAKU,aAAe,IAAII,IAASC,QAAQ,CAAEC,EAAGb,EAAQ,EAAGc,EAAGjB,EAAS,IAHtC,E,sEAKhB,IAAD,OACd,OACE,kBAAC,IAAD,CAAQkB,YAAaC,KAAKR,IAAI,UAC5B,kBAAC,IAASS,KAAV,CAAeC,MAAO,CAACF,KAAKT,aAAaY,YAAa7B,EAAOG,QAC7D,kBAAC,IAAD,CAAMyB,MAAO5B,EAAOW,QAClB,kBAAC,IAAD,CAAQmB,MAAM,UAAUC,QAAS,kBAAM,EAAKC,QAAQ,GAAK,OACzD,kBAAC,IAAD,CACEF,MAAM,SACNC,QAAS,kBAAM,EAAKC,QAAQC,KAAKC,SAAUD,KAAKC,iB,8BAS1CC,EAAYC,GAAa,IAAD,EACZV,KAAKV,MAAvBN,EAD8B,EAC9BA,MAAOH,EADuB,EACvBA,OACfc,IAASgB,OAAOX,KAAKT,aAAc,CACjCqB,QAAS,CAAEf,EAAGb,EAAQyB,EAAIX,EAAGjB,EAAS6B,KACrCG,Y,GA7BiBC,IAAMC,eAsCxBC,EAAoC,CAAEtB,cAE7BuB,uBAPS,SAACC,GAAD,MAAuB,CAC7CrC,OAAQsC,YAAUD,GAClBlC,MAAOoC,YAASF,MAOhBF,EAFaC,CAGb5B","file":"static/js/22.c9fbda3b.chunk.js","sourcesContent":["import React from \"react\";\nimport { Animated, StyleSheet, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { Button, Screen } from \"../../../../components\";\nimport { RootState } from \"../../../../containers\";\nimport {\n  NavigationScreen,\n  getHeight,\n  getWidth,\n  navigate\n} from \"../../../../models\";\n\nconst styles = StyleSheet.create({\n  ball: {\n    borderColor: \"black\",\n    borderRadius: 30,\n    borderWidth: 30,\n    height: 60,\n    marginLeft: -30,\n    marginTop: -30,\n    width: 60\n  },\n  button: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ninterface DispatchProps {\n  navigate: typeof navigate;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass Container extends React.PureComponent<Props> {\n  private ballPosition: Animated.ValueXY;\n\n  public constructor(props: Props) {\n    super(props);\n    const { width, height } = this.props;\n    this.ballPosition = new Animated.ValueXY({ x: width / 2, y: height / 2 });\n  }\n  public render() {\n    return (\n      <Screen onLeftPress={this.nav(\"debug\")}>\n        <Animated.View style={[this.ballPosition.getLayout(), styles.ball]} />\n        <View style={styles.button}>\n          <Button title=\"initial\" onPress={() => this.animate(0.5, 0.5)} />\n          <Button\n            title=\"random\"\n            onPress={() => this.animate(Math.random(), Math.random())}\n          />\n        </View>\n      </Screen>\n    );\n  }\n\n  private nav = (to: NavigationScreen) => () => this.props.navigate(to);\n\n  private animate(dx: number, dy: number) {\n    const { width, height } = this.props;\n    Animated.spring(this.ballPosition, {\n      toValue: { x: width * dx, y: height * dy }\n    }).start();\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  height: getHeight(state),\n  width: getWidth(state)\n});\n\nconst mapDispatchToProps: DispatchProps = { navigate };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Container);\n"],"sourceRoot":""}