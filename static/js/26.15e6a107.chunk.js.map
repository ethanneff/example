{"version":3,"sources":["apps/Checklists/screens/List/index.tsx"],"names":["memo","nav","useNav","color","useColor","dispatch","useRootDispatch","items","useRootSelector","getCurrentActiveChecklistItemsOrderByCreatedAt","handleRemove","useCallback","id","removeChecklistItem","handleToggle","toggleChecklistItemComplete","handleEdit","setActiveChecklistItem","navigate","renderItem","item","style","flexDirection","alignItems","success","name","danger","onPress","warning","completed","lowercase","title","keyExtractor","navBack","navCreate","gutter","onLeftPress","data","background","fab","right"],"mappings":"qGAAA,kFAaeA,0BAAK,WAClB,IAAMC,EAAMC,cACNC,EAAQC,cACRC,EAAWC,cACXC,EAAQC,YAAgBC,KAExBC,EAAeC,uBACnB,SAACC,GAAD,OAAgB,kBAAMP,EAASQ,YAAoBD,OACnD,CAACP,IAEGS,EAAeH,uBACnB,SAACC,GAAD,OAAgB,kBAAMP,EAASU,YAA4BH,OAC3D,CAACP,IAEGW,EAAaL,uBACjB,SAACC,GAAD,OAAgB,WACdP,EAASY,YAAuBL,IAChCP,EAASa,YAAS,4BAEpB,CAACb,IAGGc,EAAaR,uBACjB,gBAAES,EAAF,EAAEA,KAAF,OACE,kBAAC,IAAD,CAAMC,MAAO,CAACC,cAAe,MAAOC,WAAY,WAC9C,kBAAC,IAAD,CAAMpB,MAAOA,EAAMqB,QAASC,KAAK,2BACjC,kBAAC,IAAD,CACEtB,MAAOA,EAAMuB,OACbD,KAAK,eACLE,QAASjB,EAAaU,EAAKR,MAE7B,kBAAC,IAAD,CACET,MAAOA,EAAMyB,QACbH,KAAK,QACLE,QAASb,EAAaM,EAAKR,MAE7B,kBAAC,IAAD,CACET,MAAOiB,EAAKS,UAAY,UAAY,OACpCC,WAAS,EACTH,QAASX,EAAWI,EAAKR,IACzBmB,MAAOX,EAAKK,WAIlB,CACEtB,EAAMuB,OACNvB,EAAMqB,QACNrB,EAAMyB,QACNZ,EACAN,EACAI,IAGEkB,EAAerB,uBAAY,SAACS,GAAD,OAAUA,EAAKR,KAAI,IAC9CqB,EAAUtB,sBAAYV,EAAI,cAAe,CAACA,IAC1CiC,EAAYvB,sBAAYV,EAAI,wBAAyB,CAACA,IAE5D,OACE,kBAAC,IAAD,CAAQkC,QAAM,EAACC,YAAaH,EAASF,MAAM,aACzC,kBAAC,IAAD,CACEM,KAAM9B,EACNyB,aAAcA,EACdb,WAAYA,IAEd,kBAAC,IAAD,CACEhB,MAAOA,EAAMmC,WACbC,KAAG,EACHd,KAAK,OACLE,QAASO,EACTM,OAAK","file":"static/js/26.15e6a107.chunk.js","sourcesContent":["import React, {memo, useCallback} from 'react';\nimport {FlatList, View} from 'react-native';\nimport {Button, Icon, Screen} from '../../../../components';\nimport {useRootDispatch, useRootSelector} from '../../../../utils';\nimport {\n  getCurrentActiveChecklistItemsOrderByCreatedAt,\n  removeChecklistItem,\n  setActiveChecklistItem,\n  toggleChecklistItemComplete,\n} from '../../models';\nimport {useColor, useNav} from '../../../../hooks';\nimport {navigate} from '../../../../models';\n\nexport default memo(function Checklist() {\n  const nav = useNav();\n  const color = useColor();\n  const dispatch = useRootDispatch();\n  const items = useRootSelector(getCurrentActiveChecklistItemsOrderByCreatedAt);\n\n  const handleRemove = useCallback(\n    (id: string) => () => dispatch(removeChecklistItem(id)),\n    [dispatch],\n  );\n  const handleToggle = useCallback(\n    (id: string) => () => dispatch(toggleChecklistItemComplete(id)),\n    [dispatch],\n  );\n  const handleEdit = useCallback(\n    (id: string) => () => {\n      dispatch(setActiveChecklistItem(id));\n      dispatch(navigate('checklistsItemUpdate'));\n    },\n    [dispatch],\n  );\n\n  const renderItem = useCallback(\n    ({item}) => (\n      <View style={{flexDirection: 'row', alignItems: 'center'}}>\n        <Icon color={color.success} name=\"checkbox-marked-circle\" />\n        <Icon\n          color={color.danger}\n          name=\"close-circle\"\n          onPress={handleRemove(item.id)}\n        />\n        <Icon\n          color={color.warning}\n          name=\"clock\"\n          onPress={handleToggle(item.id)}\n        />\n        <Button\n          color={item.completed ? 'primary' : 'text'}\n          lowercase\n          onPress={handleEdit(item.id)}\n          title={item.name}\n        />\n      </View>\n    ),\n    [\n      color.danger,\n      color.success,\n      color.warning,\n      handleEdit,\n      handleRemove,\n      handleToggle,\n    ],\n  );\n  const keyExtractor = useCallback((item) => item.id, []);\n  const navBack = useCallback(nav('checklists'), [nav]);\n  const navCreate = useCallback(nav('checklistsItemCreate'), [nav]);\n\n  return (\n    <Screen gutter onLeftPress={navBack} title=\"Checklist\">\n      <FlatList\n        data={items}\n        keyExtractor={keyExtractor}\n        renderItem={renderItem}\n      />\n      <Icon\n        color={color.background}\n        fab\n        name=\"plus\"\n        onPress={navCreate}\n        right\n      />\n    </Screen>\n  );\n});\n"],"sourceRoot":""}