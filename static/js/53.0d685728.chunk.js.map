{"version":3,"sources":["apps/Portfolio/screens/Settings/index.tsx"],"names":["themes","Object","values","ColorTheme","memo","dispatch","useRootDispatch","currentTheme","useRootSelector","state","theme","currentColor","nav","useNav","themePress","useCallback","changeTheme","renderItem","item","color","key","onPress","title","renderHeader","disable","keyExtractor","navBack","onLeftPress","data","horizontal","ListHeaderComponent"],"mappings":"qGAAA,0EAOMA,EAASC,OAAOC,OAAOC,KACdC,0BAAK,WAClB,IAAMC,EAAWC,cACXC,EAAeC,aAAgB,SAACC,GAAD,OAAWA,EAAMC,MAAMC,gBACtDC,EAAMC,cACNC,EAAaC,uBACjB,SAACL,GAAD,OAAuB,kBAAML,EAASW,YAAYN,OAClD,CAACL,IAEGY,EAAaF,uBACjB,gBAAEG,EAAF,EAAEA,KAAF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOZ,IAAiBW,EAAO,UAAY,OAC3CE,IAAKF,EACLG,QAASP,EAAWI,GACpBI,MAAOJ,QAIb,CAACX,EAAcO,IAGXS,EAAeR,uBAAY,kBAAM,kBAAC,IAAD,CAAQS,SAAO,EAACF,MAAM,YAAY,IACnEG,EAAeV,uBAAY,SAACG,GAAD,OAAUA,IAAM,IAE3CQ,EAAUX,sBAAYH,EAAI,oBAAqB,CAACA,IACtD,OACE,kBAAC,IAAD,CAAQe,YAAaD,EAASJ,MAAM,YAClC,kBAAC,IAAD,CACEM,KAAM5B,EACN6B,YAAU,EACVJ,aAAcA,EACdK,oBAAqBP,EACrBN,WAAYA","file":"static/js/53.0d685728.chunk.js","sourcesContent":["import React, {memo, useCallback} from 'react';\nimport {FlatList, View} from 'react-native';\nimport {Button, Screen} from '../../../../components';\nimport {ColorTheme, changeTheme} from '../../../../models';\nimport {useRootDispatch, useRootSelector} from '../../../../utils';\nimport {useNav} from '../../../../hooks';\n\nconst themes = Object.values(ColorTheme);\nexport default memo(function PortfolioSettings() {\n  const dispatch = useRootDispatch();\n  const currentTheme = useRootSelector((state) => state.theme.currentColor);\n  const nav = useNav();\n  const themePress = useCallback(\n    (theme: ColorTheme) => () => dispatch(changeTheme(theme)),\n    [dispatch],\n  );\n  const renderItem = useCallback(\n    ({item}) => (\n      <View>\n        <Button\n          color={currentTheme === item ? 'primary' : 'text'}\n          key={item}\n          onPress={themePress(item)}\n          title={item}\n        />\n      </View>\n    ),\n    [currentTheme, themePress],\n  );\n\n  const renderHeader = useCallback(() => <Button disable title=\"Theme\" />, []);\n  const keyExtractor = useCallback((item) => item, []);\n\n  const navBack = useCallback(nav('portfolioLanding'), [nav]);\n  return (\n    <Screen onLeftPress={navBack} title=\"Settings\">\n      <FlatList\n        data={themes}\n        horizontal\n        keyExtractor={keyExtractor}\n        ListHeaderComponent={renderHeader}\n        renderItem={renderItem}\n      />\n    </Screen>\n  );\n});\n"],"sourceRoot":""}