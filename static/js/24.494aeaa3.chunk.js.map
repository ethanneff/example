{"version":3,"sources":["apps/Checklists/screens/ItemCreate/index.tsx"],"names":["initialState","name","description","memo","nav","useNav","dispatch","useRootDispatch","useState","form","setForm","currentChecklist","useRootSelector","state","checklists","active","isInvalidForm","trim","length","handleNameChange","useCallback","handleDescriptionChange","navItem","gutter","onLeftPress","title","blurOnSubmit","onChangeText","value","onPress","now","Date","Error","Errors","MissingCurrentChecklistCreatingItem","createChecklistItem","completed","createdAt","id","v4","checklistId","order","updatedAt","userId","navigate"],"mappings":"iMASMA,G,OAAe,CAACC,KAAM,GAAIC,YAAa,KAE9BC,0BAAK,WAClB,IAAMC,EAAMC,cACNC,EAAWC,cAFgC,EAGzBC,mBAASR,GAHgB,mBAG1CS,EAH0C,KAGpCC,EAHoC,KAI3CC,EAAmBC,aAAgB,SAACC,GAAD,OAAWA,EAAMC,WAAWC,UAC/DC,EAA4C,IAA5BP,EAAKR,KAAKgB,OAAOC,OA2BjCC,EAAmBC,uBACvB,SAACnB,GAAD,OAAkBS,GAAQ,SAACG,GAAD,sBAAgBA,EAAhB,CAAuBZ,cACjD,IAEIoB,EAA0BD,uBAC9B,SAAClB,GAAD,OAAyBQ,GAAQ,SAACG,GAAD,sBAAgBA,EAAhB,CAAuBX,qBACxD,IAGIoB,EAAUF,sBAAYhB,EAAI,kBAAmB,CAACA,IAEpD,OACE,kBAAC,IAAD,CAAQmB,QAAM,EAACC,YAAaF,EAASG,MAAM,eACzC,kBAAC,IAAD,CACEC,cAAY,EACZC,aAAcR,EACdM,MAAM,OACNG,MAAOnB,EAAKR,OAEd,kBAAC,IAAD,CACE0B,aAAcN,EACdI,MAAM,cACNG,MAAOnB,EAAKP,cAEd,kBAAC,IAAD,CAAQ2B,QAjDS,WACnB,IAAIb,EAAJ,CADyB,IAIlBf,EAAqBQ,EAArBR,KAAMC,EAAeO,EAAfP,YACP4B,EAAMC,KAAKD,MACjB,IAAKnB,EACH,MAAM,IAAIqB,MAAMC,IAAOC,qCAEzB5B,EACE6B,YAAoB,CAClBlC,OACAC,cACAkC,WAAW,EACXrB,QAAQ,EACRsB,UAAWP,EACXQ,GAAIC,cACJC,YAAa7B,EACb8B,MAAOX,EACPY,UAAWZ,EACXa,OAAQ,OAGZrC,EAASsC,YAAS,qBA0BenB,MAAM","file":"static/js/24.494aeaa3.chunk.js","sourcesContent":["import React, {memo, useCallback, useState} from 'react';\nimport {v4} from 'uuid';\nimport {Button, Screen, TextInput} from '../../../../components';\nimport {navigate} from '../../../../models';\nimport {createChecklistItem} from '../../models';\nimport {Errors, useRootDispatch, useRootSelector} from '../../../../utils';\nimport {useNav} from '../../../../hooks';\nimport 'react-native-get-random-values';\n\nconst initialState = {name: '', description: ''};\n\nexport default memo(function ChecklistItemCreate() {\n  const nav = useNav();\n  const dispatch = useRootDispatch();\n  const [form, setForm] = useState(initialState);\n  const currentChecklist = useRootSelector((state) => state.checklists.active);\n  const isInvalidForm = form.name.trim().length === 0;\n\n  const handleSubmit = () => {\n    if (isInvalidForm) {\n      return;\n    }\n    const {name, description} = form;\n    const now = Date.now();\n    if (!currentChecklist) {\n      throw new Error(Errors.MissingCurrentChecklistCreatingItem);\n    }\n    dispatch(\n      createChecklistItem({\n        name,\n        description,\n        completed: false,\n        active: true,\n        createdAt: now,\n        id: v4(),\n        checklistId: currentChecklist,\n        order: now,\n        updatedAt: now,\n        userId: '1',\n      }),\n    );\n    dispatch(navigate('checklistsList')); // TODO: batch\n  };\n  const handleNameChange = useCallback(\n    (name: string) => setForm((state) => ({...state, name})),\n    [],\n  );\n  const handleDescriptionChange = useCallback(\n    (description: string) => setForm((state) => ({...state, description})),\n    [],\n  );\n\n  const navItem = useCallback(nav('checklistsList'), [nav]);\n\n  return (\n    <Screen gutter onLeftPress={navItem} title=\"Create Item\">\n      <TextInput\n        blurOnSubmit\n        onChangeText={handleNameChange}\n        title=\"name\"\n        value={form.name}\n      />\n      <TextInput\n        onChangeText={handleDescriptionChange}\n        title=\"description\"\n        value={form.description}\n      />\n      <Button onPress={handleSubmit} title=\"create\" />\n    </Screen>\n  );\n});\n"],"sourceRoot":""}