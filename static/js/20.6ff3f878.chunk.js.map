{"version":3,"sources":["apps/Checklists/screens/Main/index.tsx"],"names":["memo","nav","useNav","color","useColor","dispatch","useRootDispatch","items","useRootSelector","getActiveChecklistOrderByCreatedAt","handleItemPress","useCallback","id","setActiveList","navigate","handleItemLongPress","renderItem","item","title","name","onPress","onLongPress","keyExtractor","onLeftPress","to","gutter","data","right","contained","fab","icon","iconColor","background"],"mappings":"qGAAA,4EAWeA,0BAAK,WAClB,IAAMC,EAAMC,cACNC,EAAQC,cACRC,EAAWC,cACXC,EAAQC,YAAgBC,KAExBC,EAAkBC,uBACtB,SAACC,GAAD,OAAgB,WACdP,EAASQ,YAAcD,IACvBP,EAASS,YAAS,sBAEpB,CAACT,IAGGU,EAAsBJ,uBAC1B,SAACC,GAAD,OAAgB,WACdP,EAASQ,YAAcD,IACvBP,EAASS,YAAS,4BAEpB,CAACT,IAGGW,EAAaL,uBACjB,gBAAGM,EAAH,EAAGA,KAAH,OACE,kBAAC,IAAD,CACEC,MAAOD,EAAKE,KACZC,QAASV,EAAgBO,EAAKL,IAC9BS,YAAaN,EAAoBE,EAAKL,QAG1C,CAACG,EAAqBL,IAGlBY,EAAeX,uBAAY,SAAAM,GAAI,OAAIA,EAAKL,KAAI,IAElD,OACE,kBAAC,IAAD,CAAQW,YAAatB,EAAIuB,GAAG,oBAAqBN,MAAM,aAAaO,QAAM,GACxE,kBAAC,IAAD,CACEH,aAAcA,EACdI,KAAMnB,EACNS,WAAYA,IAEd,kBAAC,IAAD,CACEW,OAAK,EACLC,WAAS,EACTC,KAAG,EACHC,KAAK,OACLC,UAAW5B,EAAM6B,WACjBZ,QAASnB,EAAIuB,GAAG","file":"static/js/20.6ff3f878.chunk.js","sourcesContent":["import React, { memo, useCallback } from \"react\";\nimport { FlatList } from \"react-native\";\nimport { Button, Screen } from \"../../../../components\";\nimport { useNav, useColor } from \"../../../../hooks\";\nimport { useRootSelector, useRootDispatch } from \"../../../../utils\";\nimport {\n  setActiveList,\n  getActiveChecklistOrderByCreatedAt\n} from \"../../models\";\nimport { navigate } from \"../../../../models\";\n\nexport default memo(function Checklists() {\n  const nav = useNav();\n  const color = useColor();\n  const dispatch = useRootDispatch();\n  const items = useRootSelector(getActiveChecklistOrderByCreatedAt);\n\n  const handleItemPress = useCallback(\n    (id: string) => () => {\n      dispatch(setActiveList(id));\n      dispatch(navigate(\"checklistsList\"));\n    },\n    [dispatch]\n  );\n\n  const handleItemLongPress = useCallback(\n    (id: string) => () => {\n      dispatch(setActiveList(id));\n      dispatch(navigate(\"checklistsListUpdate\"));\n    },\n    [dispatch]\n  );\n\n  const renderItem = useCallback(\n    ({ item }) => \n      <Button\n        title={item.name}\n        onPress={handleItemPress(item.id)}\n        onLongPress={handleItemLongPress(item.id)}\n      />\n    ,\n    [handleItemLongPress, handleItemPress]\n  );\n\n  const keyExtractor = useCallback(item => item.id, []);\n\n  return (\n    <Screen onLeftPress={nav.to(\"portfolioLanding\")} title=\"Checklists\" gutter>\n      <FlatList\n        keyExtractor={keyExtractor}\n        data={items}\n        renderItem={renderItem}\n      />\n      <Button\n        right\n        contained\n        fab\n        icon=\"plus\"\n        iconColor={color.background}\n        onPress={nav.to(\"checklistsListCreate\")}\n      />\n    </Screen>\n  );\n});\n"],"sourceRoot":""}