{"version":3,"sources":["apps/Complete/utils/configs.tsx","apps/Complete/utils/userFactory.ts","apps/Complete/components/TextInputWithIcons.tsx","apps/Complete/components/AddButton.tsx","apps/Complete/components/AddItem.tsx","apps/Complete/components/Card.tsx","apps/Complete/components/ListHeader.tsx","apps/Complete/components/ListItem.tsx","apps/Complete/components/ListItems.tsx","apps/Complete/components/List.tsx","apps/Complete/components/Board.tsx","apps/Complete/components/DeleteModal.tsx","apps/Complete/components/ItemDetailHeader.tsx","apps/Complete/components/ItemContext.tsx","apps/Complete/components/ItemEdit.tsx","apps/Complete/screens/Account/index.tsx","apps/Complete/screens/Capture/index.tsx","apps/Complete/screens/ItemDetail/index.tsx","apps/Complete/screens/Landing/index.tsx","apps/Complete/screens/Project/index.tsx","apps/Complete/screens/Projects/index.tsx","apps/Complete/screens/Reflect/Graph.tsx","apps/Complete/screens/Reflect/index.tsx","apps/Complete/index.tsx"],"names":["completeConfig","borderRadius","config","padding","alert","width","height","dItem","u","date","Date","now","id","v4","userId","description","active","createdAt","updatedAt","tags","editable","children","dKanban","title","TextInputWithIcons","memo","value","multiline","maxIconHeight","placeholder","backgroundColor","pointerEvents","icons","type","onSubmit","blurOnSubmit","onFocus","numberOfLines","onBlur","onRef","color","useColor","bgColor","background","useState","text","setText","showControls","setShowControls","onTextChange","useCallback","change","onFocusInternal","onSubmitInternal","result","trim","onBlurInternal","onIconPressInternal","callback","containerHeight","setContainerHeight","iconHeight","clampIconHeight","onLayout","e","nativeEvent","layout","onIconParentPress","preventDefault","useEffect","View","style","flex","flexDirection","alignItems","onChangeText","onSubmitEditing","returnKeyType","onPress","map","icon","hidden","focus","disabled","required","length","name","padded","size","AddButton","noSubmitFocus","textInputRef","useRef","showInput","setShowInput","onAddItemPress","p","onItemTitleClose","onItemTitleSubmit","current","blur","primary","justifyContent","center","AddItem","parentItemId","dispatch","useRootDispatch","useRootSelector","s","completeUser","Error","Keyboard","dismiss","itemId","item","createItem","updateItemAddItem","Card","margin","marginRight","marginBottom","ListHeader","navigate","useNavigation","completeItem","items","onSave","updateItem","onDetail","setNavItemDetail","ListItem","onItemNav","setNavItemProject","projectItemId","onItemDetails","onItemLongPress","onItemPress","onLongPress","surface","ListItems","maxHeight","list","cardsRef","cardsLength","onKeyExtractor","onCardSizeChange","scrollToEnd","onRenderItem","FlatList","data","keyExtractor","keyboardShouldPersistTaps","onContentSizeChange","ref","renderItem","showsVerticalScrollIndicator","List","orientation","listWidth","listMaxHeight","Board","listSize","board","getItemId","getItemLayout","_","index","offset","renderAddList","renderList","ListFooterComponent","contentContainerStyle","decelerationRate","horizontal","showsHorizontalScrollIndicator","snapToAlignment","snapToInterval","DeleteModal","onCancel","onDelete","onBackgroundPress","showOverlay","widthPercent","paddingBottom","ItemDetailHeader","emphasis","ItemContext","ItemEdit","onClose","Account","goBack","navBack","onLogin","inboxItems","homeTodoItems","homeItems","i","townItems","workItems","gymItems","appItems","meetItems","bookItems","giftItems","checkItems","codeItems","projectItems","userItems","user","getDefaultUserTemplate","createUser","onLogout","removeUser","onSetActive","setActiveUser","onNavToAdmin","initialState","container","button","Capture","keyboardHeight","device","dimensions","setDimensions","android","Platform","OS","listHeight","filter","noListItems","onOrganize","key","event","navToAccount","onRightPress","rightIcon","render","disable","ItemDetail","nav","deleteModal","setDeleteModal","onItemDelete","removeItem","updateItemRemoveItem","onItemSubmit","onDeletePress","onDeleteClose","Landing","navPortfolioLogin","slides","info","warning","success","brand","Project","screenWidth","getSmallestDimension","setContainer","state","onLeftPress","Projects","keyboardPadding","getDomain","domain","Math","min","max","Graph","scaleX","scaleTime","d","range","scaleY","scaleLinear","strokeWidth","shape","x","y","curve","StyleSheet","absoluteFill","x1","x2","y1","y2","stopColor","fill","stroke","Title","getTime","Reflect","Dimensions","get","noHeader","headerShown","RootTab","createBottomTabNavigator","RootStack","createStackNavigator","ProjectsStack","tabIcons","plan","focused","unFocused","implement","reflect","Implement","Navigator","screenOptions","Screen","component","Tabs","tabBarOptions","keyboardHidesTabBar","activeTintColor","inactiveTintColor","secondary","showLabel","route","tabBarIcon","iconColor","Main","mode","rootMode","rootScreenOptions","Notification","Modal"],"mappings":"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","file":"static/js/12.e303803d.chunk.js","sourcesContent":["import {config} from '../../../utils';\n\nexport const completeConfig = {\n  borderRadius: config.padding(2),\n  padding: config.padding(4),\n  alert: {\n    width: 0.8,\n    height: 0.6,\n  },\n};\n","import {v4} from 'uuid';\nimport {Item, User} from '../models';\n\ntype GetDefaultUserTemplate = {\n  user: User;\n  items: Item[];\n};\n\nconst dItem = (u: string) => {\n  const date = Date.now();\n  return {\n    id: v4(),\n    userId: u,\n    description: '',\n    active: true,\n    createdAt: date,\n    updatedAt: date,\n    tags: [],\n    editable: true,\n    children: [],\n  };\n};\n\nconst dKanban = (u: string): Item[] => {\n  const items: Item[] = [\n    {...dItem(u), title: 'Backlog'},\n    {...dItem(u), title: 'Todo'},\n    {...dItem(u), title: 'In Progress'},\n    {...dItem(u), title: 'Done'},\n  ];\n  return items;\n};\n\nexport const getDefaultUserTemplate = (): GetDefaultUserTemplate => {\n  // user\n  const date = Date.now();\n  const u = v4();\n\n  // inbox\n  const inboxItems: Item[] = [\n    {...dItem(u), title: 'do dishes'},\n    {...dItem(u), title: 'schedule meeting with Jim'},\n    {...dItem(u), title: 'run 4 miles'},\n    {...dItem(u), title: 'change oil'},\n    {...dItem(u), title: 'what is the best mediation'},\n    {...dItem(u), title: 'record Kelly birthday on Sep 22'},\n    {...dItem(u), title: 'drink water'},\n    {...dItem(u), title: 'intensity + focus = deep work'},\n    {...dItem(u), title: 'put $20 in phone'},\n    {...dItem(u), title: 'clear emails'},\n  ];\n\n  // projects\n  const homeTodoItems: Item[] = [\n    {...dItem(u), title: 'clean desk'},\n    {...dItem(u), title: 'clean room'},\n    {...dItem(u), title: 'walk dog'},\n    {...dItem(u), title: 'brush teeth'},\n    {...dItem(u), title: 'do laundry'},\n    {...dItem(u), title: 'fix sink'},\n  ];\n  const homeItems: Item[] = dKanban(u);\n  homeItems[0].children = homeTodoItems.map((i) => i.id);\n  const townItems: Item[] = dKanban(u);\n  const workItems: Item[] = dKanban(u);\n  const gymItems: Item[] = dKanban(u);\n  const appItems: Item[] = dKanban(u);\n  const meetItems: Item[] = [\n    {...dItem(u), title: 'one one one'},\n    {...dItem(u), title: 'q1 planning'},\n  ];\n  const bookItems: Item[] = [\n    {...dItem(u), title: 'eat that frog'},\n    {...dItem(u), title: 'deep work'},\n    {...dItem(u), title: 'the one thing'},\n  ];\n  const giftItems: Item[] = [\n    {...dItem(u), title: 'girlfriend'},\n    {...dItem(u), title: 'sister'},\n    {...dItem(u), title: 'parents'},\n  ];\n  const checkItems: Item[] = [\n    {...dItem(u), title: 'after bathroom'},\n    {...dItem(u), title: 'before car'},\n    {...dItem(u), title: 'before sleep'},\n  ];\n  const codeItems: Item[] = [\n    {...dItem(u), title: 'php'},\n    {...dItem(u), title: 'javascript'},\n    {...dItem(u), title: 'swift'},\n  ];\n  const projectItems: Item[] = [\n    {...dItem(u), title: 'at home', children: homeItems.map((i) => i.id)},\n    {...dItem(u), title: 'at town', children: townItems.map((i) => i.id)},\n    {...dItem(u), title: 'at work', children: workItems.map((i) => i.id)},\n    {...dItem(u), title: 'at gym', children: gymItems.map((i) => i.id)},\n    {...dItem(u), title: 'app release', children: appItems.map((i) => i.id)},\n    {...dItem(u), title: 'meeting notes', children: meetItems.map((i) => i.id)},\n    {...dItem(u), title: 'book notes', children: bookItems.map((i) => i.id)},\n    {...dItem(u), title: 'gift ideas', children: giftItems.map((i) => i.id)},\n    {...dItem(u), title: 'checklists', children: checkItems.map((i) => i.id)},\n    {...dItem(u), title: 'coding', children: codeItems.map((i) => i.id)},\n  ];\n\n  // user\n  const userItems: Item[] = [\n    {\n      ...dItem(u),\n      title: 'Inbox',\n      children: inboxItems.map((i) => i.id),\n      editable: false,\n    },\n    {\n      ...dItem(u),\n      title: 'Projects',\n      children: projectItems.map((i) => i.id),\n      editable: false,\n    },\n  ];\n  const user: User = {\n    id: u,\n    active: true,\n    createdAt: date,\n    updatedAt: date,\n    name: 'Bob Smith',\n    items: userItems.map((i) => i.id),\n  };\n\n  return {\n    user,\n    items: [\n      ...inboxItems,\n      ...homeTodoItems,\n      ...homeItems,\n      ...townItems,\n      ...workItems,\n      ...gymItems,\n      ...appItems,\n      ...meetItems,\n      ...bookItems,\n      ...giftItems,\n      ...checkItems,\n      ...codeItems,\n      ...projectItems,\n      ...userItems,\n    ],\n  };\n};\n","import React, {\n  memo,\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport {LayoutChangeEvent, TextInput as Original, View} from 'react-native';\nimport {Icon, TextInput} from '../../../components';\nimport {PointerEvents} from '../../../components/TextInput/types';\nimport {TouchableWithoutFeedback} from '../../../conversions';\nimport {useColor} from '../../../hooks';\nimport {config, FontType} from '../../../utils';\n\ntype Icon = {\n  name: string;\n  onPress: (text: string) => void;\n  hidden?: boolean;\n  color?: string;\n  focus?: boolean;\n  required?: boolean;\n};\n\ntype TextInputWithIconsProps = {\n  value: string;\n  placeholder: string;\n  icons: Icon[];\n  onRef?: MutableRefObject<Original | null>;\n  onSubmit: (text: string) => void;\n  backgroundColor?: string;\n  pointerEvents?: PointerEvents;\n  type?: FontType;\n  onBlur?: () => void;\n  onFocus?: () => void;\n  blurOnSubmit?: boolean;\n  multiline?: boolean;\n  maxIconHeight?: number;\n  editable?: boolean;\n  numberOfLines?: number;\n};\n\nexport const TextInputWithIcons = memo(function TextInputWithIcons({\n  value,\n  multiline,\n  maxIconHeight = config.padding(6),\n  placeholder,\n  backgroundColor,\n  editable,\n  pointerEvents,\n  icons,\n  type,\n  onSubmit,\n  blurOnSubmit,\n  onFocus,\n  numberOfLines,\n  onBlur,\n  onRef,\n}: TextInputWithIconsProps) {\n  const color = useColor();\n  const bgColor = backgroundColor || color.background;\n  const [text, setText] = useState(value);\n  const [showControls, setShowControls] = useState(false);\n\n  const onTextChange = useCallback((change) => {\n    setText(change);\n  }, []);\n\n  const onFocusInternal = useCallback(() => {\n    setShowControls(true);\n    if (onFocus) onFocus();\n  }, [onFocus]);\n\n  const onSubmitInternal = useCallback(() => {\n    const result = text.trim();\n    onSubmit(result);\n    if (value === '') setText('');\n  }, [onSubmit, text, value]);\n\n  const onBlurInternal = useCallback(() => {\n    setText(value);\n    setShowControls(false);\n    if (onBlur) onBlur();\n  }, [onBlur, value]);\n\n  const onIconPressInternal = useCallback(\n    (callback) => () => {\n      callback(text);\n      if (value === '') setText('');\n    },\n    [text, value],\n  );\n  const [containerHeight, setContainerHeight] = useState(0);\n  const iconHeight = containerHeight - config.padding(4);\n  const clampIconHeight =\n    iconHeight > maxIconHeight ? maxIconHeight : iconHeight;\n\n  const onLayout = useCallback(\n    (e: LayoutChangeEvent) => {\n      if (containerHeight) return;\n      setContainerHeight(e.nativeEvent.layout.height);\n    },\n    [containerHeight],\n  );\n\n  const onIconParentPress = useCallback((e) => e.preventDefault(), []);\n\n  useEffect(() => {\n    setText(value);\n  }, [value]);\n\n  return (\n    <View\n      onLayout={onLayout}\n      style={{flex: 1, flexDirection: 'row', alignItems: 'center'}}>\n      <TextInput\n        backgroundColor={bgColor}\n        blurOnSubmit={blurOnSubmit}\n        editable={editable}\n        flex\n        multiline={multiline}\n        numberOfLines={numberOfLines}\n        onBlur={onBlurInternal}\n        onChangeText={onTextChange}\n        onFocus={onFocusInternal}\n        onRef={onRef}\n        onSubmitEditing={onSubmitInternal}\n        placeholder={placeholder}\n        pointerEvents={pointerEvents}\n        returnKeyType=\"done\"\n        type={type}\n        value={text}\n      />\n      <TouchableWithoutFeedback\n        onPress={onIconParentPress}\n        style={{flexDirection: 'row'}}>\n        {icons.map((icon) =>\n          icon.hidden ||\n          (showControls && !icon.focus) ||\n          (!showControls && icon.focus) ? null : (\n            <Icon\n              color={icon.color}\n              disabled={icon.required && text.trim().length === 0}\n              key={`${icon.name}-focus`}\n              name={icon.name}\n              onPress={onIconPressInternal(icon.onPress)}\n              padded\n              size={clampIconHeight}\n            />\n          ),\n        )}\n      </TouchableWithoutFeedback>\n    </View>\n  );\n});\n","import React, {memo, useCallback, useEffect, useRef, useState} from 'react';\nimport {TextInput as OriginalTextInput, View} from 'react-native';\nimport {Button} from '../../../components';\nimport {useColor} from '../../../hooks';\nimport {config} from '../../../utils';\nimport {completeConfig} from '../utils';\nimport {TextInputWithIcons} from './TextInputWithIcons';\n\ntype AddButtonProps = {\n  width?: number;\n  placeholder: string;\n  title: string;\n  onSubmit: (value: string) => void;\n  noSubmitFocus?: boolean;\n};\n\nexport const AddButton = memo(function AddButton({\n  width,\n  placeholder,\n  title,\n  noSubmitFocus,\n  onSubmit,\n}: AddButtonProps) {\n  const color = useColor();\n  const textInputRef = useRef<OriginalTextInput | null>(null);\n  const [showInput, setShowInput] = useState(false);\n  const onAddItemPress = useCallback(() => {\n    setShowInput((p) => !p);\n  }, []);\n\n  const onItemTitleClose = useCallback(() => {\n    setShowInput(false);\n  }, []);\n\n  const onItemTitleSubmit = useCallback(\n    (text) => {\n      onSubmit(text);\n      if (noSubmitFocus) textInputRef.current?.blur();\n    },\n    [noSubmitFocus, onSubmit],\n  );\n\n  const onBlur = useCallback(() => {\n    setShowInput(false);\n  }, []);\n\n  const icons = [\n    {name: 'close', onPress: onItemTitleClose, focus: true},\n    {\n      name: 'send',\n      onPress: onItemTitleSubmit,\n      color: color.primary,\n      focus: true,\n      required: true,\n    },\n  ];\n\n  useEffect(() => {\n    if (showInput) textInputRef.current?.focus();\n  }, [showInput]);\n\n  return (\n    <View\n      style={{\n        width,\n        height: config.padding(12),\n        borderRadius: completeConfig.borderRadius,\n        backgroundColor: color.background,\n        justifyContent: 'center',\n      }}>\n      {showInput ? (\n        <TextInputWithIcons\n          blurOnSubmit={false}\n          icons={icons}\n          onBlur={onBlur}\n          onRef={textInputRef}\n          onSubmit={onItemTitleSubmit}\n          placeholder={placeholder}\n          value=\"\"\n        />\n      ) : (\n        <Button center color=\"primary\" onPress={onAddItemPress} title={title} />\n      )}\n    </View>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {Keyboard} from 'react-native';\nimport {v4} from 'uuid';\nimport {useRootDispatch, useRootSelector} from '../../../utils';\nimport {createItem, Item, updateItemAddItem} from '../models';\nimport {AddButton} from './AddButton';\n\ntype AddItemProps = {\n  parentItemId: string | null;\n  placeholder: string;\n  title: string;\n  width?: number;\n};\n\nexport const AddItem = memo(function AddItem({\n  placeholder,\n  title,\n  parentItemId,\n  width,\n}: AddItemProps) {\n  const dispatch = useRootDispatch();\n  const userId = useRootSelector((s) => s.completeUser?.id);\n  if (!userId) throw new Error('missing userId on add item');\n  if (!parentItemId) throw new Error('missing parentItemId on add item');\n  const onSubmit = useCallback(\n    (value: string) => {\n      if (!value) return Keyboard.dismiss();\n      const itemId = v4();\n      const date = Date.now();\n      const item: Item = {\n        id: itemId,\n        userId,\n        active: true,\n        title: value,\n        createdAt: date,\n        updatedAt: date,\n        children: [],\n        tags: [],\n        description: '',\n        editable: true,\n      };\n      dispatch(createItem(item));\n      dispatch(updateItemAddItem({parentItemId, itemId}));\n    },\n    [dispatch, parentItemId, userId],\n  );\n\n  return (\n    <AddButton\n      onSubmit={onSubmit}\n      placeholder={placeholder}\n      title={title}\n      width={width}\n    />\n  );\n});\n","import React, {memo, ReactElement} from 'react';\nimport {LayoutChangeEvent, View} from 'react-native';\nimport {useColor} from '../../../hooks';\nimport {completeConfig} from '../utils';\n\n// TODO: combine card components with global card\n\ntype CardProps = {\n  onLayout?: (event: LayoutChangeEvent) => void;\n  children: ReactElement | ReactElement[];\n  margin?: 'bottom' | 'right' | 'none';\n  width?: number;\n  flex?: boolean;\n};\n\nexport const Card = memo(function Card({\n  children,\n  onLayout,\n  margin = 'none',\n  width,\n  flex,\n}: CardProps) {\n  const color = useColor();\n  return (\n    <View\n      onLayout={onLayout}\n      style={{\n        flex: flex ? 1 : 0,\n        width,\n        borderRadius: completeConfig.borderRadius,\n        backgroundColor: color.background,\n        padding: completeConfig.padding / 2,\n        marginRight: margin === 'right' ? completeConfig.padding : 0,\n        marginBottom: margin === 'bottom' ? completeConfig.padding : 0,\n      }}>\n      {children}\n    </View>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback} from 'react';\nimport {Keyboard, View} from 'react-native';\nimport {useColor} from '../../../hooks';\nimport {useRootDispatch, useRootSelector} from '../../../utils';\nimport {setNavItemDetail, updateItem} from '../models';\nimport {TextInputWithIcons} from './TextInputWithIcons';\n\ntype ListHeaderProps = {\n  itemId: string;\n  parentItemId: string | null;\n};\n\nexport const ListHeader = memo(function ListHeader({\n  itemId,\n  parentItemId,\n}: ListHeaderProps) {\n  const dispatch = useRootDispatch();\n  const {navigate} = useNavigation();\n  const color = useColor();\n  const item = useRootSelector((s) => s.completeItem.items[itemId]);\n\n  const onSave = useCallback(\n    (title) => {\n      dispatch(updateItem({...item, title}));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onDetail = useCallback(() => {\n    dispatch(setNavItemDetail({parentItemId, itemId}));\n    navigate('item-detail');\n  }, [dispatch, itemId, navigate, parentItemId]);\n\n  const onClose = useCallback(() => Keyboard.dismiss(), []);\n\n  const icons = [\n    {name: 'close', onPress: onClose, focus: true},\n    {\n      name: 'send',\n      onPress: onSave,\n      color: color.primary,\n      focus: true,\n      required: true,\n    },\n    {name: 'dots-horizontal', onPress: onDetail},\n  ];\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n      }}>\n      <TextInputWithIcons\n        editable={item.editable}\n        icons={icons}\n        onSubmit={onSave}\n        placeholder=\"List title...\"\n        type=\"h4\"\n        value={item.title}\n      />\n    </View>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useRef} from 'react';\nimport {Keyboard, TextInput as OriginalTextInput} from 'react-native';\nimport {TouchableWithoutFeedback} from '../../../conversions';\nimport {useColor} from '../../../hooks';\nimport {useRootDispatch, useRootSelector} from '../../../utils';\nimport {setNavItemDetail, setNavItemProject, updateItem} from '../models';\nimport {completeConfig} from '../utils';\nimport {TextInputWithIcons} from './TextInputWithIcons';\n\ntype ListItemProps = {\n  itemId: string;\n  parentItemId: string;\n};\n\nexport const ListItem = memo(function ListItem({\n  itemId,\n  parentItemId,\n}: ListItemProps) {\n  const item = useRootSelector((s) => s.completeItem.items[itemId]);\n  const textInputRef = useRef<OriginalTextInput | null>(null);\n  const dispatch = useRootDispatch();\n  const {navigate} = useNavigation();\n  const color = useColor();\n\n  const onItemTitleClose = useCallback(() => {\n    Keyboard.dismiss();\n  }, []);\n\n  const onItemTitleSubmit = useCallback(\n    (title: string) => {\n      dispatch(updateItem({...item, title}));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onItemNav = useCallback(() => {\n    dispatch(setNavItemProject({projectItemId: itemId}));\n    navigate('project');\n  }, [dispatch, itemId, navigate]);\n\n  const onItemDetails = useCallback(() => {\n    dispatch(setNavItemDetail({parentItemId, itemId}));\n    navigate('item-detail');\n  }, [dispatch, itemId, navigate, parentItemId]);\n\n  const onItemLongPress = useCallback(() => undefined, []);\n\n  const onItemPress = useCallback(() => {\n    textInputRef.current?.focus();\n  }, []);\n\n  const icons = [\n    {name: 'close', onPress: onItemTitleClose, focus: true},\n    {\n      name: 'send',\n      onPress: onItemTitleSubmit,\n      color: color.primary,\n      focus: true,\n      required: true,\n    },\n    {name: 'dots-horizontal', onPress: onItemDetails},\n    {\n      name: 'chevron-right',\n      onPress: onItemNav,\n      hidden: !item.children.length,\n    },\n  ];\n\n  return (\n    <TouchableWithoutFeedback\n      key={item.id}\n      onLongPress={onItemLongPress}\n      onPress={onItemPress}\n      style={{\n        flex: 1,\n        borderRadius: completeConfig.borderRadius,\n        margin: completeConfig.padding / 2,\n        backgroundColor: color.surface,\n        flexDirection: 'row',\n      }}>\n      <TextInputWithIcons\n        backgroundColor={color.surface}\n        icons={icons}\n        onRef={textInputRef}\n        onSubmit={onItemTitleSubmit}\n        placeholder=\"Item name...\"\n        pointerEvents=\"none\"\n        value={item.title}\n      />\n    </TouchableWithoutFeedback>\n  );\n});\n","import React, {memo, useCallback, useRef} from 'react';\nimport {FlatList, ListRenderItem} from 'react-native';\nimport {useRootSelector} from '../../../utils';\nimport {ListItem} from './ListItem';\n\ntype ListItemsProps = {\n  parentItemId: string;\n  maxHeight?: number;\n};\n\nexport const ListItems = memo(function ListItems({\n  parentItemId,\n  maxHeight,\n}: ListItemsProps) {\n  const list = useRootSelector(\n    (s) => s.completeItem.items[parentItemId].children,\n  );\n  const cardsRef = useRef<FlatList | null>(null);\n  const cardsLength = useRef(list.length);\n\n  const onKeyExtractor = useCallback((item) => item, []);\n\n  const onCardSizeChange = useCallback(() => {\n    if (list.length > cardsLength.current) {\n      cardsRef.current?.scrollToEnd();\n      cardsLength.current = list.length;\n    }\n  }, [list.length]);\n\n  const onRenderItem: ListRenderItem<string> = useCallback(\n    ({item}) => {\n      return <ListItem itemId={item} key={item} parentItemId={parentItemId} />;\n    },\n    [parentItemId],\n  );\n\n  return (\n    <FlatList\n      data={list}\n      keyExtractor={onKeyExtractor}\n      keyboardShouldPersistTaps=\"handled\"\n      onContentSizeChange={onCardSizeChange}\n      ref={cardsRef}\n      renderItem={onRenderItem}\n      showsVerticalScrollIndicator={false}\n      style={{maxHeight}}\n    />\n  );\n});\n","import React, {memo} from 'react';\nimport {View} from 'react-native';\nimport {AddItem} from './AddItem';\nimport {Card} from './Card';\nimport {ListHeader} from './ListHeader';\nimport {ListItems} from './ListItems';\n\ntype ListProps = {\n  listWidth?: number;\n  itemId: string;\n  parentItemId: string | null;\n  listMaxHeight: number;\n  orientation?: 'vertical' | 'horizontal';\n  title: string;\n  placeholder: string;\n};\n\nexport const List = memo(function List({\n  itemId,\n  parentItemId,\n  orientation,\n  listWidth,\n  listMaxHeight,\n  title,\n  placeholder,\n}: ListProps) {\n  const margin = orientation === 'horizontal' ? 'right' : 'bottom';\n  return (\n    <View>\n      <Card margin={margin} width={listWidth}>\n        <ListHeader itemId={itemId} parentItemId={parentItemId} />\n        <ListItems maxHeight={listMaxHeight} parentItemId={itemId} />\n        <AddItem\n          parentItemId={itemId}\n          placeholder={placeholder}\n          title={title}\n        />\n      </Card>\n    </View>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {FlatList} from 'react-native';\nimport {useRootSelector} from '../../../utils';\nimport {completeConfig} from '../utils';\nimport {AddItem} from './AddItem';\nimport {List} from './List';\n\ntype BoardProps = {\n  projectItemId: string;\n  listMaxHeight: number;\n  listWidth: number;\n};\n\nexport const Board = memo(function Board({\n  projectItemId,\n  listMaxHeight,\n  listWidth,\n}: BoardProps) {\n  const listSize = listWidth + completeConfig.padding;\n  const board = useRootSelector((s) => s.completeItem.items[projectItemId]);\n  const getItemId = useCallback((item) => item, []);\n  const getItemLayout = useCallback(\n    (_, index) => ({\n      length: listSize,\n      offset: listSize * index,\n      index,\n    }),\n    [listSize],\n  );\n\n  const renderAddList = useCallback(() => {\n    return (\n      <AddItem\n        parentItemId={board.id}\n        placeholder=\"List title...\"\n        title=\"Add list\"\n        width={listWidth}\n      />\n    );\n  }, [board.id, listWidth]);\n\n  const renderList = useCallback(\n    ({item}) => {\n      return (\n        <List\n          itemId={item}\n          key={item}\n          listMaxHeight={listMaxHeight}\n          listWidth={listWidth}\n          orientation=\"horizontal\"\n          parentItemId={board.id}\n          placeholder=\"Item title...\"\n          title=\"Add item\"\n        />\n      );\n    },\n    [board.id, listMaxHeight, listWidth],\n  );\n\n  return (\n    <FlatList\n      ListFooterComponent={renderAddList}\n      contentContainerStyle={{padding: completeConfig.padding}}\n      data={board.children}\n      decelerationRate=\"fast\"\n      getItemLayout={getItemLayout}\n      horizontal\n      keyExtractor={getItemId}\n      keyboardShouldPersistTaps=\"handled\"\n      renderItem={renderList}\n      showsHorizontalScrollIndicator={false}\n      snapToAlignment=\"center\"\n      snapToInterval={listSize}\n      style={{height: '100%'}}\n    />\n  );\n});\n","import React, {memo} from 'react';\nimport {View} from 'react-native';\nimport {Button, Modal, Text} from '../../../components';\nimport {config} from '../../../utils';\n\ntype DeleteModalProps = {\n  onDelete: () => void;\n  onCancel: () => void;\n};\n\nexport const DeleteModal = memo(function DeleteModal({\n  onCancel,\n  onDelete,\n}: DeleteModalProps) {\n  return (\n    <Modal onBackgroundPress={onCancel} showOverlay widthPercent={0.5}>\n      <View style={{alignItems: 'center'}}>\n        <Text\n          style={{paddingBottom: config.padding(2)}}\n          title=\"Are you sure?\"\n          type=\"h5\"\n        />\n        <View style={{flexDirection: 'row', justifyContent: 'center'}}>\n          <Button onPress={onCancel} title=\"close\" />\n          <Button color=\"danger\" onPress={onDelete} title=\"delete\" />\n        </View>\n      </View>\n    </Modal>\n  );\n});\n","import React, {memo} from 'react';\nimport {Text} from '../../../components';\nimport {config} from '../../../utils';\n\ntype ItemDetailHeaderProps = {\n  title: string;\n};\n\nexport const ItemDetailHeader = memo(function ItemDetailHeader({\n  title,\n}: ItemDetailHeaderProps) {\n  return (\n    <Text\n      emphasis=\"medium\"\n      style={{padding: config.padding(2)}}\n      title={title}\n      type=\"overline\"\n    />\n  );\n});\n","import React, {memo} from 'react';\nimport {View} from 'react-native';\nimport {RelativeDate, Text} from '../../../components';\nimport {config} from '../../../utils';\nimport {Card} from './Card';\nimport {ItemDetailHeader} from './ItemDetailHeader';\n\ntype ItemContextProps = {\n  userId: string;\n  createdAt: number;\n  updatedAt: number;\n};\n\nexport const ItemContext = memo(function ItemContext({\n  userId,\n  createdAt,\n  updatedAt,\n}: ItemContextProps) {\n  return (\n    <View>\n      <Card margin=\"bottom\">\n        <ItemDetailHeader title=\"Creator\" />\n        <Text style={{padding: config.padding(2)}} title={userId} />\n        <ItemDetailHeader title=\"Created\" />\n        <RelativeDate date={createdAt} style={{padding: config.padding(2)}} />\n        <ItemDetailHeader title=\"Updated\" />\n        <RelativeDate date={updatedAt} style={{padding: config.padding(2)}} />\n      </Card>\n    </View>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {Keyboard, View} from 'react-native';\nimport {useColor} from '../../../hooks';\nimport {Card} from './Card';\nimport {ItemDetailHeader} from './ItemDetailHeader';\nimport {TextInputWithIcons} from './TextInputWithIcons';\n\ntype ItemEditProps = {\n  title: string;\n  description?: string;\n  placeholder: string;\n  onSubmit: (type: string) => (text: string) => void;\n};\n\nexport const ItemEdit = memo(function ItemEdit({\n  title,\n  description = '',\n  placeholder,\n  onSubmit,\n}: ItemEditProps) {\n  const color = useColor();\n  const onClose = useCallback(() => Keyboard.dismiss(), []);\n\n  const icons = useCallback(\n    (type: string) => [\n      {name: 'close', onPress: onClose, focus: true},\n      {\n        name: 'send',\n        onPress: onSubmit(type),\n        color: color.primary,\n        focus: true,\n        required: true,\n      },\n    ],\n    [color.primary, onClose, onSubmit],\n  );\n\n  return (\n    <View>\n      <Card margin=\"bottom\">\n        <ItemDetailHeader title=\"Title\" />\n        <TextInputWithIcons\n          icons={icons('title')}\n          onSubmit={onSubmit('title')}\n          placeholder={`${placeholder} title...`}\n          value={title}\n        />\n        <ItemDetailHeader title=\"Details\" />\n        <TextInputWithIcons\n          icons={icons('description')}\n          multiline\n          onSubmit={onSubmit('description')}\n          placeholder={`${placeholder} details...`}\n          value={description || ''}\n        />\n      </Card>\n    </View>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback} from 'react';\nimport {Button, Modal, Text} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {config, useRootDispatch} from '../../../../utils';\nimport {Card} from '../../components';\nimport {createItem, createUser, removeUser, setActiveUser} from '../../models';\nimport {getDefaultUserTemplate} from '../../utils/';\n\n// TODO: figure out a place for this\n// TODO: add reminders\n// TODO: add profile information\n// TODO: add payment\n\nexport const Account = memo(function Account() {\n  const color = useColor();\n  const dispatch = useRootDispatch();\n  const {goBack, navigate} = useNavigation();\n  const navBack = useCallback(() => goBack(), [goBack]);\n\n  const onLogin = useCallback(() => {\n    const {user, items} = getDefaultUserTemplate();\n    items.map((item) => dispatch(createItem(item)));\n    dispatch(createUser(user));\n    navigate('main');\n  }, [dispatch, navigate]);\n  const onLogout = useCallback(() => {\n    dispatch(removeUser());\n    navigate('main');\n  }, [dispatch, navigate]);\n  const onSetActive = useCallback(() => {\n    dispatch(setActiveUser(true));\n  }, [dispatch]);\n\n  const onNavToAdmin = useCallback(() => navigate('admin'), [navigate]);\n\n  return (\n    <Modal backgroundColor={color.surface} onBackgroundPress={navBack}>\n      <Card margin=\"bottom\">\n        <Text\n          emphasis=\"low\"\n          style={{paddingBottom: config.padding(4)}}\n          title=\"Profile\"\n          type=\"h5\"\n        />\n        <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n      </Card>\n      <Card margin=\"bottom\">\n        <Text\n          emphasis=\"low\"\n          style={{paddingBottom: config.padding(4)}}\n          title=\"Reminders\"\n          type=\"h5\"\n        />\n        <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n      </Card>\n      <Card margin=\"bottom\">\n        <Text\n          emphasis=\"low\"\n          style={{paddingBottom: config.padding(4)}}\n          title=\"Payment\"\n          type=\"h5\"\n        />\n        <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n      </Card>\n      <Card margin=\"bottom\">\n        <Text\n          emphasis=\"low\"\n          style={{paddingBottom: config.padding(4)}}\n          title=\"Feedback\"\n          type=\"h5\"\n        />\n        <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n      </Card>\n      <Button onPress={onLogin} title=\"login\" />\n      <Button onPress={onLogout} title=\"logout\" />\n      <Button onPress={onSetActive} title=\"set active\" />\n      <Button onPress={onNavToAdmin} title=\"go to admin\" />\n    </Modal>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useState} from 'react';\nimport {LayoutChangeEvent, Platform, View} from 'react-native';\nimport {Button, KeyboardHandler, Screen} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {config, useRootSelector} from '../../../../utils';\nimport {Card, List} from '../../components';\nimport {completeConfig} from '../../utils';\n\nconst initialState = {container: 0, button: 0};\nexport const Capture = memo(function Capture() {\n  const color = useColor();\n  const {navigate} = useNavigation();\n  const keyboardHeight = useRootSelector((s) => s.device.keyboardHeight);\n  const [dimensions, setDimensions] = useState(initialState);\n  const android = Platform.OS === 'android';\n\n  const listHeight =\n    keyboardHeight === 0\n      ? dimensions.container - dimensions.button - config.padding(44)\n      : dimensions.container -\n        keyboardHeight -\n        (android ? completeConfig.padding * 3 : config.padding(19));\n\n  const itemId = useRootSelector(\n    (s) =>\n      s.completeUser?.items.filter(\n        (id) => s.completeItem.items[id].title === 'Inbox',\n      )[0],\n  );\n  if (!itemId) throw new Error('missing item id');\n  const noListItems = useRootSelector(\n    (s) => s.completeItem.items[itemId].children.length === 0,\n  );\n\n  const onOrganize = useCallback(() => undefined, []);\n\n  const onLayout = useCallback(\n    (key: keyof typeof initialState) => (event: LayoutChangeEvent) => {\n      const {height} = event.nativeEvent.layout;\n      const {container, button} = dimensions;\n      const preventMultipleUpdates = container > 0 && button > 0;\n      if (preventMultipleUpdates) return;\n      setDimensions((p) => ({...p, [key]: height}));\n    },\n    [dimensions],\n  );\n\n  const navToAccount = useCallback(() => navigate('account'), [navigate]);\n\n  return (\n    <Screen onRightPress={navToAccount} rightIcon=\"account\" title=\"Plan\">\n      <KeyboardHandler\n        backgroundColor={color.surface}\n        onLayout={onLayout('container')}\n        render={dimensions.container > 0}>\n        <View style={{padding: completeConfig.padding}}>\n          <List\n            itemId={itemId}\n            listMaxHeight={listHeight}\n            parentItemId={null}\n            placeholder=\"Item title...\"\n            title=\"Add item\"\n          />\n          <Card onLayout={onLayout('button')}>\n            <Button\n              center\n              color=\"primary\"\n              disable={noListItems}\n              onPress={onOrganize}\n              title=\"Organize\"\n            />\n          </Card>\n        </View>\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useState} from 'react';\nimport {Keyboard, View} from 'react-native';\nimport {Button, Modal, Text} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {config, useRootDispatch, useRootSelector} from '../../../../utils';\nimport {Card, DeleteModal, ItemContext, ItemEdit} from '../../components';\nimport {removeItem, updateItem, updateItemRemoveItem} from '../../models';\n\nexport const ItemDetail = memo(function ItemDetail() {\n  const dispatch = useRootDispatch();\n  const {goBack} = useNavigation();\n  const color = useColor();\n  const navBack = useCallback(() => goBack(), [goBack]);\n  const {itemId, parentItemId} = useRootSelector((s) => s.completeItem.nav);\n  const item = useRootSelector((s) => s.completeItem.items[itemId || '']);\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  const onItemDelete = useCallback(() => {\n    if (!itemId || !parentItemId)\n      throw new Error('missing listId or itemId on item detail screen');\n    dispatch(removeItem(itemId));\n    dispatch(updateItemRemoveItem({parentItemId, itemId}));\n    setDeleteModal(false);\n    goBack();\n  }, [dispatch, goBack, itemId, parentItemId]);\n\n  const onItemSubmit = useCallback(\n    (type: string) => (text: string) => {\n      dispatch(updateItem({...item, [type]: text}));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onDeletePress = useCallback(() => setDeleteModal(true), []);\n  const onDeleteClose = useCallback(() => setDeleteModal(false), []);\n\n  return !item ? null : (\n    <>\n      <Modal backgroundColor={color.surface} onBackgroundPress={navBack}>\n        {!item ? (\n          <Text title=\"missing item\" />\n        ) : (\n          <View>\n            <ItemEdit\n              description={item.description}\n              onSubmit={onItemSubmit}\n              placeholder=\"Item\"\n              title={item.title}\n            />\n            <Card margin=\"bottom\">\n              <Text title=\"Reminders\" />\n            </Card>\n            <Card margin=\"bottom\">\n              <Text title=\"Tags\" />\n            </Card>\n            <Card margin=\"bottom\">\n              <Text title=\"Comments\" />\n            </Card>\n            <ItemContext\n              createdAt={item.createdAt}\n              updatedAt={item.updatedAt}\n              userId={item.userId}\n            />\n            {!item.editable ? (\n              <Card flex>\n                <Button center onPress={navBack} title=\"close\" />\n              </Card>\n            ) : (\n              <View\n                style={{\n                  flexDirection: 'row',\n                  flex: 1,\n                  justifyContent: 'space-between',\n                }}>\n                <Card flex>\n                  <Button center onPress={navBack} title=\"close\" />\n                </Card>\n                <View style={{padding: config.padding(2)}} />\n                <Card flex>\n                  <Button\n                    center\n                    color=\"danger\"\n                    onPress={onDeletePress}\n                    title=\"delete\"\n                  />\n                </Card>\n              </View>\n            )}\n          </View>\n        )}\n      </Modal>\n      {!deleteModal ? null : (\n        <DeleteModal onCancel={onDeleteClose} onDelete={onItemDelete} />\n      )}\n    </>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback} from 'react';\nimport {Button, Carousel, Screen} from '../../../../components';\nimport {Slide} from '../../../../components/Carousel/types';\nimport {useColor} from '../../../../hooks';\n\nexport const Landing = memo(function Landing() {\n  const {navigate} = useNavigation();\n  const color = useColor();\n  const navPortfolioLogin = useCallback(() => navigate('account'), [navigate]);\n\n  const slides: Slide[] = [\n    {id: '1', text: 'hello', color: color.info},\n    {id: '2', text: 'bob', color: color.warning},\n    {id: '3', text: 'steve', color: color.success},\n    {id: '4', text: 'jill', color: color.brand},\n  ];\n\n  return (\n    <Screen title=\"Landing\">\n      <Carousel slides={slides} />\n      <Button center onPress={navPortfolioLogin} title=\"Login\" />\n    </Screen>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useState} from 'react';\nimport {LayoutChangeEvent, Platform} from 'react-native';\nimport {KeyboardHandler, Screen} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {getSmallestDimension} from '../../../../models';\nimport {useRootSelector} from '../../../../utils';\nimport {Board} from '../../components';\nimport {completeConfig} from '../../utils';\n\n// TODO: figure out centering of list\n\nexport const Project = memo(function Project() {\n  const {goBack} = useNavigation();\n  const color = useColor();\n  const screenWidth = useRootSelector(getSmallestDimension);\n  const {projectItemId} = useRootSelector((s) => s.completeItem.nav);\n  if (!projectItemId) throw new Error('missing projectItemId on board screen');\n  const listWidth = screenWidth * 0.7;\n  const [container, setContainer] = useState(0);\n  const android = Platform.OS === 'android';\n  const keyboardHeight = useRootSelector(\n    (state) => state.device.keyboardHeight,\n  );\n\n  const listMaxHeight =\n    keyboardHeight === 0\n      ? container -\n        (android ? completeConfig.padding * 8 : completeConfig.padding * 13)\n      : container -\n        keyboardHeight -\n        (android ? completeConfig.padding * 3 : completeConfig.padding * 8);\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      const {height} = event.nativeEvent.layout;\n      if (container > 0) return;\n      setContainer(height);\n    },\n    [container],\n  );\n\n  const navBack = useCallback(() => {\n    goBack();\n  }, [goBack]);\n\n  return (\n    <Screen onLeftPress={navBack} title=\"Focus\">\n      <KeyboardHandler\n        backgroundColor={color.surface}\n        onLayout={onLayout}\n        render={container > 0}>\n        <Board\n          listMaxHeight={listMaxHeight}\n          listWidth={listWidth}\n          projectItemId={projectItemId}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useState} from 'react';\nimport {LayoutChangeEvent, View} from 'react-native';\nimport {KeyboardHandler, Screen} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {config, useRootSelector} from '../../../../utils';\nimport {List} from '../../components';\nimport {completeConfig} from '../../utils';\n\n// TODO: add journal\n// TODO: add historical data\n// TODO: add purpose\n// TODO: add goals\n\n// TODO: render as <Board />\n\nexport const Projects = memo(function Projects() {\n  const color = useColor();\n  const {navigate} = useNavigation();\n  const [dimensions, setDimensions] = useState(0);\n  const keyboardHeight = useRootSelector((s) => s.device.keyboardHeight);\n  const itemId = useRootSelector(\n    (s) =>\n      s.completeUser?.items.filter(\n        (id) => s.completeItem.items[id].title === 'Projects',\n      )[0],\n  );\n  if (!itemId) throw new Error('missing item id');\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      const {height} = event.nativeEvent.layout;\n      if (dimensions > 0) return;\n\n      setDimensions(height);\n    },\n    [dimensions],\n  );\n\n  const keyboardPadding =\n    keyboardHeight > 0 ? config.padding(32) : config.padding(51);\n  const maxHeight = dimensions - keyboardHeight - keyboardPadding;\n\n  const navToAccount = useCallback(() => navigate('account'), [navigate]);\n\n  return (\n    <Screen onRightPress={navToAccount} rightIcon=\"account\" title=\"Implement\">\n      <KeyboardHandler\n        backgroundColor={color.surface}\n        onLayout={onLayout}\n        render={dimensions > 0}>\n        <View style={{padding: completeConfig.padding}}>\n          <List\n            itemId={itemId}\n            key={itemId}\n            listMaxHeight={maxHeight}\n            parentItemId={null}\n            placeholder=\"Item title...\"\n            title=\"Add item\"\n          />\n        </View>\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import {scaleLinear, scaleTime} from 'd3-scale';\nimport * as shape from 'd3-shape';\nimport * as React from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport Svg, {Defs, LinearGradient, Path, Stop} from 'react-native-svg';\n\ninterface DataPoint {\n  date: number;\n  value: number;\n}\n\ninterface GraphProps {\n  data: DataPoint[];\n  width: number;\n  height: number;\n}\n\nconst strokeWidth = 4;\nconst padding = strokeWidth / 2;\nconst getDomain = (domain: number[]) => [\n  Math.min(...domain),\n  Math.max(...domain),\n];\n\nexport const Graph = ({\n  data,\n  width,\n  height,\n}: GraphProps): React.ReactElement => {\n  const scaleX = scaleTime()\n    .domain(getDomain(data.map((d) => d.date)))\n    .range([0, width]);\n  const scaleY = scaleLinear()\n    .domain(getDomain(data.map((d) => d.value)))\n    .range([height - padding, padding]);\n  const d = shape\n    .line<DataPoint>()\n    .x((p) => scaleX(p.date))\n    .y((p) => scaleY(p.value))\n    .curve(shape.curveBasis)(data) as string;\n  return (\n    <View style={{width, height}}>\n      <Svg style={StyleSheet.absoluteFill}>\n        <Defs>\n          <LinearGradient id=\"gradient\" x1=\"50%\" x2=\"50%\" y1=\"0%\" y2=\"100%\">\n            <Stop offset=\"0%\" stopColor=\"#cee3f9\" />\n            <Stop offset=\"80%\" stopColor=\"#ddedfa\" />\n            <Stop offset=\"100%\" stopColor=\"#feffff\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d={`${d}L ${width} ${height} L 0 ${height}`}\n          fill=\"url(#gradient)\"\n        />\n        <Path fill=\"transparent\" stroke=\"#3977e3\" {...{d, strokeWidth}} />\n      </Svg>\n    </View>\n  );\n};\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback} from 'react';\nimport {Dimensions, View} from 'react-native';\nimport {Calendar, Screen, Text} from '../../../../components';\nimport {ScrollView} from '../../../../conversions';\nimport {useColor} from '../../../../hooks';\nimport {config} from '../../../../utils';\nimport {Card} from '../../components/Card';\nimport {completeConfig} from '../../utils';\nimport {Graph} from './Graph';\n\n// TODO: add journal\n// TODO: add historical data\n// TODO: add purpose\n// TODO: add goals\n\ntype TitleProps = {name: string};\n\nconst Title = ({name}: TitleProps) => {\n  return (\n    <Text\n      emphasis=\"high\"\n      style={{paddingBottom: completeConfig.padding}}\n      title={name}\n      type=\"h4\"\n    />\n  );\n};\n\nconst data = [\n  {date: new Date(2018, 9, 1).getTime(), value: 0},\n  {date: new Date(2018, 9, 16).getTime(), value: 0},\n  {date: new Date(2018, 9, 17).getTime(), value: 200},\n  {date: new Date(2018, 10, 1).getTime(), value: 200},\n  {date: new Date(2018, 10, 2).getTime(), value: 300},\n  {date: new Date(2018, 10, 5).getTime(), value: 300},\n];\n\nexport const Reflect = memo(function Reflect() {\n  const color = useColor();\n  const {navigate} = useNavigation();\n  const navToAccount = useCallback(() => navigate('account'), [navigate]);\n\n  return (\n    <Screen onRightPress={navToAccount} rightIcon=\"account\" title=\"Reflect\">\n      <ScrollView\n        contentContainerStyle={{\n          padding: config.padding(4),\n          backgroundColor: color.surface,\n        }}\n        style={{backgroundColor: color.surface}}>\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Purpose\" />\n            <Text title=\"Make a significant positive difference in global productivity\" />\n          </View>\n        </Card>\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Goals\" />\n            <Text title=\"Top 3\" />\n            <Text title=\"Deep Focus\" />\n            <Text title=\"Smile\" />\n            <Text title=\"1 More Rep\" />\n          </View>\n        </Card>\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Review (Progress)\" />\n            <View\n              style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n              <Graph\n                data={data}\n                height={200}\n                width={\n                  Dimensions.get('window').width - completeConfig.padding * 4\n                }\n              />\n            </View>\n          </View>\n        </Card>\n        <Card>\n          <View>\n            <Title name=\"Reflect (Journal)\" />\n            <Calendar />\n          </View>\n        </Card>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import {\n  BottomTabBarOptions,\n  createBottomTabNavigator,\n} from '@react-navigation/bottom-tabs';\nimport {Route} from '@react-navigation/native';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport React, {memo, useCallback} from 'react';\nimport {Icon, Modal, Notification} from '../../components';\nimport {useColor} from '../../hooks';\nimport {rootMode, rootScreenOptions} from '../../providers/Navigation/configs';\nimport {useRootSelector} from '../../utils';\nimport {\n  Account,\n  Capture,\n  ItemDetail,\n  Landing,\n  Project,\n  Projects,\n  Reflect,\n} from './screens';\n\nconst noHeader: StackNavigationOptions = {headerShown: false};\nconst RootTab = createBottomTabNavigator();\nconst RootStack = createStackNavigator();\nconst ProjectsStack = createStackNavigator();\n\ntype Tabs = 'plan' | 'implement' | 'reflect';\ntype TabIcons = {\n  [key in Tabs]: {focused: string; unFocused: string};\n};\n\nconst tabIcons: TabIcons = {\n  plan: {\n    focused: 'pencil-plus-outline',\n    unFocused: 'pencil-plus-outline',\n  },\n  implement: {\n    focused: 'checkbox-multiple-marked-outline',\n    unFocused: 'checkbox-multiple-marked-outline',\n  },\n  reflect: {focused: 'finance', unFocused: 'finance'},\n};\n\ntype ScreenOptionsProps = {\n  route: Route<string, Record<string, unknown> | undefined>;\n};\n\ntype TabBarIconProps = {\n  focused: boolean;\n  size: number;\n};\n\nconst Implement = () => {\n  return (\n    <ProjectsStack.Navigator screenOptions={noHeader}>\n      <ProjectsStack.Screen component={Projects} name=\"projects\" />\n      <ProjectsStack.Screen component={Project} name=\"project\" />\n    </ProjectsStack.Navigator>\n  );\n};\n\nconst Tabs = () => {\n  const color = useColor();\n  const tabBarOptions: BottomTabBarOptions = {\n    keyboardHidesTabBar: true,\n    activeTintColor: color.text,\n    inactiveTintColor: color.secondary,\n    showLabel: false,\n  };\n  const screenOptions = useCallback(\n    ({route}: ScreenOptionsProps) => ({\n      tabBarIcon: function tabBarIcon({focused, size}: TabBarIconProps) {\n        const key = focused ? 'focused' : 'unFocused';\n        const iconColor = focused ? color.text : color.secondary;\n        const name = (tabIcons as any)[route.name][key];\n        return <Icon color={iconColor} name={name} size={size} />;\n      },\n    }),\n    [color],\n  );\n\n  return (\n    <RootTab.Navigator\n      screenOptions={screenOptions as any}\n      tabBarOptions={tabBarOptions}>\n      <RootTab.Screen component={Capture} name=\"plan\" />\n      <RootTab.Screen component={Implement} name=\"implement\" />\n      <RootTab.Screen component={Reflect} name=\"reflect\" />\n    </RootTab.Navigator>\n  );\n};\n\nexport default memo(function Complete() {\n  const user = useRootSelector((s) => s.completeUser);\n  const Main = user ? Tabs : Landing;\n  return (\n    <RootStack.Navigator mode={rootMode} screenOptions={rootScreenOptions}>\n      <RootStack.Screen component={Main} name=\"main\" />\n      <RootStack.Screen component={Account} name=\"account\" />\n      <RootStack.Screen component={Notification} name=\"notification\" />\n      <RootStack.Screen component={Modal} name=\"alert\" />\n      <RootStack.Screen component={ItemDetail} name=\"item-detail\" />\n    </RootStack.Navigator>\n  );\n});\n\n/*\n\n# Data\n\n- user\n-> collections [projects, lists]\n-> boards [home, work, town] | [meeting notes, book summaries, checklists]\n-> lists [backlog, todo, in progress, done] | [draft, final]\n-> item [find comb, clear emails, daily standup]\n\n# Screens\n\n## Plan\n\n### Inbox (list -> item -> details)\n- \"add grey list\" -> @app\n- \"find comb\" -> @home\n- \"clear emails\" -> @work\n- \"put $20 in phone\" -> @town\n- \"drink water\" -> @after-waking-up\n- \"intensity + implement = deep work\" -> book summaries\n\n## Organize\n\n### Projects (item -> lists -> item -> details )\n- @home -> (backlog, todo, in progress, done xx, done xx)\n- @town\n- @work\n- @gym\n- @app\n\n### Lists (item -> list -> item -> detail)\n- meeting notes\n - one-on-one\n - daily standup\n- book summaries\n - the one thing\n - getting things done\n - eat that frog\n- gift ideas\n - mom\n - dad\n - girlfriend\n- checklists\n - after waking up\n - after entering bathroom\n\n## Reflect\n\n### Purpose\n\n### Goals\n\n### Review (Progress)\n\n### Reflect (Journal)\n\n## Account\n\n### Profile\n\n### Notifications\n\n### Payment\n*/\n"],"sourceRoot":""}