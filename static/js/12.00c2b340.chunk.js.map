{"version":3,"sources":["../node_modules/react-native-web/dist/exports/NativeModules/index.js","apps/Debug/screens/Reminder/Reminders.tsx","apps/Debug/screens/Reminder/Item.tsx","apps/Debug/screens/Reminder/OneTime.tsx","apps/Debug/screens/Reminder/Radio.tsx","apps/Debug/screens/Reminder/Location.tsx","apps/Debug/screens/Reminder/Repeat.tsx","apps/Debug/screens/Reminder/CreateReminderModal.tsx","../node_modules/react-native-web/dist/exports/Linking/index.js","../node_modules/react-native-rate/index.js","features/RateApp/Rating.tsx","features/RateApp/index.tsx","apps/Debug/screens/Reminder/index.tsx"],"names":["NativeModules","UIManager","memo","props","renderItem","useCallback","item","index","title","format","type","reminders","length","undefined","FlatList","inverted","keyExtractor","id","style","flex","data","Item","description","onPress","icon","hidden","active","marginBottom","color","useColor","styles","StyleSheet","create","container","flexDirection","paddingHorizontal","Theme","padding","p02","button","borderRadius","p01","height","p13","justifyContent","borderColor","secondary","borderWidth","primary","text","subtitle","paddingTop","paddingLeft","textContainer","key","View","name","size","p05","daysOfWeek","buttons","laterToday","dayjs","add","set","evening","tomorrow","nextWeek","nextMonth","yesterday","subtract","value","visible","day","generateButtons","map","valueOf","onChange","horizontal","locations","v4","location","useState","setActive","items","reminderTypes","state","setState","section","p06","paddingBottom","submit","marginTop","handleReminderTypePress","onBackgroundPress","onOneTimePress","disable","emphasis","buttonStyle","initialURL","canUseDOM","window","href","Linking","addEventListener","removeEventListener","canOpenURL","Promise","resolve","getInitialURL","openURL","url","open","e","reject","_validateURL","invariant","URL","toString","GooglePrefix","AndroidMarket","noop","Rate","inputOptions","options","AppleAppID","GooglePackageName","AmazonPackageName","OtherAndroidURL","preferredAndroidMarket","preferInApp","openAppStoreIfInAppFails","inAppDelay","fallbackPlatformURL","Object","keys","forEach","callback","filterOptions","Platform","OS","AppleNativePrefix","RNRate","rate","response","then","supported","Rating","count","rating","colorFilled","colorUnfilled","iconFilled","iconUnfilled","handleOnPress","Array","fill","_","initialState","modal","feedback","ratingOptions","RateApp","onComplete","ratingRef","useRef","navigatedToAppStore","form","setForm","p04","completeState","current","handleReset","handleReviewApp","handleRating","prev","setTimeout","success","handleTextChange","handleFeedbackSubmit","handleComplete","center","onSubmitEditing","onChangeText","placeholder","p08","nav","useNav","modals","customDate","createReminder","selected","handleOneTimeReminder","date","isBefore","handleCustomDateClose","handleCreateReminder","handleCreateReminderClose","handleLocation","handleLocationClose","showRate","setShowRate","onLeftPress","to","onLocationPress"],"mappings":"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","file":"static/js/12.00c2b340.chunk.js","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport UIManager from '../UIManager'; // NativeModules shim\n\nvar NativeModules = {\n  UIManager: UIManager\n};\nexport default NativeModules;","import {FlatList} from 'react-native';\nimport {Text} from '../../../../components';\nimport React, {memo, useCallback} from 'react';\nimport {Reminder} from '.';\n\ninterface Props {\n  reminders: Reminder[];\n}\n\nexport default memo(function Reminders(props: Props) {\n  const renderItem = useCallback(\n    ({item, index}) => (\n      <Text\n        title={item.format}\n        type={index === props.reminders.length - 1 ? 'button' : undefined}\n      />\n    ),\n    [props],\n  );\n\n  return (\n    <FlatList\n      inverted\n      keyExtractor={(item) => item.id}\n      style={{flex: 1}}\n      data={props.reminders}\n      renderItem={renderItem}\n    />\n  );\n});\n","import React, {memo} from 'react';\nimport {View, StyleSheet, StyleProp, ViewStyle} from 'react-native';\nimport {Text, Icon, TouchableOpacity} from '../../../../components';\nimport {Theme} from '../../../../utils';\nimport {useColor} from '../../../../hooks';\n\ninterface Props {\n  title: string;\n  description?: string;\n  icon?: string;\n  onPress: () => void;\n  style?: StyleProp<ViewStyle>;\n  marginBottom?: boolean;\n  active?: boolean;\n  hidden?: boolean;\n}\nexport const Item = memo(function ReminderItem({\n  title,\n  description = '',\n  onPress,\n  icon,\n  style,\n  hidden,\n  active,\n  marginBottom,\n}: Props) {\n  const color = useColor();\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      flexDirection: 'row',\n\n      paddingHorizontal: Theme.padding.p02,\n    },\n    button: {\n      borderRadius: Theme.padding.p01,\n      flexDirection: 'row',\n      height: Theme.padding.p13,\n      justifyContent: 'space-between',\n      borderColor: color.secondary,\n      borderWidth: 1,\n      marginBottom: marginBottom ? Theme.padding.p02 : 0,\n    },\n    title: {\n      color: active ? color.primary : color.text,\n    },\n    subtitle: {\n      paddingTop: Theme.padding.p01,\n      paddingLeft: 1,\n    },\n    textContainer: {\n      flex: 1,\n      justifyContent: 'center',\n    },\n    icon: {\n      justifyContent: 'center',\n    },\n  });\n\n  return hidden ? null : (\n    <TouchableOpacity\n      key={title}\n      style={[styles.button, style]}\n      onPress={onPress}>\n      <View style={styles.container}>\n        <View style={styles.textContainer}>\n          <Text type=\"body1\" title={title} style={styles.title} />\n          {description.length > 0 && (\n            <Text type=\"caption\" title={description} style={styles.subtitle} />\n          )}\n        </View>\n        {icon && (\n          <Icon name={icon} size={Theme.padding.p05} style={styles.icon} />\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n});\n","import dayjs, {Dayjs} from 'dayjs';\nimport React, {memo} from 'react';\nimport {View} from 'react-native';\nimport {Item} from './Item';\n\nconst daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst generateButtons = () => {\n  const laterToday = dayjs().add(3, 'hour').add(30, 'minute').set('minute', 0);\n\n  const evening = dayjs().set('hour', 18).set('minute', 0);\n\n  const tomorrow = dayjs().add(1, 'day').set('hour', 6).set('minute', 0);\n\n  const nextWeek = dayjs()\n    .add(1, 'week')\n    .set('hour', 6)\n    .set('minute', 0)\n    .set('day', 1);\n\n  const nextMonth = dayjs().add(2, 'month').set('hour', 6).set('minute', 0);\n\n  const yesterday = dayjs().subtract(1, 'day');\n\n  return [\n    {\n      title: 'Later today',\n      description: laterToday.format('hh:mm A'),\n      value: laterToday,\n      visible: dayjs().set('hour', 18),\n    },\n    {\n      title: 'This Evening',\n      description: evening.format('hh:mm A'),\n      value: evening,\n      visible: dayjs().set('hour', 18),\n    },\n    {\n      title: 'Tomorrow',\n      description: `${daysOfWeek[tomorrow.day()]} ${tomorrow.format(\n        'hh:mm A',\n      )}`,\n      value: tomorrow,\n    },\n    {\n      title: 'Next Week',\n      description: `${nextWeek.format('MMM DD, hh:mm A')}`,\n      value: nextWeek,\n    },\n    {\n      title: 'Someday',\n      description: '',\n      value: nextMonth,\n    },\n    {\n      title: 'Custom',\n      description: '',\n      value: yesterday,\n    },\n  ];\n};\n\ninterface Props {\n  onPress: (value: Dayjs) => () => void;\n}\n\nexport default memo(function OneTime({onPress}: Props) {\n  const buttons = generateButtons();\n  return (\n    <View>\n      {buttons.map((button, index) => {\n        const hidden =\n          button.visible && dayjs().valueOf() > button.visible.valueOf();\n        return (\n          <Item\n            icon=\"alarm\"\n            hidden={hidden}\n            marginBottom={index !== buttons.length - 1}\n            key={button.title}\n            title={button.title}\n            description={button.description}\n            onPress={onPress(button.value)}\n          />\n        );\n      })}\n    </View>\n  );\n});\n","import React, {memo} from 'react';\nimport {View} from 'react-native';\nimport {Item} from './Item';\n\ninterface Props {\n  buttons: string[];\n  horizontal?: boolean;\n  value: string;\n  onChange: (id: string) => () => void;\n}\n\nexport default memo(function Radio({\n  buttons,\n  value,\n  onChange,\n  horizontal,\n}: Props) {\n  return (\n    <View\n      style={{\n        justifyContent: 'center',\n        flexDirection: horizontal ? 'row' : 'column',\n      }}>\n      {buttons.map((button, index) => (\n        <Item\n          title={button}\n          key={button}\n          onPress={onChange(button)}\n          marginBottom={index !== buttons.length - 1}\n          active={button === value}\n        />\n      ))}\n    </View>\n  );\n});\n","import React, {memo} from 'react';\nimport 'react-native-get-random-values';\nimport {v4} from 'uuid';\nimport {Item} from './Item';\n\ninterface Location {\n  id: string;\n  title: string;\n  subtitle?: string;\n}\n\nexport default memo(function Location() {\n  const locations: Location[] = [\n    {\n      id: v4(),\n      title: 'Home',\n      subtitle: 'Tap to add',\n    },\n    {\n      id: v4(),\n      title: 'Work',\n      subtitle: 'Tap to add',\n    },\n    {\n      id: v4(),\n      title: 'Gym',\n      subtitle: 'Tap to add',\n    },\n    {\n      id: v4(),\n      title: 'Add a new location',\n    },\n  ];\n\n  return (\n    <>\n      {locations.map((location, index) => (\n        <Item\n          key={location.id}\n          onPress={() => undefined}\n          title={location.title}\n          description={location.subtitle}\n          marginBottom={index !== locations.length - 1}\n        />\n      ))}\n    </>\n  );\n});\n","import React, {memo, useState} from 'react';\nimport {View} from 'react-native';\nimport {Item} from './Item';\n\ntype RepeatType = 'Daily' | 'Weekly' | 'Monthly' | 'Yearly';\n\nexport default memo(function Repeat() {\n  const [active, setActive] = useState<RepeatType>('Daily');\n  const onPress = (type: RepeatType) => () => setActive(type);\n\n  const items: RepeatType[] = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\n  return (\n    <View>\n      {items.map((item, index) => {\n        return (\n          <Item\n            active={item === active}\n            title={item}\n            key={item}\n            onPress={onPress(item)}\n            marginBottom={index !== items.length - 1}\n          />\n        );\n      })}\n    </View>\n  );\n});\n","import React, {memo, useState, useCallback} from 'react';\nimport {Text, Modal, Button} from '../../../../components';\nimport OneTime from './OneTime';\nimport Radio from './Radio';\nimport {Dayjs} from 'dayjs';\nimport Location from './Location';\nimport Repeat from './Repeat';\nimport {Theme} from '../../../../utils';\nimport {StyleSheet} from 'react-native';\n\ntype ReminderType = 'One time' | 'Repeat' | 'Location';\nconst reminderTypes: ReminderType[] = ['One time', 'Repeat', 'Location'];\n\ninterface Props {\n  onBackgroundPress: () => void;\n  onOneTimePress: (date: Dayjs) => () => void; // TODO: handle models better so don't have to pass up to parent\n  onLocationPress: (id: string) => () => void;\n}\n\nexport default memo(function CreateReminderModal(props: Props) {\n  const [state, setState] = useState<ReminderType>('One time');\n  const styles = StyleSheet.create({\n    section: {\n      paddingTop: Theme.padding.p06,\n      paddingBottom: Theme.padding.p02,\n    },\n    submit: {\n      marginTop: Theme.padding.p06,\n    },\n  });\n\n  const handleReminderTypePress = useCallback(\n    (type) => () => setState(type),\n    [],\n  );\n\n  return (\n    <Modal onBackgroundPress={props.onBackgroundPress}>\n      <Text type=\"h2\" title=\"Create Reminder\" />\n      <Text type=\"caption\" title=\"Reminder type\" style={styles.section} />\n      <Radio\n        buttons={reminderTypes}\n        value={state}\n        onChange={handleReminderTypePress}\n      />\n      <Text type=\"caption\" title=\"Reminder time\" style={styles.section} />\n      {state === 'One time' ? (\n        <OneTime onPress={props.onOneTimePress} />\n      ) : state === 'Repeat' ? (\n        <Repeat />\n      ) : state === 'Location' ? (\n        <Location />\n      ) : (\n        <Text title=\"invalid form type\" />\n      )}\n      <Button\n        disable\n        title=\"submit\"\n        color=\"primary\"\n        emphasis=\"high\"\n        buttonStyle={styles.submit}\n      />\n    </Modal>\n  );\n});\n","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\nvar initialURL = canUseDOM ? window.location.href : '';\nvar Linking = {\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  canOpenURL: function canOpenURL() {\n    return Promise.resolve(true);\n  },\n  getInitialURL: function getInitialURL() {\n    return Promise.resolve(initialURL);\n  },\n  openURL: function openURL(url) {\n    try {\n      open(url);\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  _validateURL: function _validateURL(url) {\n    invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    invariant(url, 'Invalid URL: cannot be empty');\n  }\n};\n\nvar open = function open(url) {\n  if (canUseDOM) {\n    window.location = new URL(url, window.location).toString();\n  }\n};\n\nexport default Linking;","import { Platform, Linking, NativeModules } from 'react-native'\n\nconst AppleNativePrefix = 'itms-apps://itunes.apple.com/app/id'\nconst AppleWebPrefix = 'https://itunes.apple.com/app/id'\nconst GooglePrefix = 'http://play.google.com/store/apps/details?id='\nconst AmazonPrefix = 'amzn://apps/android?p='\n\nexport const AndroidMarket = {\n  Google: 1,\n  Amazon: 2,\n  Other: 3,\n}\n\nconst noop = () => {}\n\nexport default class Rate {\n  static filterOptions(inputOptions) {\n    const options = {\n      AppleAppID: '',\n      GooglePackageName: '',\n      AmazonPackageName: '',\n      OtherAndroidURL: '',\n      preferredAndroidMarket: AndroidMarket.Google,\n      preferInApp: false,\n      openAppStoreIfInAppFails: true,\n      inAppDelay: 3.0,\n      fallbackPlatformURL: '',\n    }\n    Object.keys(inputOptions).forEach((key) => {\n      options[key] = inputOptions[key]\n    })\n    return options\n  }\n\n  static rate(inputOptions, callback = noop) {\n    const options = Rate.filterOptions(inputOptions)\n    if (Platform.OS === 'ios') {\n      options.AppleNativePrefix = AppleNativePrefix\n      const { RNRate } = NativeModules\n      RNRate.rate(options, (response) => {\n        callback(response) // error?\n      })\n    } else if (Platform.OS === 'android') {\n      if (options.preferredAndroidMarket === AndroidMarket.Google) {\n        Rate.openURL(GooglePrefix + options.GooglePackageName, callback)\n      } else if (options.preferredAndroidMarket === AndroidMarket.Amazon) {\n        Rate.openURL(AmazonPrefix + options.AmazonPackageName, callback)\n      } else if (options.preferredAndroidMarket === AndroidMarket.Other) {\n        Rate.openURL(options.OtherAndroidURL, callback)\n      }\n    } else {\n      Rate.openURL(options.fallbackPlatformURL, callback)\n    }\n  }\n\n  static openURL(url, callback = noop) {\n    Linking.canOpenURL(url).then((supported) => {\n      callback(supported)\n      if (supported) {\n        Linking.openURL(url)\n      }\n    })\n  }\n}\n","import React, {memo, useCallback} from 'react';\nimport {View} from 'react-native';\nimport {Icon, TouchableOpacity} from '../../components';\nimport {useColor} from '../../hooks';\n\ninterface Props {\n  size: number;\n  count: number;\n  rating: number;\n  onPress: (index: number) => void;\n  colorFilled?: string;\n  colorUnfilled?: string;\n  iconFilled?: string;\n  iconUnfilled?: string;\n}\n\nexport const Rating = memo(function RatingMemo(props: Props) {\n  const color = useColor();\n  const {\n    size,\n    count,\n    onPress,\n    rating,\n    colorFilled = color.text,\n    colorUnfilled = color.secondary,\n    iconFilled = 'star',\n    iconUnfilled = 'star-outline',\n  } = props;\n  const handleOnPress = useCallback(\n    (index: number) => () => {\n      onPress(index);\n    },\n    [onPress],\n  );\n  return (\n    <View style={{flexDirection: 'row', justifyContent: 'space-between'}}>\n      {Array(count)\n        .fill(0)\n        .map((_, index) => (\n          <TouchableOpacity key={index} onPress={handleOnPress(index)}>\n            <Icon\n              size={size}\n              name={index > rating || !rating ? iconUnfilled : iconFilled}\n              color={index > rating || !rating ? colorUnfilled : colorFilled}\n            />\n          </TouchableOpacity>\n        ))}\n    </View>\n  );\n});\n","import React, {memo, useCallback, useRef, useState} from 'react';\nimport {StyleSheet} from 'react-native';\nimport Rate, {AndroidMarket} from 'react-native-rate';\nimport {Modal, Text, Button, TextInput} from '../../components';\nimport {Theme} from '../../utils';\nimport {Rating} from './Rating';\n\ntype ModalState = 'default' | 'thank you' | 'review' | 'feedback';\ntype State = {\n  rating: number;\n  modal: ModalState;\n  feedback: string;\n};\nconst initialState: State = {\n  rating: 0,\n  modal: 'default',\n  feedback: '',\n};\nconst ratingMin = 5;\nconst ratingOptions = {\n  AppleAppID: '899247664',\n  GooglePackageName: 'com.google.android.apps.maps', // TODO: use configs\n  AmazonPackageName: 'com.google.android.apps.maps',\n  OtherAndroidURL: 'http://www.mywebsite.com/app/47172391',\n  preferredAndroidMarket: AndroidMarket.Google,\n  preferInApp: true,\n  openAppStoreIfInAppFails: true,\n  fallbackPlatformURL: 'http://www.mywebsite.com/myapp',\n};\n\ntype CompleteState = {\n  rating: number;\n  feedback: string;\n  navigatedToAppStore: boolean;\n};\n\ninterface Props {\n  onComplete: (completeState: CompleteState) => void;\n}\n\nexport const RateApp = memo(function RateAppMemo({onComplete}: Props) {\n  const ratingRef = useRef(0);\n  const navigatedToAppStore = useRef(false);\n  const [form, setForm] = useState<State>(initialState);\n  const styles = StyleSheet.create({\n    title: {paddingBottom: Theme.padding.p04},\n    modal: {padding: Theme.padding.p06},\n  });\n  const completeState = {\n    rating: form.rating,\n    feedback: form.feedback,\n    navigatedToAppStore: navigatedToAppStore.current,\n  };\n\n  const handleReset = useCallback(() => {\n    ratingRef.current = 0;\n    setForm(initialState);\n  }, []);\n\n  const handleReviewApp = useCallback(() => {\n    handleReset();\n    onComplete({...completeState, navigatedToAppStore: true});\n    Rate.rate(ratingOptions, () => undefined);\n  }, [completeState, onComplete, handleReset]);\n\n  const handleRating = useCallback((rating: number) => {\n    ratingRef.current = rating;\n    setForm((prev) => ({...prev, rating}));\n    setTimeout(() => {\n      const success = ratingRef.current >= ratingMin;\n      setForm((prev) => ({...prev, modal: success ? 'review' : 'feedback'}));\n    }, 300);\n  }, []);\n\n  const handleTextChange = useCallback((feedback: string) => {\n    setForm((prev) => ({...prev, feedback}));\n  }, []);\n\n  const handleFeedbackSubmit = useCallback(() => {\n    setForm((prev) => ({...prev, modal: 'thank you'}));\n  }, []);\n\n  const handleComplete = useCallback(() => {\n    onComplete(completeState);\n  }, [completeState, onComplete]);\n\n  return (\n    <Modal onBackgroundPress={handleComplete}>\n      {form.modal === 'review' ? (\n        <>\n          <Text\n            type=\"h4\"\n            title=\"Thank you for your feedback!\"\n            center\n            style={styles.title}\n          />\n          <Text\n            title=\"Do you mind reviewing us on the app store?\"\n            center\n            style={styles.title}\n          />\n          <Button title=\"Okay\" onPress={handleReviewApp} />\n        </>\n      ) : form.modal === 'feedback' ? (\n        <>\n          <Text type=\"h4\" title=\"Thank you\" center style={styles.title} />\n          <Text\n            title=\"Can you provide us with some feedback to help us improve?\"\n            center\n            style={styles.title}\n          />\n          <TextInput\n            onSubmitEditing={handleFeedbackSubmit}\n            value={form.feedback}\n            onChangeText={handleTextChange}\n            placeholder=\"How can we improve?\"\n          />\n          <Button title=\"Submit\" onPress={handleFeedbackSubmit} />\n        </>\n      ) : form.modal === 'thank you' ? (\n        <>\n          <Text type=\"h4\" title=\"Thank you\" center style={styles.title} />\n          <Text\n            title=\"We have sent your feedback to our team\"\n            style={styles.title}\n            center\n          />\n          <Button title=\"Close\" onPress={handleComplete} />\n        </>\n      ) : (\n        <>\n          <Text\n            type=\"h4\"\n            title=\"How are you enjoying the app so far?\"\n            center\n            style={styles.title}\n          />\n          <Rating\n            count={5}\n            size={Theme.padding.p08}\n            rating={form.rating}\n            onPress={handleRating}\n          />\n        </>\n      )}\n    </Modal>\n  );\n});\n","import React, {memo, useState, useCallback} from 'react';\nimport {Screen, Text, Button, Modal} from '../../../../components';\nimport {useNav} from '../../../../hooks';\nimport dayjs, {Dayjs} from 'dayjs';\nimport Reminders from './Reminders';\nimport CreateReminderModal from './CreateReminderModal';\nimport 'react-native-get-random-values';\nimport {v4} from 'uuid';\nimport {RateApp} from '../../../../features';\n\ntype ReminderType = 'one time' | 'repeat' | 'location';\nexport type Reminder = {\n  id: string;\n  date: number;\n  format: string;\n};\ntype State = {\n  type: ReminderType;\n  reminders: Reminder[];\n  modals: {\n    customDate: boolean;\n    createReminder: boolean;\n    location: boolean;\n  };\n  selected: {\n    location: string | undefined;\n  };\n};\n\nexport default memo(function DebugReminder() {\n  const nav = useNav();\n  const [form, setForm] = useState<State>({\n    type: 'one time',\n    reminders: [],\n    modals: {\n      customDate: false,\n      createReminder: false,\n      location: false,\n    },\n    selected: {\n      location: undefined,\n    },\n  });\n\n  const handleOneTimeReminder = useCallback(\n    (date: Dayjs) => () => {\n      if (date.isBefore(dayjs())) {\n        setForm((prev) => ({\n          ...prev,\n          modals: {...prev.modals, customDate: true},\n        }));\n        return;\n      }\n      setForm((prev) => ({\n        ...prev,\n        modals: {\n          ...prev.modals,\n          createReminder: false,\n        },\n        reminders: [\n          ...prev.reminders,\n          {\n            id: v4(),\n            date: date.valueOf(),\n            format: date.format('MMM DD, YYYY hh:mm A'),\n          },\n        ],\n      }));\n    },\n    [],\n  );\n\n  const handleCustomDateClose = useCallback(() => {\n    setForm((prev) => ({\n      ...prev,\n      modals: {...prev.modals, customDate: false},\n    }));\n  }, []);\n\n  const handleCreateReminder = useCallback(() => {\n    setForm((prev) => ({\n      ...prev,\n      modals: {...prev.modals, createReminder: true},\n    }));\n  }, []);\n\n  const handleCreateReminderClose = useCallback(() => {\n    setForm((prev) => ({\n      ...prev,\n      modals: {...prev.modals, createReminder: false},\n    }));\n  }, []);\n\n  const handleLocation = useCallback(\n    (id: string) => () => {\n      setForm((prev) => ({\n        ...prev,\n        modals: {...prev.modals, location: true},\n        selected: {location: id},\n      }));\n    },\n    [],\n  );\n\n  const handleLocationClose = useCallback(() => {\n    setForm((prev) => ({\n      ...prev,\n      modals: {...prev.modals, location: false},\n    }));\n  }, []);\n\n  const [showRate, setShowRate] = useState(false);\n\n  return (\n    <>\n      <Screen onLeftPress={nav.to('debug')} title=\"Reminder\">\n        <Button title=\"create reminder\" onPress={handleCreateReminder} />\n        <Text type=\"h2\" title=\"reminders\" center />\n        <Reminders reminders={form.reminders} />\n        <Button title=\"press me\" onPress={() => setShowRate(true)} />\n      </Screen>\n      {showRate && <RateApp onComplete={() => setShowRate(false)} />}\n      {form.modals.createReminder && (\n        <CreateReminderModal\n          onBackgroundPress={handleCreateReminderClose}\n          onOneTimePress={handleOneTimeReminder}\n          onLocationPress={handleLocation}\n        />\n      )}\n      {form.modals.customDate && (\n        <Modal onBackgroundPress={handleCustomDateClose}>\n          <Text title=\"hello\" />\n        </Modal>\n      )}\n      {form.modals.location && (\n        <Modal onBackgroundPress={handleLocationClose}>\n          <Text title=\"location\" />\n        </Modal>\n      )}\n    </>\n  );\n});\n"],"sourceRoot":""}