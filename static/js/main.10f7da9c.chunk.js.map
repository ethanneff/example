{"version":3,"sources":["models/App/index.tsx","screens/Debug/screens/Checklists/models/Item/index.tsx","screens/Debug/screens/Checklists/models/List/index.tsx","models/Device/index.tsx","utils/Font/index.tsx","models/index.tsx","utils/Config/index.tsx","utils/Theme/index.tsx","utils/Mock/index.tsx","components/TextInput/index.tsx","components/Link/index.web.tsx","models/User/index.tsx","components/Router/Auth.tsx","components/Router/index.web.tsx","components/Text/index.tsx","components/Button/index.tsx","components/Card/index.tsx","components/CardSection/index.tsx","components/Markdown/index.tsx","components/Swipe/index.tsx","components/Screen/KeyboardAvoid.web.tsx","components/Screen/NavButton.tsx","components/Screen/NavBar.tsx","components/Screen/index.tsx","components/Icon/Badge.tsx","components/Icon/IconSource.web.tsx","components/Icon/index.tsx","components/TextInput/Clear.tsx","components/TextInput/Error.tsx","components/TextInput/Title.tsx","screens/App/index.tsx","screens/Debug/screens/Ball/index.tsx","screens/Debug/screens/Cards/index.tsx","screens/Debug/screens/Fonts/index.tsx","screens/Debug/screens/Drag/index.tsx","screens/Debug/screens/Buttons/index.tsx","screens/Debug/screens/PinchSpread/logic.tsx","screens/Debug/screens/PinchSpread/index.tsx","screens/Debug/screens/SearchBar/index.tsx","screens/Debug/screens/OKRs/index.tsx","screens/Debug/screens/Input/index.tsx","screens/Debug/screens/Questionnaire/index.tsx","screens/Debug/screens/Checklists/screens/ItemCreate/index.tsx","screens/Debug/screens/Checklists/screens/ItemUpdate/index.tsx","screens/Debug/screens/Checklists/screens/ListUpdate/index.tsx","screens/Debug/screens/Checklists/screens/ListCreate/index.tsx","screens/Debug/screens/Checklists/screens/Lists/index.tsx","screens/Debug/screens/Checklists/screens/List/index.tsx","screens/Debug/screens/Checklists/index.tsx","screens/Debug/screens/ImageCollection/AsyncImage.tsx","screens/Debug/screens/ImageCollection/index.tsx","screens/Debug/index.tsx","screens/Landing/index.web.tsx","screens/Login/index.tsx","screens/Main/index.tsx","screens/NotFound/index.tsx","index.tsx"],"names":["AppActionTypes","createItem","createStandardAction","updateItem","removeItem","toggleActiveItem","selectItems","state","items","selectItemsByCreatedAt","createSelector","Object","values","filter","item","active","sort","a","b","createdAt","selectLists","lists","DeviceActionTypes","WINDOW","Dimensions","get","FontWeight","selectWidth","device","windowDimensions","width","selectHeight","height","reducers","combineReducers","app","arguments","length","undefined","action","type","APP_LOAD","objectSpread","payload","APP_UPDATE_STATUS","status","DEVICE_UPDATE_BATTERY","batteryLevel","DEVICE_UPDATE_FINGERPRINT","isPinOrFingerprintSet","DEVICE_UPDATE_NETWORK","networkEffectiveType","effectiveType","networkType","DEVICE_UPDATE_DIMENSION","screenDimensions","screen","window","DEVICE_LOAD","getType","id","uuid","timestamp","Date","now","defineProperty","order","updatedAt","userId","middlewares","thunk","enhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","apply","store","createStore","Provider","_React$PureComponent","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","children","props","react","es","React","Config","name","os","android","ios","web","root","Theme","color","background","brand","danger","dark","info","light","primary","secondary","success","text","warning","padding","p00","p01","p02","p03","p04","p05","p06","p07","p08","p09","p10","p11","p12","p13","p14","p15","p16","p17","p18","p19","p20","colorWithOpacity","opacity","boundedOpacity","startsWith","substr","substring","concat","KeyboardType","ReturnKeyType","FontSize","body1","fontSize","fontWeight","Regular","letterSpacing","body2","button","Medium","caption","h1","Light","h2","h3","h4","h5","h6","overline","subtitle1","subtitle2","styles","link","textDecoration","Link","_this$props","to","title","buttonStyle","textStyle","TouchableOpacity","style","react_router_dom","Text_Text","center","User","isAuthenticated","authenticate","cb","setTimeout","signout","Auth","_getPrototypeOf2","_this","_len","args","Array","_key","call","fallback","_this2","Component","component","Original","original","Redirect","redirect","rest","objectWithoutProperties","assign","render","auth","path","pathname","from","location","Route","_ref","Auth_Auth","Router","StyleSheet","create","bold","textAlign","Text","_this$props2","hidden","toUpperCase","getFont","exports_Text","alignSelf","containedBody","backgroundColor","containedText","container","alignItems","borderColor","borderRadius","borderWidth","flexDirection","justifyContent","paddingHorizontal","disableBody","disableText","fab","half","icon","paddingRight","label","margin","neutral","nonFlex","outlined","right","Button","onPress","disable","contained","wrap","iconColor","lowercase","activeOpacity","buttonStyleGroup","getShape","textStyleGroup","iconStyleGroup","disabled","Icon_Icon","size","containerStyle","elevation","position","shadowColor","shadowOffset","shadowOpacity","shadowRadius","zIndex","Card","touchOpacity","borderBottomWidth","paddingVertical","KeyboardAvoid","View","flex","buttonRight","NavButton","isRight","NavBar","_this$props$title","onLeftPress","onRightPress","_this$props$leftIcon","leftIcon","_this$props$rightIcon","rightIcon","NavButton_NavButton","Screen","disableScroll","SafeAreaView","NavBar_NavBar","KeyboardAvoid_web_KeyboardAvoid","scrollEnabled","badgeContainer","top","badgeText","Badge","badgeLimit","maxBadgeNumber","badge","num","String","IconSource","Icon","_this$props$badge","clear","_this$props$size","_this$props$color","colored","IconSource_web_IconSource","Badge_Badge","Clear","Button_Button","Error","error","message","optional","textTransform","Title","optionalText","stylesOptional","borderError","borderFocus","row","textInput","marginTop","TextInput","focus","updateFocus","setState","focusOnInput","textClear","onChangeText","_this$props$editable","editable","autoCorrect","secureTextEntry","keyboardType","returnKeyType","_this$props$blurOnSub","blurOnSubmit","placeholder","_this$props$disableFu","disableFullscreenUI","textInputStyle","noValue","Title_Title","exports_TextInput","ref","input","selectionColor","onFocus","onBlur","placeholderTextColor","underlineColorAndroid","Clear_Clear","Error_Error","onNetworkChange","change","onDimensionChange","onAppStateChange","enableListeners","disableListeners","index_web_Router","index_web_Route","exact","Landing","Login","Debug","Main","NotFound","addEventListener","NetInfo","AppState","removeEventListener","App","connect","onAppLoad","onDeviceLoad","onDeviceUpdateBattery","onDeviceUpdateFingerprint","ball","marginLeft","ballPosition","Animated","ValueXY","x","y","history","Screen_Screen","goBack","getLayout","animate","Math","random","dx","dy","spring","toValue","start","Ball","cards","price","Cards","Value","absoluteFill","map","card","i","inputRange","outputRange","push","translateY","interpolate","extrapolateRight","transform","ScrollView","scrollEventThrottle","contentContainerStyle","content","showsVerticalScrollIndicator","onScroll","event","nativeEvent","contentOffset","Fonts","panGesture","PanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","_","gestureState","moveX","moveY","panHandlers","Drag","Buttons","GestureHandler","_ref$minTouches","minTouches","finish","touches","touch","recordFinish","recordStart","outcome","determineOutcome","isStartAlreadyRecorded","identifier","locationX","locationY","startXDistance","abs","startYDistance","finishXDistance","finishYDistance","points","numRecordedTouched","keys","point","pinch","spread","determineCenter","isPinch","isSpread","pinchCount","spreadCount","gestureHandler","onPanResponderRelease","_this$state","_this$state2","PinchSpread","header","borderBottomColor","textContainer","DATA","SearchBar","iconSearch","animation","iconName","iconBack","textInputPlaceHolder","animationDuration","translateIcon","fadeContainer","iconChangeTimeout","keyboardDidShowListener","keyboardDidHideListener","keyboardWillShowListener","keyboardWillHideListener","keyboardWillShow","Platform","OS","onSearchBarFocus","keyboardWillHide","onSearchBarUnFocus","keyboardDidShow","keyboardDidHide","Keyboard","addListener","remove","clearTimeout","translateX","TextInput_TextInput","FlatList","keyExtractor","toString","data","renderItem","changeIcon","timing","duration","_this3","OKRs","Card_Card","Input","email","password","val","Email","Questionnaire","choices","selected","next","output","tableView","currentIndex","onViewableItemsChanged","viewableItems","index","onProgress","direction","onFinish","scrollToIndex","animated","onSelection","choice","removeClippedSubviews","showsHorizontalScrollIndicator","viewabilityConfig","itemVisiblePercentThreshold","horizontal","pagingEnabled","_ref2","description","setName","setDescription","createList","ListCreate","match","Lists","toggle","List","Checklists","AsyncImage","indicatorOverlay","imageAnimated","indicatorAnimated","onImageLoad","parallel","useNativeDriver","uri","imageStyle","indicatorStyle","Image","source","onLoad","ActivityIndicator","ImageCollection","numColumns","infiniteScrollThreshold","columnWidth","imageUrl","fetchMore","renderImage","AsyncImage_AsyncImage","onEndReached","onEndReachedThreshold","screens","generateRoutes","toLowerCase","navBack","showHomeScreen","index_web_Link","footer","Footer","Header","_React$PureComponent3","index_web_Header","index_web_Footer","fakeAuth","Launcher","models_Provider","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.10f7da9c.chunk.js","sourcesContent":["import { AppStateStatus } from \"react-native\";\nimport { RootState } from \"../../models\";\n\n// action types\nexport enum AppActionTypes {\n  APP_LOAD = \"APP_LOAD\",\n  APP_UPDATE_STATUS = \"APP_UPDATE_STATUS\"\n}\n\n// interfaces\nexport interface AppState {\n  appVersion?: string;\n  buildVersion?: string;\n  bundleIdentifier?: string;\n  applicationName?: string;\n  buildNumber?: string;\n  version?: string;\n  readableVersion?: string;\n  status?: AppStateStatus;\n}\ninterface AppLoadAction {\n  type: AppActionTypes.APP_LOAD;\n  payload: AppLoadPayload;\n}\ninterface AppStateChangeAction {\n  type: AppActionTypes.APP_UPDATE_STATUS;\n  payload: AppStateStatus;\n}\ntype AppActions = AppLoadAction | AppStateChangeAction;\ntype AppLoadPayload = AppState;\n\n// actions\nexport const onAppLoad = (payload: AppLoadPayload) => ({\n  payload,\n  type: AppActionTypes.APP_LOAD\n});\nexport const onAppStateChange = (payload: AppStateStatus) => ({\n  payload,\n  type: AppActionTypes.APP_UPDATE_STATUS\n});\n\n// selectors\nexport const selectAppStatus = (state: RootState) => state.app.status;\n\n// reducers\nexport function appReducer(state: AppState = {}, action: AppActions): AppState {\n  switch (action.type) {\n    case AppActionTypes.APP_LOAD:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case AppActionTypes.APP_UPDATE_STATUS:\n      return {\n        ...state,\n        status: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { createSelector } from \"reselect\";\nimport { ActionType, createStandardAction, getType } from \"typesafe-actions\";\nimport { DeepReadonly } from \"utility-types\";\nimport uuid from \"uuid/v4\";\nimport { RootAction, RootState } from \"../../../../../../models\";\n\n// Interfaces\nexport type Item = DeepReadonly<{\n  id: string;\n  name: string;\n  description?: string;\n  active: boolean;\n  userId: string;\n  sources?: string[];\n  order?: number;\n  createdAt: number;\n  updatedAt: number;\n}>;\nexport type Items = DeepReadonly<{ [key: string]: Item }>;\nexport type ItemsArray = DeepReadonly<Item[]>;\nexport type ItemActions = ActionType<\n  | typeof createItem\n  | typeof removeItem\n  | typeof updateItem\n  | typeof toggleActiveItem\n>;\ninterface CreateItem {\n  name: string;\n  description?: string;\n  active?: boolean;\n}\ntype UpdateItem = CreateItem & { id: string };\n\n// Actions\nexport const createItem = createStandardAction(\"ITEM/CREATE\")<CreateItem>();\nexport const updateItem = createStandardAction(\"ITEM/UPDATE\")<UpdateItem>();\nexport const removeItem = createStandardAction(\"ITEM/REMOVE\")<string>();\nexport const toggleActiveItem = createStandardAction(\"ITEM/TOGGLE_ACTIVE\")<\n  string\n>();\n\n// Indexes\nexport const indexItemsByCreatedAt = (rows: Items): Items =>\n  Object.values(rows).reduce(\n    (index: any, row) => ((index[row.createdAt] = row.id), index),\n    {}\n  );\nexport const indexItemsByUserId = (rows: Items): Items =>\n  Object.values(rows).reduce(\n    (index: any, row) => (\n      (index[row.userId] = row.hasOwnProperty(\"userId\")\n        ? [...index[row.userId], row.id]\n        : [row.id]),\n      index\n    ),\n    {}\n  );\n\n// Selectors\nexport const selectItems = (state: RootState): Items => state.items;\nexport const selectItemsFilterByActive = createSelector(\n  [selectItems],\n  items => Object.values(items).filter(item => item.active)\n);\nexport const selectItemsByCreatedAt = createSelector(\n  [selectItems],\n  items => Object.values(items).sort((a, b) => a.createdAt - b.createdAt)\n);\n\n// Reducer\nexport const itemReducer = (state: Items = {}, action: RootAction): Items => {\n  switch (action.type) {\n    case getType(createItem):\n      const id = uuid();\n      const timestamp = Date.now();\n      return {\n        ...state,\n        [id]: {\n          ...action.payload,\n          active: true,\n          createdAt: timestamp,\n          id,\n          order: timestamp,\n          updatedAt: timestamp,\n          userId: \"1\"\n        }\n      };\n    case getType(updateItem):\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          ...action.payload,\n          updatedAt: Date.now()\n        }\n      };\n    case getType(removeItem):\n      return {\n        ...state,\n        [action.payload]: {\n          ...state[action.payload],\n          active: false,\n          updatedAt: Date.now()\n        }\n      };\n    case getType(toggleActiveItem):\n      return {\n        ...state,\n        [action.payload]: {\n          ...state[action.payload],\n          active: !state[action.payload].active,\n          updatedAt: Date.now()\n        }\n      };\n    default:\n      return state;\n  }\n};\n","import { createSelector } from \"reselect\";\nimport { ActionType, createStandardAction } from \"typesafe-actions\";\nimport { DeepReadonly } from \"utility-types\";\nimport { RootAction, RootState } from \"../../../../../../models\";\n\n// Interfaces\nexport type List = DeepReadonly<{\n  id: string;\n  name: string;\n  description?: string;\n  active: boolean;\n  frequency: string[];\n  visibility: string[];\n  createdAt: number;\n  updatedAt: number;\n  userId: string;\n  item: string[];\n  history: string[];\n  viewed: string[];\n  liked: string[];\n  copied: string[];\n  modified: string[];\n}>;\nexport type Lists = DeepReadonly<{ [key: string]: List }>;\nexport type ListActions = ActionType<\n  | typeof createList\n  | typeof removeList\n  | typeof updateList\n  | typeof toggleActiveList\n>;\ninterface CreateList {\n  name: string;\n  description?: string;\n  active?: boolean;\n}\ntype UpdateList = CreateList & { id: string };\n\n// Actions\nexport const createList = createStandardAction(\"LIST/CREATE\")<CreateList>();\nexport const updateList = createStandardAction(\"LIST/UPDATE\")<UpdateList>();\nexport const removeList = createStandardAction(\"LIST/REMOVE\")<string>();\nexport const toggleActiveList = createStandardAction(\"LIST/TOGGLE_ACTIVE\")<\n  string\n>();\n\n// Indexes\nexport const indexListsByCreatedAt = (rows: Lists) =>\n  Object.values(rows).reduce(\n    (index: any, row) => ((index[row.createdAt] = row.id), index),\n    {}\n  );\nexport const indexListsByUserId = (rows: Lists) =>\n  Object.values(rows).reduce(\n    (index: any, row) => (\n      (index[row.userId] = row.hasOwnProperty(\"userId\")\n        ? [...index[row.userId], row.id]\n        : [row.id]),\n      index\n    ),\n    {}\n  );\n\n// Selectors\nexport const selectLists = (state: RootState): Lists => state.lists;\nexport const selectListsFilterByActive = createSelector(\n  [selectLists],\n  items => Object.values(items).filter(item => item.active)\n);\nexport const selectListsByCreatedAt = createSelector(\n  [selectLists],\n  items => Object.values(items).sort((a, b) => a.createdAt - b.createdAt)\n);\n\n// Reducer\nexport const listReducer = (state: Lists = {}, action: RootAction): Lists => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n","import {\n  ConnectionInfo,\n  ConnectionType,\n  Dimensions,\n  EffectiveConnectionType,\n  ScaledSize\n} from \"react-native\";\nimport { RootState } from \"../../models\";\n\nconst WINDOW = Dimensions.get(\"window\");\n\n// action types\nexport enum DeviceActionTypes {\n  DEVICE_UPDATE_BATTERY = \"DEVICE_UPDATE_BATTERY\",\n  DEVICE_UPDATE_FINGERPRINT = \"DEVICE_UPDATE_FINGERPRINT\",\n  DEVICE_LOAD = \"DEVICE_LOAD\",\n  DEVICE_UPDATE_NETWORK = \"DEVICE_UPDATE_NETWORK\",\n  DEVICE_UPDATE_DIMENSION = \"DEVICE_UPDATE_DIMENSION\"\n}\n\n// interfaces\nexport interface DimensionsProps {\n  window: ScaledSize;\n  screen: ScaledSize;\n}\ninterface DeviceUpdateBatteryAction {\n  type: DeviceActionTypes.DEVICE_UPDATE_BATTERY;\n  payload: number;\n}\ninterface DeviceUpdateFingerprintAction {\n  type: DeviceActionTypes.DEVICE_UPDATE_FINGERPRINT;\n  payload: boolean;\n}\ninterface DeviceLoadAction {\n  type: DeviceActionTypes.DEVICE_LOAD;\n  payload: DeviceState;\n}\ninterface DeviceNetworkChangeAction {\n  type: DeviceActionTypes.DEVICE_UPDATE_NETWORK;\n  payload: ConnectionInfo;\n}\ninterface DeviceDimensionChangeAction {\n  type: DeviceActionTypes.DEVICE_UPDATE_DIMENSION;\n  payload: DimensionsProps;\n}\ntype DeviceActions =\n  | DeviceUpdateBatteryAction\n  | DeviceUpdateFingerprintAction\n  | DeviceLoadAction\n  | DeviceNetworkChangeAction\n  | DeviceDimensionChangeAction;\n\nexport interface DeviceState {\n  uniqueId?: string;\n  manufacturer?: string;\n  brand?: string;\n  model?: string;\n  deviceId?: string;\n  systemName?: string;\n  systemVersion?: string;\n  deviceName?: string;\n  userAgent?: string;\n  deviceLocale?: string;\n  deviceCountry?: string;\n  timezone?: string;\n  instanceId?: string;\n  installReferrer?: string;\n  isEmulator?: boolean;\n  isTablet?: boolean;\n  fontScale?: number;\n  is24Hour?: boolean;\n  isPinOrFingerprintSet?: boolean;\n  firstInstallTime?: number;\n  lastUpdateTime?: number;\n  serialNumber?: string;\n  phoneNumber?: string;\n  apiLevel?: number;\n  carrier?: string;\n  totalMemory?: number;\n  maxMemory?: number;\n  totalDiskCapacity?: number;\n  freeDiskStorage?: number;\n  batteryLevel?: number;\n  networkType?: ConnectionType;\n  networkEffectiveType?: EffectiveConnectionType;\n  windowDimensions?: ScaledSize;\n  screenDimensions?: ScaledSize;\n}\n\n// actions\nexport const onDeviceUpdateFingerprint = (payload: boolean) => ({\n  payload,\n  type: DeviceActionTypes.DEVICE_UPDATE_FINGERPRINT\n});\nexport const onDeviceUpdateBattery = (payload: number) => ({\n  payload,\n  type: DeviceActionTypes.DEVICE_UPDATE_BATTERY\n});\nexport const onDeviceLoad = (payload: DeviceState) => ({\n  payload,\n  type: DeviceActionTypes.DEVICE_LOAD\n});\nexport const onNetworkChange = (payload: ConnectionType | ConnectionInfo) => ({\n  payload,\n  type: DeviceActionTypes.DEVICE_UPDATE_NETWORK\n});\nexport const onDimensionChange = (payload: DimensionsProps) => ({\n  payload,\n  type: DeviceActionTypes.DEVICE_UPDATE_DIMENSION\n});\n\n// selectors\nexport const selectLandscapeOrientation = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.height < WINDOW.width\n    : state.device.windowDimensions.height <\n      state.device.windowDimensions.width;\n\nexport const selectSmallestDimension = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.height > WINDOW.width\n      ? WINDOW.width\n      : WINDOW.height\n    : state.device.windowDimensions.height > state.device.windowDimensions.width\n    ? state.device.windowDimensions.width\n    : state.device.windowDimensions.height;\n\nexport const selectLargestDimension = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.height > WINDOW.width\n      ? WINDOW.height\n      : WINDOW.width\n    : state.device.windowDimensions.height > state.device.windowDimensions.width\n    ? state.device.windowDimensions.height\n    : state.device.windowDimensions.width;\n\nexport const selectWidth = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.width\n    : state.device.windowDimensions.width;\n\nexport const selectHeight = (state: RootState) =>\n  !state.device.windowDimensions\n    ? WINDOW.height\n    : state.device.windowDimensions.height;\n\n// reducers\nexport const deviceReducer = (\n  state: DeviceState = {},\n  action: DeviceActions\n) => {\n  switch (action.type) {\n    case DeviceActionTypes.DEVICE_UPDATE_BATTERY:\n      return {\n        ...state,\n        batteryLevel: action.payload\n      };\n    case DeviceActionTypes.DEVICE_UPDATE_FINGERPRINT:\n      return {\n        ...state,\n        isPinOrFingerprintSet: action.payload\n      };\n    case DeviceActionTypes.DEVICE_UPDATE_NETWORK:\n      return {\n        ...state,\n        networkEffectiveType: action.payload.effectiveType,\n        networkType: action.payload.type\n      };\n    case DeviceActionTypes.DEVICE_UPDATE_DIMENSION:\n      return {\n        ...state,\n        screenDimensions: action.payload.screen,\n        windowDimensions: action.payload.window\n      };\n    case DeviceActionTypes.DEVICE_LOAD:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n};\n","export enum FontWeight {\n  Light = \"100\",\n  Regular = \"300\",\n  Medium = \"600\"\n}\n\n// sizing: https://material.io/design/typography/the-type-system.html#applying-the-type-scale\nexport const FontSize = {\n  body1: {\n    fontSize: 16,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0.5\n  },\n  body2: {\n    fontSize: 14,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0.25\n  },\n  button: {\n    fontSize: 14,\n    fontWeight: FontWeight.Medium,\n    letterSpacing: 0.75\n  },\n  caption: {\n    fontSize: 12,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0.4\n  },\n  h1: {\n    fontSize: 96,\n    fontWeight: FontWeight.Light,\n    letterSpacing: -1.5\n  },\n  h2: {\n    fontSize: 60,\n    fontWeight: FontWeight.Light,\n    letterSpacing: -0.5\n  },\n  h3: {\n    fontSize: 48,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0\n  },\n  h4: {\n    fontSize: 34,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0.25\n  },\n  h5: {\n    fontSize: 24,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0\n  },\n  h6: {\n    fontSize: 20,\n    fontWeight: FontWeight.Medium,\n    letterSpacing: 0.15\n  },\n  overline: {\n    fontSize: 10,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 1.5\n  },\n  subtitle1: {\n    fontSize: 16,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0.15\n  },\n  subtitle2: {\n    fontSize: 14,\n    fontWeight: FontWeight.Medium,\n    letterSpacing: 0.1\n  }\n};\n","import * as React from \"react\";\nimport { Provider as Original } from \"react-redux\";\nimport {\n  applyMiddleware,\n  combineReducers,\n  compose,\n  createStore,\n  Middleware\n} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { DeepReadonly } from \"utility-types\";\nimport {\n  ItemActions,\n  itemReducer,\n  Items,\n  ListActions,\n  listReducer,\n  Lists\n} from \"../screens/Debug/screens/Checklists/models\";\nimport { appReducer, AppState } from \"./App\";\nimport { deviceReducer, DeviceState } from \"./Device\";\n\n// models\nexport * from \"./App\";\nexport * from \"./Device\";\n\n// interfaces\nexport type RootState = DeepReadonly<{\n  app: AppState;\n  device: DeviceState;\n  items: Items;\n  lists: Lists;\n}>;\n\n// reducers\nconst reducers = combineReducers<RootState>({\n  app: appReducer,\n  device: deviceReducer,\n  items: itemReducer,\n  lists: listReducer\n});\n\n// actions\nexport type RootAction = ListActions | ItemActions;\n\n// constants\nconst middlewares: Middleware[] = [thunk];\nconst composers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancers = composers(applyMiddleware(...middlewares));\n\n// store\nconst store = createStore(reducers, enhancers);\n\n// provider\nexport class Provider extends React.PureComponent {\n  public render() {\n    const { children } = this.props;\n    return <Original store={store}>{children}</Original>;\n  }\n}\n","export const Config = {\n  app: {\n    name: \"example\"\n  },\n  os: {\n    android: \"android\",\n    ios: \"ios\",\n    web: \"web\"\n  },\n  web: {\n    root: \"root\"\n  }\n};\n","export const Theme = {\n  color: {\n    background: \"hsl(0, 100%, 100%)\",\n    brand: \"hsl(264, 34%, 36%)\",\n    danger: \"hsl(354, 70%, 54%)\",\n    dark: \"hsl(210, 10%, 23%)\",\n    info: \"hsl(188, 78%, 41%)\",\n    light: \"hsl(210, 17%, 98%)\",\n    primary: \"hsl(211, 100%, 50%)\",\n    secondary: \"hsl(208, 7%, 46%)\",\n    success: \"hsl(134, 61%, 41%)\",\n    text: \"hsl(0, 0%, 0%)\",\n    warning: \"hsl(45, 100%, 51%)\"\n  },\n  padding: {\n    p00: 0,\n    p01: 4,\n    p02: 8,\n    p03: 12,\n    p04: 16,\n    p05: 20,\n    p06: 24,\n    p07: 28,\n    p08: 32,\n    p09: 36,\n    p10: 40,\n    p11: 44,\n    p12: 48,\n    p13: 52,\n    p14: 56,\n    p15: 60,\n    p16: 64,\n    p17: 68,\n    p18: 72,\n    p19: 76,\n    p20: 80\n  }\n};\n\nexport const colorWithOpacity = (color: string, opacity = 0.5) => {\n  const boundedOpacity = opacity < 0 ? 0 : opacity > 1 ? 1 : opacity;\n  const leading = 4;\n  if (!color.startsWith(\"hsl\")) {\n    return color;\n  }\n  const substr = color.substring(leading, color.length - 1);\n  return `hsla(${substr}, ${boundedOpacity})`;\n};\n","import * as React from \"react\";\nimport { Router } from \"../../components\";\nimport { Provider } from \"../../models\";\n\ninterface Props {\n  Component: any;\n}\n\nexport class MockProviderAndRouter extends React.PureComponent<Props> {\n  private mock = jest.fn();\n  private history = {\n    push: this.mock\n  };\n  public render() {\n    const { Component } = this.props;\n    return (\n      <Provider>\n        <Router>\n          <Component\n            match={this.mock}\n            location={this.mock}\n            history={this.history}\n          />\n        </Router>\n      </Provider>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  StyleSheet,\n  TextInput as Original,\n  TextStyle,\n  View\n} from \"react-native\";\nimport { FontSize, Theme } from \"../../utils\";\nimport { Clear } from \"./Clear\";\nimport { Error } from \"./Error\";\nimport { Title } from \"./Title\";\n\n// styling https://uxdesign.cc/design-better-forms-96fadca0f49c\nconst styles = StyleSheet.create({\n  borderError: {\n    borderColor: Theme.color.danger\n  },\n  borderFocus: {\n    borderColor: Theme.color.primary\n  },\n  row: {\n    flexDirection: \"row\"\n  },\n  textInput: {\n    backgroundColor: Theme.color.background,\n    borderColor: Theme.color.secondary,\n    borderRadius: Theme.padding.p01,\n    borderWidth: 2,\n    flex: 1,\n    marginTop: Theme.padding.p01,\n    padding: Theme.padding.p02,\n    paddingRight: Theme.padding.p08\n  }\n});\n\ninterface Props {\n  title?: string;\n  optional?: boolean;\n  error?: string;\n  style?: TextStyle | {};\n  placeholder?: string;\n  value: string;\n  disableFullscreenUI?: boolean;\n  editable?: boolean;\n  autoCorrect?: boolean;\n  blurOnSubmit?: boolean;\n  secureTextEntry?: boolean;\n  keyboardType?: KeyboardType;\n  returnKeyType?: ReturnKeyType;\n  onChangeText(text: string): void;\n}\n\ninterface State {\n  focus: boolean;\n}\n\nexport enum KeyboardType {\n  Default = \"default\",\n  Number = \"number-pad\",\n  Decimal = \"decimal-pad\",\n  Numeric = \"numeric\",\n  Email = \"email-address\",\n  Phone = \"phone-pad\"\n}\n\nexport enum ReturnKeyType {\n  Done = \"done\",\n  Go = \"go\",\n  Next = \"next\",\n  Search = \"search\",\n  Send = \"send\"\n}\n\nexport class TextInput extends React.PureComponent<Props, State> {\n  public state = {\n    focus: false\n  };\n  private textInput?: Original;\n\n  public render() {\n    const {\n      title,\n      optional,\n      error,\n      editable = true,\n      autoCorrect,\n      secureTextEntry,\n      keyboardType,\n      returnKeyType,\n      blurOnSubmit = true,\n      placeholder,\n      onChangeText,\n      value,\n      disableFullscreenUI = true,\n      style\n    } = this.props;\n    const { focus } = this.state;\n    const textInputStyle = [\n      styles.textInput,\n      error && styles.borderError,\n      focus && styles.borderFocus,\n      FontSize.body2,\n      style\n    ];\n    const noValue = value.length === 0;\n    return (\n      <>\n        <Title title={title} optional={optional} onPress={this.focusOnInput} />\n        <View style={styles.row}>\n          <Original\n            ref={input => {\n              if (!input) {\n                return;\n              }\n              this.textInput = input;\n            }}\n            autoCorrect={autoCorrect}\n            selectionColor={Theme.color.primary}\n            disableFullscreenUI={disableFullscreenUI}\n            onFocus={() => this.updateFocus(true)}\n            onBlur={() => this.updateFocus(false)}\n            editable={editable}\n            placeholderTextColor={Theme.color.secondary}\n            blurOnSubmit={blurOnSubmit}\n            secureTextEntry={secureTextEntry}\n            returnKeyType={returnKeyType}\n            keyboardType={keyboardType}\n            underlineColorAndroid=\"transparent\"\n            style={textInputStyle}\n            placeholder={placeholder}\n            onChangeText={onChangeText}\n            value={value}\n          />\n          <Clear hidden={noValue} onPress={this.textClear} />\n        </View>\n        <Error error={error} onPress={this.focusOnInput} />\n      </>\n    );\n  }\n\n  private updateFocus = (focus: boolean) => {\n    this.setState({ focus });\n  };\n\n  private focusOnInput = () => {\n    if (!this.textInput) {\n      return;\n    }\n    this.textInput.focus();\n  };\n\n  private textClear = () => {\n    const { onChangeText } = this.props;\n    if (!this.textInput) {\n      return;\n    }\n    this.textInput.clear();\n    onChangeText(\"\");\n  };\n}\n","import * as React from \"react\";\nimport { TextStyle, TouchableOpacity, ViewStyle } from \"react-native\";\nimport { Link as Original } from \"react-router-dom\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = {\n  link: {\n    color: Theme.color.dark,\n    textDecoration: \"none\"\n  }\n};\n\ninterface Props {\n  to: string;\n  title: string;\n  buttonStyle?: ViewStyle | {};\n  textStyle?: TextStyle | {};\n}\n\nexport class Link extends React.PureComponent<Props> {\n  public render() {\n    const { to, title, buttonStyle, textStyle } = this.props;\n    return (\n      <TouchableOpacity style={buttonStyle}>\n        <Original to={to} style={styles.link}>\n          <Text button center title={title} style={textStyle} />\n        </Original>\n      </TouchableOpacity>\n    );\n  }\n}\n","type ICallback = () => any;\n\nexport default {\n  isAuthenticated: false,\n  authenticate(cb: ICallback) {\n    this.isAuthenticated = true;\n    setTimeout(cb, 1000);\n  },\n  signout(cb: ICallback) {\n    this.isAuthenticated = false;\n    setTimeout(cb, 1000);\n  }\n};\n","import * as React from \"react\";\nimport User from \"../../models/User\"; // TODO: make models export not export default\n\nexport class Auth extends React.PureComponent<any> {\n  private fallback = \"/login\";\n  public render() {\n    const {\n      component: Component,\n      original: Original,\n      redirect: Redirect,\n      ...rest\n    } = this.props;\n    return (\n      <Original\n        {...rest}\n        render={(props: any) =>\n          !rest.auth ||\n          rest.path === this.fallback ||\n          (rest.auth && User.isAuthenticated) ? (\n            <Component {...props} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: this.fallback,\n                state: { from: props.location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  BrowserRouter,\n  Redirect,\n  Route as Original,\n  Switch\n} from \"react-router-dom\";\nimport { Auth } from \"./Auth\";\n\nconst Route = ({ component, ...rest }: any) => (\n  <Auth\n    original={Original}\n    redirect={Redirect}\n    component={component}\n    {...rest}\n  />\n);\n\nclass Router extends React.PureComponent {\n  public render() {\n    const { children } = this.props;\n    return <BrowserRouter>{children}</BrowserRouter>;\n  }\n}\n\nexport { Route, Router, Redirect, Switch };\n","import * as React from \"react\";\nimport { StyleSheet, Text as Original, ViewStyle } from \"react-native\";\nimport { FontSize } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  bold: {\n    fontWeight: \"600\" // TODO: figure out why I cannot import FontWeight.Medium with tests\n  },\n  center: {\n    textAlign: \"center\"\n  }\n});\n\ninterface Props {\n  title?: string;\n  style?: ViewStyle | {};\n\n  center?: boolean;\n  bold?: boolean;\n  hidden?: boolean;\n\n  h1?: boolean;\n  h2?: boolean;\n  h3?: boolean;\n  h4?: boolean;\n  h5?: boolean;\n  h6?: boolean;\n  subtitle1?: boolean;\n  subtitle2?: boolean;\n  body1?: boolean;\n  body2?: boolean;\n  button?: boolean;\n  caption?: boolean;\n  overline?: boolean;\n}\n\nexport class Text extends React.PureComponent<Props> {\n  public getFont() {\n    const {\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6,\n      subtitle1,\n      subtitle2,\n      body1,\n      body2,\n      button,\n      caption,\n      overline\n    } = this.props;\n    if (h1) {\n      return FontSize.h1;\n    }\n    if (h2) {\n      return FontSize.h2;\n    }\n    if (h3) {\n      return FontSize.h3;\n    }\n    if (h4) {\n      return FontSize.h4;\n    }\n    if (h5) {\n      return FontSize.h5;\n    }\n    if (h6) {\n      return FontSize.h6;\n    }\n    if (subtitle1) {\n      return FontSize.subtitle1;\n    }\n    if (subtitle2) {\n      return FontSize.subtitle2;\n    }\n    if (body1) {\n      return FontSize.body1;\n    }\n    if (body2) {\n      return FontSize.body2;\n    }\n    if (button) {\n      return FontSize.button;\n    }\n    if (caption) {\n      return FontSize.caption;\n    }\n    if (overline) {\n      return FontSize.overline;\n    }\n    return FontSize.body2;\n  }\n\n  public render() {\n    const { title, style, button, bold, overline, center, hidden } = this.props;\n    const text = button || overline ? (title || \"\").toUpperCase() : title;\n    const textStyle = [\n      this.getFont(),\n      center && styles.center,\n      bold && styles.bold,\n      style\n    ];\n    if (title === undefined || title.length === 0 || hidden) {\n      return null;\n    }\n    return <Original style={textStyle}>{text}</Original>;\n  }\n}\n","import * as React from \"react\";\nimport {\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  ViewStyle\n} from \"react-native\";\nimport { Icon, Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  center: {\n    alignSelf: \"center\"\n  },\n  containedBody: {\n    backgroundColor: Theme.color.primary\n  },\n  containedText: {\n    color: Theme.color.background\n  },\n  container: {\n    alignItems: \"center\",\n    borderColor: \"transparent\", // TODO: add border to be same size as outlined\n    borderRadius: Theme.padding.p01,\n    borderWidth: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    paddingHorizontal: Theme.padding.p04\n  },\n  danger: {\n    color: Theme.color.danger\n  },\n  disableBody: {\n    backgroundColor: Theme.color.light\n  },\n  disableText: {\n    color: Theme.color.secondary\n  },\n  fab: {\n    alignSelf: \"flex-start\",\n    borderRadius: Theme.padding.p08,\n    padding: Theme.padding.p04\n  },\n  half: {\n    width: \"50%\"\n  },\n  height: {\n    height: Theme.padding.p09\n  },\n  icon: {\n    paddingRight: 2\n  },\n  label: {\n    height: Theme.padding.p05,\n    justifyContent: \"flex-start\",\n    margin: Theme.padding.p01,\n    paddingHorizontal: 0\n  },\n  neutral: {\n    color: Theme.color.text\n  },\n  nonFlex: {\n    alignSelf: \"flex-start\"\n  },\n  outlined: {\n    borderColor: Theme.color.secondary\n  },\n  right: {\n    alignSelf: \"flex-end\"\n  },\n  secondary: {\n    color: Theme.color.secondary\n  },\n  text: {\n    backgroundColor: \"transparent\",\n    color: Theme.color.primary\n  }\n});\n\n// styling: https://material.io/design/components/buttons.html#usage\ninterface Props {\n  // content\n  title?: string;\n  icon?: string;\n  // styling\n  buttonStyle?: ViewStyle | {};\n  textStyle?: TextStyle | {};\n  iconColor?: string;\n  // state\n  active?: boolean;\n  hidden?: boolean;\n  disable?: boolean;\n  activeOpacity?: number;\n  // shape\n  text?: boolean; // low emphasis\n  outlined?: boolean; // mid emphasis\n  contained?: boolean; // high emphasis\n  fab?: boolean;\n  toggle?: boolean;\n  label?: boolean;\n  // color\n  neutral?: boolean;\n  secondary?: boolean;\n  danger?: boolean;\n  // size\n  wrap?: boolean;\n  half?: boolean;\n  full?: boolean;\n  center?: boolean;\n  right?: boolean;\n  lowercase?: boolean;\n  // event\n  onPress(): void;\n}\n\nexport class Button extends React.PureComponent<Props> {\n  public render() {\n    const {\n      title,\n      onPress,\n      disable,\n      buttonStyle,\n      textStyle,\n      contained,\n      outlined,\n      wrap,\n      fab,\n      hidden,\n      neutral,\n      half,\n      center,\n      right,\n      icon,\n      iconColor,\n      secondary,\n      danger,\n      label,\n      lowercase,\n      activeOpacity\n    } = this.props;\n    const buttonStyleGroup = [\n      styles.container,\n      !fab && styles.height,\n      this.getShape(),\n      disable && (contained || outlined) && styles.disableBody,\n      fab && styles.fab,\n      wrap && styles.nonFlex,\n      half && styles.half,\n      center && styles.center,\n      right && styles.right,\n      label && styles.label,\n      buttonStyle\n    ];\n    const textStyleGroup = [\n      styles.text,\n      neutral && styles.neutral,\n      secondary && styles.secondary,\n      danger && styles.danger,\n      contained && styles.containedText,\n      disable && styles.disableText,\n      textStyle\n    ];\n    const iconStyleGroup = [title && styles.icon, !iconColor && textStyleGroup];\n    if (hidden) {\n      return null;\n    }\n    return (\n      <TouchableOpacity\n        activeOpacity={activeOpacity}\n        style={buttonStyleGroup}\n        onPress={onPress}\n        disabled={disable}\n      >\n        <Icon\n          color={iconColor}\n          name={icon}\n          size={Theme.padding.p04}\n          style={iconStyleGroup}\n        />\n        <Text center button={!lowercase} title={title} style={textStyleGroup} />\n      </TouchableOpacity>\n    );\n  }\n  private getShape() {\n    const { contained, outlined, fab, text } = this.props;\n    if (contained) {\n      return styles.containedBody;\n    }\n    if (outlined) {\n      return styles.outlined;\n    }\n    if (fab) {\n      return styles.fab;\n    }\n    if (text) {\n      return styles.text;\n    }\n    return styles.text;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    backgroundColor: Theme.color.background,\n    elevation: 1,\n    margin: Theme.padding.p02,\n    padding: Theme.padding.p04,\n    position: \"relative\",\n    shadowColor: Theme.color.dark,\n    shadowOffset: {\n      height: 4,\n      width: 0\n    },\n    shadowOpacity: 0.6,\n    shadowRadius: 6,\n    zIndex: 1\n  }\n});\n\ninterface Props {\n  style?: ViewStyle;\n  onPress?(): void;\n}\n\nexport class Card extends React.PureComponent<Props> {\n  private touchOpacity = 0.3;\n  public render() {\n    const { style, children, onPress } = this.props;\n    return (\n      <TouchableOpacity\n        style={[styles.containerStyle, style]}\n        onPress={onPress && onPress}\n        activeOpacity={onPress ? this.touchOpacity : 1}\n      >\n        {children}\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TextStyle, View } from \"react-native\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    backgroundColor: Theme.color.background,\n    borderBottomWidth: 0.5,\n    borderColor: Theme.color.dark,\n    flexDirection: \"row\",\n    paddingHorizontal: 20,\n    paddingVertical: 10\n  }\n});\n\ninterface Props {\n  style?: TextStyle;\n}\n\nexport class CardSection extends React.PureComponent<Props> {\n  public render() {\n    const { style, children } = this.props;\n    return <View style={[styles.containerStyle, style]}>{children}</View>;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TextStyle, View } from \"react-native\";\nimport { Text } from \"..\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\"\n  }\n});\n\ninterface Props {\n  title: string;\n  style?: TextStyle;\n}\n\nexport class Markdown extends React.PureComponent<Props> {\n  private boldSyntax = \"*\";\n  private withoutSyntaxIndex = 2;\n\n  public render() {\n    const { title, style } = this.props;\n    const words = title.split(\" \");\n    return (\n      <View style={styles.container}>\n        {words.map((word: string, index: number) => (\n          <Text\n            style={style}\n            key={index}\n            bold={this.isWordBold(word)}\n            title={this.formattedWord(words, word, index)}\n          />\n        ))}\n      </View>\n    );\n  }\n\n  private isWordBold(word: string) {\n    return (\n      word.length > this.withoutSyntaxIndex &&\n      word[0] === this.boldSyntax &&\n      word[word.length - 1] === this.boldSyntax\n    );\n  }\n\n  private formattedWord(words: string[], word: string, index: number) {\n    const space = words.length - 1 === index ? \"\" : \" \";\n    const trimmed = this.isWordBold(word)\n      ? word.substring(1, word.length - 1)\n      : word;\n    return trimmed + space;\n  }\n}\n","// import * as React from \"react\";\n// import {\n//   View,\n//   Animated,\n//   PanResponder,\n//   Dimensions,\n//   LayoutAnimation,\n//   UIManager,\n//   Platform\n// } from \"react-native\";\n\n// const SCREEN_WIDTH = Dimensions.get(\"window\").width;\n// const SWIPE_THRESHOLD = 0.25 * SCREEN_WIDTH;\n// const SWIPE_OUT_DURATION = 250;\n\n// interface Props {}\n// interface State {\n//   panResponder: number;\n//   position: number;\n//   index: number;\n// }\n\n// class Swipe extends React.PureComponent<Props, State> {\n//   static defaultProps = {\n//     onSwipeRight: () => {},\n//     onSwipeLeft: () => {},\n//     keyProp: \"id\"\n//   };\n\n//   constructor(props: Props) {\n//     super(props);\n\n//     const position = new Animated.ValueXY();\n//     const panResponder = PanResponder.create({\n//       onStartShouldSetPanResponder: () => true,\n//       onPanResponderMove: (_, gesture) => {\n//         position.setValue({ x: gesture.dx, y: gesture.dy });\n//       },\n//       onPanResponderRelease: (_, gesture) => {\n//         if (gesture.dx > SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"right\");\n//         } else if (gesture.dx < -SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"left\");\n//         } else {\n//           this.resetPosition();\n//         }\n//       }\n//     });\n\n//     this.state = { panResponder, position, index: 0 };\n//   }\n\n//   componentWillReceiveProps(nextProps: Props) {\n//     if (nextProps.data !== this.props.data) {\n//       this.setState({ index: 0 });\n//     }\n//   }\n\n//   componentWillUpdate() {\n//     UIManager.setLayoutAnimationEnabledExperimental &&\n//       UIManager.setLayoutAnimationEnabledExperimental(true);\n//     LayoutAnimation.spring();\n//   }\n\n//   forceSwipe(direction) {\n//     const x = direction === \"right\" ? SCREEN_WIDTH : -SCREEN_WIDTH;\n//     Animated.timing(this.state.position, {\n//       toValue: { x, y: 0 },\n//       duration: SWIPE_OUT_DURATION\n//     }).start(() => this.onSwipeComplete(direction));\n//   }\n\n//   onSwipeComplete(direction) {\n//     const { onSwipeLeft, onSwipeRight, data } = this.props;\n//     const item = data[this.state.index];\n\n//     direction === \"right\" ? onSwipeRight(item) : onSwipeLeft(item);\n//     this.state.position.setValue({ x: 0, y: 0 });\n//     this.setState({ index: this.state.index + 1 });\n//   }\n\n//   resetPosition() {\n//     Animated.spring(this.state.position, {\n//       toValue: { x: 0, y: 0 }\n//     }).start();\n//   }\n\n//   getCardStyle() {\n//     const { position } = this.state;\n//     const rotate = position.x.interpolate({\n//       inputRange: [-SCREEN_WIDTH * 1.5, 0, SCREEN_WIDTH * 1.5],\n//       outputRange: [\"-120deg\", \"0deg\", \"120deg\"]\n//     });\n\n//     return {\n//       ...position.getLayout(),\n//       transform: [{ rotate }]\n//     };\n//   }\n\n//   renderCards() {\n//     if (this.state.index >= this.props.data.length) {\n//       return this.props.renderNoMoreCards();\n//     }\n\n//     const deck = this.props.data.map((item, i) => {\n//       if (i < this.state.index) {\n//         return null;\n//       }\n\n//       if (i === this.state.index) {\n//         return (\n//           <Animated.View\n//             key={item[this.props.keyProp]}\n//             style={[this.getCardStyle(), styles.cardStyle, { zIndex: 99 }]}\n//             {...this.state.panResponder.panHandlers}\n//           >\n//             {this.props.renderCard(item)}\n//           </Animated.View>\n//         );\n//       }\n\n//       return (\n//         <Animated.View\n//           key={item[this.props.keyProp]}\n//           style={[\n//             styles.cardStyle,\n//             { top: 10 * (i - this.state.index), zIndex: -i }\n//           ]}\n//         >\n//           {this.props.renderCard(item)}\n//         </Animated.View>\n//       );\n//     });\n\n//     return Platform.OS === \"android\" ? deck : deck.reverse();\n//   }\n\n//   render() {\n//     return <View>{this.renderCards()}</View>;\n//   }\n// }\n\n// const styles = {\n//   cardStyle: {\n//     position: \"absolute\",\n//     width: SCREEN_WIDTH\n//   }\n// };\n\n// export default Swipe;\n\nimport * as React from \"react\";\nimport { View } from \"react-native\";\n\nexport class Swipe extends React.PureComponent {\n  public render() {\n    return <View />;\n  }\n}\n","import * as React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\ninterface Props {\n  style: ViewStyle | {};\n}\n\nexport class KeyboardAvoid extends React.PureComponent<Props> {\n  public render() {\n    const { style, children } = this.props;\n    return <View style={style}>{children}</View>;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Icon } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  button: {\n    flex: 1,\n    padding: Theme.padding.p03\n  },\n  buttonRight: {\n    alignSelf: \"flex-end\"\n  }\n});\n\ninterface Props {\n  icon: string;\n  isRight?: boolean;\n  onPress?(): void;\n}\n\nexport class NavButton extends React.PureComponent<Props> {\n  public render() {\n    const { onPress, icon, isRight } = this.props;\n    if (!onPress) { return null; }\n    return (\n      <TouchableOpacity style={styles.button} onPress={onPress}>\n        <Icon\n          color={Theme.color.dark}\n          style={isRight && styles.buttonRight}\n          name={icon}\n        />\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\nimport { NavButton } from \"./NavButton\";\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    backgroundColor: Theme.color.background,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  title: {\n    flex: 1,\n    fontSize: Theme.padding.p05,\n    textAlign: \"center\"\n  }\n});\n\ninterface Props {\n  title?: string;\n  leftIcon?: string;\n  rightIcon?: string;\n  onLeftPress?(): void;\n  onRightPress?(): void;\n}\n\nexport class NavBar extends React.PureComponent<Props> {\n  public render() {\n    const {\n      title = \"\",\n      onLeftPress,\n      onRightPress,\n      leftIcon = \"arrow-left\",\n      rightIcon = \"close\"\n    } = this.props;\n    const isEnabled = title.length > 0 || onLeftPress || onRightPress;\n    if (!isEnabled) { return null; }\n    return (\n      <View style={styles.container}>\n        <NavButton icon={leftIcon} onPress={onLeftPress} />\n        <Text hidden={title.length === 0} style={styles.title} title={title} />\n        <NavButton icon={rightIcon} isRight onPress={onRightPress} />\n      </View>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { SafeAreaView, StyleSheet, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\nimport { KeyboardAvoid } from \"./KeyboardAvoid\";\nimport { NavBar } from \"./NavBar\";\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Theme.color.background,\n    flex: 1\n  }\n});\n\ninterface OwnProps {\n  style?: ViewStyle | {};\n  title?: string;\n  leftIcon?: string;\n  rightIcon?: string;\n  disableScroll?: boolean;\n  onLeftPress?(): void;\n  onRightPress?(): void;\n}\n\ntype Props = OwnProps;\n\nexport class Screen extends React.PureComponent<Props> {\n  public render() {\n    const {\n      title,\n      style,\n      onLeftPress,\n      onRightPress,\n      children,\n      disableScroll,\n      leftIcon,\n      rightIcon\n    } = this.props;\n    return (\n      <SafeAreaView style={[styles.container, style]}>\n        <NavBar\n          title={title}\n          leftIcon={leftIcon}\n          rightIcon={rightIcon}\n          onLeftPress={onLeftPress}\n          onRightPress={onRightPress}\n        />\n        <KeyboardAvoid\n          scrollEnabled={!disableScroll}\n          style={[styles.container, style]}\n        >\n          {children}\n        </KeyboardAvoid>\n      </SafeAreaView>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  badgeContainer: {\n    alignItems: \"center\",\n    backgroundColor: Theme.color.primary,\n    borderRadius: 20,\n    height: 20,\n    justifyContent: \"center\",\n    position: \"absolute\",\n    right: -10,\n    top: -10,\n    width: 20\n  },\n  badgeText: {\n    color: Theme.color.background,\n    fontSize: Theme.padding.p02\n  }\n});\n\ninterface Props {\n  badge: number;\n}\n\nexport class Badge extends React.PureComponent<Props> {\n  private badgeLimit = \"!\";\n  private maxBadgeNumber = 99;\n  public render() {\n    const { badge } = this.props;\n    const num = badge > this.maxBadgeNumber ? this.badgeLimit : String(badge);\n    if (badge <= 0) {\n      return null;\n    }\n    return (\n      <View style={styles.badgeContainer}>\n        <Text center style={styles.badgeText} title={num} />\n      </View>\n    );\n  }\n}\n","// TODO: icons for web\n\nimport * as React from \"react\";\nimport { Text } from \"..\";\n\ninterface Props {\n  name: string;\n  size: number;\n  color: string;\n}\n\nexport class IconSource extends React.PureComponent<Props> {\n  public render() {\n    const { name } = this.props;\n    return <Text title={name} />;\n  }\n}\n","// usage: <Icon name='check' />\n// source: https://materialdesignicons.com/\n\nimport * as React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\nimport { Badge } from \"./Badge\";\nimport { IconSource } from \"./IconSource\";\n\ninterface Props {\n  badge?: number;\n  style?: ViewStyle | {};\n  clear?: boolean;\n  hidden?: boolean;\n  size?: number;\n  color?: string;\n  name?: string;\n}\n\nexport class Icon extends React.PureComponent<Props> {\n  public render() {\n    const {\n      name,\n      style,\n      badge = 0,\n      clear,\n      size = Theme.padding.p06,\n      color = Theme.color.dark,\n      hidden\n    } = this.props;\n    const colored = clear ? Theme.color.background : color;\n    if (name === undefined || name.length === 0 || hidden) {\n      return null;\n    }\n    return (\n      <View style={style}>\n        <IconSource name={name} size={size} color={colored} style={style} />\n        <Badge badge={badge} />\n      </View>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { Button } from \"..\";\n\nconst styles = StyleSheet.create({\n  clear: {\n    position: \"absolute\",\n    right: -6,\n    top: 6\n  }\n});\n\ninterface Props {\n  hidden: boolean;\n  onPress(): void;\n}\n\nexport class Clear extends React.PureComponent<Props> {\n  private icon = \"close-circle\";\n  public render() {\n    const { hidden, onPress } = this.props;\n    return (\n      <Button\n        secondary\n        hidden={hidden}\n        icon={this.icon}\n        buttonStyle={styles.clear}\n        onPress={onPress}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Button } from \"..\";\n\ninterface Props {\n  error?: string;\n  onPress(): void;\n}\n\nexport class Error extends React.PureComponent<Props> {\n  private icon = \"alert-circle\";\n  public render() {\n    const { error, onPress } = this.props;\n    const icon = error && this.icon;\n    const message = error || \" \";\n    return (\n      <Button\n        label\n        wrap\n        lowercase\n        activeOpacity={1}\n        icon={icon}\n        title={message}\n        danger\n        onPress={onPress}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\"\n  },\n  optional: {\n    color: Theme.color.secondary\n  },\n  title: {\n    textTransform: \"capitalize\"\n  }\n});\n\ninterface Props {\n  title?: string;\n  optional?: boolean;\n  onPress(): void;\n}\n\nexport class Title extends React.PureComponent<Props> {\n  private optionalText = \" - Optional\";\n  public render() {\n    const { title, optional, onPress } = this.props;\n    const stylesOptional = [styles.title, styles.optional];\n    if (title === undefined || title.length === 0) {\n      return null;\n    }\n    return (\n      // TODO: remove touchableopacity and move to button component\n      <TouchableOpacity\n        activeOpacity={1}\n        style={styles.container}\n        onPress={onPress}\n      >\n        <Text title={title} style={styles.title} />\n        <Text\n          hidden={!optional}\n          title={this.optionalText}\n          style={stylesOptional}\n        />\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  AppState,\n  AppStateStatus,\n  ConnectionInfo,\n  ConnectionType,\n  Dimensions,\n  NetInfo\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { Route, Router, Switch } from \"../../components\";\nimport { onAppLoad, onAppStateChange } from \"../../models/App\";\nimport {\n  DimensionsProps,\n  onDeviceLoad,\n  onDeviceUpdateBattery,\n  onDeviceUpdateFingerprint,\n  onDimensionChange,\n  onNetworkChange\n} from \"../../models/Device\";\nimport { Debug, Landing, Login, Main, NotFound } from \"../../screens\";\n\ninterface DispatchProps {\n  onAppLoad: typeof onAppLoad;\n  onAppStateChange: typeof onAppStateChange;\n  onNetworkChange: typeof onNetworkChange;\n  onDimensionChange: typeof onDimensionChange;\n  onDeviceUpdateFingerprint: typeof onDeviceUpdateFingerprint;\n  onDeviceUpdateBattery: typeof onDeviceUpdateBattery;\n  onDeviceLoad: typeof onDeviceLoad;\n}\n\ntype Props = DispatchProps;\n\nclass Component extends React.PureComponent<Props> {\n  public componentDidMount() {\n    this.enableListeners();\n  }\n\n  public componentWillUnmount() {\n    this.disableListeners();\n  }\n\n  public render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Landing} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/debug\" component={Debug} />\n          <Route auth path=\"/app\" component={Main} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    );\n  }\n\n  private enableListeners() {\n    Dimensions.addEventListener(\"change\", this.onDimensionChange);\n    NetInfo.addEventListener(\"connectionChange\", this.onNetworkChange);\n    AppState.addEventListener(\"change\", this.onAppStateChange);\n  }\n\n  private disableListeners() {\n    NetInfo.removeEventListener(\"connectionChange\", this.onNetworkChange);\n    AppState.removeEventListener(\"change\", this.onAppStateChange);\n    Dimensions.removeEventListener(\"change\", this.onDimensionChange);\n  }\n\n  private onNetworkChange = (change: ConnectionType | ConnectionInfo) => {\n    this.props.onNetworkChange(change);\n  };\n\n  private onDimensionChange = (change: DimensionsProps) => {\n    this.props.onDimensionChange(change);\n  };\n\n  private onAppStateChange = (change: AppStateStatus) => {\n    this.props.onAppStateChange(change);\n  };\n}\n\nexport const App = connect(\n  null,\n  {\n    onAppLoad,\n    onAppStateChange,\n    onDeviceLoad,\n    onDeviceUpdateBattery,\n    onDeviceUpdateFingerprint,\n    onDimensionChange,\n    onNetworkChange\n  }\n)(Component);\n","import * as React from \"react\";\nimport { Animated, StyleSheet, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen } from \"../../../../components\";\nimport { RootState, selectHeight, selectWidth } from \"../../../../models\";\n\nconst styles = StyleSheet.create({\n  ball: {\n    borderColor: \"black\",\n    borderRadius: 30,\n    borderWidth: 30,\n    height: 60,\n    marginLeft: -30,\n    marginTop: -30,\n    width: 60\n  },\n  button: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  private ballPosition: Animated.ValueXY;\n\n  constructor(props: Props) {\n    super(props);\n    const { width, height } = this.props;\n    this.ballPosition = new Animated.ValueXY({ x: width / 2, y: height / 2 });\n  }\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <Animated.View style={[this.ballPosition.getLayout(), styles.ball]} />\n        <View style={styles.button}>\n          <Button title=\"initial\" onPress={() => this.animate(0.5, 0.5)} />\n          <Button\n            title=\"random\"\n            onPress={() => this.animate(Math.random(), Math.random())}\n          />\n        </View>\n      </Screen>\n    );\n  }\n\n  private animate(dx: number, dy: number) {\n    const { width, height } = this.props;\n    Animated.spring(this.ballPosition, {\n      toValue: { x: width * dx, y: height * dy }\n    }).start();\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  height: selectHeight(state),\n  width: selectWidth(state)\n});\n\nexport const Ball = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport { Animated, Dimensions, StyleSheet, View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen } from \"../../../../components\";\n\nconst cardHeight = 250;\nconst cardTitle = 45;\nconst cardPadding = 10;\n\nconst { height } = Dimensions.get(\"window\");\nconst cards = [\n  {\n    color: \"#a9d0b6\",\n    name: \"Shot\",\n    price: \"30 CHF\"\n  },\n  {\n    color: \"#e9bbd1\",\n    name: \"Juice\",\n    price: \"64 CHF\"\n  },\n  {\n    color: \"#eba65c\",\n    name: \"Mighty Juice\",\n    price: \"80 CHF\"\n  },\n  {\n    color: \"#95c3e4\",\n    name: \"Sandwich\",\n    price: \"85 CHF\"\n  },\n  {\n    color: \"#1c1c1c\",\n    name: \"Combi\",\n    price: \"145 CHF\"\n  },\n  {\n    color: \"#a390bc\",\n    name: \"Signature\",\n    price: \"92 CHF\"\n  },\n  {\n    color: \"#fef2a0\",\n    name: \"Coffee\",\n    price: \"47 CHF\"\n  }\n];\n\ntype Props = RouteComponentProps;\n\nexport class Cards extends React.PureComponent<Props> {\n  public state = {\n    y: new Animated.Value(0)\n  };\n\n  public render() {\n    const { y } = this.state;\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <View style={styles.container}>\n          <View style={StyleSheet.absoluteFill}>\n            {cards.map((card, i) => {\n              const inputRange = [-cardHeight, 0];\n              const outputRange = [\n                cardHeight * i,\n                (cardHeight - cardTitle) * -i\n              ];\n              if (i > 0) {\n                inputRange.push(cardPadding * i);\n                outputRange.push((cardHeight - cardPadding) * -i);\n              }\n              const translateY = y.interpolate({\n                extrapolateRight: \"clamp\",\n                inputRange,\n                outputRange\n              });\n              return (\n                <Animated.View\n                  key={card.name}\n                  style={{ transform: [{ translateY }] }}\n                >\n                  <View\n                    style={[styles.card, { backgroundColor: card.color }]}\n                  />\n                </Animated.View>\n              );\n            })}\n          </View>\n          <Animated.ScrollView\n            scrollEventThrottle={16}\n            contentContainerStyle={styles.content}\n            showsVerticalScrollIndicator={false}\n            onScroll={Animated.event([\n              {\n                nativeEvent: {\n                  contentOffset: { y }\n                }\n              }\n            ])}\n          />\n        </View>\n      </Screen>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    borderRadius: 10,\n    height: cardHeight\n  },\n  container: {\n    flex: 1\n  },\n  content: {\n    height: height * 2\n  },\n  root: {\n    flex: 1,\n    margin: 16\n  }\n});\n","import * as React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\n\ntype Props = RouteComponentProps;\n\nexport class Fonts extends React.PureComponent<Props> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <ScrollView>\n          <Text h1 title=\"H1: The quick brown fox jumps over the lazy dog.\" />\n          <Text h2 title=\"H2: The quick brown fox jumps over the lazy dog.\" />\n          <Text h3 title=\"H3: The quick brown fox jumps over the lazy dog.\" />\n          <Text h4 title=\"H4: The quick brown fox jumps over the lazy dog.\" />\n          <Text h5 title=\"H5: The quick brown fox jumps over the lazy dog.\" />\n          <Text h6 title=\"H6: The quick brown fox jumps over the lazy dog.\" />\n          <Text\n            subtitle1\n            title=\"SUBTITLE1: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            subtitle2\n            title=\"SUBTITLE2: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            body1\n            title=\"BODY1: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            body2\n            title=\"BODY2: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            overline\n            title=\"OVERLINE: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            caption\n            title=\"CAPTION: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            button\n            title=\"BUTTON: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text title=\"NOTHING: The quick brown fox jumps over the lazy dog.\" />\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  Animated,\n  PanResponder,\n  PanResponderInstance,\n  StyleSheet\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\nimport { selectHeight, selectWidth } from \"../../../../models\";\nimport { RootState } from \"../../../../models\";\n\nconst styles = StyleSheet.create({\n  ball: {\n    borderColor: \"black\",\n    borderRadius: 30,\n    borderWidth: 30,\n    height: 60,\n    marginLeft: -30,\n    marginTop: -30,\n    width: 60\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  private ballPosition: Animated.ValueXY;\n  private panGesture: PanResponderInstance;\n\n  constructor(props: Props) {\n    super(props);\n    const { width, height } = this.props;\n    this.ballPosition = new Animated.ValueXY({ x: width / 2, y: height / 2 });\n    this.panGesture = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: (_, gestureState) => {\n        Animated.spring(this.ballPosition, {\n          toValue: { x: gestureState.moveX, y: gestureState.moveY }\n        }).start();\n      }\n    });\n  }\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <Text center title=\"drag the circle\" />\n        <Animated.View\n          style={[this.ballPosition.getLayout(), styles.ball]}\n          {...this.panGesture.panHandlers}\n        />\n      </Screen>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  height: selectHeight(state),\n  width: selectWidth(state)\n});\n\nexport const Drag = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen } from \"../../../../components\";\n\ntype Props = RouteComponentProps;\n\nexport class Buttons extends React.PureComponent<Props> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <ScrollView>\n          <Button title=\"nothing\" onPress={() => undefined} />\n          <Button neutral title=\"neutral\" onPress={() => undefined} />\n          <Button text title=\"text\" onPress={() => undefined} />\n          <Button outlined title=\"outlined\" onPress={() => undefined} />\n          <Button contained title=\"contained\" onPress={() => undefined} />\n\n          <Button wrap title=\"nothing\" onPress={() => undefined} />\n          <Button wrap neutral title=\"neutral\" onPress={() => undefined} />\n          <Button wrap text title=\"text\" onPress={() => undefined} />\n          <Button wrap outlined title=\"outlined\" onPress={() => undefined} />\n          <Button wrap contained title=\"contained\" onPress={() => undefined} />\n\n          <Button half title=\"nothing\" onPress={() => undefined} />\n          <Button half neutral title=\"neutral\" onPress={() => undefined} />\n          <Button half text title=\"text\" onPress={() => undefined} />\n          <Button half outlined title=\"outlined\" onPress={() => undefined} />\n          <Button half contained title=\"contained\" onPress={() => undefined} />\n\n          <Button half center title=\"nothing\" onPress={() => undefined} />\n          <Button\n            half\n            center\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button half center text title=\"text\" onPress={() => undefined} />\n          <Button\n            half\n            center\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            center\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button right title=\"nothing\" onPress={() => undefined} />\n          <Button right neutral title=\"neutral\" onPress={() => undefined} />\n          <Button right text title=\"text\" onPress={() => undefined} />\n          <Button right outlined title=\"outlined\" onPress={() => undefined} />\n          <Button right contained title=\"contained\" onPress={() => undefined} />\n\n          <Button disable wrap title=\"nothing\" onPress={() => undefined} />\n          <Button\n            disable\n            wrap\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button disable wrap text title=\"text\" onPress={() => undefined} />\n          <Button\n            disable\n            wrap\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            disable\n            wrap\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button half icon=\"check\" title=\"nothing\" onPress={() => undefined} />\n          <Button\n            half\n            icon=\"check\"\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            text\n            title=\"text\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button wrap icon=\"check\" onPress={() => undefined} />\n          <Button wrap icon=\"check\" neutral onPress={() => undefined} />\n          <Button wrap icon=\"check\" text onPress={() => undefined} />\n          <Button wrap icon=\"check\" outlined onPress={() => undefined} />\n          <Button wrap icon=\"check\" contained onPress={() => undefined} />\n\n          <Button fab icon=\"check\" onPress={() => undefined} />\n          <Button fab icon=\"check\" iconColor=\"red\" onPress={() => undefined} />\n          <Button fab icon=\"check\" neutral onPress={() => undefined} />\n          <Button fab icon=\"check\" text onPress={() => undefined} />\n          <Button fab icon=\"check\" outlined onPress={() => undefined} />\n          <Button fab icon=\"check\" contained onPress={() => undefined} />\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import { NativeTouchEvent, PointPropType } from \"react-native\";\n\ninterface Touches {\n  [key: string]: PointPropType;\n}\n\ninterface Outcome {\n  spread: boolean;\n  pinch: boolean;\n}\n\nexport class GestureHandler {\n  private minTouches: number;\n  private finish: Touches = {};\n  private start: Touches = {};\n\n  constructor({ minTouches = 4 } = {}) {\n    this.minTouches = minTouches;\n  }\n\n  public onPanResponderMove(event: any) {\n    const touches: NativeTouchEvent[] = event.nativeEvent.touches;\n    touches.map((touch: NativeTouchEvent) => {\n      this.recordFinish(touch);\n      this.recordStart(touch);\n    });\n  }\n\n  public onPanResponderRelease(): Outcome {\n    const outcome = this.determineOutcome();\n    this.start = {};\n    this.finish = {};\n    return outcome;\n  }\n\n  private recordStart(touch: NativeTouchEvent) {\n    if (this.isStartAlreadyRecorded(touch)) {\n      return;\n    }\n    this.start[String(touch.identifier)] = {\n      x: touch.locationX,\n      y: touch.locationY\n    };\n  }\n\n  private isStartAlreadyRecorded(touch: NativeTouchEvent) {\n    return this.start[String(touch.identifier)];\n  }\n\n  private recordFinish(touch: NativeTouchEvent) {\n    this.finish[String(touch.identifier)] = {\n      x: touch.locationX,\n      y: touch.locationY\n    };\n  }\n\n  private isSpread(\n    start: PointPropType,\n    finish: PointPropType,\n    center: PointPropType\n  ) {\n    const startXDistance = Math.abs(start.x - center.x);\n    const startYDistance = Math.abs(start.y - center.y);\n    const finishXDistance = Math.abs(finish.x - center.x);\n    const finishYDistance = Math.abs(finish.y - center.y);\n    return (\n      startXDistance <= finishXDistance && startYDistance <= finishYDistance\n    );\n  }\n\n  private determineCenter(points: Touches) {\n    const numRecordedTouched = Object.keys(points).length;\n    let x = 0;\n    let y = 0;\n    for (let i = 1; i <= numRecordedTouched; i++) {\n      const point = points[i];\n      x += point.x;\n      y += point.x;\n    }\n    return { x: x / numRecordedTouched, y: y / numRecordedTouched };\n  }\n\n  private determineOutcome(): Outcome {\n    const numRecordedTouched = Object.keys(this.start).length;\n    const outcome = {\n      pinch: false,\n      spread: false\n    };\n    if (numRecordedTouched < this.minTouches) {\n      return outcome;\n    }\n    let spread = false;\n    let pinch = false;\n    const center = this.determineCenter(this.start);\n    for (let i = 1; i <= numRecordedTouched; i++) {\n      const start = this.start[i];\n      const finish = this.finish[i];\n      const isPinch = !this.isSpread(start, finish, center);\n      const isSpread = this.isSpread(start, finish, center);\n      if (isPinch && isSpread) {\n        return outcome;\n      }\n      if (!isPinch && !isSpread) {\n        return outcome;\n      }\n      if (isPinch && spread) {\n        return outcome;\n      }\n      if (isSpread && pinch) {\n        return outcome;\n      }\n      pinch = isPinch;\n      spread = isSpread;\n    }\n    return { spread, pinch };\n  }\n}\n","import * as React from \"react\";\nimport {\n  Animated,\n  PanResponder,\n  PanResponderInstance,\n  StyleSheet\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\nimport { selectHeight, selectWidth } from \"../../../../models\";\nimport { RootState } from \"../../../../models\";\nimport { GestureHandler } from \"./logic\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  public state = {\n    pinchCount: 0,\n    spreadCount: 0\n  };\n  private panGesture: PanResponderInstance;\n  private gestureHandler: GestureHandler;\n  private minTouches = 3;\n  private title = `pinch or spread the screen with ${\n    this.minTouches\n  } fingers minimum`;\n\n  constructor(props: Props) {\n    super(props);\n    this.gestureHandler = new GestureHandler({ minTouches: this.minTouches });\n    this.panGesture = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: event => {\n        this.gestureHandler.onPanResponderMove(event);\n      },\n      onPanResponderRelease: () => {\n        const { spreadCount, pinchCount } = this.state;\n        const outcome = this.gestureHandler.onPanResponderRelease();\n        if (outcome.spread) {\n          this.setState({ spreadCount: spreadCount + 1 });\n        }\n        if (outcome.pinch) {\n          this.setState({ pinchCount: pinchCount + 1 });\n        }\n      }\n    });\n  }\n\n  public render() {\n    const { history } = this.props;\n    const { spreadCount, pinchCount } = this.state;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <Text center title={this.title} />\n        <Text center title={`spread: ${spreadCount}`} />\n        <Text center title={`pinch: ${pinchCount}`} />\n        <Animated.View\n          style={styles.container}\n          {...this.panGesture.panHandlers}\n        />\n      </Screen>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  height: selectHeight(state),\n  width: selectWidth(state)\n});\n\nexport const PinchSpread = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport {\n  Animated,\n  EmitterSubscription,\n  FlatList,\n  Keyboard,\n  Platform,\n  StyleSheet,\n  View\n} from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Icon, Screen, Text, TextInput } from \"../../../../components\";\nimport { colorWithOpacity, Config, Theme } from \"../../../../utils\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    backgroundColor: Theme.color.light,\n    height: Theme.padding.p20,\n    justifyContent: \"center\",\n    padding: Theme.padding.p02\n  },\n  item: {\n    borderBottomColor: Theme.color.light,\n    borderWidth: 0.2,\n    padding: Theme.padding.p06\n  },\n  text: {\n    fontSize: Theme.padding.p06\n  },\n  textContainer: {\n    alignItems: \"center\",\n    backgroundColor: Theme.color.background,\n    flexDirection: \"row\",\n    height: \"100%\",\n    padding: Theme.padding.p02\n  },\n  textInput: {\n    flex: 1,\n    marginLeft: Theme.padding.p02\n  }\n});\n\nconst DATA = [\n  { id: 1, name: \"1\" },\n  { id: 2, name: \"2\" },\n  { id: 3, name: \"3\" },\n  { id: 4, name: \"4\" },\n  { id: 5, name: \"5\" },\n  { id: 6, name: \"6\" },\n  { id: 7, name: \"7\" },\n  { id: 8, name: \"8\" },\n  { id: 9, name: \"9\" },\n  { id: 10, name: \"10\" },\n  { id: 11, name: \"11\" },\n  { id: 12, name: \"12\" },\n  { id: 13, name: \"13\" },\n  { id: 14, name: \"14\" },\n  { id: 15, name: \"15\" },\n  { id: 16, name: \"16\" },\n  { id: 17, name: \"17\" },\n  { id: 18, name: \"18\" },\n  { id: 19, name: \"19\" }\n];\n\ninterface State {\n  input: string;\n  iconName: string;\n  animation: Animated.Value;\n}\n\ntype Props = RouteComponentProps;\n\nexport class SearchBar extends React.PureComponent<Props, State> {\n  public iconSearch = \"magnify\";\n  public state: State = {\n    animation: new Animated.Value(0),\n    iconName: this.iconSearch,\n    input: \"\"\n  };\n  private iconBack = \"arrow-left\";\n  private textInputPlaceHolder = \"Search\";\n  private animationDuration = 400;\n  private translateIcon = this.state.animation.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [1, -60, 1]\n  });\n  private fadeContainer = this.state.animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\n      Theme.color.background,\n      colorWithOpacity(Theme.color.secondary)\n    ]\n  });\n  private iconChangeTimeout?: number;\n  private keyboardDidShowListener: EmitterSubscription;\n  private keyboardDidHideListener: EmitterSubscription;\n  private keyboardWillShowListener: EmitterSubscription;\n  private keyboardWillHideListener: EmitterSubscription;\n\n  constructor(props: Props) {\n    super(props);\n    this.keyboardDidShowListener = Keyboard.addListener(\n      \"keyboardDidShow\",\n      this.keyboardDidShow\n    );\n    this.keyboardDidHideListener = Keyboard.addListener(\n      \"keyboardDidHide\",\n      this.keyboardDidHide\n    );\n    this.keyboardWillShowListener = Keyboard.addListener(\n      \"keyboardWillShow\",\n      this.keyboardWillShow\n    );\n    this.keyboardWillHideListener = Keyboard.addListener(\n      \"keyboardWillHide\",\n      this.keyboardWillHide\n    );\n  }\n\n  public componentWillUnmount() {\n    this.keyboardDidShowListener.remove();\n    this.keyboardDidHideListener.remove();\n    this.keyboardWillShowListener.remove();\n    this.keyboardWillHideListener.remove();\n    clearTimeout(this.iconChangeTimeout);\n  }\n\n  public render() {\n    const { history } = this.props;\n    const { iconName, input } = this.state;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <View style={styles.header}>\n          <View style={styles.textContainer}>\n            <Animated.View\n              style={{\n                transform: [{ translateX: this.translateIcon }]\n              }}\n            >\n              <Icon name={iconName} style={styles.text} />\n            </Animated.View>\n            <TextInput\n              value={input}\n              onChangeText={(value: string) => this.setState({ input: value })}\n              placeholder={this.textInputPlaceHolder}\n              style={[styles.textInput, styles.text]}\n            />\n          </View>\n        </View>\n        <Animated.View style={{ flex: 1, backgroundColor: this.fadeContainer }}>\n          <FlatList\n            keyExtractor={item => item.id.toString()}\n            data={DATA}\n            renderItem={({ item }) => (\n              <Text subtitle2 style={styles.item} title={item.name} />\n            )}\n          />\n        </Animated.View>\n      </Screen>\n    );\n  }\n\n  private onSearchBarFocus() {\n    this.animate(1);\n    this.changeIcon(this.iconBack);\n  }\n\n  private animate(value: number) {\n    Animated.timing(this.state.animation, {\n      duration: this.animationDuration,\n      toValue: value\n    }).start();\n  }\n\n  private changeIcon(iconName: string) {\n    this.iconChangeTimeout = setTimeout(() => {\n      clearTimeout(this.iconChangeTimeout);\n      this.setState({ iconName });\n    }, this.animationDuration / 2);\n  }\n\n  private onSearchBarUnFocus() {\n    this.animate(0);\n    this.changeIcon(this.iconSearch);\n  }\n\n  private keyboardWillShow = () => {\n    if (Platform.OS !== Config.os.ios) {\n      return;\n    }\n    this.onSearchBarFocus();\n  };\n\n  private keyboardWillHide = () => {\n    if (Platform.OS !== Config.os.ios) {\n      return;\n    }\n    this.onSearchBarUnFocus();\n  };\n\n  private keyboardDidShow = () => {\n    if (Platform.OS !== Config.os.android) {\n      return;\n    }\n    this.onSearchBarFocus();\n  };\n\n  private keyboardDidHide = () => {\n    if (Platform.OS !== Config.os.android) {\n      return;\n    }\n    this.onSearchBarUnFocus();\n  };\n}\n","import * as React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Card, Screen, Text } from \"../../../../components\";\nimport { Theme } from \"../../../../utils\";\n\ntype Props = RouteComponentProps;\n\n// TODO: why need scrollview for screen?\nexport class OKRs extends React.PureComponent<Props> {\n  public state = {\n    value: 0\n  };\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <ScrollView\n          contentContainerStyle={{ paddingHorizontal: Theme.padding.p05 }}\n        >\n          <Card>\n            <Text h6 title=\"Company\" />\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Mission\" />\n              <Text\n                title=\"We strive to offer our customers the lowest possible prices\n        the best available selection and the utmost convenience.\"\n              />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Vision\" />\n              <Text title=\"To be Earth’s most customer-centric company where customers can find and discover anything they might want to buy online.\" />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Values\" />\n              <Text title=\"Customer Obsession\" />\n              <Text title=\"Ownership\" />\n              <Text title=\"Invent and Simplify\" />\n              <Text title=\"Are Right a Lot\" />\n              <Text title=\"Learn and Be Curious\" />\n              <Text title=\"Hire and Develop the Best\" />\n              <Text title=\"Insist on the Highest Standards\" />\n              <Text title=\"Think Big\" />\n              <Text title=\"Bias for Action\" />\n              <Text title=\"Frugality\" />\n              <Text title=\"Earn Trust\" />\n              <Text title=\"Dive Deep\" />\n              <Text title=\"Have Backbone; Disagree and Commit\" />\n              <Text title=\"Deliver Results\" />\n            </Card>\n          </Card>\n          <Card>\n            <Text h6 title=\"Product\" />\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Vision\" />\n              <Text title=\"Jim, owner\" />\n            </Card>\n\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"KPIs\" />\n              <Text title=\"Customer Lifetime Value\" />\n              <Text title=\"Average Revenue Per user\" />\n              <Text title=\"Customer Aquisition Cost\" />\n              <Text title=\"Monthly Recurring Revenue\" />\n              <Text title=\"Churn\" />\n              <Text title=\"Cost of Sales\" />\n              <Text title=\"Contributing Margins\" />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Team\" />\n              <Text title=\"Jim, owner\" />\n              <Text title=\"Bob, designer\" />\n              <Text title=\"Steve, engineer\" />\n              <Text title=\"Greg, engineer\" />\n            </Card>\n\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Objective\" />\n              <Text title=\"Jim, owner\" />\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Objective\" />\n              <Text title=\"Jim, owner\" />\n            </Card>\n          </Card>\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport {\n  Button,\n  KeyboardType,\n  Screen,\n  TextInput\n} from \"../../../../components\";\nimport { Theme } from \"../../../../utils\";\n\ntype Props = RouteComponentProps;\n\nexport class Input extends React.PureComponent<Props> {\n  public state = {\n    email: \"\",\n    error: \"\",\n    name: \"\",\n    password: \"\"\n  };\n  public render() {\n    const { email, password, name, error } = this.state;\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <View\n          style={{ flex: 1, backgroundColor: Theme.color.light, padding: 20 }}\n        >\n          <TextInput\n            title=\"Name\"\n            placeholder=\"jane doe\"\n            optional\n            value={name}\n            onChangeText={val => this.setState({ name: val })}\n            error={error}\n          />\n          <TextInput\n            title=\"EMAIL\"\n            value={email}\n            onChangeText={val => this.setState({ email: val })}\n            keyboardType={KeyboardType.Email}\n            placeholder=\"example@gmail.com\"\n            error={error}\n          />\n          <TextInput\n            value={password}\n            onChangeText={val => this.setState({ password: val })}\n            title=\"Password\"\n            placeholder=\"•••••••\"\n            secureTextEntry\n          />\n          <Button\n            contained\n            title=\"complete form\"\n            onPress={() => this.setState({ error: \"Invalid Email\" })}\n          />\n        </View>\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Dimensions, FlatList, View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text } from \"../../../../components\";\n\ninterface OwnProps {\n  title: string;\n}\n\ntype Props = OwnProps & RouteComponentProps;\n\nexport class Questionnaire extends React.PureComponent<Props> {\n  public data = [\n    {\n      choices: [\n        {\n          key: \"1\",\n          selected: false,\n          title: \"individual\"\n        },\n        {\n          key: \"2\",\n          selected: false,\n          title: \"couple\"\n        },\n        {\n          key: \"3\",\n          selected: false,\n          title: \"teen\"\n        }\n      ],\n      key: \"1\",\n      next: \"2\",\n      title: \"What type of counseling are you looking for\",\n      type: \"radio\"\n    },\n    { key: \"2\", title: \"2\" },\n    { key: \"3\", title: \"3\" },\n    { key: \"4\", title: \"4\" },\n    { key: \"5\", title: \"5\" }\n  ];\n  public output: any = {};\n  public width = Dimensions.get(\"window\").width;\n  public tableView: any;\n  public currentIndex = 0;\n\n  public onViewableItemsChanged = ({ viewableItems }: any) => {\n    this.currentIndex = viewableItems[0].index || 0;\n  };\n\n  public onProgress = (direction = 1) => {\n    const index = this.currentIndex + direction;\n    if (index < 0) {\n      return;\n    }\n    if (index >= this.data.length) {\n      this.onFinish();\n      return;\n    }\n    this.tableView.scrollToIndex({\n      animated: true,\n      index\n    });\n  };\n\n  public onSelection = (item: any, choice: any) => {\n    this.output = {\n      ...this.output,\n      [item.key]: {\n        ...this.output[item.key],\n        [choice.key]: true\n      }\n    };\n\n    // this.onProgress();\n  };\n\n  public onFinish = () => undefined;\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <FlatList\n          scrollEnabled={false}\n          ref={(ref: any) => (this.tableView = ref)}\n          removeClippedSubviews\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          onViewableItemsChanged={this.onViewableItemsChanged}\n          viewabilityConfig={{\n            itemVisiblePercentThreshold: 50\n          }}\n          horizontal\n          pagingEnabled\n          data={this.data}\n          renderItem={({ item }) => {\n            let items: any = <View style={{ flex: 1 }} />;\n\n            if (item.choices) {\n              items = (\n                <View style={{ flex: 1 }}>\n                  {item.choices.map(choice => {\n                    return (\n                      <Button\n                        key={choice.title}\n                        title={choice.title}\n                        onPress={() => {\n                          this.onSelection(item, choice);\n                        }}\n                      />\n                    );\n                  })}\n                </View>\n              );\n            }\n\n            return (\n              <View style={{ width: this.width }}>\n                <Text title={item.title} />\n                {items}\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-around\"\n                  }}\n                >\n                  <Button title=\"prev\" onPress={() => this.onProgress(-1)} />\n                  <Button title=\"next\" onPress={() => this.onProgress(1)} />\n                  <Button title=\"next2\" onPress={() => this.onProgress(2)} />\n                </View>\n              </View>\n            );\n          }}\n        />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, TextInput } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\nimport { createItem } from \"../../models/Item\";\n\ninterface DispatchProps {\n  createItem: typeof createItem;\n}\ntype Props = RouteComponentProps & DispatchProps;\ninterface State {\n  name: string;\n  description: string;\n}\n\nclass Component extends React.PureComponent<Props, State> {\n  public state = {\n    description: \"\",\n    name: \"\"\n  };\n  public render() {\n    const { name, description } = this.state;\n    const { history } = this.props;\n\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <TextInput title=\"name\" value={name} onChangeText={this.setName} />\n        <TextInput\n          title=\"description\"\n          value={description}\n          onChangeText={this.setDescription}\n        />\n        <Button title=\"create\" onPress={this.createItem} />\n      </Screen>\n    );\n  }\n\n  private setName = (name: string) => {\n    this.setState({ name });\n  };\n  private setDescription = (description: string) => {\n    this.setState({ description });\n  };\n  private createItem = () => {\n    const { createItem: create, history } = this.props;\n    const { name, description } = this.state;\n    create({ name, description });\n    history.goBack();\n  };\n}\n\nexport const ItemCreate = connect(\n  (state: RootState) => ({\n    state\n  }),\n  { createItem }\n)(Component);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, TextInput } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\nimport { createItem } from \"../../models/Item\";\n\ninterface DispatchProps {\n  createItem: typeof createItem;\n}\ntype Props = RouteComponentProps & DispatchProps;\ninterface State {\n  name: string;\n  description: string;\n}\n\nclass Component extends React.PureComponent<Props, State> {\n  public state = {\n    description: \"\",\n    name: \"\"\n  };\n  public render() {\n    const { name, description } = this.state;\n    const { history } = this.props;\n\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <TextInput title=\"name\" value={name} onChangeText={this.setName} />\n        <TextInput\n          title=\"description\"\n          value={description}\n          onChangeText={this.setDescription}\n        />\n        <Button title=\"create\" onPress={this.createItem} />\n      </Screen>\n    );\n  }\n\n  private setName = (name: string) => {\n    this.setState({ name });\n  };\n  private setDescription = (description: string) => {\n    this.setState({ description });\n  };\n  private createItem = () => {\n    const { createItem: create, history } = this.props;\n    const { name, description } = this.state;\n    create({ name, description });\n    history.goBack();\n  };\n}\n\nexport const ItemUpdate = connect(\n  (state: RootState) => ({\n    state\n  }),\n  { createItem }\n)(Component);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, TextInput } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\nimport { createItem } from \"../../models/Item\";\n\ninterface DispatchProps {\n  createItem: typeof createItem;\n}\ntype Props = RouteComponentProps & DispatchProps;\ninterface State {\n  name: string;\n  description: string;\n}\n\nclass Component extends React.PureComponent<Props, State> {\n  public state = {\n    description: \"\",\n    name: \"\"\n  };\n  public render() {\n    const { name, description } = this.state;\n    const { history } = this.props;\n\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <TextInput title=\"name\" value={name} onChangeText={this.setName} />\n        <TextInput\n          title=\"description\"\n          value={description}\n          onChangeText={this.setDescription}\n        />\n        <Button title=\"create\" onPress={this.createItem} />\n      </Screen>\n    );\n  }\n\n  private setName = (name: string) => {\n    this.setState({ name });\n  };\n  private setDescription = (description: string) => {\n    this.setState({ description });\n  };\n  private createItem = () => {\n    const { createItem: create, history } = this.props;\n    const { name, description } = this.state;\n    create({ name, description });\n    history.goBack();\n  };\n}\n\nexport const ListUpdate = connect(\n  (state: RootState) => ({\n    state\n  }),\n  { createItem }\n)(Component);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, TextInput } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\nimport { createItem } from \"../../models/Item\";\n\ninterface DispatchProps {\n  createItem: typeof createItem;\n}\ntype Props = RouteComponentProps & DispatchProps;\ninterface State {\n  name: string;\n  description: string;\n}\n\nclass Component extends React.PureComponent<Props, State> {\n  public state = {\n    description: \"\",\n    name: \"\"\n  };\n  public render() {\n    const { name, description } = this.state;\n    const { history } = this.props;\n\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <TextInput title=\"name\" value={name} onChangeText={this.setName} />\n        <TextInput\n          title=\"description\"\n          value={description}\n          onChangeText={this.setDescription}\n        />\n        <Button title=\"create\" onPress={this.createList} />\n      </Screen>\n    );\n  }\n\n  private setName = (name: string) => {\n    this.setState({ name });\n  };\n  private setDescription = (description: string) => {\n    this.setState({ description });\n  };\n  private createList = () => {\n    const { createItem: create, history } = this.props;\n    const { name, description } = this.state;\n    create({ name, description });\n    history.goBack();\n  };\n}\n\nexport const ListCreate = connect(\n  (state: RootState) => ({\n    state\n  }),\n  { createItem }\n)(Component);\n","import * as React from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\n\ntype Props = RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  private items = [\n    {\n      id: \"1\",\n      title: \"bob\"\n    },\n    {\n      id: \"2\",\n      title: \"steve\"\n    },\n    {\n      id: \"3\",\n      title: \"jill\"\n    }\n  ];\n  public render() {\n    const { history, match } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <Text title=\"checklists\" />\n        <FlatList\n          keyExtractor={item => item.id}\n          data={this.items}\n          renderItem={({ item }) => (\n            <View style={{ flexDirection: \"row\" }}>\n              <Button\n                contained\n                title={item.id}\n                onPress={() => history.push(`${match.path}/${item.id}`)}\n              />\n            </View>\n          )}\n        />\n        <Button\n          right\n          contained\n          fab\n          icon=\"plus\"\n          onPress={() => history.push(`${match.path}/create`)}\n        />\n      </Screen>\n    );\n  }\n}\n\nexport const Lists = connect(\n  (state: RootState) => ({\n    state\n  }),\n  {}\n)(Component);\n","import * as React from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\nimport { Theme } from \"../../../../../../utils\";\nimport {\n  ItemsArray,\n  removeItem,\n  selectItemsByCreatedAt,\n  toggleActiveItem,\n  updateItem\n} from \"../../models/Item\";\n\ninterface StateProps {\n  items: ItemsArray;\n}\n\ninterface DispatchProps {\n  updateItem: typeof updateItem;\n  removeItem: typeof removeItem;\n  toggleActiveItem: typeof toggleActiveItem;\n}\n\ntype Props = RouteComponentProps & StateProps & DispatchProps;\n\nclass Component extends React.PureComponent<Props> {\n  public render() {\n    const {\n      history,\n      items,\n      removeItem: remove,\n      toggleActiveItem: toggle\n    } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <FlatList\n          keyExtractor={item => item.id}\n          data={items}\n          renderItem={({ item }) => (\n            <View style={{ flexDirection: \"row\" }}>\n              <Button\n                label\n                icon=\"checkbox-marked-circle\"\n                iconColor={Theme.color.success}\n                onPress={() => undefined}\n              />\n              <Button\n                label\n                icon=\"close-circle\"\n                iconColor={Theme.color.danger}\n                onPress={() => remove(item.id)}\n              />\n              <Button\n                label\n                iconColor={Theme.color.warning}\n                icon=\"clock\"\n                onPress={() => toggle(item.id)}\n              />\n              <Button\n                label\n                neutral={item.active}\n                lowercase\n                title={item.name}\n                onPress={() => undefined}\n              />\n            </View>\n          )}\n        />\n        <Button\n          fab\n          contained\n          icon=\"plus\"\n          onPress={() => history.push(\"create\")}\n        />\n      </Screen>\n    );\n  }\n}\n\nexport const List = connect(\n  (state: RootState) => ({\n    items: selectItemsByCreatedAt(state)\n  }),\n  {\n    removeItem,\n    toggleActiveItem,\n    updateItem\n  }\n)(Component);\n","// @ts-ignore-file\n/* tslint:disable */\n\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Route, Switch } from \"../../../../components\";\nimport { List, ListCreate, Lists } from \"./screens\";\n\ntype Props = RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  public render() {\n    const { match } = this.props;\n    return (\n      <Switch>\n        <Route exact path={`${match.path}`} component={Lists} />\n        <Route path={`${match.path}/create`} component={ListCreate} />\n        <Route path={`${match.path}/:id`} component={List} />\n      </Switch>\n    );\n  }\n}\n\nexport const Checklists = connect(\n  null,\n  null\n)(Component);\n","import * as React from \"react\";\nimport { ActivityIndicator, Animated, StyleSheet, View } from \"react-native\";\n\ninterface Props {\n  uri: string;\n  height: number;\n  width: number;\n  color?: string;\n  size?: number | \"small\" | \"large\";\n}\n\nexport class AsyncImage extends React.PureComponent<Props> {\n  private styles = StyleSheet.create({\n    indicatorOverlay: {\n      justifyContent: \"center\",\n      position: \"absolute\"\n    }\n  });\n  private imageAnimated = new Animated.Value(0);\n  private indicatorAnimated = new Animated.Value(1);\n\n  public render() {\n    const { uri, height, width, color = \"black\", size = \"small\" } = this.props;\n    const containerStyle = { width, height };\n    const imageStyle = [containerStyle, { opacity: this.imageAnimated }];\n    const indicatorStyle = [\n      containerStyle,\n      { opacity: this.indicatorAnimated },\n      this.styles.indicatorOverlay\n    ];\n    return (\n      <View style={containerStyle}>\n        <Animated.Image\n          source={{ uri }}\n          style={imageStyle}\n          onLoad={this.onImageLoad}\n        />\n        <Animated.View style={indicatorStyle}>\n          <ActivityIndicator size={size} color={color} />\n        </Animated.View>\n      </View>\n    );\n  }\n\n  private onImageLoad = () => {\n    Animated.parallel([\n      Animated.timing(this.indicatorAnimated, {\n        toValue: 0,\n        useNativeDriver: true\n      }),\n      Animated.timing(this.imageAnimated, {\n        toValue: 1,\n        useNativeDriver: true\n      })\n    ]).start();\n  };\n}\n","import * as React from \"react\";\nimport { Dimensions, FlatList } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen } from \"../../../../components\";\nimport { AsyncImage } from \"./AsyncImage\";\n\ntype Props = RouteComponentProps;\n\nexport class ImageCollection extends React.PureComponent<Props> {\n  private data: number[] = [\n    Math.random(),\n    Math.random(),\n    Math.random(),\n    Math.random(),\n    Math.random(),\n    Math.random(),\n    Math.random(),\n    Math.random()\n  ];\n  private numColumns = 3;\n  private infiniteScrollThreshold = 0.3;\n  private columnWidth = Dimensions.get(\"window\").width / this.numColumns;\n  private imageUrl = `http://lorempixel.com/${this.columnWidth}/${\n    this.columnWidth\n  }`;\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <FlatList\n          keyExtractor={data => data.toString()}\n          data={this.data}\n          onEndReached={this.fetchMore}\n          onEndReachedThreshold={this.infiniteScrollThreshold}\n          numColumns={this.numColumns}\n          renderItem={this.renderImage}\n        />\n      </Screen>\n    );\n  }\n\n  private fetchMore = () => {\n    this.data.push(Math.random());\n    this.data.push(Math.random());\n    this.data.push(Math.random());\n    this.data.push(Math.random());\n    this.data.push(Math.random());\n  };\n\n  private renderImage = () => (\n    <AsyncImage\n      uri={this.imageUrl}\n      width={this.columnWidth}\n      height={this.columnWidth}\n    />\n  );\n}\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Link, Route, Screen, Switch } from \"../../components\";\nimport {\n  Ball,\n  Buttons,\n  Cards,\n  Checklists,\n  Drag,\n  Fonts,\n  ImageCollection,\n  Input,\n  OKRs,\n  PinchSpread,\n  Questionnaire,\n  SearchBar\n} from \"./screens\";\n\ntype Props = RouteComponentProps;\n\nexport class Debug extends React.PureComponent<Props> {\n  private screens: any = {\n    Ball,\n    Buttons,\n    Cards,\n    Checklists,\n    Drag,\n    Fonts,\n    ImageCollection,\n    Input,\n    OKRs,\n    PinchSpread,\n    Questionnaire,\n    SearchBar\n  };\n\n  public render() {\n    return (\n      <Switch>\n        {this.generateRoutes()}\n        <Route component={this.showHomeScreen} />\n      </Switch>\n    );\n  }\n\n  private generateRoutes = () =>\n    Object.keys(this.screens).map((screen: string) => (\n      <Route\n        key={screen}\n        path={`${this.props.match.path}/${screen.toLowerCase()}`}\n        component={this.screens[screen]}\n      />\n    ));\n\n  private navBack = () => this.props.history.goBack();\n\n  private showHomeScreen = () => (\n    <Screen onLeftPress={this.navBack}>\n      {Object.keys(this.screens).map((screen: string) => (\n        <Link\n          key={screen}\n          to={`${this.props.match.path}/${screen}`}\n          title={screen}\n        />\n      ))}\n    </Screen>\n  );\n}\n","/* tslint:disable */\n// @ts-ignore\n\n// TODO: https://telegram.com, https://anydo.com, https://lyft.com, http://www.shegy.nazwa.pl/materialupmarket/mdlp/index_light.html\n\nimport * as React from \"react\";\nimport { Dimensions, StyleSheet, View } from \"react-native\";\nimport { Text, Button } from \"../../components\";\nimport { RouteComponentProps } from \"react-router\";\n\nconst window = Dimensions.get(\"window\");\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: window.height,\n    alignItems: \"center\"\n  },\n  footer: {\n    alignItems: \"flex-end\",\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  }\n});\n\ninterface Props {\n  history: any;\n}\n\nclass Footer extends React.PureComponent<Props> {\n  render() {\n    const { history } = this.props;\n    return (\n      <View style={styles.footer}>\n        <Button title=\"Sign up\" onPress={() => history.push(\"/login\")} />\n        <Button title=\"Log in\" onPress={() => history.push(\"/login\")} />\n        <Button title=\"Debug\" onPress={() => history.push(\"/debug\")} />\n      </View>\n    );\n  }\n}\n\nclass Header extends React.PureComponent {\n  render() {\n    return <View />;\n  }\n}\n\nexport class Landing extends React.PureComponent<RouteComponentProps> {\n  public componentDidMount() {\n    const { history } = this.props;\n    history.push(\"/debug/checklists\");\n  }\n  public render() {\n    const { history } = this.props;\n    return (\n      <View style={styles.container}>\n        <Header />\n        <Text title={String(window.height)} />\n        <Footer history={history} />\n      </View>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text, TextInput } from \"../../components\";\nimport fakeAuth from \"../../models/User\";\n\ninterface State {\n  email: string;\n  password: string;\n}\n\nexport class Login extends React.PureComponent<RouteComponentProps, State> {\n  public state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  public render() {\n    const { location, history } = this.props;\n    const { from } = location.state || { from: { pathname: \"/app\" } };\n    return (\n      <Screen>\n        <Text title=\"Login\" />\n        <TextInput\n          title=\"email\"\n          placeholder=\"example@gmail.com\"\n          onChangeText={text => this.setState({ email: text })}\n          value={this.state.email}\n        />\n        <TextInput\n          title=\"password\"\n          placeholder=\"•••••••\"\n          onChangeText={text => this.setState({ password: text })}\n          value={this.state.password}\n        />\n        <Button title=\"Continue with Google\" onPress={() => undefined} />\n        <Button title=\"Continue with Facebook\" onPress={() => undefined} />\n        <Button\n          title=\"Signup\"\n          onPress={() => fakeAuth.authenticate(() => history.push(from))}\n        />\n        <Button title=\"Forgot\" onPress={() => history.push(\"/nowhere\")} />\n        <Button title=\"Landing\" onPress={() => history.push(\"/\")} />\n        <Button title=\"App\" onPress={() => history.push(\"/app\")} />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text } from \"../../components\";\nimport fakeAuth from \"../../models/User\";\n\nexport class Main extends React.PureComponent<RouteComponentProps> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen>\n        <Text title=\"Main\" />\n        <Button\n          title=\"logout\"\n          onPress={() => {\n            fakeAuth.signout(() => history.push(\"/\"));\n          }}\n        />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Link, Screen, Text } from \"../../components\";\n\nexport class NotFound extends React.PureComponent {\n  public render() {\n    return (\n      <Screen>\n        <Text title=\"404 :(\" />\n        <Link to=\"/app\" title=\"go to App\" />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { AppRegistry, Platform } from \"react-native\";\nimport { Provider } from \"./models\";\nimport { App } from \"./screens\";\nimport { Config } from \"./utils\";\n\nexport class Launcher extends React.PureComponent {\n  public render() {\n    return (\n      <Provider>\n        <App />\n      </Provider>\n    );\n  }\n}\n\nAppRegistry.registerComponent(Config.app.name, () => Launcher);\nif (Platform.OS === Config.os.web) {\n  AppRegistry.runApplication(Config.app.name, {\n    rootTag: document.getElementById(Config.web.root)\n  });\n}\n"],"sourceRoot":""}