{"version":3,"sources":["apps/Playground/AppleFit/mask.png","apps/Playground/AppleFit/AngularGradient.tsx","apps/Playground/AppleFit/HalfCircle.tsx","apps/Playground/AppleFit/CircularProgress.tsx","apps/Playground/AppleFit/InitialKnob.tsx","apps/Playground/AppleFit/Shadow.tsx","apps/Playground/AppleFit/MovingKnob.tsx","apps/Playground/AppleFit/CircularRing.tsx","apps/Playground/AppleFit/Stickers.tsx","apps/Playground/AppleFit/CenterCircle.tsx","apps/Playground/AppleFit/AppleActivity.tsx","apps/Playground/AppleFit/index.tsx"],"names":["module","exports","AngularGradient","size","colors","start","end","borderRadius","styles","StyleSheet","create","container","backgroundColor","height","width","flex","image","view","Mask","Image","source","require","style","View","maskElement","HalfCircle","memo","type","radius","flip","ring","fg","bg","circle","overflow","transform","rotate","CircularProgress","theta","PI","Math","max","opacity","spin","Animated","Value","interpolate","inputRange","outputRange","extrapolate","bottom","left","absoluteFillObject","Number","translateX","translateY","top","zIndex","InitialKnob","strokeWidth","visible","half","knob","Shadow","center","cx","cy","fx","fy","id","r","offset","stopOpacity","stopColor","fill","MovingKnob","CircularRing","PixelRatio","roundToNearestPixel","Stickers","icon","index","color","canvas","overlay","alignItems","justifyContent","key","name","position","CenterCircle","foreground","AppleActivity","rings","animate","speed","length","useState","progress","setProgress","useEffect","interval","setInterval","clearInterval","p","map","TAU","nav","useNav","useColor","navBack","useCallback","onLeftPress","title","background"],"mappings":"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","file":"static/js/15.629dab4f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mask.77c76133.png\";","import React from 'react';\nimport {Image, StyleSheet, View} from 'react-native';\nimport {MaskedView} from '../../../conversions';\n\ninterface Props {\n  size: number;\n  colors: [string, string];\n}\n\nexport const AngularGradient = ({\n  size,\n  colors: [start, end],\n}: Props): JSX.Element => {\n  const borderRadius = size / 2;\n  const styles = StyleSheet.create({\n    container: {\n      backgroundColor: start,\n      borderRadius,\n      height: size,\n      width: size,\n    },\n    flex: {flex: 1},\n    image: {borderRadius, height: size, width: size},\n    view: {backgroundColor: end, borderRadius, flex: 1},\n  });\n  const Mask = <Image source={require('./mask.png')} style={styles.image} />;\n  return (\n    <View style={styles.container}>\n      <MaskedView maskElement={Mask} style={styles.flex}>\n        <View style={styles.view} />\n      </MaskedView>\n    </View>\n  );\n};\n","import React, {memo} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {AngularGradient} from './AngularGradient';\nimport {Ring} from './AppleActivity';\n\ninterface Props {\n  radius: number;\n  flip?: boolean;\n  ring: Ring;\n  type: 'foreground' | 'background';\n}\n\nexport const HalfCircle = memo(function HalfCircle({\n  type,\n  radius,\n  flip,\n  ring,\n}: Props) {\n  const colors: [string, string] = [ring.start, ring.end];\n  const fg = <AngularGradient colors={colors} size={ring.size} />;\n  const bg = <View style={{backgroundColor: ring.bg, flex: 1}} />;\n  const styles = StyleSheet.create({\n    circle: {\n      borderRadius: radius,\n      height: radius * 2,\n      overflow: 'hidden',\n      transform: [{rotate: flip ? '180deg' : '0deg'}],\n      width: radius * 2,\n    },\n    container: {\n      height: radius,\n      overflow: 'hidden',\n      width: radius * 2,\n    },\n  });\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.circle}>{type === 'foreground' ? fg : bg}</View>\n    </View>\n  );\n});\n","import React from 'react';\nimport {Animated, StyleSheet, View} from 'react-native';\nimport {HalfCircle} from './HalfCircle';\nimport {Ring} from './AppleActivity';\n\ninterface CircularProgressProps {\n  theta: number;\n  ring: Ring;\n  radius: number;\n}\n\nexport const CircularProgress = ({\n  theta,\n  ring,\n  radius,\n}: CircularProgressProps): JSX.Element => {\n  const PI = Math.PI;\n  const rotate = Math.max(0, theta - PI * 2);\n  const progress = new Animated.Value(theta);\n  const opacity = theta < PI;\n  const spin = progress.interpolate({\n    inputRange: [PI, 2 * PI],\n    outputRange: ['0rad', `${PI}rad`],\n    extrapolate: 'clamp',\n  });\n  const styles = StyleSheet.create({\n    bottom: {transform: [{rotate: '180deg'}]},\n    container: {transform: [{rotate: `${rotate}rad`}]},\n    left: {\n      ...StyleSheet.absoluteFillObject,\n      opacity: Number(opacity),\n      transform: [\n        {translateX: 0},\n        {translateY: radius / 2},\n        {rotate: `${theta}rad`},\n        {translateY: (radius / 2) * -1},\n      ],\n    },\n    top: {zIndex: 1},\n  });\n  return (\n    <Animated.View style={styles.container}>\n      <View style={styles.top}>\n        <HalfCircle flip radius={radius} ring={ring} type=\"foreground\" />\n        <Animated.View style={styles.left}>\n          <HalfCircle radius={radius} ring={ring} type=\"background\" />\n        </Animated.View>\n      </View>\n      <View style={styles.bottom}>\n        <HalfCircle radius={radius} ring={ring} type=\"foreground\" />\n        <Animated.View\n          style={{\n            ...StyleSheet.absoluteFillObject,\n            transform: [\n              {translateX: 0},\n              {translateY: radius / 2},\n              {rotate: spin},\n              {translateY: (radius / 2) * -1},\n            ],\n          }}>\n          <HalfCircle radius={radius} ring={ring} type=\"background\" />\n        </Animated.View>\n      </View>\n    </Animated.View>\n  );\n};\n","import React from 'react';\nimport {Animated, StyleSheet} from 'react-native';\n\ntype InitialKnobProps = {\n  theta: number;\n  backgroundColor: string;\n  radius: number;\n  strokeWidth: number;\n};\n\nexport const InitialKnob = ({\n  theta,\n  backgroundColor,\n  radius,\n  strokeWidth,\n}: InitialKnobProps): JSX.Element => {\n  const visible = Number(theta < Math.PI * 2);\n  const half = strokeWidth / 2;\n  const styles = StyleSheet.create({\n    knob: {\n      ...StyleSheet.absoluteFillObject,\n      backgroundColor,\n      borderRadius: half,\n      height: strokeWidth,\n      opacity: visible,\n      top: radius - half,\n      width: strokeWidth,\n    },\n  });\n  return <Animated.View style={styles.knob} />;\n};\n","import React, {memo} from 'react';\nimport Svg, {Circle, Defs, RadialGradient, Stop} from 'react-native-svg';\n\ntype Props = {\n  strokeWidth: number;\n};\n\nexport const Shadow = memo(function Shadow({strokeWidth}: Props) {\n  const center = strokeWidth / 2;\n  return (\n    <Svg height={strokeWidth} width={strokeWidth}>\n      <Defs>\n        <RadialGradient cx=\"50%\" cy=\"50%\" fx=\"50%\" fy=\"50%\" id=\"shadow\" r=\"50%\">\n          <Stop offset=\"0%\" stopOpacity={0} />\n          <Stop offset=\"90%\" stopColor=\"black\" stopOpacity={0.4} />\n          <Stop offset=\"100%\" stopColor=\"black\" stopOpacity={0} />\n        </RadialGradient>\n      </Defs>\n      <Circle cx={center} cy={center} fill=\"url(#shadow)\" r={center} />\n    </Svg>\n  );\n});\n","import React from 'react';\nimport {Animated, StyleSheet} from 'react-native';\nimport {Shadow} from './Shadow';\n\ntype MovingKnobProps = {\n  backgroundColor: string;\n  radius: number;\n  strokeWidth: number;\n  theta: number;\n};\n\nexport const MovingKnob = ({\n  backgroundColor,\n  radius,\n  strokeWidth,\n  theta,\n}: MovingKnobProps): JSX.Element => {\n  const half = strokeWidth / 2;\n  const transform = [\n    {translateX: radius - half},\n    {rotate: `${theta}rad`},\n    {translateX: -(radius - half)},\n  ];\n  const styles = StyleSheet.create({\n    knob: {\n      ...StyleSheet.absoluteFillObject,\n      borderRadius: half,\n      height: strokeWidth,\n      top: radius - half,\n      width: strokeWidth,\n    },\n  });\n\n  return (\n    <>\n      <Animated.View\n        style={[styles.knob, {transform: [...transform, {translateY: -4}]}]}>\n        <Shadow strokeWidth={strokeWidth} />\n      </Animated.View>\n      <Animated.View style={[styles.knob, {backgroundColor, transform}]} />\n    </>\n  );\n};\n","import React from 'react';\nimport {PixelRatio, StyleSheet, View} from 'react-native';\nimport {CircularProgress} from './CircularProgress';\nimport {InitialKnob} from './InitialKnob';\nimport {MovingKnob} from './MovingKnob';\nimport {Ring} from './AppleActivity';\n\ninterface RingProps {\n  ring: Ring;\n  strokeWidth: number;\n  theta: number;\n}\n\nexport const CircularRing = ({\n  ring,\n  theta,\n  strokeWidth,\n}: RingProps): JSX.Element => {\n  const radius = PixelRatio.roundToNearestPixel(ring.size / 2);\n  const styles = StyleSheet.create({\n    container: {transform: [{rotate: '-270deg'}]},\n  });\n\n  // interpolateColor(theta, {\n  //   inputRange: [0, Math.PI * 2],\n  //   outputRange: [ring.start, ring.end],\n  // });\n  return (\n    <View style={styles.container}>\n      <CircularProgress radius={radius} ring={ring} theta={theta} />\n      <InitialKnob\n        backgroundColor={ring.start}\n        radius={radius}\n        strokeWidth={strokeWidth}\n        theta={theta}\n      />\n      <MovingKnob\n        backgroundColor={ring.end}\n        radius={radius}\n        strokeWidth={strokeWidth}\n        theta={theta}\n      />\n    </View>\n  );\n};\n","import React, {memo} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {Icon} from '../../../components';\n\ntype Props = {\n  color: string;\n  index: number;\n  icon: string;\n  size: number;\n  strokeWidth: number;\n};\n\nexport const Stickers = memo(function Sticker({\n  icon,\n  index,\n  color,\n  size,\n  strokeWidth,\n}: Props) {\n  const styles = StyleSheet.create({\n    canvas: {height: size, width: size},\n    overlay: {\n      ...StyleSheet.absoluteFillObject,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  });\n\n  return (\n    <View style={styles.overlay}>\n      <View style={styles.canvas}>\n        <Icon\n          color={color}\n          key={icon}\n          name={icon}\n          size={strokeWidth}\n          style={{\n            position: 'absolute',\n            top: strokeWidth * index,\n            left: size / 2 - strokeWidth / 2,\n          }}\n        />\n      </View>\n    </View>\n  );\n});\n","import React, {memo} from 'react';\nimport {StyleSheet, View} from 'react-native';\n\ntype Props = {\n  radius: number;\n  backgroundColor: string;\n};\n\nexport const CenterCircle = memo(function CenterCircle({\n  radius,\n  backgroundColor,\n}: Props) {\n  const styles = StyleSheet.create({\n    foreground: {\n      backgroundColor,\n      borderRadius: radius,\n      height: radius * 2,\n      width: radius * 2,\n    },\n    overlay: {\n      alignItems: 'center',\n      flex: 1,\n      justifyContent: 'center',\n    },\n  });\n\n  return (\n    <View style={styles.overlay}>\n      <View style={styles.foreground} />\n    </View>\n  );\n});\n","import React, {useEffect, useState} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {CircularRing} from './CircularRing';\nimport {Stickers} from './Stickers';\nimport {CenterCircle} from './CenterCircle';\n\nexport interface Ring {\n  start: string;\n  end: string;\n  bg: string;\n  theta: number;\n  size: number;\n  icon: string;\n}\n\ntype Props = {\n  rings: Ring[];\n  backgroundColor: string;\n  strokeWidth: number;\n  size: number;\n  animate?: boolean;\n  speed?: number;\n};\n\nexport const AppleActivity = ({\n  backgroundColor,\n  rings,\n  strokeWidth,\n  size,\n  animate,\n  speed = 0.02,\n}: Props): JSX.Element => {\n  const styles = StyleSheet.create({\n    container: {\n      backgroundColor,\n      height: size,\n      width: size,\n    },\n    overlay: {\n      alignItems: 'center',\n      height: size,\n      justifyContent: 'center',\n      position: 'absolute',\n      width: size,\n    },\n  });\n  const radius = rings[rings.length - 1].size / 2 - strokeWidth;\n  const [progress, setProgress] = useState(animate ? 0 : 1);\n\n  useEffect(() => {\n    if (!animate) {\n      return;\n    }\n    const interval = setInterval(() => {\n      if (progress >= 1) {\n        clearInterval(interval);\n        return;\n      }\n      setProgress((p) => (p += speed));\n    }, 16);\n    return () => clearInterval(interval);\n  }, [animate, progress, speed]);\n\n  return (\n    <View style={styles.container}>\n      {rings.map((ring, index) => (\n        <View key={ring.icon} style={styles.overlay}>\n          <CircularRing\n            ring={ring}\n            strokeWidth={strokeWidth}\n            theta={ring.theta * progress}\n          />\n          <Stickers\n            color={backgroundColor}\n            icon={ring.icon}\n            index={index}\n            size={size}\n            strokeWidth={strokeWidth}\n          />\n        </View>\n      ))}\n      <CenterCircle backgroundColor={backgroundColor} radius={radius} />\n    </View>\n  );\n};\n","import React, {memo, useCallback} from 'react';\nimport {View} from 'react-native';\nimport {Screen} from '../../../components';\nimport {useColor, useNav} from '../../../hooks';\nimport {AppleActivity, Ring} from './AppleActivity';\n\nconst TAU = 2 * Math.PI;\nconst size = 300;\nconst strokeWidth = 40;\nconst rings: Ring[] = [\n  {\n    start: 'rgb(249, 18, 78)',\n    end: 'rgb(249, 56, 133)',\n    bg: 'rgb(50, 1, 14)',\n    theta: 1.7 * TAU,\n    size: size,\n    icon: 'chevron-right',\n  },\n  {\n    start: 'rgb(153, 255, 0)',\n    end: 'rgb(216, 255, 1)',\n    bg: 'rgb(47, 78, 0)',\n    theta: 0.6 * TAU,\n    size: size - strokeWidth * 2,\n    icon: 'chevron-double-right',\n  },\n  {\n    start: 'rgb(0, 217, 253)',\n    end: 'rgb(0, 255, 169)',\n    bg: 'rgb(0, 72, 77)',\n    theta: 2.3 * TAU,\n    size: size - strokeWidth * 4,\n    icon: 'chevron-up',\n  },\n];\n\nexport default memo(function PlaygroundAppleFit() {\n  const nav = useNav();\n  const color = useColor();\n  const navBack = useCallback(nav('playground'), [nav]);\n\n  return (\n    <Screen onLeftPress={navBack} title=\"Apple Fit\">\n      <View style={{alignItems: 'center'}}>\n        <AppleActivity\n          animate\n          backgroundColor={color.background}\n          rings={rings}\n          size={size}\n          strokeWidth={strokeWidth}\n        />\n      </View>\n    </Screen>\n  );\n});\n"],"sourceRoot":""}