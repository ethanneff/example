{"version":3,"sources":["apps/Checklists/screens/ItemUpdate/index.tsx"],"names":["memo","nav","useNav","dispatch","useRootDispatch","item","useRootSelector","getCurrentChecklistItem","useState","name","description","form","setForm","isInvalidForm","trim","length","onLeftPress","to","title","gutter","value","onChangeText","state","onPress","now","Date","updateChecklistItem","updatedAt","navigate","removeChecklistItem","id","color"],"mappings":"wLAWeA,0BAAK,WAClB,IAAMC,EAAMC,cACNC,EAAWC,cACXC,EAAOC,YAAgBC,KAHgB,EAIrBC,mBAAS,CAC/BC,KAAMJ,EAAKI,KACXC,YAAaL,EAAKK,aAAe,KANU,mBAItCC,EAJsC,KAIhCC,EAJgC,KAQvCC,EAA4C,IAA5BF,EAAKF,KAAKK,OAAOC,OA2BvC,OACE,kBAAC,IAAD,CACEC,YAAaf,EAAIgB,GAAG,kBACpBC,MAAO,wBACPC,QAAM,GACN,kBAAC,IAAD,CACED,MAAM,OACNE,MAAOT,EAAKF,KACZY,aAjCmB,SAACZ,GAAD,OACvBG,GAAQ,SAACU,GAAD,sBAAgBA,EAAhB,CAAuBb,eAkC7B,kBAAC,IAAD,CACES,MAAM,cACNE,MAAOT,EAAKD,YACZW,aApC0B,SAACX,GAAD,OAC9BE,GAAQ,SAACU,GAAD,sBAAgBA,EAAhB,CAAuBZ,sBAqC7B,kBAAC,IAAD,CAAQQ,MAAM,SAASK,QApCN,WAAO,IACnBd,EAAqBE,EAArBF,KAAMC,EAAeC,EAAfD,YACPc,EAAMC,KAAKD,MACbX,IAGJV,EACEuB,YAAoB,eACfrB,EADc,CAEjBI,OACAC,cACAiB,UAAWH,MAGfrB,EAASyB,YAAS,uBAuBhB,kBAAC,IAAD,CAAQV,MAAM,SAASK,QArBN,WACnBpB,EAAS0B,YAAoBxB,EAAKyB,KAClC3B,EAASyB,YAAS,oBAmB8BG,MAAM","file":"static/js/21.9c8bba43.chunk.js","sourcesContent":["import React, {memo, useState} from 'react';\nimport {Button, Screen, TextInput} from '../../../../components';\nimport {\n  getCurrentChecklistItem,\n  removeChecklistItem,\n  updateChecklistItem,\n} from '../../models';\nimport {useNav} from '../../../../hooks';\nimport {useRootDispatch, useRootSelector} from '../../../../utils';\nimport {navigate} from '../../../../models';\n\nexport default memo(function ChecklistUpdate() {\n  const nav = useNav();\n  const dispatch = useRootDispatch();\n  const item = useRootSelector(getCurrentChecklistItem);\n  const [form, setForm] = useState({\n    name: item.name,\n    description: item.description || '',\n  });\n  const isInvalidForm = form.name.trim().length === 0;\n\n  const handleNameChange = (name: string) =>\n    setForm((state) => ({...state, name}));\n  const handleDescriptionChange = (description: string) =>\n    setForm((state) => ({...state, description}));\n  const handleSubmit = () => {\n    const {name, description} = form;\n    const now = Date.now();\n    if (isInvalidForm) {\n      return;\n    }\n    dispatch(\n      updateChecklistItem({\n        ...item,\n        name,\n        description,\n        updatedAt: now,\n      }),\n    );\n    dispatch(navigate('checklistsList'));\n  };\n  const handleDelete = () => {\n    dispatch(removeChecklistItem(item.id));\n    dispatch(navigate('checklistsList'));\n  };\n\n  return (\n    <Screen\n      onLeftPress={nav.to('checklistsList')}\n      title={'Update Checklist Item'}\n      gutter>\n      <TextInput\n        title=\"name\"\n        value={form.name}\n        onChangeText={handleNameChange}\n      />\n      <TextInput\n        title=\"description\"\n        value={form.description}\n        onChangeText={handleDescriptionChange}\n      />\n      <Button title=\"update\" onPress={handleSubmit} />\n      <Button title=\"delete\" onPress={handleDelete} color=\"danger\" />\n    </Screen>\n  );\n});\n"],"sourceRoot":""}