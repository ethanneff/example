{"version":3,"sources":["apps/Checklists/screens/List/index.tsx"],"names":["memo","nav","useNav","color","useColor","dispatch","useRootDispatch","items","useRootSelector","getCurrentActiveChecklistItemsOrderByCreatedAt","handleToggle","id","toggleChecklistItemComplete","handleEdit","setActiveChecklistItem","navigate","onLeftPress","to","title","gutter","keyExtractor","item","data","renderItem","style","flexDirection","label","icon","iconColor","success","danger","onPress","removeChecklistItem","warning","primary","active","lowercase","name","textStyle","completed","text","fab","right","contained","background"],"mappings":"qGAAA,oFAaeA,0BAAK,WAClB,IAAMC,EAAMC,cACNC,EAAQC,cACRC,EAAWC,cACXC,EAAQC,YAAgBC,KAGxBC,EAAe,SAACC,GAAD,OAAgB,kBACnCN,EAASO,YAA4BD,MACjCE,EAAa,SAACF,GAAD,OAAgB,WACjCN,EAASS,YAAuBH,IAChCN,EAASU,YAAS,2BAGpB,OACE,kBAAC,IAAD,CAAQC,YAAaf,EAAIgB,GAAG,cAAeC,MAAM,YAAYC,QAAM,GACjE,kBAAC,IAAD,CACEC,aAAc,SAAAC,GAAI,OAAIA,EAAKV,IAC3BW,KAAMf,EACNgB,WAAY,gBAbIZ,EAaDU,EAAH,EAAGA,KAAH,OACV,kBAAC,IAAD,CAAMG,MAAO,CAAEC,cAAe,QAC5B,kBAAC,IAAD,CACEC,OAAK,EACLC,KAAK,yBACLC,UAAWzB,EAAM0B,UAEnB,kBAAC,IAAD,CACEH,OAAK,EACLC,KAAK,eACLC,UAAWzB,EAAM2B,OACjBC,SAxBUpB,EAwBYU,EAAKV,GAxBF,kBAAMN,EAAS2B,YAAoBrB,QA0B9D,kBAAC,IAAD,CACEe,OAAK,EACLE,UAAWzB,EAAM8B,QACjBN,KAAK,QACLI,QAASrB,EAAaW,EAAKV,MAE7B,kBAAC,IAAD,CACEe,OAAK,EACLQ,QAASb,EAAKc,OACdC,WAAS,EACTlB,MAAOG,EAAKgB,KACZC,UAAW,CACTnC,MAAOkB,EAAKkB,UAAYpC,EAAM2B,OAAS3B,EAAMqC,MAE/CT,QAASlB,EAAWQ,EAAKV,UAKjC,kBAAC,IAAD,CACE8B,KAAG,EACHC,OAAK,EACLC,WAAS,EACThB,KAAK,OACLC,UAAWzB,EAAMyC,WACjBb,QAAS9B,EAAIgB,GAAG","file":"static/js/15.bf3ebb25.chunk.js","sourcesContent":["import React, { memo } from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport { Button, Screen } from \"../../../../components\";\nimport { useRootDispatch, useRootSelector } from \"../../../../utils\";\nimport {\n  removeChecklistItem,\n  toggleChecklistItemComplete,\n  getCurrentActiveChecklistItemsOrderByCreatedAt,\n  setActiveChecklistItem\n} from \"../../models\";\nimport { useNav, useColor } from \"../../../../hooks\";\nimport { navigate } from \"../../../../models\";\n\nexport default memo(function Checklist() {\n  const nav = useNav();\n  const color = useColor();\n  const dispatch = useRootDispatch();\n  const items = useRootSelector(getCurrentActiveChecklistItemsOrderByCreatedAt);\n\n  const handleRemove = (id: string) => () => dispatch(removeChecklistItem(id));\n  const handleToggle = (id: string) => () =>\n    dispatch(toggleChecklistItemComplete(id));\n  const handleEdit = (id: string) => () => {\n    dispatch(setActiveChecklistItem(id));\n    dispatch(navigate(\"checklistsItemUpdate\"));\n  };\n\n  return (\n    <Screen onLeftPress={nav.to(\"checklists\")} title=\"Checklist\" gutter>\n      <FlatList\n        keyExtractor={item => item.id}\n        data={items}\n        renderItem={({ item }) => \n          <View style={{ flexDirection: \"row\" }}>\n            <Button\n              label\n              icon=\"checkbox-marked-circle\"\n              iconColor={color.success}\n            />\n            <Button\n              label\n              icon=\"close-circle\"\n              iconColor={color.danger}\n              onPress={handleRemove(item.id)}\n            />\n            <Button\n              label\n              iconColor={color.warning}\n              icon=\"clock\"\n              onPress={handleToggle(item.id)}\n            />\n            <Button\n              label\n              primary={item.active}\n              lowercase\n              title={item.name}\n              textStyle={{\n                color: item.completed ? color.danger : color.text\n              }}\n              onPress={handleEdit(item.id)}\n            />\n          </View>\n        }\n      />\n      <Button\n        fab\n        right\n        contained\n        icon=\"plus\"\n        iconColor={color.background}\n        onPress={nav.to(\"checklistsItemCreate\")}\n      />\n    </Screen>\n  );\n});\n"],"sourceRoot":""}