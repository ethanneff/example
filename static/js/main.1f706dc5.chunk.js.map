{"version":3,"sources":["screens/Debug/screens/Checklists/models/Item/index.tsx","screens/Debug/screens/Checklists/models/List/index.tsx","models/App/index.tsx","utils/Theme/index.tsx","utils/Config/index.tsx","components/TextInput/index.tsx","components/Link/index.web.tsx","models/User/index.tsx","components/Router/Auth.tsx","components/Router/index.web.tsx","components/Text/index.tsx","components/Button/index.tsx","components/Card/index.tsx","components/CardSection/index.tsx","components/Markdown/index.tsx","components/Swipe/index.tsx","components/Screen/KeyboardAvoid.web.tsx","components/Screen/NavButton.tsx","components/Screen/NavBar.tsx","components/Screen/index.tsx","components/Icon/Badge.tsx","components/Icon/IconSource.web.tsx","components/Icon/index.tsx","components/TextInput/Title.tsx","components/RelativeDate/index.tsx","models/Auth/index.tsx","utils/Mock/index.tsx","models/Device/index.tsx","models/index.tsx","screens/App/index.web.tsx","screens/Debug/screens/Ball/index.tsx","screens/Debug/screens/Cards/index.tsx","screens/Debug/screens/Fonts/index.tsx","screens/Debug/screens/Drag/index.tsx","screens/Debug/screens/Buttons/index.tsx","screens/Debug/screens/PinchSpread/logic.tsx","screens/Debug/screens/PinchSpread/index.tsx","screens/Debug/screens/SearchBar/index.tsx","screens/Debug/screens/OKRs/index.tsx","screens/Debug/screens/Input/index.tsx","screens/Debug/screens/Questionnaire/index.tsx","screens/Debug/screens/Checklists/screens/ItemCreate/index.tsx","screens/Debug/screens/Checklists/screens/ItemUpdate/index.tsx","screens/Debug/screens/Checklists/screens/ListUpdate/index.tsx","screens/Debug/screens/Checklists/screens/ListCreate/index.tsx","screens/Debug/screens/Checklists/screens/Lists/index.tsx","screens/Debug/screens/Checklists/screens/List/index.tsx","screens/Debug/screens/Checklists/index.tsx","screens/Debug/screens/ImageCollection/AsyncImage.tsx","screens/Debug/screens/ImageCollection/index.tsx","screens/Debug/screens/Stopwatch/index.tsx","screens/Debug/screens/Chat/index.tsx","screens/Debug/index.tsx","screens/Landing/index.web.tsx","screens/Login/index.tsx","screens/Main/index.tsx","screens/NotFound/index.tsx","index.tsx"],"names":["createItem","createStandardAction","updateItem","removeItem","toggleActiveItem","getItems","state","items","getItemsByCreatedAt","createSelector","Object","values","filter","item","active","sort","a","b","createdAt","initialState","selectLists","lists","onAppLoad","onAppStatusChange","onKeyboardChange","appInitialState","app","status","keyboardVisible","FontWeight","Config","name","timeout","os","android","ios","web","root","KeyboardType","ReturnKeyType","Theme","color","background","brand","danger","dark","info","light","primary","secondary","success","text","warning","fontSize","body1","fontWeight","Regular","letterSpacing","body2","button","Medium","caption","h1","Light","h2","h3","h4","h5","h6","overline","subtitle1","subtitle2","padding","p00","p01","p02","p03","p04","p05","p06","p07","p08","p09","p10","p11","p12","p13","p14","p15","p16","p17","p18","p19","p20","colorWithOpacity","colorCode","opacity","arguments","length","undefined","boundedOpacity","startsWith","substr","substring","concat","styles","link","textDecoration","Link","_React$PureComponent","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","_this$props","props","to","title","buttonStyle","textStyle","react","TouchableOpacity","style","react_router_dom","Text_Text","center","React","User","isAuthenticated","authenticate","cb","setTimeout","signout","Auth","_getPrototypeOf2","_this","_len","args","Array","_key","call","fallback","_this2","Component","component","Original","original","Redirect","redirect","rest","objectWithoutProperties","assign","render","auth","path","pathname","from","location","Route","_ref","Auth_Auth","Router","children","StyleSheet","create","bold","textAlign","Text","_this$props2","hidden","toUpperCase","getFont","exports_Text","alignSelf","containedBody","backgroundColor","containedText","container","alignItems","borderColor","borderRadius","borderWidth","flexDirection","justifyContent","paddingHorizontal","disableBody","disableText","fab","half","width","height","icon","paddingRight","label","margin","neutral","nonFlex","outlined","right","Button","onPress","disable","contained","wrap","iconColor","lowercase","activeOpacity","buttonStyleGroup","getShape","textStyleGroup","iconStyleGroup","disabled","Icon_Icon","size","containerStyle","elevation","position","shadowColor","shadowOffset","shadowOpacity","shadowRadius","zIndex","Card","touchOpacity","borderBottomWidth","paddingVertical","KeyboardAvoid","View","flex","buttonRight","NavButton","isRight","NavBar","_this$props$title","onLeftPress","onRightPress","_this$props$leftIcon","leftIcon","_this$props$rightIcon","rightIcon","NavButton_NavButton","Screen","disableScroll","SafeAreaView","NavBar_NavBar","KeyboardAvoid_web_KeyboardAvoid","scrollEnabled","badgeContainer","top","badgeText","Badge","badgeLimit","maxBadgeNumber","badge","num","String","IconSource","Icon","_this$props$badge","clear","_this$props$size","_this$props$color","colored","IconSource_web_IconSource","Badge_Badge","optional","textTransform","Title","optionalText","stylesOptional","TextInput","focus","borderError","borderFocus","row","textInput","onFocus","setState","onBlur","focusOnInput","textClear","onChangeText","_this$props$error","error","_this$props$editable","editable","autoCorrect","secureTextEntry","keyboardType","returnKeyType","_this$props$blurOnSub","blurOnSubmit","placeholder","hasError","_this$props$disableFu","disableFullscreenUI","_this$props$errorIcon","errorIcon","_this$props$clearIcon","clearIcon","textInputStyle","noValue","Title_Title","exports_TextInput","ref","input","selectionColor","placeholderTextColor","underlineColorAndroid","Button_Button","RelativeDate","showRelativeDate","minute","timer","toggleRelativeDate","setInterval","forceUpdate","clearInterval","date","moment","fromNow","format","loginRequest","loginSuccess","loginFailure","registerRequest","registerSuccess","registerFailure","logout","authInitialState","loading","onBatteryChange","onFingerprintChange","onDeviceLoad","onNetworkChange","onDimensionChange","getWidth","device","windowDimensions","getHeight","Dimensions","get","deviceInitialState","screenDimensions","reducers","combineReducers","action","type","getType","objectSpread","payload","message","token","batteryLevel","isPinOrFingerprintSet","networkEffectiveType","effectiveType","networkType","screen","window","id","uuid","v4","timestamp","Date","now","defineProperty","order","updatedAt","userId","middlewares","thunk","enhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","offline","offlineConfig","store","createStore","change","onAppStateChange","enableListeners","disableListeners","index_web_Router","index_web_Route","exact","Landing","Login","Debug","Main","NotFound","NetInfo","addEventListener","AppState","removeEventListener","App","connect","ball","marginLeft","marginTop","ballPosition","Animated","ValueXY","x","y","history","Screen_Screen","goBack","getLayout","animate","Math","random","dx","dy","spring","toValue","start","Ball","cards","price","Cards","Value","absoluteFill","map","card","i","inputRange","outputRange","push","translateY","interpolate","extrapolateRight","transform","ScrollView","scrollEventThrottle","contentContainerStyle","content","showsVerticalScrollIndicator","onScroll","event","nativeEvent","contentOffset","Fonts","panGesture","PanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","_","gestureState","moveX","moveY","panHandlers","Drag","Buttons","GestureHandler","_ref$minTouches","minTouches","finish","touches","touch","recordFinish","recordStart","outcome","determineOutcome","isStartAlreadyRecorded","identifier","locationX","locationY","startXDistance","abs","startYDistance","finishXDistance","finishYDistance","points","numRecordedTouched","keys","point","pinch","spread","determineCenter","isPinch","isSpread","pinchCount","spreadCount","gestureHandler","onPanResponderRelease","_this$state","_this$state2","PinchSpread","header","borderBottomColor","textContainer","DATA","SearchBar","iconSearch","animation","iconName","iconBack","textInputPlaceHolder","animationDuration","translateIcon","fadeContainer","iconChangeTimeout","keyboardDidShowListener","keyboardDidHideListener","keyboardWillShowListener","keyboardWillHideListener","keyboardWillShow","Platform","OS","onSearchBarFocus","keyboardWillHide","onSearchBarUnFocus","keyboardDidShow","keyboardDidHide","Keyboard","addListener","remove","clearTimeout","translateX","TextInput_TextInput","FlatList","keyExtractor","toString","data","renderItem","changeIcon","timing","duration","_this3","OKRs","Card_Card","Input","email","password","val","Email","Questionnaire","choices","selected","next","output","tableView","currentIndex","onViewableItemsChanged","viewableItems","index","onProgress","direction","onFinish","scrollToIndex","animated","onSelection","choice","removeClippedSubviews","showsHorizontalScrollIndicator","viewabilityConfig","itemVisiblePercentThreshold","horizontal","pagingEnabled","_ref2","description","setName","setDescription","createList","ListCreate","match","Lists","toggle","List","Checklists","AsyncImage","indicatorOverlay","imageAnimated","indicatorAnimated","onImageLoad","parallel","useNativeDriver","uri","imageStyle","indicatorStyle","Image","source","onLoad","ActivityIndicator","ImageCollection","numColumns","infiniteScrollThreshold","columnWidth","imageUrl","fetchMore","renderImage","AsyncImage_AsyncImage","onEndReached","onEndReachedThreshold","buttonBorder","buttonTitle","buttonsRow","marginBottom","paddingTop","fastest","lap","borderTopWidth","lapText","fontFamily","scrollView","slowest","timerContainer","Timer","interval","pad","n","centiseconds","floor","milliseconds","minutes","seconds","RoundButton","_ref2$disabled","_onPress","Lap","_ref3","lapStyle","LapsTable","_ref4","laps","finishedLaps","slice","min","Number","MAX_SAFE_INTEGER","max","MIN_SAFE_INTEGER","forEach","ButtonsRow","_ref5","Stopwatch","getTime","run","_laps","toArray","firstLap","other","toConsumableArray","stop","_laps2","reset","resume","_this$state3","reduce","total","curr","Chat","messages","user","components_RelativeDate","navBack","onMessageChange","onSubmit","trim","newMessage","archive","createdBy","inverted","screens","generateRoutes","toLowerCase","showHomeScreen","index_web_Link","footer","Footer","Header","_React$PureComponent3","index_web_Header","index_web_Footer","fakeAuth","YellowBox","ignoreWarnings","Launcher","es","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById"],"mappings":"2TAkCaA,EAAaC,+BAAqB,cAArBA,GACbC,EAAaD,+BAAqB,cAArBA,GACbE,EAAaF,+BAAqB,cAArBA,GACbG,EAAmBH,+BAAqB,qBAArBA,GAsBnBI,EAAW,SAACC,GAAD,OAA6BA,EAAMC,OAK9CC,GAJyBC,YACpC,CAACJ,GACD,SAAAE,GAAK,OAAIG,OAAOC,OAAOJ,GAAOK,OAAO,SAAAC,GAAI,OAAIA,EAAKC,WAEjBL,YACjC,CAACJ,GACD,SAAAE,GAAK,OAAIG,OAAOC,OAAOJ,GAAOQ,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,UAAYD,EAAEC,eAIzDC,EAAe,GCPRC,GAzBanB,+BAAqB,cAArBA,GACAA,+BAAqB,cAArBA,GACAA,+BAAqB,cAArBA,GACMA,+BAAqB,qBAArBA,GAsBL,SAACK,GAAD,OAA6BA,EAAMe,QCxCjDC,GDyC4Bb,YACvC,CAACW,GACD,SAAAb,GAAK,OAAIG,OAAOC,OAAOJ,GAAOK,OAAO,SAAAC,GAAI,OAAIA,EAAKC,WAEdL,YACpC,CAACW,GACD,SAAAb,GAAK,OAAIG,OAAOC,OAAOJ,GAAOQ,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,UAAYD,EAAEC,cC/CtCjB,+BAAqB,WAArBA,IACZsB,EAAoBtB,+BAAqB,oBAArBA,GAGpBuB,EAAmBvB,+BAC9B,iCAD8BA,GAenBwB,GANyBhB,YAJV,SAACH,GAAD,OAC1BA,EAAMoB,IAAIC,QAKV,SAACA,GAAD,MAAgD,WAAXA,IAIE,CACvCC,iBAAiB,EACjBD,OAAQ,mCCNLE,ECtCQC,EAAS,CACpBJ,IAAK,CACHK,KAAM,UACNC,QAAS,KAEXC,GAAI,CACFC,QAAS,UACTC,IAAK,MACLC,IAAK,OAEPA,IAAK,CACHC,KAAM,mBD2BLR,4DAOL,IEVYS,EASAC,EFqECC,EAAQ,CACnBC,MAlHY,CACZC,WAAY,qBACZC,MAAO,qBACPC,OAAQ,qBACRC,KAAM,qBACNC,KAAM,qBACNC,MAAO,qBACPC,QAAS,sBACTC,UAAW,oBACXC,QAAS,qBACTC,KAAM,iBACNC,QAAS,sBAwGTC,SAtEe,CACfC,MAAO,CACLD,SAAU,GACVE,WAAY1B,EAAW2B,QACvBC,cAAe,IAEjBC,MAAO,CACLL,SAAU,GACVE,WAAY1B,EAAW2B,QACvBC,cAAe,KAEjBE,OAAQ,CACNN,SAAU,GACVE,WAAY1B,EAAW+B,OACvBH,cAAe,KAEjBI,QAAS,CACPR,SAAU,GACVE,WAAY1B,EAAW2B,QACvBC,cAAe,IAEjBK,GAAI,CACFT,SAAU,GACVE,WAAY1B,EAAWkC,MACvBN,eAAgB,KAElBO,GAAI,CACFX,SAAU,GACVE,WAAY1B,EAAWkC,MACvBN,eAAgB,IAElBQ,GAAI,CACFZ,SAAU,GACVE,WAAY1B,EAAW2B,QACvBC,cAAe,GAEjBS,GAAI,CACFb,SAAU,GACVE,WAAY1B,EAAW2B,QACvBC,cAAe,KAEjBU,GAAI,CACFd,SAAU,GACVE,WAAY1B,EAAW2B,QACvBC,cAAe,GAEjBW,GAAI,CACFf,SAAU,GACVE,WAAY1B,EAAW+B,OACvBH,cAAe,KAEjBY,SAAU,CACRhB,SAAU,GACVE,WAAY1B,EAAW2B,QACvBC,cAAe,KAEjBa,UAAW,CACTjB,SAAU,GACVE,WAAY1B,EAAW2B,QACvBC,cAAe,KAEjBc,UAAW,CACTlB,SAAU,GACVE,WAAY1B,EAAW+B,OACvBH,cAAe,KAOjBe,QAtGc,CACdC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,KAoFMC,EAAmB,SAACC,GAAqC,IAAlBC,EAAkBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAR,GACtDG,EAAiBJ,EAAU,EAAI,EAAIA,EAAU,EAAI,EAAIA,EAE3D,IAAKD,EAAUM,WAAW,OACxB,OAAON,EAET,IAAMO,EAASP,EAAUQ,UAJT,EAI4BR,EAAUG,OAAS,GAC/D,cAAAM,OAAeF,EAAf,MAAAE,OAA0BJ,EAA1B,uBGxHIK,EAAS,CACbC,KAAM,CACJjE,MAAOD,EAAMC,MAAMI,KACnB8D,eAAgB,SAWPC,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAlG,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAH,GAAAlG,OAAAsG,EAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,EAAA,EAAAvG,CAAAkG,GAAAM,MAAAH,KAAAd,YAAA,OAAAvF,OAAAyG,EAAA,EAAAzG,CAAAkG,EAAAC,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAkG,EAAA,EAAAS,IAAA,SAAAC,MAAA,WACkB,IAAAC,EACgCR,KAAKS,MAA3CC,EADMF,EACNE,GAAIC,EADEH,EACFG,MAAOC,EADLJ,EACKI,YAAaC,EADlBL,EACkBK,UAChC,OACEC,EAAA,cAACC,EAAA,EAAD,CAAkBC,MAAOJ,GACvBE,EAAA,cAACG,EAAA,EAAD,CAAUP,GAAIA,EAAIM,MAAOtB,EAAOC,MAC9BmB,EAAA,cAACI,GAAD,CAAMtE,QAAM,EAACuE,QAAM,EAACR,MAAOA,EAAOK,MAAOH,UANnDhB,EAAA,CAA0BuB,iCClBXC,EAAA,CACbC,iBAAiB,EACjBC,aAFa,SAEAC,GACXxB,KAAKsB,iBAAkB,EACvBG,WAAWD,EAAI,MAEjBE,QANa,SAMLF,GACNxB,KAAKsB,iBAAkB,EACvBG,WAAWD,EAAI,OCPNG,EAAb,SAAA7B,GAAA,SAAA6B,IAAA,IAAAC,EAAAC,EAAAlI,OAAAoG,EAAA,EAAApG,CAAAqG,KAAA2B,GAAA,QAAAG,EAAA5C,UAAAC,OAAA4C,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/C,UAAA+C,GAAA,OAAAJ,EAAAlI,OAAAsG,EAAA,EAAAtG,CAAAqG,MAAA4B,EAAAjI,OAAAuG,EAAA,EAAAvG,CAAAgI,IAAAO,KAAA/B,MAAAyB,EAAA,CAAA5B,MAAAP,OAAAsC,MACUI,SAAW,SADrBN,EAAA,OAAAlI,OAAAyG,EAAA,EAAAzG,CAAAgI,EAAA7B,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAgI,EAAA,EAAArB,IAAA,SAAAC,MAAA,WAEkB,IAAA6B,EAAApC,KAAAQ,EAMVR,KAAKS,MAJI4B,EAFC7B,EAEZ8B,UACUC,EAHE/B,EAGZgC,SACUC,EAJEjC,EAIZkC,SACGC,EALShJ,OAAAiJ,EAAA,EAAAjJ,CAAA6G,EAAA,qCAOd,OACEM,EAAA,cAACyB,EAAD5I,OAAAkJ,OAAA,GACMF,EADN,CAEEG,OAAQ,SAACrC,GAAD,OACLkC,EAAKI,MACNJ,EAAKK,OAASZ,EAAKD,UAClBQ,EAAKI,MAAQ1B,EAAKC,gBACjBR,EAAA,cAACuB,EAAc5B,GAEfK,EAAA,cAAC2B,EAAD,CACE/B,GAAI,CACFuC,SAAUb,EAAKD,SACf5I,MAAO,CAAE2J,KAAMzC,EAAM0C,qBArBrCxB,EAAA,CAA0BP,iBCMpBgC,EAAQ,SAAAC,GAAA,IAAGf,EAAHe,EAAGf,UAAcK,EAAjBhJ,OAAAiJ,EAAA,EAAAjJ,CAAA0J,EAAA,sBACZvC,EAAA,cAACwC,EAAD3J,OAAAkJ,OAAA,CACEL,SAAUD,IACVG,SAAUD,IACVH,UAAWA,GACPK,KAIFY,mLACY,IACNC,EAAaxD,KAAKS,MAAlB+C,SACR,OAAO1C,EAAA,cAACG,EAAA,EAAD,KAAgBuC,UAHNpC,kCCdf1B,GAAS+D,IAAWC,OAAO,CAC/BC,KAAM,CACJnH,WAAY,OAEd2E,OAAQ,CACNyC,UAAW,YA2BFC,GAAb,SAAA/D,GAAA,SAAA+D,IAAA,OAAAlK,OAAAoG,EAAA,EAAApG,CAAAqG,KAAA6D,GAAAlK,OAAAsG,EAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,EAAA,EAAAvG,CAAAkK,GAAA1D,MAAAH,KAAAd,YAAA,OAAAvF,OAAAyG,EAAA,EAAAzG,CAAAkK,EAAA/D,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAkK,EAAA,EAAAvD,IAAA,UAAAC,MAAA,WACmB,IAAAC,EAeXR,KAAKS,MAbP1D,EAFayD,EAEbzD,GACAE,EAHauD,EAGbvD,GACAC,EAJasD,EAIbtD,GACAC,EALaqD,EAKbrD,GACAC,EANaoD,EAMbpD,GACAC,EAPamD,EAObnD,GACAE,EARaiD,EAQbjD,UACAC,EATagD,EASbhD,UACAjB,EAVaiE,EAUbjE,MACAI,EAXa6D,EAWb7D,MACAC,EAZa4D,EAYb5D,OACAE,EAba0D,EAab1D,QACAQ,EAdakD,EAcblD,SAEF,OAAIP,EACKtB,EAAMa,SAASS,GAEpBE,EACKxB,EAAMa,SAASW,GAEpBC,EACKzB,EAAMa,SAASY,GAEpBC,EACK1B,EAAMa,SAASa,GAEpBC,EACK3B,EAAMa,SAASc,GAEpBC,EACK5B,EAAMa,SAASe,GAEpBE,EACK9B,EAAMa,SAASiB,UAEpBC,EACK/B,EAAMa,SAASkB,UAEpBjB,EACKd,EAAMa,SAASC,MAEpBI,EACKlB,EAAMa,SAASK,MAEpBC,EACKnB,EAAMa,SAASM,OAEpBE,EACKrB,EAAMa,SAASQ,QAEpBQ,EACK7B,EAAMa,SAASgB,SAEjB7B,EAAMa,SAASK,QAxD1B,CAAA2D,IAAA,SAAAC,MAAA,WA2DkB,IAAAuD,EACmD9D,KAAKS,MAA9DE,EADMmD,EACNnD,MAAOK,EADD8C,EACC9C,MAAOpE,EADRkH,EACQlH,OAAQ+G,EADhBG,EACgBH,KAAMrG,EADtBwG,EACsBxG,SAAU6D,EADhC2C,EACgC3C,OAAQ4C,EADxCD,EACwCC,OAChD3H,EAAOQ,GAAUU,GAAYqD,GAAS,IAAIqD,cAAgBrD,EAC1DE,EAAY,CAChBb,KAAKiE,UACL9C,GAAUzB,GAAOyB,OACjBwC,GAAQjE,GAAOiE,KACf3C,GAEF,YAAc5B,IAAVuB,GAAwC,IAAjBA,EAAMxB,QAAgB4E,EACxC,KAEFjD,EAAA,cAACoD,GAAA,EAAD,CAAUlD,MAAOH,GAAYzE,OAvExCyH,EAAA,CAA0BzC,iBC1BpB1B,GAAS+D,IAAWC,OAAO,CAC/BvC,OAAQ,CACNgD,UAAW,UAEbC,cAAe,CACbC,gBAAiB5I,EAAMC,MAAMO,SAE/BqI,cAAe,CACb5I,MAAOD,EAAMC,MAAMC,YAErB4I,UAAW,CACTC,WAAY,SACZC,YAAa,cACbC,aAAcjJ,EAAMgC,QAAQE,IAC5BgH,YAAa,EACbC,cAAe,MACfC,eAAgB,SAChBC,kBAAmBrJ,EAAMgC,QAAQK,KAEnCjC,OAAQ,CACNH,MAAOD,EAAMC,MAAMG,QAErBkJ,YAAa,CACXV,gBAAiB5I,EAAMC,MAAMM,OAE/BgJ,YAAa,CACXtJ,MAAOD,EAAMC,MAAMQ,WAErB+I,IAAK,CACHd,UAAW,aACXO,aAAcjJ,EAAMgC,QAAQS,IAC5BT,QAAShC,EAAMgC,QAAQK,KAEzBoH,KAAM,CACJC,MAAO,OAETC,OAAQ,CACNA,OAAQ3J,EAAMgC,QAAQU,KAExBkH,KAAM,CACJC,aAAc,GAEhBC,MAAO,CACLH,OAAQ3J,EAAMgC,QAAQM,IACtB8G,eAAgB,aAChBW,OAAQ/J,EAAMgC,QAAQE,IACtBmH,kBAAmB,GAErBW,QAAS,CACP/J,MAAOD,EAAMC,MAAMU,MAErBsJ,QAAS,CACPvB,UAAW,cAEbwB,SAAU,CACRlB,YAAahJ,EAAMC,MAAMQ,WAE3B0J,MAAO,CACLzB,UAAW,YAEbjI,UAAW,CACTR,MAAOD,EAAMC,MAAMQ,WAErBE,KAAM,CACJiI,gBAAiB,cACjB3I,MAAOD,EAAMC,MAAMO,WAwCV4J,GAAb,SAAA/F,GAAA,SAAA+F,IAAA,OAAAlM,OAAAoG,EAAA,EAAApG,CAAAqG,KAAA6F,GAAAlM,OAAAsG,EAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,EAAA,EAAAvG,CAAAkM,GAAA1F,MAAAH,KAAAd,YAAA,OAAAvF,OAAAyG,EAAA,EAAAzG,CAAAkM,EAAA/F,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAkM,EAAA,EAAAvF,IAAA,SAAAC,MAAA,WACkB,IAAAC,EAuBVR,KAAKS,MArBPE,EAFYH,EAEZG,MACAmF,EAHYtF,EAGZsF,QACAC,EAJYvF,EAIZuF,QACAnF,EALYJ,EAKZI,YACAC,EANYL,EAMZK,UACAmF,EAPYxF,EAOZwF,UACAL,EARYnF,EAQZmF,SACAM,EATYzF,EASZyF,KACAhB,EAVYzE,EAUZyE,IACAlB,EAXYvD,EAWZuD,OACA0B,EAZYjF,EAYZiF,QACAP,EAbY1E,EAaZ0E,KACA/D,EAdYX,EAcZW,OACAyE,EAfYpF,EAeZoF,MACAP,EAhBY7E,EAgBZ6E,KACAa,EAjBY1F,EAiBZ0F,UACAhK,EAlBYsE,EAkBZtE,UACAL,EAnBY2E,EAmBZ3E,OACA0J,EApBY/E,EAoBZ+E,MACAY,EArBY3F,EAqBZ2F,UACAC,EAtBY5F,EAsBZ4F,cAEIC,EAAmB,CACvB3G,GAAO6E,WACNU,GAAOvF,GAAO0F,OACfpF,KAAKsG,WACLP,IAAYC,GAAaL,IAAajG,GAAOqF,YAC7CE,GAAOvF,GAAOuF,IACdgB,GAAQvG,GAAOgG,QACfR,GAAQxF,GAAOwF,KACf/D,GAAUzB,GAAOyB,OACjByE,GAASlG,GAAOkG,MAChBL,GAAS7F,GAAO6F,MAChB3E,GAEI2F,EAAiB,CACrB7G,GAAOtD,KACPqJ,GAAW/F,GAAO+F,QAClBvJ,GAAawD,GAAOxD,UACpBL,GAAU6D,GAAO7D,OACjBmK,GAAatG,GAAO4E,cACpByB,GAAWrG,GAAOsF,YAClBnE,GAEI2F,EAAiB,CAAC7F,GAASjB,GAAO2F,MAAOa,GAAaK,GAC5D,OAAIxC,EACK,KAGPjD,EAAA,cAACC,EAAA,EAAD,CACEqF,cAAeA,EACfpF,MAAOqF,EACPP,QAASA,EACTW,SAAUV,GAEVjF,EAAA,cAAC4F,GAAD,CACEhL,MAAOwK,EACPlL,KAAMqK,EACNsB,KAAMlL,EAAMgC,QAAQK,IACpBkD,MAAOwF,IAET1F,EAAA,cAACI,GAAD,CAAMC,QAAM,EAACvE,QAASuJ,EAAWxF,MAAOA,EAAOK,MAAOuF,OAhE9D,CAAAjG,IAAA,WAAAC,MAAA,WAoEqB,IAAAuD,EAC0B9D,KAAKS,MAAxCuF,EADSlC,EACTkC,UAAWL,EADF7B,EACE6B,SAAUV,EADZnB,EACYmB,IADZnB,EACiB1H,KAClC,OAAI4J,EACKtG,GAAO0E,cAEZuB,EACKjG,GAAOiG,SAEZV,EACKvF,GAAOuF,IAGPvF,GAAOtD,SAhFpByJ,EAAA,CAA4BzE,iBC/GtB1B,GAAS+D,IAAWC,OAAO,CAC/BkD,eAAgB,CACdvC,gBAAiB5I,EAAMC,MAAMC,WAC7BkL,UAAW,EACXrB,OAAQ/J,EAAMgC,QAAQG,IACtBH,QAAShC,EAAMgC,QAAQK,IACvBgJ,SAAU,WACVC,YAAatL,EAAMC,MAAMI,KACzBkL,aAAc,CACZ5B,OAAQ,EACRD,MAAO,GAET8B,cAAe,GACfC,aAAc,EACdC,OAAQ,KASCC,GAAb,SAAAtH,GAAA,SAAAsH,IAAA,IAAAxF,EAAAC,EAAAlI,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAoH,GAAA,QAAAtF,EAAA5C,UAAAC,OAAA4C,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/C,UAAA+C,GAAA,OAAAJ,EAAAlI,OAAAsG,EAAA,EAAAtG,CAAAqG,MAAA4B,EAAAjI,OAAAuG,EAAA,EAAAvG,CAAAyN,IAAAlF,KAAA/B,MAAAyB,EAAA,CAAA5B,MAAAP,OAAAsC,MACUsF,aAAe,GADzBxF,EAAA,OAAAlI,OAAAyG,EAAA,EAAAzG,CAAAyN,EAAAtH,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAyN,EAAA,EAAA9G,IAAA,SAAAC,MAAA,WAEkB,IAAAC,EACuBR,KAAKS,MAAlCO,EADMR,EACNQ,MAAOwC,EADDhD,EACCgD,SAAUsC,EADXtF,EACWsF,QACzB,OACEhF,EAAA,cAACC,EAAA,EAAD,CACEC,MAAO,CAACtB,GAAOkH,eAAgB5F,GAC/B8E,QAASA,GAAWA,EACpBM,cAAeN,EAAU9F,KAAKqH,aAAe,GAE5C7D,OAVT4D,EAAA,CAA0BhG,0BCvBpB1B,GAAS+D,IAAWC,OAAO,CAC/BkD,eAAgB,CACdvC,gBAAiB5I,EAAMC,MAAMC,WAC7B2L,kBAAmB,GACnB7C,YAAahJ,EAAMC,MAAMI,KACzB8I,cAAe,MACfE,kBAAmB,GACnByC,gBAAiB,MCPf7H,IDe2B0B,gBCflBqC,IAAWC,OAAO,CAC/Ba,UAAW,CACTK,cAAe,cASWxD,gBC4IHA,wBCpJdoG,GAAb,SAAA1H,GAAA,SAAA0H,IAAA,OAAA7N,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAwH,GAAA7N,OAAAsG,EAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,EAAA,EAAAvG,CAAA6N,GAAArH,MAAAH,KAAAd,YAAA,OAAAvF,OAAAyG,EAAA,EAAAzG,CAAA6N,EAAA1H,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAA6N,EAAA,EAAAlH,IAAA,SAAAC,MAAA,WACkB,IAAAC,EACcR,KAAKS,MAAzBO,EADMR,EACNQ,MAAOwC,EADDhD,EACCgD,SACf,OAAO1C,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAOA,GAAQwC,OAHhCgE,EAAA,CAAmCpG,iBCF7B1B,GAAS+D,IAAWC,OAAO,CAC/B9G,OAAQ,CACN8K,KAAM,EACNjK,QAAShC,EAAMgC,QAAQI,KAEzB8J,YAAa,CACXxD,UAAW,cAUFyD,GAAb,SAAA9H,GAAA,SAAA8H,IAAA,OAAAjO,OAAAoG,EAAA,EAAApG,CAAAqG,KAAA4H,GAAAjO,OAAAsG,EAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,EAAA,EAAAvG,CAAAiO,GAAAzH,MAAAH,KAAAd,YAAA,OAAAvF,OAAAyG,EAAA,EAAAzG,CAAAiO,EAAA9H,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAiO,EAAA,EAAAtH,IAAA,SAAAC,MAAA,WACkB,IAAAC,EACqBR,KAAKS,MAAhCqF,EADMtF,EACNsF,QAAST,EADH7E,EACG6E,KAAMwC,EADTrH,EACSqH,QACvB,OAAK/B,EAEHhF,EAAA,cAACC,EAAA,EAAD,CAAkBC,MAAOtB,GAAO9C,OAAQkJ,QAASA,GAC/ChF,EAAA,cAAC4F,GAAD,CACEhL,MAAOD,EAAMC,MAAMI,KACnBkF,MAAO6G,GAAWnI,GAAOiI,YACzB3M,KAAMqK,KANW,SAH3BuC,EAAA,CAA+BxG,iBCfzB1B,GAAS+D,IAAWC,OAAO,CAC/Ba,UAAW,CACTC,WAAY,SACZI,cAAe,MACfC,eAAgB,iBAElBlE,MAAO,CACL+G,KAAM,EACNpL,SAAUb,EAAMgC,QAAQM,IACxB6F,UAAW,YAYFkE,GAAb,SAAAhI,GAAA,SAAAgI,IAAA,OAAAnO,OAAAoG,EAAA,EAAApG,CAAAqG,KAAA8H,GAAAnO,OAAAsG,EAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,EAAA,EAAAvG,CAAAmO,GAAA3H,MAAAH,KAAAd,YAAA,OAAAvF,OAAAyG,EAAA,EAAAzG,CAAAmO,EAAAhI,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAmO,EAAA,EAAAxH,IAAA,SAAAC,MAAA,WACkB,IAAAC,EAOVR,KAAKS,MAPKsH,EAAAvH,EAEZG,aAFY,IAAAoH,EAEJ,GAFIA,EAGZC,EAHYxH,EAGZwH,YACAC,EAJYzH,EAIZyH,aAJYC,EAAA1H,EAKZ2H,gBALY,IAAAD,EAKD,aALCA,EAAAE,EAAA5H,EAMZ6H,iBANY,IAAAD,EAMA,QANAA,EASd,OADkBzH,EAAMxB,OAAS,GAAK6I,GAAeC,EAKnDnH,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAOtB,GAAO6E,WAClBzD,EAAA,cAACwH,GAAD,CAAWjD,KAAM8C,EAAUrC,QAASkC,IACpClH,EAAA,cAACI,GAAD,CAAM6C,OAAyB,IAAjBpD,EAAMxB,OAAc6B,MAAOtB,GAAOiB,MAAOA,MAAOA,IAC9DG,EAAA,cAACwH,GAAD,CAAWjD,KAAMgD,EAAWR,SAAO,EAAC/B,QAASmC,KANxC,SAXbH,EAAA,CAA4B1G,iBCrBtB1B,GAAS+D,IAAWC,OAAO,CAC/Ba,UAAW,CACTF,gBAAiB5I,EAAMC,MAAMC,WAC7B+L,KAAM,KAgBGa,GAAb,SAAAzI,GAAA,SAAAyI,IAAA,OAAA5O,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAuI,GAAA5O,OAAAsG,EAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,EAAA,EAAAvG,CAAA4O,GAAApI,MAAAH,KAAAd,YAAA,OAAAvF,OAAAyG,EAAA,EAAAzG,CAAA4O,EAAAzI,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAA4O,EAAA,EAAAjI,IAAA,SAAAC,MAAA,WACkB,IAAAC,EAUVR,KAAKS,MARPE,EAFYH,EAEZG,MACAK,EAHYR,EAGZQ,MACAgH,EAJYxH,EAIZwH,YACAC,EALYzH,EAKZyH,aACAzE,EANYhD,EAMZgD,SACAgF,EAPYhI,EAOZgI,cACAL,EARY3H,EAQZ2H,SACAE,EATY7H,EASZ6H,UAEF,OACEvH,EAAA,cAAC2H,GAAA,EAAD,CAAczH,MAAO,CAACtB,GAAO6E,UAAWvD,IACtCF,EAAA,cAAC4H,GAAD,CACE/H,MAAOA,EACPwH,SAAUA,EACVE,UAAWA,EACXL,YAAaA,EACbC,aAAcA,IAEhBnH,EAAA,cAAC6H,GAAD,CACEC,eAAgBJ,EAChBxH,MAAO,CAACtB,GAAO6E,UAAWvD,IAEzBwC,QAzBX+E,EAAA,CAA4BnH,iBCpBtB1B,GAAS+D,IAAWC,OAAO,CAC/BmF,eAAgB,CACdrE,WAAY,SACZH,gBAAiB5I,EAAMC,MAAMO,QAC7ByI,aAAc,GACdU,OAAQ,GACRP,eAAgB,SAChBiC,SAAU,WACVlB,OAAQ,GACRkD,KAAM,GACN3D,MAAO,IAET4D,UAAW,CACTrN,MAAOD,EAAMC,MAAMC,WACnBW,SAAUb,EAAMgC,QAAQG,OAQfoL,GAAb,SAAAlJ,GAAA,SAAAkJ,IAAA,IAAApH,EAAAC,EAAAlI,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAgJ,GAAA,QAAAlH,EAAA5C,UAAAC,OAAA4C,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/C,UAAA+C,GAAA,OAAAJ,EAAAlI,OAAAsG,EAAA,EAAAtG,CAAAqG,MAAA4B,EAAAjI,OAAAuG,EAAA,EAAAvG,CAAAqP,IAAA9G,KAAA/B,MAAAyB,EAAA,CAAA5B,MAAAP,OAAAsC,MACUkH,WAAa,IADvBpH,EAEUqH,eAAiB,GAF3BrH,EAAA,OAAAlI,OAAAyG,EAAA,EAAAzG,CAAAqP,EAAAlJ,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAqP,EAAA,EAAA1I,IAAA,SAAAC,MAAA,WAGkB,IACN4I,EAAUnJ,KAAKS,MAAf0I,MACFC,EAAMD,EAAQnJ,KAAKkJ,eAAiBlJ,KAAKiJ,WAAaI,OAAOF,GACnE,OAAIA,GAAS,EACJ,KAGPrI,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAOtB,GAAOmJ,gBAClB/H,EAAA,cAACI,GAAD,CAAMC,QAAM,EAACH,MAAOtB,GAAOqJ,UAAWpI,MAAOyI,SAXrDJ,EAAA,CAA2B5H,iBChBdkI,GAAb,SAAAxJ,GAAA,SAAAwJ,IAAA,OAAA3P,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAsJ,GAAA3P,OAAAsG,EAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,EAAA,EAAAvG,CAAA2P,GAAAnJ,MAAAH,KAAAd,YAAA,OAAAvF,OAAAyG,EAAA,EAAAzG,CAAA2P,EAAAxJ,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAA2P,EAAA,EAAAhJ,IAAA,SAAAC,MAAA,WACkB,IACNvF,EAASgF,KAAKS,MAAdzF,KACR,OAAO8F,EAAA,cAACI,GAAD,CAAMP,MAAO3F,QAHxBsO,EAAA,CAAgClI,iBCQnBmI,GAAb,SAAAzJ,GAAA,SAAAyJ,IAAA,OAAA5P,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAuJ,GAAA5P,OAAAsG,EAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,EAAA,EAAAvG,CAAA4P,GAAApJ,MAAAH,KAAAd,YAAA,OAAAvF,OAAAyG,EAAA,EAAAzG,CAAA4P,EAAAzJ,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAA4P,EAAA,EAAAjJ,IAAA,SAAAC,MAAA,WACkB,IAAAC,EASVR,KAAKS,MAPPzF,EAFYwF,EAEZxF,KACAgG,EAHYR,EAGZQ,MAHYwI,EAAAhJ,EAIZ2I,aAJY,IAAAK,EAIJ,EAJIA,EAKZC,EALYjJ,EAKZiJ,MALYC,EAAAlJ,EAMZmG,YANY,IAAA+C,EAMLjO,EAAMgC,QAAQO,IANT0L,EAAAC,EAAAnJ,EAOZ9E,aAPY,IAAAiO,EAOJlO,EAAMC,MAAMI,KAPR6N,EAQZ5F,EARYvD,EAQZuD,OAEI6F,EAAUH,EAAQhO,EAAMC,MAAMC,WAAaD,EACjD,YAAa0D,IAATpE,GAAsC,IAAhBA,EAAKmE,QAAgB4E,EACtC,KAGPjD,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAOA,GACXF,EAAA,cAAC+I,GAAD,CAAY7O,KAAMA,EAAM2L,KAAMA,EAAMjL,MAAOkO,EAAS5I,MAAOA,IAC3DF,EAAA,cAACgJ,GAAD,CAAOX,MAAOA,SAlBtBI,EAAA,CAA0BnI,2BCdpB1B,GAAS+D,IAAWC,OAAO,CAC/Ba,UAAW,CACTK,cAAe,OAEjBmF,SAAU,CACRrO,MAAOD,EAAMC,MAAMQ,WAErByE,MAAO,CACL6E,OAAQ/J,EAAMgC,QAAQE,IACtBqM,cAAe,gBAWNC,GAAb,SAAAnK,GAAA,SAAAmK,IAAA,IAAArI,EAAAC,EAAAlI,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAiK,GAAA,QAAAnI,EAAA5C,UAAAC,OAAA4C,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/C,UAAA+C,GAAA,OAAAJ,EAAAlI,OAAAsG,EAAA,EAAAtG,CAAAqG,MAAA4B,EAAAjI,OAAAuG,EAAA,EAAAvG,CAAAsQ,IAAA/H,KAAA/B,MAAAyB,EAAA,CAAA5B,MAAAP,OAAAsC,MACUmI,aAAe,cADzBrI,EAAA,OAAAlI,OAAAyG,EAAA,EAAAzG,CAAAsQ,EAAAnK,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAsQ,EAAA,EAAA3J,IAAA,SAAAC,MAAA,WAEkB,IAAAC,EACuBR,KAAKS,MAAlCE,EADMH,EACNG,MAAOoJ,EADDvJ,EACCuJ,SAAUjE,EADXtF,EACWsF,QACnBqE,EAAiB,CAACzK,GAAOiB,MAAOjB,GAAOqK,UAC7C,YAAc3K,IAAVuB,GAAwC,IAAjBA,EAAMxB,OACxB,KAIP2B,EAAA,cAACC,EAAA,EAAD,CACEqF,cAAe,EACfpF,MAAOtB,GAAO6E,UACduB,QAASA,GAEThF,EAAA,cAACI,GAAD,CAAMP,MAAOA,EAAOK,MAAOtB,GAAOiB,QAClCG,EAAA,cAACI,GAAD,CACE6C,QAASgG,EACTpJ,MAAOX,KAAKkK,aACZlJ,MAAOmJ,SAnBjBF,EAAA,CAA2B7I,2BlBUf7F,0JASAC,qFAQL,IAAM4O,GAAb,SAAAtK,GAAA,SAAAsK,IAAA,IAAAxI,EAAAC,EAAAlI,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAoK,GAAA,QAAAtI,EAAA5C,UAAAC,OAAA4C,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/C,UAAA+C,GAAA,OAAAJ,EAAAlI,OAAAsG,EAAA,EAAAtG,CAAAqG,MAAA4B,EAAAjI,OAAAuG,EAAA,EAAAvG,CAAAyQ,IAAAlI,KAAA/B,MAAAyB,EAAA,CAAA5B,MAAAP,OAAAsC,MACSxI,MAAQ,CACb8Q,OAAO,GAFXxI,EAKUnC,OAAS+D,IAAWC,OAAO,CACjC4G,YAAa,CACX7F,YAAahJ,EAAMC,MAAMG,QAE3B0O,YAAa,CACX9F,YAAahJ,EAAMC,MAAMO,SAE3BwN,MAAO,CACL3C,SAAU,WACVlB,OAAQ,EACRkD,IAAK,GAEPvE,UAAW,CACTmD,KAAM,GAER8C,IAAK,CACH5F,cAAe,OAEjB6F,UAAW,CACTpG,gBAAiB5I,EAAMC,MAAMC,WAC7B8I,YAAahJ,EAAMC,MAAMQ,UACzBwI,aAAcjJ,EAAMgC,QAAQE,IAC5BgH,YAAa,EACblH,QAAShC,EAAMgC,QAAQG,IACvB0H,aAAc7J,EAAMgC,QAAQS,IAC5BiH,MAAO,UA9BbtD,EAiCU4I,eAjCV,EAAA5I,EA8GU6I,QAAU,kBAAM7I,EAAK8I,SAAS,CAAEN,OAAO,KA9GjDxI,EAgHU+I,OAAS,kBAAM/I,EAAK8I,SAAS,CAAEN,OAAO,KAhHhDxI,EAkHUgJ,aAAe,WAChBhJ,EAAK4I,WAGV5I,EAAK4I,UAAUJ,SAtHnBxI,EAyHUiJ,UAAY,WAAM,IAChBC,EAAiBlJ,EAAKpB,MAAtBsK,aACHlJ,EAAK4I,YAGV5I,EAAK4I,UAAUhB,QACfsB,EAAa,MA/HjBlJ,EAAA,OAAAlI,OAAAyG,EAAA,EAAAzG,CAAAyQ,EAAAtK,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAyQ,EAAA,EAAA9J,IAAA,SAAAC,MAAA,WAmCkB,IAAA6B,EAAApC,KAAAQ,EAmBVR,KAAKS,MAjBPE,EAFYH,EAEZG,MACAoJ,EAHYvJ,EAGZuJ,SAHYiB,EAAAxK,EAIZyK,aAJY,IAAAD,EAIJ,GAJIA,EAAAE,EAAA1K,EAKZ2K,gBALY,IAAAD,KAMZE,EANY5K,EAMZ4K,YACAC,EAPY7K,EAOZ6K,gBACAC,EARY9K,EAQZ8K,aACAC,EATY/K,EASZ+K,cATYC,EAAAhL,EAUZiL,oBAVY,IAAAD,KAWZE,EAXYlL,EAWZkL,YACAX,EAZYvK,EAYZuK,aACAxK,EAbYC,EAaZD,MACAoL,EAdYnL,EAcZmL,SAdYC,EAAApL,EAeZqL,2BAfY,IAAAD,KAAAE,EAAAtL,EAgBZuL,iBAhBY,IAAAD,EAgBA,eAhBAA,EAAAE,EAAAxL,EAiBZyL,iBAjBY,IAAAD,EAiBA,eAjBAA,EAkBZhL,EAlBYR,EAkBZQ,MAEMqJ,EAAUrK,KAAKzG,MAAf8Q,MACF6B,EAAiB,CACrBlM,KAAKN,OAAO+K,UACZQ,GAASjL,KAAKN,OAAO4K,YACrBD,GAASrK,KAAKN,OAAO6K,YACrB9O,EAAMa,SAASK,MACfqE,GAEImL,EAA2B,IAAjB5L,EAAMpB,OACtB,OACE2B,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAOhB,KAAKN,OAAO6E,WACvBzD,EAAA,cAACsL,GAAD,CAAOzL,MAAOA,EAAOoJ,SAAUA,EAAUjE,QAAS9F,KAAK6K,eACvD/J,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAOhB,KAAKN,OAAO8K,KACvB1J,EAAA,cAACuL,GAAA,EAAD,CACEC,IAAK,SAAAC,GAAK,OAAKnK,EAAKqI,UAAY8B,QAAgBnN,GAChDgM,YAAaA,EACboB,eAAgB/Q,EAAMC,MAAMO,QAC5B4P,oBAAqBA,EACrBnB,QAAS1K,KAAK0K,QACdE,OAAQ5K,KAAK4K,OACbO,SAAUA,EACVsB,qBAAsBhR,EAAMC,MAAMQ,UAClCuP,aAAcA,EACdJ,gBAAiBA,EACjBE,cAAeA,EACfD,aAAcA,EACdoB,sBAAsB,cACtB1L,MAAOkL,EACPR,YAAaA,EACbX,aAAcA,EACdxK,MAAOA,IAETO,EAAA,cAAC6L,GAAD,CACEzQ,WAAS,EACT6H,OAAQoI,EACR9G,KAAM4G,EACNrL,YAAaZ,KAAKN,OAAO+J,MACzB3D,QAAS9F,KAAK8K,aAGlBhK,EAAA,cAAC6L,GAAD,CACE5I,QAAS4H,EACTpG,OAAK,EACLU,MAAI,EACJE,WAAS,EACTC,cAAe,EACff,KAAM0G,EACNpL,MAAOsK,EACPpP,QAAM,EACNiK,QAAS9F,KAAK6K,oBAxGxBT,EAAA,CAA+BhJ,qCmBPhBwL,8MA/BNrT,MAAQ,CAAEsT,kBAAkB,KAC3BC,OAAS,MACTC,eAwBAC,mBAAqB,WAC3BnL,EAAK8I,SAAS,CAAEkC,kBAAmBhL,EAAKtI,MAAMsT,uGAvBrB,IAAAzK,EAAApC,KACzBA,KAAK+M,MAAQE,YAAY,kBAAM7K,EAAK8K,eAAelN,KAAK8M,uDAIxDK,cAAcnN,KAAK+M,wCAGL,IACNK,EAASpN,KAAKS,MAAd2M,KACAP,EAAqB7M,KAAKzG,MAA1BsT,iBACR,OACE/L,EAAA,cAACC,EAAA,EAAD,CAAkB+E,QAAS9F,KAAKgN,oBAC9BlM,EAAA,cAACI,GAAD,CAAM6C,QAAS8I,EAAkBlM,MAAO0M,KAAOD,GAAME,YACrDxM,EAAA,cAACI,GAAD,CACE6C,OAAQ8I,EACRlM,MAAO0M,KAAOD,GAAMG,OAAO,gCArBVnM,iBCSdoM,ICb8BpM,gBDaflI,+BAAqB,qBAArBA,IACfuU,GAAevU,+BAAqB,wBAArBA,GAGfwU,GAAexU,+BAAqB,wBAArBA,GAGfyU,GAAkBzU,+BAAqB,wBAArBA,GAClB0U,GAAkB1U,+BAAqB,wBAArBA,GAGlB2U,GAAkB3U,+BAAqB,wBAArBA,GAGlB4U,GAAS5U,+BAAqB,cAArBA,GA2DT6U,GAA8B,CACzCC,SAAS,iBEnCEC,GAAkB/U,+BAAqB,wBAArBA,GAGlBgV,GAAsBhV,+BACjC,4BADiCA,GAGtBiV,GAAejV,+BAAqB,cAArBA,GACfkV,GAAkBlV,+BAAqB,wBAArBA,GAGlBmV,GAAoBnV,+BAC/B,0BAD+BA,GAepBoV,GAAW,SAAC/U,GAAD,OACtBA,EAAMgV,OAAOC,iBAAiBrJ,OACnBsJ,GAAY,SAAClV,GAAD,OACvBA,EAAMgV,OAAOC,iBAAiBpJ,QAG1BoJ,GAAmBE,KAAWC,IAAI,UAE3BC,GAAkC,CAC7CC,iBAFuBH,KAAWC,IAAI,UAGtCH,qBC1DIM,GAAWC,0BAA2B,CAC1CpU,I1BOK,WAGK,IAFVpB,EAEU2F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFQxE,EAClBsU,EACU9P,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACV,OAAQ4P,EAAOC,MACb,KAAKC,kBAAQ3U,GACX,OAAOZ,OAAAwV,EAAA,EAAAxV,CAAA,GACFJ,EACAyV,EAAOI,SAEd,KAAKF,kBAAQ1U,GACX,OAAOb,OAAAwV,EAAA,EAAAxV,CAAA,GACFJ,EADL,CAEEqB,OAAQoU,EAAOI,UAEnB,KAAKF,kBAAQzU,GACX,OAAOd,OAAAwV,EAAA,EAAAxV,CAAA,GACFJ,EADL,CAEEsB,gBAAiBmU,EAAOI,UAI5B,QACE,OAAO7V,I0B7BXwJ,KH0DK,WAGM,IAFXxJ,EAEW2F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFQ6O,GACnBiB,EACW9P,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACX,OAAQ4P,EAAOC,MACb,KAAKC,kBAAQ1B,IACb,KAAK0B,kBAAQvB,IACX,OAAOhU,OAAAwV,EAAA,EAAAxV,CAAA,GACFJ,EADL,CAEEyU,SAAS,IAEb,KAAKkB,kBAAQxB,IACb,KAAKwB,kBAAQrB,IACX,OAAOlU,OAAAwV,EAAA,EAAAxV,CAAA,GACFJ,EADL,CAEE0R,MAAO+D,EAAOI,QAAQC,QACtBrB,SAAS,IAEb,KAAKkB,kBAAQzB,IACb,KAAKyB,kBAAQtB,IACX,OAAOjU,OAAAwV,EAAA,EAAAxV,CAAA,GACFJ,EADL,CAEEyU,SAAS,EACTsB,MAAON,EAAOI,UAElB,KAAKF,kBAAQpB,IACX,OAAOC,GACT,QACE,OAAOxU,IGrFXgV,ODyD2B,WAGX,IAFhBhV,EAEgB2F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFK0P,GACrBI,EACgB9P,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChB,OAAQ4P,EAAOC,MACb,KAAKC,kBAAQjB,IACX,OAAOtU,OAAAwV,EAAA,EAAAxV,CAAA,GACFJ,EADL,CAEEgW,aAAcP,EAAOI,UAEzB,KAAKF,kBAAQhB,IACX,OAAOvU,OAAAwV,EAAA,EAAAxV,CAAA,GACFJ,EADL,CAEEiW,sBAAuBR,EAAOI,UAElC,KAAKF,kBAAQd,IACX,OAAOzU,OAAAwV,EAAA,EAAAxV,CAAA,GACFJ,EADL,CAEEkW,qBAAsBT,EAAOI,QAAQM,cACrCC,YAAaX,EAAOI,QAAQH,OAEhC,KAAKC,kBAAQb,IACX,OAAO1U,OAAAwV,EAAA,EAAAxV,CAAA,GACFJ,EADL,CAEEsV,iBAAkBG,EAAOI,QAAQQ,OACjCpB,iBAAkBQ,EAAOI,QAAQS,SAErC,KAAKX,kBAAQf,IACX,OAAOxU,OAAAwV,EAAA,EAAAxV,CAAA,GACFJ,EACAyV,EAAOI,SAKd,QACE,OAAO7V,IC5FXC,M5B6ByB,WAGf,IAFVD,EAEU2F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFK9E,EACf4U,EACU9P,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACV,OAAQ4P,EAAOC,MACb,KAAKC,kBAAQjW,GACX,IAAM6W,EAAKC,IAAKC,KACVC,EAAYC,KAAKC,MACvB,OAAOxW,OAAAwV,EAAA,EAAAxV,CAAA,GACFJ,EADLI,OAAAyW,EAAA,EAAAzW,CAAA,GAEGmW,EAFHnW,OAAAwV,EAAA,EAAAxV,CAAA,GAGOqV,EAAOI,QAHd,CAIIrV,QAAQ,EACRI,UAAW8V,EACXH,KACAO,MAAOJ,EACPK,UAAWL,EACXM,OAAQ,QAGd,KAAKrB,kBAAQ/V,GACX,OAAOQ,OAAAwV,EAAA,EAAAxV,CAAA,GACFJ,EADLI,OAAAyW,EAAA,EAAAzW,CAAA,GAEGqV,EAAOI,QAAQU,GAFlBnW,OAAAwV,EAAA,EAAAxV,CAAA,GAGOJ,EAAMyV,EAAOI,QAAQU,IACrBd,EAAOI,QAJd,CAKIkB,UAAWJ,KAAKC,UAGtB,KAAKjB,kBAAQ9V,GACX,OAAOO,OAAAwV,EAAA,EAAAxV,CAAA,GACFJ,EADLI,OAAAyW,EAAA,EAAAzW,CAAA,GAEGqV,EAAOI,QAFVzV,OAAAwV,EAAA,EAAAxV,CAAA,GAGOJ,EAAMyV,EAAOI,SAHpB,CAIIrV,QAAQ,EACRuW,UAAWJ,KAAKC,UAGtB,KAAKjB,kBAAQ7V,GACX,OAAOM,OAAAwV,EAAA,EAAAxV,CAAA,GACFJ,EADLI,OAAAyW,EAAA,EAAAzW,CAAA,GAEGqV,EAAOI,QAFVzV,OAAAwV,EAAA,EAAAxV,CAAA,GAGOJ,EAAMyV,EAAOI,SAHpB,CAIIrV,QAASR,EAAMyV,EAAOI,SAASrV,OAC/BuW,UAAWJ,KAAKC,UAGtB,QACE,OAAO5W,I4B5EXe,M3B+ByB,WAAkD,IAAjDf,EAAiD2F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlC,GAGrC,OAHuEA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC5D6P,KAEJ1V,K2BrBPiX,GAA4B,CAACC,KAG7BC,IADHb,OAAec,sCAAwCC,WAExDC,kBAAe1Q,WAAf,EAAmBqQ,IACnBM,kBAAQC,MAIGC,GAAQC,sBAAYnC,GAAU4B,wBCtCrCrO,eACJ,SAAAA,EAAY5B,GAAc,IAAAoB,EAAA,OAAAlI,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAqC,IACxBR,EAAAlI,OAAAsG,EAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,EAAA,EAAAvG,CAAA0I,GAAAH,KAAAlC,KAAMS,KAkCA2N,gBAAkB,SAAC8C,GACH,kBAAXA,GAGXrP,EAAKpB,MAAM2N,gBAAgB8C,IAvCHrP,EA0ClBwM,kBAAoB,SAAC6C,GAC3BrP,EAAKpB,MAAM4N,kBAAkB6C,IA3CLrP,EA8ClBsP,iBAAmB,SAACD,GAC1BrP,EAAKpB,MAAMjG,kBAAkB0W,IA7C7BrP,EAAKuP,kBAFmBvP,sFAMxB7B,KAAKqR,oDAIL,OACEvQ,EAAA,cAACwQ,EAAD,KACExQ,EAAA,cAACG,EAAA,EAAD,KACEH,EAAA,cAACyQ,EAAD,CAAOC,OAAK,EAACxO,KAAK,IAAIV,UAAWmP,KACjC3Q,EAAA,cAACyQ,EAAD,CAAOvO,KAAK,SAASV,UAAWoP,KAChC5Q,EAAA,cAACyQ,EAAD,CAAOvO,KAAK,SAASV,UAAWqP,KAChC7Q,EAAA,cAACyQ,EAAD,CAAOxO,MAAI,EAACC,KAAK,OAAOV,UAAWsP,KACnC9Q,EAAA,cAACyQ,EAAD,CAAOjP,UAAWuP,iDAOxBC,KAAQC,iBAAiB,mBAAoB/R,KAAKoO,iBAClDM,KAAWqD,iBAAiB,SAAU/R,KAAKqO,mBAC3C2D,KAASD,iBAAiB,SAAU/R,KAAKmR,6DAIzCW,KAAQG,oBAAoB,mBAAoBjS,KAAKoO,iBACrDM,KAAWuD,oBAAoB,SAAUjS,KAAKqO,mBAC9C2D,KAASC,oBAAoB,SAAUjS,KAAKmR,yBAjCxB/P,iBAoDX8Q,GAAMC,YACjB,KACA,CACE3X,oBACA6T,qBACAD,oBALe+D,CAOjB9P,cC/EI3C,GAAS+D,IAAWC,OAAO,CAC/B0O,KAAM,CACJ3N,YAAa,QACbC,aAAc,GACdC,YAAa,GACbS,OAAQ,GACRiN,YAAa,GACbC,WAAY,GACZnN,MAAO,IAETvI,OAAQ,CACN8K,KAAM,EACN9C,cAAe,MACfC,eAAgB,kBAWdxC,eAGJ,SAAAA,EAAY5B,GAAc,IAAAoB,EAAAlI,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAqC,IACxBR,EAAAlI,OAAAsG,EAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,EAAA,EAAAvG,CAAA0I,GAAAH,KAAAlC,KAAMS,KAHA8R,kBAEkB,MAAA/R,EAEEqB,EAAKpB,MAAvB0E,EAFgB3E,EAEhB2E,MAAOC,EAFS5E,EAET4E,OAFS,OAGxBvD,EAAK0Q,aAAe,IAAIC,KAASC,QAAQ,CAAEC,EAAGvN,EAAQ,EAAGwN,EAAGvN,EAAS,IAH7CvD,wEAMV,IAAAO,EAAApC,KACN4S,EAAY5S,KAAKS,MAAjBmS,QACR,OACE9R,EAAA,cAAC+R,GAAD,CAAQ7K,YAAa,kBAAM4K,EAAQE,WACjChS,EAAA,cAAC0R,GAAA,EAAS/K,KAAV,CAAezG,MAAO,CAAChB,KAAKuS,aAAaQ,YAAarT,GAAO0S,QAC7DtR,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAOtB,GAAO9C,QAClBkE,EAAA,cAAC6L,GAAD,CAAQhM,MAAM,UAAUmF,QAAS,kBAAM1D,EAAK4Q,QAAQ,GAAK,OACzDlS,EAAA,cAAC6L,GAAD,CACEhM,MAAM,SACNmF,QAAS,kBAAM1D,EAAK4Q,QAAQC,KAAKC,SAAUD,KAAKC,+CAO1CC,EAAYC,GAAY,IAAAtP,EACZ9D,KAAKS,MAAvB0E,EAD8BrB,EAC9BqB,MAAOC,EADuBtB,EACvBsB,OACfoN,KAASa,OAAOrT,KAAKuS,aAAc,CACjCe,QAAS,CAAEZ,EAAGvN,EAAQgO,EAAIR,EAAGvN,EAASgO,KACrCG,eA7BiBnS,iBAsCXoS,GAAOrB,YALI,SAAC5Y,GAAD,MAAuB,CAC7C6L,OAAQqJ,GAAUlV,GAClB4L,MAAOmJ,GAAS/U,KAGE4Y,CAAyB9P,IC5DrC+C,GAAWsJ,KAAWC,IAAI,UAA1BvJ,OACFqO,GAAQ,CACZ,CACE/X,MAAO,UACPV,KAAM,OACN0Y,MAAO,UAET,CACEhY,MAAO,UACPV,KAAM,QACN0Y,MAAO,UAET,CACEhY,MAAO,UACPV,KAAM,eACN0Y,MAAO,UAET,CACEhY,MAAO,UACPV,KAAM,WACN0Y,MAAO,UAET,CACEhY,MAAO,UACPV,KAAM,QACN0Y,MAAO,WAET,CACEhY,MAAO,UACPV,KAAM,YACN0Y,MAAO,UAET,CACEhY,MAAO,UACPV,KAAM,SACN0Y,MAAO,WAMEC,GAAb,SAAA7T,GAAA,SAAA6T,IAAA,IAAA/R,EAAAC,EAAAlI,OAAAoG,EAAA,EAAApG,CAAAqG,KAAA2T,GAAA,QAAA7R,EAAA5C,UAAAC,OAAA4C,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/C,UAAA+C,GAAA,OAAAJ,EAAAlI,OAAAsG,EAAA,EAAAtG,CAAAqG,MAAA4B,EAAAjI,OAAAuG,EAAA,EAAAvG,CAAAga,IAAAzR,KAAA/B,MAAAyB,EAAA,CAAA5B,MAAAP,OAAAsC,MACSxI,MAAQ,CACboZ,EAAG,IAAIH,KAASoB,MAAM,IAF1B/R,EAAA,OAAAlI,OAAAyG,EAAA,EAAAzG,CAAAga,EAAA7T,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAga,EAAA,EAAArT,IAAA,SAAAC,MAAA,WAKkB,IACNoS,EAAM3S,KAAKzG,MAAXoZ,EACAC,EAAY5S,KAAKS,MAAjBmS,QACR,OACE9R,EAAA,cAAC+R,GAAD,CAAQrK,eAAa,EAACR,YAAa,kBAAM4K,EAAQE,WAC/ChS,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAOtB,GAAO6E,WAClBzD,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAOyC,IAAWoQ,cACrBJ,GAAMK,IAAI,SAACC,EAAMC,GAChB,IAAMC,EAAa,EA1Dd,IA0D4B,GAC3BC,EAAc,CA3Df,IA4DUF,EACb,KAA4BA,GAE1BA,EAAI,IACNC,EAAWE,KA9DP,GA8D0BH,GAC9BE,EAAYC,KAAK,KAA8BH,IAEjD,IAAMI,EAAazB,EAAE0B,YAAY,CAC/BC,iBAAkB,QAClBL,aACAC,gBAEF,OACEpT,EAAA,cAAC0R,GAAA,EAAS/K,KAAV,CACEnH,IAAKyT,EAAK/Y,KACVgG,MAAO,CAAEuT,UAAW,CAAC,CAAEH,iBAEvBtT,EAAA,cAAC2G,GAAA,EAAD,CACEzG,MAAO,CAACtB,GAAOqU,KAAM,CAAE1P,gBAAiB0P,EAAKrY,cAMvDoF,EAAA,cAAC0R,GAAA,EAASgC,WAAV,CACEC,oBAAqB,GACrBC,sBAAuBhV,GAAOiV,QAC9BC,8BAA8B,EAC9BC,SAAUrC,KAASsC,MAAM,CACvB,CACEC,YAAa,CACXC,cAAe,CAAErC,iBA9CnCgB,EAAA,CAA2BvS,iBAyDrB1B,GAAS+D,IAAWC,OAAO,CAC/BqQ,KAAM,CACJrP,aAAc,GACdU,OAzGe,KA2GjBb,UAAW,CACTmD,KAAM,GAERiN,QAAS,CACPvP,OAAiB,EAATA,IAEV9J,KAAM,CACJoM,KAAM,EACNlC,OAAQ,eCjHCyP,GAAb,SAAAnV,GAAA,SAAAmV,IAAA,OAAAtb,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAiV,GAAAtb,OAAAsG,EAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,EAAA,EAAAvG,CAAAsb,GAAA9U,MAAAH,KAAAd,YAAA,OAAAvF,OAAAyG,EAAA,EAAAzG,CAAAsb,EAAAnV,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAsb,EAAA,EAAA3U,IAAA,SAAAC,MAAA,WACkB,IACNqS,EAAY5S,KAAKS,MAAjBmS,QACR,OACE9R,EAAA,cAAC+R,GAAD,CAAQ7K,YAAa,kBAAM4K,EAAQE,WACjChS,EAAA,cAAC0T,GAAA,EAAD,KACE1T,EAAA,cAACI,GAAD,CAAMnE,IAAE,EAAC4D,MAAM,qDACfG,EAAA,cAACI,GAAD,CAAMjE,IAAE,EAAC0D,MAAM,qDACfG,EAAA,cAACI,GAAD,CAAMhE,IAAE,EAACyD,MAAM,qDACfG,EAAA,cAACI,GAAD,CAAM/D,IAAE,EAACwD,MAAM,qDACfG,EAAA,cAACI,GAAD,CAAM9D,IAAE,EAACuD,MAAM,qDACfG,EAAA,cAACI,GAAD,CAAM7D,IAAE,EAACsD,MAAM,qDACfG,EAAA,cAACI,GAAD,CACE3D,WAAS,EACToD,MAAM,4DAERG,EAAA,cAACI,GAAD,CACE1D,WAAS,EACTmD,MAAM,4DAERG,EAAA,cAACI,GAAD,CACE3E,OAAK,EACLoE,MAAM,wDAERG,EAAA,cAACI,GAAD,CACEvE,OAAK,EACLgE,MAAM,wDAERG,EAAA,cAACI,GAAD,CACE5D,UAAQ,EACRqD,MAAM,2DAERG,EAAA,cAACI,GAAD,CACEpE,SAAO,EACP6D,MAAM,0DAERG,EAAA,cAACI,GAAD,CACEtE,QAAM,EACN+D,MAAM,yDAERG,EAAA,cAACI,GAAD,CAAMP,MAAM,gEAxCtBsU,EAAA,CAA2B7T,2BCMrB1B,GAAS+D,IAAWC,OAAO,CAC/B0O,KAAM,CACJ3N,YAAa,QACbC,aAAc,GACdC,YAAa,GACbS,OAAQ,GACRiN,YAAa,GACbC,WAAY,GACZnN,MAAO,MAWL9C,eAIJ,SAAAA,EAAY5B,GAAc,IAAAoB,EAAAlI,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAqC,IACxBR,EAAAlI,OAAAsG,EAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,EAAA,EAAAvG,CAAA0I,GAAAH,KAAAlC,KAAMS,KAJA8R,kBAGkB,EAAA1Q,EAFlBqT,gBAEkB,MAAA1U,EAEEqB,EAAKpB,MAAvB0E,EAFgB3E,EAEhB2E,MAAOC,EAFS5E,EAET4E,OAFS,OAGxBvD,EAAK0Q,aAAe,IAAIC,KAASC,QAAQ,CAAEC,EAAGvN,EAAQ,EAAGwN,EAAGvN,EAAS,IACrEvD,EAAKqT,WAAaC,KAAazR,OAAO,CACpC0R,mCAAoC,kBAAM,GAC1CC,mBAAoB,SAACC,EAAGC,GACtB/C,KAASa,OAAOxR,EAAK0Q,aAAc,CACjCe,QAAS,CAAEZ,EAAG6C,EAAaC,MAAO7C,EAAG4C,EAAaE,SACjDlC,WATiB1R,wEAcV,IACN+Q,EAAY5S,KAAKS,MAAjBmS,QACR,OACE9R,EAAA,cAAC+R,GAAD,CAAQrK,eAAa,EAACR,YAAa,kBAAM4K,EAAQE,WAC/ChS,EAAA,cAACI,GAAD,CAAMC,QAAM,EAACR,MAAM,oBACnBG,EAAA,cAAC0R,GAAA,EAAS/K,KAAV9N,OAAAkJ,OAAA,CACE7B,MAAO,CAAChB,KAAKuS,aAAaQ,YAAarT,GAAO0S,OAC1CpS,KAAKkV,WAAWQ,sBAzBNtU,iBAqCXuU,GAAOxD,YALI,SAAC5Y,GAAD,MAAuB,CAC7C6L,OAAQqJ,GAAUlV,GAClB4L,MAAOmJ,GAAS/U,KAGE4Y,CAAyB9P,IC9DhCuT,GAAb,SAAA9V,GAAA,SAAA8V,IAAA,OAAAjc,OAAAoG,EAAA,EAAApG,CAAAqG,KAAA4V,GAAAjc,OAAAsG,EAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,EAAA,EAAAvG,CAAAic,GAAAzV,MAAAH,KAAAd,YAAA,OAAAvF,OAAAyG,EAAA,EAAAzG,CAAAic,EAAA9V,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAic,EAAA,EAAAtV,IAAA,SAAAC,MAAA,WACkB,IACNqS,EAAY5S,KAAKS,MAAjBmS,QACR,OACE9R,EAAA,cAAC+R,GAAD,CAAQ7K,YAAa,kBAAM4K,EAAQE,WACjChS,EAAA,cAAC0T,GAAA,EAAD,KACE1T,EAAA,cAAC6L,GAAD,CAAQhM,MAAM,UAAUmF,QAAS,eACjChF,EAAA,cAAC6L,GAAD,CAAQlH,SAAO,EAAC9E,MAAM,UAAUmF,QAAS,eACzChF,EAAA,cAAC6L,GAAD,CAAQvQ,MAAI,EAACuE,MAAM,OAAOmF,QAAS,eACnChF,EAAA,cAAC6L,GAAD,CAAQhH,UAAQ,EAAChF,MAAM,WAAWmF,QAAS,eAC3ChF,EAAA,cAAC6L,GAAD,CAAQ3G,WAAS,EAACrF,MAAM,YAAYmF,QAAS,eAE7ChF,EAAA,cAAC6L,GAAD,CAAQ1G,MAAI,EAACtF,MAAM,UAAUmF,QAAS,eACtChF,EAAA,cAAC6L,GAAD,CAAQ1G,MAAI,EAACR,SAAO,EAAC9E,MAAM,UAAUmF,QAAS,eAC9ChF,EAAA,cAAC6L,GAAD,CAAQ1G,MAAI,EAAC7J,MAAI,EAACuE,MAAM,OAAOmF,QAAS,eACxChF,EAAA,cAAC6L,GAAD,CAAQ1G,MAAI,EAACN,UAAQ,EAAChF,MAAM,WAAWmF,QAAS,eAChDhF,EAAA,cAAC6L,GAAD,CAAQ1G,MAAI,EAACD,WAAS,EAACrF,MAAM,YAAYmF,QAAS,eAElDhF,EAAA,cAAC6L,GAAD,CAAQzH,MAAI,EAACvE,MAAM,UAAUmF,QAAS,eACtChF,EAAA,cAAC6L,GAAD,CAAQzH,MAAI,EAACO,SAAO,EAAC9E,MAAM,UAAUmF,QAAS,eAC9ChF,EAAA,cAAC6L,GAAD,CAAQzH,MAAI,EAAC9I,MAAI,EAACuE,MAAM,OAAOmF,QAAS,eACxChF,EAAA,cAAC6L,GAAD,CAAQzH,MAAI,EAACS,UAAQ,EAAChF,MAAM,WAAWmF,QAAS,eAChDhF,EAAA,cAAC6L,GAAD,CAAQzH,MAAI,EAACc,WAAS,EAACrF,MAAM,YAAYmF,QAAS,eAElDhF,EAAA,cAAC6L,GAAD,CAAQzH,MAAI,EAAC/D,QAAM,EAACR,MAAM,UAAUmF,QAAS,eAC7ChF,EAAA,cAAC6L,GAAD,CACEzH,MAAI,EACJ/D,QAAM,EACNsE,SAAO,EACP9E,MAAM,UACNmF,QAAS,eAEXhF,EAAA,cAAC6L,GAAD,CAAQzH,MAAI,EAAC/D,QAAM,EAAC/E,MAAI,EAACuE,MAAM,OAAOmF,QAAS,eAC/ChF,EAAA,cAAC6L,GAAD,CACEzH,MAAI,EACJ/D,QAAM,EACNwE,UAAQ,EACRhF,MAAM,WACNmF,QAAS,eAEXhF,EAAA,cAAC6L,GAAD,CACEzH,MAAI,EACJ/D,QAAM,EACN6E,WAAS,EACTrF,MAAM,YACNmF,QAAS,eAGXhF,EAAA,cAAC6L,GAAD,CAAQ/G,OAAK,EAACjF,MAAM,UAAUmF,QAAS,eACvChF,EAAA,cAAC6L,GAAD,CAAQ/G,OAAK,EAACH,SAAO,EAAC9E,MAAM,UAAUmF,QAAS,eAC/ChF,EAAA,cAAC6L,GAAD,CAAQ/G,OAAK,EAACxJ,MAAI,EAACuE,MAAM,OAAOmF,QAAS,eACzChF,EAAA,cAAC6L,GAAD,CAAQ/G,OAAK,EAACD,UAAQ,EAAChF,MAAM,WAAWmF,QAAS,eACjDhF,EAAA,cAAC6L,GAAD,CAAQ/G,OAAK,EAACI,WAAS,EAACrF,MAAM,YAAYmF,QAAS,eAEnDhF,EAAA,cAAC6L,GAAD,CAAQ5G,SAAO,EAACE,MAAI,EAACtF,MAAM,UAAUmF,QAAS,eAC9ChF,EAAA,cAAC6L,GAAD,CACE5G,SAAO,EACPE,MAAI,EACJR,SAAO,EACP9E,MAAM,UACNmF,QAAS,eAEXhF,EAAA,cAAC6L,GAAD,CAAQ5G,SAAO,EAACE,MAAI,EAAC7J,MAAI,EAACuE,MAAM,OAAOmF,QAAS,eAChDhF,EAAA,cAAC6L,GAAD,CACE5G,SAAO,EACPE,MAAI,EACJN,UAAQ,EACRhF,MAAM,WACNmF,QAAS,eAEXhF,EAAA,cAAC6L,GAAD,CACE5G,SAAO,EACPE,MAAI,EACJD,WAAS,EACTrF,MAAM,YACNmF,QAAS,eAGXhF,EAAA,cAAC6L,GAAD,CAAQzH,MAAI,EAACG,KAAK,QAAQ1E,MAAM,UAAUmF,QAAS,eACnDhF,EAAA,cAAC6L,GAAD,CACEzH,MAAI,EACJG,KAAK,QACLI,SAAO,EACP9E,MAAM,UACNmF,QAAS,eAEXhF,EAAA,cAAC6L,GAAD,CACEzH,MAAI,EACJG,KAAK,QACLjJ,MAAI,EACJuE,MAAM,OACNmF,QAAS,eAEXhF,EAAA,cAAC6L,GAAD,CACEzH,MAAI,EACJG,KAAK,QACLM,UAAQ,EACRhF,MAAM,WACNmF,QAAS,eAEXhF,EAAA,cAAC6L,GAAD,CACEzH,MAAI,EACJG,KAAK,QACLW,WAAS,EACTrF,MAAM,YACNmF,QAAS,eAGXhF,EAAA,cAAC6L,GAAD,CAAQ1G,MAAI,EAACZ,KAAK,QAAQS,QAAS,eACnChF,EAAA,cAAC6L,GAAD,CAAQ1G,MAAI,EAACZ,KAAK,QAAQI,SAAO,EAACK,QAAS,eAC3ChF,EAAA,cAAC6L,GAAD,CAAQ1G,MAAI,EAACZ,KAAK,QAAQjJ,MAAI,EAAC0J,QAAS,eACxChF,EAAA,cAAC6L,GAAD,CAAQ1G,MAAI,EAACZ,KAAK,QAAQM,UAAQ,EAACG,QAAS,eAC5ChF,EAAA,cAAC6L,GAAD,CAAQ1G,MAAI,EAACZ,KAAK,QAAQW,WAAS,EAACF,QAAS,eAE7ChF,EAAA,cAAC6L,GAAD,CAAQ1H,KAAG,EAACI,KAAK,QAAQS,QAAS,eAClChF,EAAA,cAAC6L,GAAD,CAAQ1H,KAAG,EAACI,KAAK,QAAQa,UAAU,MAAMJ,QAAS,eAClDhF,EAAA,cAAC6L,GAAD,CAAQ1H,KAAG,EAACI,KAAK,QAAQI,SAAO,EAACK,QAAS,eAC1ChF,EAAA,cAAC6L,GAAD,CAAQ1H,KAAG,EAACI,KAAK,QAAQjJ,MAAI,EAAC0J,QAAS,eACvChF,EAAA,cAAC6L,GAAD,CAAQ1H,KAAG,EAACI,KAAK,QAAQM,UAAQ,EAACG,QAAS,eAC3ChF,EAAA,cAAC6L,GAAD,CAAQ1H,KAAG,EAACI,KAAK,QAAQW,WAAS,EAACF,QAAS,qBAvHtD8P,EAAA,CAA6BxU,iBCIhByU,GAAb,WAKE,SAAAA,IAAqC,IAAAC,GAAA5W,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,IAAnB6W,kBAAuB,IAAAD,EAAV,EAAUA,EAAAnc,OAAAoG,EAAA,EAAApG,CAAAqG,KAAA6V,GAAA7V,KAJ7B+V,gBAI6B,EAAA/V,KAH7BgW,OAAkB,GAGWhW,KAF7BuT,MAAiB,GAGvBvT,KAAK+V,WAAaA,EANtB,OAAApc,OAAA0G,EAAA,EAAA1G,CAAAkc,EAAA,EAAAvV,IAAA,qBAAAC,MAAA,SAS4BuU,GAAY,IAAAjT,EAAA7B,KACA8U,EAAMC,YAAYkB,QAC9CnC,IAAI,SAACoC,GACXrU,EAAKsU,aAAaD,GAClBrU,EAAKuU,YAAYF,OAbvB,CAAA5V,IAAA,wBAAAC,MAAA,WAkBI,IAAM8V,EAAUrW,KAAKsW,mBAGrB,OAFAtW,KAAKuT,MAAQ,GACbvT,KAAKgW,OAAS,GACPK,IArBX,CAAA/V,IAAA,cAAAC,MAAA,SAwBsB2V,GACdlW,KAAKuW,uBAAuBL,KAGhClW,KAAKuT,MAAMlK,OAAO6M,EAAMM,aAAe,CACrC9D,EAAGwD,EAAMO,UACT9D,EAAGuD,EAAMQ,cA9Bf,CAAApW,IAAA,yBAAAC,MAAA,SAkCiC2V,GAC7B,OAAOlW,KAAKuT,MAAMlK,OAAO6M,EAAMM,eAnCnC,CAAAlW,IAAA,eAAAC,MAAA,SAsCuB2V,GACnBlW,KAAKgW,OAAO3M,OAAO6M,EAAMM,aAAe,CACtC9D,EAAGwD,EAAMO,UACT9D,EAAGuD,EAAMQ,aAzCf,CAAApW,IAAA,WAAAC,MAAA,SA8CIgT,EACAyC,EACA7U,GAEA,IAAMwV,EAAiB1D,KAAK2D,IAAIrD,EAAMb,EAAIvR,EAAOuR,GAC3CmE,EAAiB5D,KAAK2D,IAAIrD,EAAMZ,EAAIxR,EAAOwR,GAC3CmE,EAAkB7D,KAAK2D,IAAIZ,EAAOtD,EAAIvR,EAAOuR,GAC7CqE,EAAkB9D,KAAK2D,IAAIZ,EAAOrD,EAAIxR,EAAOwR,GACnD,OACEgE,GAAkBG,GAAmBD,GAAkBE,IAvD7D,CAAAzW,IAAA,kBAAAC,MAAA,SA2D0ByW,GAItB,IAHA,IAAMC,EAAqBtd,OAAOud,KAAKF,GAAQ7X,OAC3CuT,EAAI,EACJC,EAAI,EACCqB,EAAI,EAAGA,GAAKiD,EAAoBjD,IAAK,CAC5C,IAAMmD,EAAQH,EAAOhD,GACrBtB,GAAKyE,EAAMzE,EACXC,GAAKwE,EAAMzE,EAEb,MAAO,CAAEA,EAAGA,EAAIuE,EAAoBtE,EAAGA,EAAIsE,KApE/C,CAAA3W,IAAA,mBAAAC,MAAA,WAwEI,IAAM0W,EAAqBtd,OAAOud,KAAKlX,KAAKuT,OAAOpU,OAC7CkX,EAAU,CACde,OAAO,EACPC,QAAQ,GAEV,GAAIJ,EAAqBjX,KAAK+V,WAC5B,OAAOM,EAKT,IAHA,IAAIgB,GAAS,EACTD,GAAQ,EACNjW,EAASnB,KAAKsX,gBAAgBtX,KAAKuT,OAChCS,EAAI,EAAGA,GAAKiD,EAAoBjD,IAAK,CAC5C,IAAMT,EAAQvT,KAAKuT,MAAMS,GACnBgC,EAAShW,KAAKgW,OAAOhC,GACrBuD,GAAWvX,KAAKwX,SAASjE,EAAOyC,EAAQ7U,GACxCqW,EAAWxX,KAAKwX,SAASjE,EAAOyC,EAAQ7U,GAC9C,GAAIoW,GAAWC,EACb,OAAOnB,EAET,IAAKkB,IAAYC,EACf,OAAOnB,EAET,GAAIkB,GAAWF,EACb,OAAOhB,EAET,GAAImB,GAAYJ,EACd,OAAOf,EAETe,EAAQG,EACRF,EAASG,EAEX,MAAO,CAAEH,SAAQD,aAvGrBvB,EAAA,GCGMnW,GAAS+D,IAAWC,OAAO,CAC/Ba,UAAW,CACTmD,KAAM,KAWJrF,eAYJ,SAAAA,EAAY5B,GAAc,IAAAoB,EAAA,OAAAlI,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAqC,IACxBR,EAAAlI,OAAAsG,EAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,EAAA,EAAAvG,CAAA0I,GAAAH,KAAAlC,KAAMS,KAZDlH,MAAQ,CACbke,WAAY,EACZC,YAAa,GASW7V,EAPlBqT,gBAOkB,EAAArT,EANlB8V,oBAMkB,EAAA9V,EALlBkU,WAAa,EAKKlU,EAJlBlB,MAIkB,mCAAAlB,OAHxBoC,EAAKkU,WAGmB,oBAExBlU,EAAK8V,eAAiB,IAAI9B,GAAe,CAAEE,WAAYlU,EAAKkU,aAC5DlU,EAAKqT,WAAaC,KAAazR,OAAO,CACpC0R,mCAAoC,kBAAM,GAC1CC,mBAAoB,SAAAP,GAClBjT,EAAK8V,eAAetC,mBAAmBP,IAEzC8C,sBAAuB,WAAM,IAAAC,EACShW,EAAKtI,MAAjCme,EADmBG,EACnBH,YAAaD,EADMI,EACNJ,WACfpB,EAAUxU,EAAK8V,eAAeC,wBAChCvB,EAAQgB,QACVxV,EAAK8I,SAAS,CAAE+M,YAAaA,EAAc,IAEzCrB,EAAQe,OACVvV,EAAK8I,SAAS,CAAE8M,WAAYA,EAAa,OAfvB5V,wEAqBV,IACN+Q,EAAY5S,KAAKS,MAAjBmS,QADMkF,EAEsB9X,KAAKzG,MAAjCme,EAFMI,EAENJ,YAAaD,EAFPK,EAEOL,WACrB,OACE3W,EAAA,cAAC+R,GAAD,CAAQrK,eAAa,EAACR,YAAa,kBAAM4K,EAAQE,WAC/ChS,EAAA,cAACI,GAAD,CAAMC,QAAM,EAACR,MAAOX,KAAKW,QACzBG,EAAA,cAACI,GAAD,CAAMC,QAAM,EAACR,MAAK,WAAAlB,OAAaiY,KAC/B5W,EAAA,cAACI,GAAD,CAAMC,QAAM,EAACR,MAAK,UAAAlB,OAAYgY,KAC9B3W,EAAA,cAAC0R,GAAA,EAAS/K,KAAV9N,OAAAkJ,OAAA,CACE7B,MAAOtB,GAAO6E,WACVvE,KAAKkV,WAAWQ,sBA3CNtU,iBAuDX2W,GAAc5F,YALH,SAAC5Y,GAAD,MAAuB,CAC7C6L,OAAQqJ,GAAUlV,GAClB4L,MAAOmJ,GAAS/U,KAGS4Y,CAAyB9P,wBCpE9C3C,GAAS+D,IAAWC,OAAO,CAC/Ba,UAAW,CACTmD,KAAM,GAERsQ,OAAQ,CACN3T,gBAAiB5I,EAAMC,MAAMM,MAC7BoJ,OAAQ3J,EAAMgC,QAAQqB,IACtB+F,eAAgB,SAChBpH,QAAShC,EAAMgC,QAAQG,KAEzB9D,KAAM,CACJme,kBAAmBxc,EAAMC,MAAMM,MAC/B2I,YAAa,GACblH,QAAShC,EAAMgC,QAAQO,KAEzB5B,KAAM,CACJE,SAAUb,EAAMgC,QAAQO,KAE1Bka,cAAe,CACb1T,WAAY,SACZH,gBAAiB5I,EAAMC,MAAMC,WAC7BiJ,cAAe,MACfQ,OAAQ,OACR3H,QAAShC,EAAMgC,QAAQG,KAEzB6M,UAAW,CACT/C,KAAM,EACN2K,WAAY5W,EAAMgC,QAAQG,OAIxBua,GAAO,CACX,CAAErI,GAAI,EAAG9U,KAAM,KACf,CAAE8U,GAAI,EAAG9U,KAAM,KACf,CAAE8U,GAAI,EAAG9U,KAAM,KACf,CAAE8U,GAAI,EAAG9U,KAAM,KACf,CAAE8U,GAAI,EAAG9U,KAAM,KACf,CAAE8U,GAAI,EAAG9U,KAAM,KACf,CAAE8U,GAAI,EAAG9U,KAAM,KACf,CAAE8U,GAAI,EAAG9U,KAAM,KACf,CAAE8U,GAAI,EAAG9U,KAAM,KACf,CAAE8U,GAAI,GAAI9U,KAAM,MAChB,CAAE8U,GAAI,GAAI9U,KAAM,MAChB,CAAE8U,GAAI,GAAI9U,KAAM,MAChB,CAAE8U,GAAI,GAAI9U,KAAM,MAChB,CAAE8U,GAAI,GAAI9U,KAAM,MAChB,CAAE8U,GAAI,GAAI9U,KAAM,MAChB,CAAE8U,GAAI,GAAI9U,KAAM,MAChB,CAAE8U,GAAI,GAAI9U,KAAM,MAChB,CAAE8U,GAAI,GAAI9U,KAAM,MAChB,CAAE8U,GAAI,GAAI9U,KAAM,OAWLod,GAAb,SAAAtY,GA2BE,SAAAsY,EAAY3X,GAAc,IAAAoB,EAAA,OAAAlI,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAoY,IACxBvW,EAAAlI,OAAAsG,EAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,EAAA,EAAAvG,CAAAye,GAAAlW,KAAAlC,KAAMS,KA3BD4X,WAAa,UA0BMxW,EAzBnBtI,MAAe,CACpB+e,UAAW,IAAI9F,KAASoB,MAAM,GAC9B2E,SAAU1W,EAAKwW,WACf9L,MAAO,IAsBiB1K,EApBlB2W,SAAW,aAoBO3W,EAnBlB4W,qBAAuB,SAmBL5W,EAlBlB6W,kBAAoB,IAkBF7W,EAjBlB8W,cAAgB9W,EAAKtI,MAAM+e,UAAUjE,YAAY,CACvDJ,WAAY,CAAC,EAAG,GAAK,GACrBC,YAAa,CAAC,GAAI,GAAI,KAeErS,EAblB+W,cAAgB/W,EAAKtI,MAAM+e,UAAUjE,YAAY,CACvDJ,WAAY,CAAC,EAAG,GAChBC,YAAa,CACXzY,EAAMC,MAAMC,WACZoD,EAAiBtD,EAAMC,MAAMQ,cASP2F,EANlBgX,uBAMkB,EAAAhX,EALlBiX,6BAKkB,EAAAjX,EAJlBkX,6BAIkB,EAAAlX,EAHlBmX,8BAGkB,EAAAnX,EAFlBoX,8BAEkB,EAAApX,EAuFlBqX,iBAAmB,WACrBC,IAASC,KAAOre,EAAOG,GAAGE,KAG9ByG,EAAKwX,oBA3FmBxX,EA8FlByX,iBAAmB,WACrBH,IAASC,KAAOre,EAAOG,GAAGE,KAG9ByG,EAAK0X,sBAlGmB1X,EAqGlB2X,gBAAkB,WACpBL,IAASC,KAAOre,EAAOG,GAAGC,SAG9B0G,EAAKwX,oBAzGmBxX,EA4GlB4X,gBAAkB,WACpBN,IAASC,KAAOre,EAAOG,GAAGC,SAG9B0G,EAAK0X,sBA9GL1X,EAAKiX,wBAA0BY,KAASC,YACtC,kBACA9X,EAAK2X,iBAEP3X,EAAKkX,wBAA0BW,KAASC,YACtC,kBACA9X,EAAK4X,iBAEP5X,EAAKmX,yBAA2BU,KAASC,YACvC,mBACA9X,EAAKqX,kBAEPrX,EAAKoX,yBAA2BS,KAASC,YACvC,mBACA9X,EAAKyX,kBAhBiBzX,EA3B5B,OAAAlI,OAAAyG,EAAA,EAAAzG,CAAAye,EAAAtY,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAye,EAAA,EAAA9X,IAAA,uBAAAC,MAAA,WAgDIP,KAAK8Y,wBAAwBc,SAC7B5Z,KAAK+Y,wBAAwBa,SAC7B5Z,KAAKgZ,yBAAyBY,SAC9B5Z,KAAKiZ,yBAAyBW,SAC9BC,aAAa7Z,KAAK6Y,qBApDtB,CAAAvY,IAAA,SAAAC,MAAA,WAuDkB,IAAA6B,EAAApC,KACN4S,EAAY5S,KAAKS,MAAjBmS,QADMiF,EAEc7X,KAAKzG,MAAzBgf,EAFMV,EAENU,SAAUhM,EAFJsL,EAEItL,MAClB,OACEzL,EAAA,cAAC+R,GAAD,CAAQ7K,YAAa,kBAAM4K,EAAQE,WACjChS,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAOtB,GAAOsY,QAClBlX,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAOtB,GAAOwY,eAClBpX,EAAA,cAAC0R,GAAA,EAAS/K,KAAV,CACEzG,MAAO,CACLuT,UAAW,CAAC,CAAEuF,WAAY9Z,KAAK2Y,kBAGjC7X,EAAA,cAAC4F,GAAD,CAAM1L,KAAMud,EAAUvX,MAAOtB,GAAOtD,QAEtC0E,EAAA,cAACiZ,GAAD,CACExZ,MAAOgM,EACPxB,aAAc,SAACxK,GAAD,OAAmB6B,EAAKuI,SAAS,CAAE4B,MAAOhM,KACxDmL,YAAa1L,KAAKyY,qBAClBzX,MAAO,CAACtB,GAAO+K,UAAW/K,GAAOtD,UAIvC0E,EAAA,cAAC0R,GAAA,EAAS/K,KAAV,CAAezG,MAAO,CAAE0G,KAAM,EAAGrD,gBAAiBrE,KAAK4Y,gBACrD9X,EAAA,cAACkZ,GAAA,EAAD,CACEC,aAAc,SAAAngB,GAAI,OAAIA,EAAKgW,GAAGoK,YAC9BC,KAAMhC,GACNiC,WAAY,SAAA/W,GAAA,IAAGvJ,EAAHuJ,EAAGvJ,KAAH,OACVgH,EAAA,cAACI,GAAD,CAAM1D,WAAS,EAACwD,MAAOtB,GAAO5F,KAAM6G,MAAO7G,EAAKkB,cAlF9D,CAAAsF,IAAA,mBAAAC,MAAA,WA2FIP,KAAKgT,QAAQ,GACbhT,KAAKqa,WAAWra,KAAKwY,YA5FzB,CAAAlY,IAAA,UAAAC,MAAA,SA+FkBA,GACdiS,KAAS8H,OAAOta,KAAKzG,MAAM+e,UAAW,CACpCiC,SAAUva,KAAK0Y,kBACfpF,QAAS/S,IACRgT,UAnGP,CAAAjT,IAAA,aAAAC,MAAA,SAsGqBgY,GAAkB,IAAAiC,EAAAxa,KACnCA,KAAK6Y,kBAAoBpX,WAAW,WAClCoY,aAAaW,EAAK3B,mBAClB2B,EAAK7P,SAAS,CAAE4N,cACfvY,KAAK0Y,kBAAoB,KA1GhC,CAAApY,IAAA,qBAAAC,MAAA,WA8GIP,KAAKgT,QAAQ,GACbhT,KAAKqa,WAAWra,KAAKqY,gBA/GzBD,EAAA,CAA+BhX,iBClElBqZ,GAAb,SAAA3a,GAAA,SAAA2a,IAAA,IAAA7Y,EAAAC,EAAAlI,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAya,GAAA,QAAA3Y,EAAA5C,UAAAC,OAAA4C,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/C,UAAA+C,GAAA,OAAAJ,EAAAlI,OAAAsG,EAAA,EAAAtG,CAAAqG,MAAA4B,EAAAjI,OAAAuG,EAAA,EAAAvG,CAAA8gB,IAAAvY,KAAA/B,MAAAyB,EAAA,CAAA5B,MAAAP,OAAAsC,MACSxI,MAAQ,CACbgH,MAAO,GAFXsB,EAAA,OAAAlI,OAAAyG,EAAA,EAAAzG,CAAA8gB,EAAA3a,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAA8gB,EAAA,EAAAna,IAAA,SAAAC,MAAA,WAIkB,IACNqS,EAAY5S,KAAKS,MAAjBmS,QACR,OACE9R,EAAA,cAAC+R,GAAD,CAAQrK,eAAa,EAACR,YAAa,kBAAM4K,EAAQE,WAC/ChS,EAAA,cAAC0T,GAAA,EAAD,CACEE,sBAAuB,CAAE5P,kBAAmBrJ,EAAMgC,QAAQM,MAE1D+C,EAAA,cAAC4Z,GAAD,KACE5Z,EAAA,cAACI,GAAD,CAAM7D,IAAE,EAACsD,MAAM,YACfG,EAAA,cAAC4Z,GAAD,CAAM5U,QAAS,cACbhF,EAAA,cAACI,GAAD,CAAM7D,IAAE,EAACsD,MAAM,YACfG,EAAA,cAACI,GAAD,CACEP,MAAM,0HAIVG,EAAA,cAAC4Z,GAAD,CAAM5U,QAAS,cACbhF,EAAA,cAACI,GAAD,CAAM7D,IAAE,EAACsD,MAAM,WACfG,EAAA,cAACI,GAAD,CAAMP,MAAM,oIAEdG,EAAA,cAAC4Z,GAAD,CAAM5U,QAAS,cACbhF,EAAA,cAACI,GAAD,CAAM7D,IAAE,EAACsD,MAAM,WACfG,EAAA,cAACI,GAAD,CAAMP,MAAM,uBACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,cACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,wBACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,oBACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,yBACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,8BACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,oCACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,cACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,oBACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,cACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,eACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,cACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,uCACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,sBAGhBG,EAAA,cAAC4Z,GAAD,KACE5Z,EAAA,cAACI,GAAD,CAAM7D,IAAE,EAACsD,MAAM,YACfG,EAAA,cAAC4Z,GAAD,CAAM5U,QAAS,cACbhF,EAAA,cAACI,GAAD,CAAM7D,IAAE,EAACsD,MAAM,WACfG,EAAA,cAACI,GAAD,CAAMP,MAAM,gBAGdG,EAAA,cAAC4Z,GAAD,CAAM5U,QAAS,cACbhF,EAAA,cAACI,GAAD,CAAM7D,IAAE,EAACsD,MAAM,SACfG,EAAA,cAACI,GAAD,CAAMP,MAAM,4BACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,6BACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,6BACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,8BACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,UACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,kBACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,0BAEdG,EAAA,cAAC4Z,GAAD,CAAM5U,QAAS,cACbhF,EAAA,cAACI,GAAD,CAAM7D,IAAE,EAACsD,MAAM,SACfG,EAAA,cAACI,GAAD,CAAMP,MAAM,eACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,kBACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,oBACZG,EAAA,cAACI,GAAD,CAAMP,MAAM,oBAGdG,EAAA,cAAC4Z,GAAD,CAAM5U,QAAS,cACbhF,EAAA,cAACI,GAAD,CAAM7D,IAAE,EAACsD,MAAM,cACfG,EAAA,cAACI,GAAD,CAAMP,MAAM,eACZG,EAAA,cAAC4Z,GAAD,CAAM5U,QAAS,cACbhF,EAAA,cAACI,GAAD,CAAM7D,IAAE,EAACsD,MAAM,cACfG,EAAA,cAACI,GAAD,CAAMP,MAAM,gBAEdG,EAAA,cAAC4Z,GAAD,CAAM5U,QAAS,cACbhF,EAAA,cAACI,GAAD,CAAM7D,IAAE,EAACsD,MAAM,cACfG,EAAA,cAACI,GAAD,CAAMP,MAAM,gBAEdG,EAAA,cAAC4Z,GAAD,CAAM5U,QAAS,cACbhF,EAAA,cAACI,GAAD,CAAM7D,IAAE,EAACsD,MAAM,cACfG,EAAA,cAACI,GAAD,CAAMP,MAAM,iBAGhBG,EAAA,cAAC4Z,GAAD,CAAM5U,QAAS,cACbhF,EAAA,cAACI,GAAD,CAAM7D,IAAE,EAACsD,MAAM,cACfG,EAAA,cAACI,GAAD,CAAMP,MAAM,uBArF1B8Z,EAAA,CAA0BrZ,iBCIbuZ,GAAb,SAAA7a,GAAA,SAAA6a,IAAA,IAAA/Y,EAAAC,EAAAlI,OAAAoG,EAAA,EAAApG,CAAAqG,KAAA2a,GAAA,QAAA7Y,EAAA5C,UAAAC,OAAA4C,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/C,UAAA+C,GAAA,OAAAJ,EAAAlI,OAAAsG,EAAA,EAAAtG,CAAAqG,MAAA4B,EAAAjI,OAAAuG,EAAA,EAAAvG,CAAAghB,IAAAzY,KAAA/B,MAAAyB,EAAA,CAAA5B,MAAAP,OAAAsC,MACSxI,MAAQ,CACbqhB,MAAO,GACP3P,MAAO,GACPjQ,KAAM,GACN6f,SAAU,IALdhZ,EAAA,OAAAlI,OAAAyG,EAAA,EAAAzG,CAAAghB,EAAA7a,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAghB,EAAA,EAAAra,IAAA,SAAAC,MAAA,WAOkB,IAAA6B,EAAApC,KAAA6X,EAC2B7X,KAAKzG,MAAtCqhB,EADM/C,EACN+C,MAAOC,EADDhD,EACCgD,SAAU7f,EADX6c,EACW7c,KAAMiQ,EADjB4M,EACiB5M,MACvB2H,EAAY5S,KAAKS,MAAjBmS,QACR,OACE9R,EAAA,cAAC+R,GAAD,CAAQ7K,YAAa,kBAAM4K,EAAQE,WACjChS,EAAA,cAAC2G,GAAA,EAAD,CACEzG,MAAO,CAAE0G,KAAM,EAAGrD,gBAAiB5I,EAAMC,MAAMM,MAAOyB,QAAS,KAE/DqD,EAAA,cAACiZ,GAAD,CACEpZ,MAAM,OACN+K,YAAY,WACZ3B,UAAQ,EACRxJ,MAAOvF,EACP+P,aAAc,SAAA+P,GAAG,OAAI1Y,EAAKuI,SAAS,CAAE3P,KAAM8f,KAC3C7P,MAAOA,IAETnK,EAAA,cAACiZ,GAAD,CACEpZ,MAAM,QACNJ,MAAOqa,EACP7P,aAAc,SAAA+P,GAAG,OAAI1Y,EAAKuI,SAAS,CAAEiQ,MAAOE,KAC5CxP,aAAc/P,EAAawf,MAC3BrP,YAAY,oBACZT,MAAOA,IAETnK,EAAA,cAACiZ,GAAD,CACExZ,MAAOsa,EACP9P,aAAc,SAAA+P,GAAG,OAAI1Y,EAAKuI,SAAS,CAAEkQ,SAAUC,KAC/Cna,MAAM,WACN+K,YAAY,6CACZL,iBAAe,IAEjBvK,EAAA,cAAC6L,GAAD,CACE3G,WAAS,EACTrF,MAAM,gBACNmF,QAAS,kBAAM1D,EAAKuI,SAAS,CAAEM,MAAO,2BAzClD0P,EAAA,CAA2BvZ,iBCFd4Z,GAAb,SAAAlb,GAAA,SAAAkb,IAAA,IAAApZ,EAAAC,EAAAlI,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAgb,GAAA,QAAAlZ,EAAA5C,UAAAC,OAAA4C,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/C,UAAA+C,GAAA,OAAAJ,EAAAlI,OAAAsG,EAAA,EAAAtG,CAAAqG,MAAA4B,EAAAjI,OAAAuG,EAAA,EAAAvG,CAAAqhB,IAAA9Y,KAAA/B,MAAAyB,EAAA,CAAA5B,MAAAP,OAAAsC,MACSoY,KAAO,CACZ,CACEc,QAAS,CACP,CACE3a,IAAK,IACL4a,UAAU,EACVva,MAAO,cAET,CACEL,IAAK,IACL4a,UAAU,EACVva,MAAO,UAET,CACEL,IAAK,IACL4a,UAAU,EACVva,MAAO,SAGXL,IAAK,IACL6a,KAAM,IACNxa,MAAO,8CACPsO,KAAM,SAER,CAAE3O,IAAK,IAAKK,MAAO,KACnB,CAAEL,IAAK,IAAKK,MAAO,KACnB,CAAEL,IAAK,IAAKK,MAAO,KACnB,CAAEL,IAAK,IAAKK,MAAO,MA5BvBkB,EA8BSuZ,OAAc,GA9BvBvZ,EA+BSsD,MAAQuJ,KAAWC,IAAI,UAAUxJ,MA/B1CtD,EAgCSwZ,eAhCT,EAAAxZ,EAiCSyZ,aAAe,EAjCxBzZ,EAmCS0Z,uBAAyB,SAAAlY,GAA4B,IAAzBmY,EAAyBnY,EAAzBmY,cACjC3Z,EAAKyZ,aAAeE,EAAc,GAAGC,OAAS,GApClD5Z,EAuCS6Z,WAAa,WAAmB,IAAlBC,EAAkBzc,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,EACzBuc,EAAQ5Z,EAAKyZ,aAAeK,EAC9BF,EAAQ,IAGRA,GAAS5Z,EAAKsY,KAAKhb,OACrB0C,EAAK+Z,WAGP/Z,EAAKwZ,UAAUQ,cAAc,CAC3BC,UAAU,EACVL,YAlDN5Z,EAsDSka,YAAc,SAACjiB,EAAWkiB,GAC/Bna,EAAKuZ,OAALzhB,OAAAwV,EAAA,EAAAxV,CAAA,GACKkI,EAAKuZ,OADVzhB,OAAAyW,EAAA,EAAAzW,CAAA,GAEGG,EAAKwG,IAFR3G,OAAAwV,EAAA,EAAAxV,CAAA,GAGOkI,EAAKuZ,OAAOthB,EAAKwG,KAHxB3G,OAAAyW,EAAA,EAAAzW,CAAA,GAIKqiB,EAAO1b,KAAM,OA3DtBuB,EAkES+Z,SAAW,aAlEpB/Z,EAAA,OAAAlI,OAAAyG,EAAA,EAAAzG,CAAAqhB,EAAAlb,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAqhB,EAAA,EAAA1a,IAAA,SAAAC,MAAA,WAoEkB,IAAA6B,EAAApC,KACN4S,EAAY5S,KAAKS,MAAjBmS,QACR,OACE9R,EAAA,cAAC+R,GAAD,CAAQrK,eAAa,EAACR,YAAa,kBAAM4K,EAAQE,WAC/ChS,EAAA,cAACkZ,GAAA,EAAD,CACEpR,eAAe,EACf0D,IAAK,SAACA,GAAD,OAAelK,EAAKiZ,UAAY/O,GACrC2P,uBAAqB,EACrBC,gCAAgC,EAChCtH,8BAA8B,EAC9B2G,uBAAwBvb,KAAKub,uBAC7BY,kBAAmB,CACjBC,4BAA6B,IAE/BC,YAAU,EACVC,eAAa,EACbnC,KAAMna,KAAKma,KACXC,WAAY,SAAAmC,GAAc,IAAXziB,EAAWyiB,EAAXziB,KACTN,EAAasH,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAO,CAAE0G,KAAM,KAoBtC,OAlBI5N,EAAKmhB,UACPzhB,EACEsH,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAO,CAAE0G,KAAM,IAClB5N,EAAKmhB,QAAQnH,IAAI,SAAAkI,GAChB,OACElb,EAAA,cAAC6L,GAAD,CACErM,IAAK0b,EAAOrb,MACZA,MAAOqb,EAAOrb,MACdmF,QAAS,WACP1D,EAAK2Z,YAAYjiB,EAAMkiB,UAUnClb,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAO,CAAEmE,MAAO/C,EAAK+C,QACzBrE,EAAA,cAACI,GAAD,CAAMP,MAAO7G,EAAK6G,QACjBnH,EACDsH,EAAA,cAAC2G,GAAA,EAAD,CACEzG,MAAO,CACL4D,cAAe,MACfC,eAAgB,iBAGlB/D,EAAA,cAAC6L,GAAD,CAAQhM,MAAM,OAAOmF,QAAS,kBAAM1D,EAAKsZ,YAAY,MACrD5a,EAAA,cAAC6L,GAAD,CAAQhM,MAAM,OAAOmF,QAAS,kBAAM1D,EAAKsZ,WAAW,MACpD5a,EAAA,cAAC6L,GAAD,CAAQhM,MAAM,QAAQmF,QAAS,kBAAM1D,EAAKsZ,WAAW,gBAtHvEV,EAAA,CAAmC5Z,iBCK7BiB,8MACG9I,MAAQ,CACbijB,YAAa,GACbxhB,KAAM,MAmBAyhB,QAAU,SAACzhB,GACjB6G,EAAK8I,SAAS,CAAE3P,YAEV0hB,eAAiB,SAACF,GACxB3a,EAAK8I,SAAS,CAAE6R,mBAEVvjB,WAAa,WAAM,IAAAuH,EACeqB,EAAKpB,MAAzBiD,EADKlD,EACjBvH,WAAoB2Z,EADHpS,EACGoS,QADHiF,EAEKhW,EAAKtI,MACnCmK,EAAO,CAAE1I,KAHgB6c,EAEjB7c,KACOwhB,YAHU3E,EAEX2E,cAEd5J,EAAQE,kFA3BM,IAAAgF,EACgB9X,KAAKzG,MAA3ByB,EADM8c,EACN9c,KAAMwhB,EADA1E,EACA0E,YACN5J,EAAY5S,KAAKS,MAAjBmS,QAER,OACE9R,EAAA,cAAC+R,GAAD,CAAQ7K,YAAa,kBAAM4K,EAAQE,WACjChS,EAAA,cAACiZ,GAAD,CAAWpZ,MAAM,OAAOJ,MAAOvF,EAAM+P,aAAc/K,KAAKyc,UACxD3b,EAAA,cAACiZ,GAAD,CACEpZ,MAAM,cACNJ,MAAOic,EACPzR,aAAc/K,KAAK0c,iBAErB5b,EAAA,cAAC6L,GAAD,CAAQhM,MAAM,SAASmF,QAAS9F,KAAK/G,qBAjBrBmI,iBCAlBiB,IDoCoB8P,YACxB,SAAC5Y,GAAD,MAAuB,CACrBA,UAEF,CAAEN,cAJsBkZ,CAKxB9P,+MCxCO9I,MAAQ,CACbijB,YAAa,GACbxhB,KAAM,MAmBAyhB,QAAU,SAACzhB,GACjB6G,EAAK8I,SAAS,CAAE3P,YAEV0hB,eAAiB,SAACF,GACxB3a,EAAK8I,SAAS,CAAE6R,mBAEVvjB,WAAa,WAAM,IAAAuH,EACeqB,EAAKpB,MAAzBiD,EADKlD,EACjBvH,WAAoB2Z,EADHpS,EACGoS,QADHiF,EAEKhW,EAAKtI,MACnCmK,EAAO,CAAE1I,KAHgB6c,EAEjB7c,KACOwhB,YAHU3E,EAEX2E,cAEd5J,EAAQE,kFA3BM,IAAAgF,EACgB9X,KAAKzG,MAA3ByB,EADM8c,EACN9c,KAAMwhB,EADA1E,EACA0E,YACN5J,EAAY5S,KAAKS,MAAjBmS,QAER,OACE9R,EAAA,cAAC+R,GAAD,CAAQ7K,YAAa,kBAAM4K,EAAQE,WACjChS,EAAA,cAACiZ,GAAD,CAAWpZ,MAAM,OAAOJ,MAAOvF,EAAM+P,aAAc/K,KAAKyc,UACxD3b,EAAA,cAACiZ,GAAD,CACEpZ,MAAM,cACNJ,MAAOic,EACPzR,aAAc/K,KAAK0c,iBAErB5b,EAAA,cAAC6L,GAAD,CAAQhM,MAAM,SAASmF,QAAS9F,KAAK/G,qBAjBrBmI,kBCAlBiB,IDoCoB8P,YACxB,SAAC5Y,GAAD,MAAuB,CACrBA,UAEF,CAAEN,cAJsBkZ,CAKxB9P,+MCxCO9I,MAAQ,CACbijB,YAAa,GACbxhB,KAAM,MAmBAyhB,QAAU,SAACzhB,GACjB6G,EAAK8I,SAAS,CAAE3P,YAEV0hB,eAAiB,SAACF,GACxB3a,EAAK8I,SAAS,CAAE6R,mBAEVvjB,WAAa,WAAM,IAAAuH,EACeqB,EAAKpB,MAAzBiD,EADKlD,EACjBvH,WAAoB2Z,EADHpS,EACGoS,QADHiF,EAEKhW,EAAKtI,MACnCmK,EAAO,CAAE1I,KAHgB6c,EAEjB7c,KACOwhB,YAHU3E,EAEX2E,cAEd5J,EAAQE,kFA3BM,IAAAgF,EACgB9X,KAAKzG,MAA3ByB,EADM8c,EACN9c,KAAMwhB,EADA1E,EACA0E,YACN5J,EAAY5S,KAAKS,MAAjBmS,QAER,OACE9R,EAAA,cAAC+R,GAAD,CAAQ7K,YAAa,kBAAM4K,EAAQE,WACjChS,EAAA,cAACiZ,GAAD,CAAWpZ,MAAM,OAAOJ,MAAOvF,EAAM+P,aAAc/K,KAAKyc,UACxD3b,EAAA,cAACiZ,GAAD,CACEpZ,MAAM,cACNJ,MAAOic,EACPzR,aAAc/K,KAAK0c,iBAErB5b,EAAA,cAAC6L,GAAD,CAAQhM,MAAM,SAASmF,QAAS9F,KAAK/G,qBAjBrBmI,kBCAlBiB,IDoCoB8P,YACxB,SAAC5Y,GAAD,MAAuB,CACrBA,UAEF,CAAEN,cAJsBkZ,CAKxB9P,+MCxCO9I,MAAQ,CACbijB,YAAa,GACbxhB,KAAM,MAmBAyhB,QAAU,SAACzhB,GACjB6G,EAAK8I,SAAS,CAAE3P,YAEV0hB,eAAiB,SAACF,GACxB3a,EAAK8I,SAAS,CAAE6R,mBAEVG,WAAa,WAAM,IAAAnc,EACeqB,EAAKpB,MAAzBiD,EADKlD,EACjBvH,WAAoB2Z,EADHpS,EACGoS,QADHiF,EAEKhW,EAAKtI,MACnCmK,EAAO,CAAE1I,KAHgB6c,EAEjB7c,KACOwhB,YAHU3E,EAEX2E,cAEd5J,EAAQE,kFA3BM,IAAAgF,EACgB9X,KAAKzG,MAA3ByB,EADM8c,EACN9c,KAAMwhB,EADA1E,EACA0E,YACN5J,EAAY5S,KAAKS,MAAjBmS,QAER,OACE9R,EAAA,cAAC+R,GAAD,CAAQ7K,YAAa,kBAAM4K,EAAQE,WACjChS,EAAA,cAACiZ,GAAD,CAAWpZ,MAAM,OAAOJ,MAAOvF,EAAM+P,aAAc/K,KAAKyc,UACxD3b,EAAA,cAACiZ,GAAD,CACEpZ,MAAM,cACNJ,MAAOic,EACPzR,aAAc/K,KAAK0c,iBAErB5b,EAAA,cAAC6L,GAAD,CAAQhM,MAAM,SAASmF,QAAS9F,KAAK2c,qBAjBrBvb,kBAoCXwb,GAAazK,YACxB,SAAC5Y,GAAD,MAAuB,CACrBA,UAEF,CAAEN,cAJsBkZ,CAKxB9P,IChDIA,8MACI7I,MAAQ,CACd,CACEsW,GAAI,IACJnP,MAAO,OAET,CACEmP,GAAI,IACJnP,MAAO,SAET,CACEmP,GAAI,IACJnP,MAAO,iFAGK,IAAAH,EACaR,KAAKS,MAAxBmS,EADMpS,EACNoS,QAASiK,EADHrc,EACGqc,MACjB,OACE/b,EAAA,cAAC+R,GAAD,CAAQ7K,YAAa,kBAAM4K,EAAQE,WACjChS,EAAA,cAACI,GAAD,CAAMP,MAAM,eACZG,EAAA,cAACkZ,GAAA,EAAD,CACEC,aAAc,SAAAngB,GAAI,OAAIA,EAAKgW,IAC3BqK,KAAMna,KAAKxG,MACX4gB,WAAY,SAAA/W,GAAA,IAAGvJ,EAAHuJ,EAAGvJ,KAAH,OACVgH,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAO,CAAE4D,cAAe,QAC5B9D,EAAA,cAAC6L,GAAD,CACE3G,WAAS,EACTrF,MAAO7G,EAAKgW,GACZhK,QAAS,kBAAM8M,EAAQuB,KAAR,GAAA1U,OAAgBod,EAAM7Z,KAAtB,KAAAvD,OAA8B3F,EAAKgW,YAK1DhP,EAAA,cAAC6L,GAAD,CACE/G,OAAK,EACLI,WAAS,EACTf,KAAG,EACHI,KAAK,OACLS,QAAS,kBAAM8M,EAAQuB,KAAR,GAAA1U,OAAgBod,EAAM7Z,KAAtB,uBAtCD5B,iBA6CX0b,GAAQ3K,YACnB,SAAC5Y,GAAD,MAAuB,CACrBA,UAEF,GAJmB4Y,CAKnB9P,IChCIA,oLACY,IAAA7B,EAMVR,KAAKS,MAJPmS,EAFYpS,EAEZoS,QACApZ,EAHYgH,EAGZhH,MACYogB,EAJApZ,EAIZpH,WACkB2jB,EALNvc,EAKZnH,iBAEF,OACEyH,EAAA,cAAC+R,GAAD,CAAQrK,eAAa,EAACR,YAAa,kBAAM4K,EAAQE,WAC/ChS,EAAA,cAACkZ,GAAA,EAAD,CACEC,aAAc,SAAAngB,GAAI,OAAIA,EAAKgW,IAC3BqK,KAAM3gB,EACN4gB,WAAY,SAAA/W,GAAA,IAAGvJ,EAAHuJ,EAAGvJ,KAAH,OACVgH,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAO,CAAE4D,cAAe,QAC5B9D,EAAA,cAAC6L,GAAD,CACEpH,OAAK,EACLF,KAAK,yBACLa,UAAWzK,EAAMC,MAAMS,QACvB2J,QAAS,eAEXhF,EAAA,cAAC6L,GAAD,CACEpH,OAAK,EACLF,KAAK,eACLa,UAAWzK,EAAMC,MAAMG,OACvBiK,QAAS,kBAAM8T,EAAO9f,EAAKgW,OAE7BhP,EAAA,cAAC6L,GAAD,CACEpH,OAAK,EACLW,UAAWzK,EAAMC,MAAMW,QACvBgJ,KAAK,QACLS,QAAS,kBAAMiX,EAAOjjB,EAAKgW,OAE7BhP,EAAA,cAAC6L,GAAD,CACEpH,OAAK,EACLE,QAAS3L,EAAKC,OACdoM,WAAS,EACTxF,MAAO7G,EAAKkB,KACZ8K,QAAS,mBAKjBhF,EAAA,cAAC6L,GAAD,CACE1H,KAAG,EACHe,WAAS,EACTX,KAAK,OACLS,QAAS,kBAAM8M,EAAQuB,KAAK,qBA/Cd/S,iBAsDX4b,GAAO7K,YAClB,SAAC5Y,GAAD,MAAuB,CACrBC,MAAOC,EAAoBF,KAE7B,CACEH,aACAC,mBACAF,cAPgBgZ,CASlB9P,IC/EIA,oLACY,IACNwa,EAAU7c,KAAKS,MAAfoc,MACR,OACE/b,EAAA,cAACG,EAAA,EAAD,KACEH,EAAA,cAACyQ,EAAD,CAAOC,OAAK,EAACxO,KAAI,GAAAvD,OAAKod,EAAM7Z,MAAQV,UAAWwa,KAC/Chc,EAAA,cAACyQ,EAAD,CAAOvO,KAAI,GAAAvD,OAAKod,EAAM7Z,KAAX,WAA0BV,UAAWsa,KAChD9b,EAAA,cAACyQ,EAAD,CAAOvO,KAAI,GAAAvD,OAAKod,EAAM7Z,KAAX,QAAuBV,UAAW0a,aAP7B5b,iBAaX6b,GAAa9K,YACxB,KACA,KAFwBA,CAGxB9P,cChBW6a,GAAb,SAAApd,GAAA,SAAAod,IAAA,IAAAtb,EAAAC,EAAAlI,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAkd,GAAA,QAAApb,EAAA5C,UAAAC,OAAA4C,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/C,UAAA+C,GAAA,OAAAJ,EAAAlI,OAAAsG,EAAA,EAAAtG,CAAAqG,MAAA4B,EAAAjI,OAAAuG,EAAA,EAAAvG,CAAAujB,IAAAhb,KAAA/B,MAAAyB,EAAA,CAAA5B,MAAAP,OAAAsC,MACUrC,OAAS+D,IAAWC,OAAO,CACjCyZ,iBAAkB,CAChBtY,eAAgB,SAChBiC,SAAU,cAJhBjF,EAOUub,cAAgB,IAAI5K,KAASoB,MAAM,GAP7C/R,EAQUwb,kBAAoB,IAAI7K,KAASoB,MAAM,GARjD/R,EAiCUyb,YAAc,WACpB9K,KAAS+K,SAAS,CAChB/K,KAAS8H,OAAOzY,EAAKwb,kBAAmB,CACtC/J,QAAS,EACTkK,iBAAiB,IAEnBhL,KAAS8H,OAAOzY,EAAKub,cAAe,CAClC9J,QAAS,EACTkK,iBAAiB,MAElBjK,SA3CP1R,EAAA,OAAAlI,OAAAyG,EAAA,EAAAzG,CAAAujB,EAAApd,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAujB,EAAA,EAAA5c,IAAA,SAAAC,MAAA,WAUkB,IAAAC,EACkDR,KAAKS,MAA7Dgd,EADMjd,EACNid,IAAKrY,EADC5E,EACD4E,OAAQD,EADP3E,EACO2E,MADPwE,EAAAnJ,EACc9E,aADd,IAAAiO,EACsB,QADtBA,EAAAD,EAAAlJ,EAC+BmG,YAD/B,IAAA+C,EACsC,QADtCA,EAER9C,EAAiB,CAAEzB,QAAOC,UAC1BsY,EAAa,CAAC9W,EAAgB,CAAE3H,QAASe,KAAKod,gBAC9CO,EAAiB,CACrB/W,EACA,CAAE3H,QAASe,KAAKqd,mBAChBrd,KAAKN,OAAOyd,kBAEd,OACErc,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAO4F,GACX9F,EAAA,cAAC0R,GAAA,EAASoL,MAAV,CACEC,OAAQ,CAAEJ,OACVzc,MAAO0c,EACPI,OAAQ9d,KAAKsd,cAEfxc,EAAA,cAAC0R,GAAA,EAAS/K,KAAV,CAAezG,MAAO2c,GACpB7c,EAAA,cAACid,GAAA,EAAD,CAAmBpX,KAAMA,EAAMjL,MAAOA,UA3BhDwhB,EAAA,CAAgC9b,iBCHnB4c,GAAb,SAAAle,GAAA,SAAAke,IAAA,IAAApc,EAAAC,EAAAlI,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAge,GAAA,QAAAlc,EAAA5C,UAAAC,OAAA4C,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/C,UAAA+C,GAAA,OAAAJ,EAAAlI,OAAAsG,EAAA,EAAAtG,CAAAqG,MAAA4B,EAAAjI,OAAAuG,EAAA,EAAAvG,CAAAqkB,IAAA9b,KAAA/B,MAAAyB,EAAA,CAAA5B,MAAAP,OAAAsC,MACUoY,KAAiB,CACvBlH,KAAKC,SACLD,KAAKC,SACLD,KAAKC,SACLD,KAAKC,SACLD,KAAKC,SACLD,KAAKC,SACLD,KAAKC,SACLD,KAAKC,UATTrR,EAWUoc,WAAa,EAXvBpc,EAYUqc,wBAA0B,GAZpCrc,EAaUsc,YAAczP,KAAWC,IAAI,UAAUxJ,MAAQtD,EAAKoc,WAb9Dpc,EAcUuc,SAdV,yBAAA3e,OAc8CoC,EAAKsc,YAdnD,KAAA1e,OAeIoC,EAAKsc,aAfTtc,EAkCUwc,UAAY,WAClBxc,EAAKsY,KAAKhG,KAAKlB,KAAKC,UACpBrR,EAAKsY,KAAKhG,KAAKlB,KAAKC,UACpBrR,EAAKsY,KAAKhG,KAAKlB,KAAKC,UACpBrR,EAAKsY,KAAKhG,KAAKlB,KAAKC,UACpBrR,EAAKsY,KAAKhG,KAAKlB,KAAKC,WAvCxBrR,EA0CUyc,YAAc,kBACpBxd,EAAA,cAACyd,GAAD,CACEd,IAAK5b,EAAKuc,SACVjZ,MAAOtD,EAAKsc,YACZ/Y,OAAQvD,EAAKsc,eA9CnBtc,EAAA,OAAAlI,OAAAyG,EAAA,EAAAzG,CAAAqkB,EAAAle,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAqkB,EAAA,EAAA1d,IAAA,SAAAC,MAAA,WAkBkB,IACNqS,EAAY5S,KAAKS,MAAjBmS,QACR,OACE9R,EAAA,cAAC+R,GAAD,CAAQ7K,YAAa,kBAAM4K,EAAQE,WACjChS,EAAA,cAACkZ,GAAA,EAAD,CACEC,aAAc,SAAAE,GAAI,OAAIA,EAAKD,YAC3BC,KAAMna,KAAKma,KACXqE,aAAcxe,KAAKqe,UACnBI,sBAAuBze,KAAKke,wBAC5BD,WAAYje,KAAKie,WACjB7D,WAAYpa,KAAKse,mBA5B3BN,EAAA,CAAqC5c,2BCM/B1B,GAAS+D,IAAWC,OAAO,CAC/B9G,OAAQ,CACN4H,WAAY,SACZE,aAAc,GACdU,OAAQ,GACRP,eAAgB,SAChBM,MAAO,IAETuZ,aAAc,CACZla,WAAY,SACZE,aAAc,GACdC,YAAa,EACbS,OAAQ,GACRP,eAAgB,SAChBM,MAAO,IAETwZ,YAAa,CACXriB,SAAU,IAEZsiB,WAAY,CACVza,UAAW,UACXS,cAAe,MACfC,eAAgB,gBAChBga,aAAc,GACdvM,UAAW,IAEb/N,UAAW,CACTC,WAAY,SACZH,gBAAiB,UACjBqD,KAAM,EACN5C,kBAAmB,GACnBga,WAAY,KAEdC,QAAS,CACPrjB,MAAO,WAETsjB,IAAK,CACHva,YAAa,UACbwa,eAAgB,EAChBra,cAAe,MACfC,eAAgB,gBAChB0C,gBAAiB,IAEnB2X,QAAS,CACPxjB,MAAO,UACPyjB,WAAY,UACZ7iB,SAAU,IAEZ8iB,WAAY,CACVjb,UAAW,WAEbkb,QAAS,CACP3jB,MAAO,WAETqR,MAAO,CACLrR,MAAO,UACPyjB,WAAY,UACZ7iB,SAAU,GACVE,WAAY,OAEd8iB,eAAgB,CACd1a,cAAe,SASnB,SAAS2a,GAATlc,GAAgD,IAA/Bmc,EAA+Bnc,EAA/Bmc,SAAUxe,EAAqBqC,EAArBrC,MACnBye,EAAM,SAACC,GAAD,OAAgBA,EAAI,GAAK,IAAMA,EAAIA,GACzCnF,EAAWlN,KAAOkN,SAASiF,GAC3BG,EAAe1M,KAAK2M,MAAMrF,EAASsF,eAAiB,IAC1D,OACE/e,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAOtB,GAAO4f,gBAClBxe,EAAA,cAACoD,GAAA,EAAD,CAAMlD,MAAOA,GAAQye,EAAIlF,EAASuF,WAAlC,KACAhf,EAAA,cAACoD,GAAA,EAAD,CAAMlD,MAAOA,GAAQye,EAAIlF,EAASwF,WAAlC,KACAjf,EAAA,cAACoD,GAAA,EAAD,CAAMlD,MAAOA,GAAQye,EAAIE,KAa/B,SAASK,GAATzD,GAMqB,IALnB5b,EAKmB4b,EALnB5b,MACAjF,EAImB6gB,EAJnB7gB,MACAC,EAGmB4gB,EAHnB5gB,WACAmK,EAEmByW,EAFnBzW,QAEmBma,EAAA1D,EADnB9V,gBACmB,IAAAwZ,KACnB,OACEnf,EAAA,cAACC,EAAA,EAAD,CACE+E,QAAO,SAAAoa,GAAA,SAAApa,IAAA,OAAAoa,EAAA/f,MAAAH,KAAAd,WAAA,OAAA4G,EAAAoU,SAAA,kBAAAgG,EAAAhG,YAAApU,EAAA,CAAE,kBAAOW,GAAYX,MAC5B9E,MAAO,CAACtB,GAAO9C,OAAQ,CAAEyH,gBAAiB1I,IAC1CyK,cAAeK,EAAW,EAAM,IAEhC3F,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAOtB,GAAOgf,cAClB5d,EAAA,cAACoD,GAAA,EAAD,CAAMlD,MAAO,CAACtB,GAAOif,YAAa,CAAEjjB,WAAWiF,KAavD,SAASwf,GAATC,GAA4D,IAA7ChX,EAA6CgX,EAA7ChX,IAAKoW,EAAwCY,EAAxCZ,SAAUT,EAA8BqB,EAA9BrB,QAASM,EAAqBe,EAArBf,QAC/BgB,EAAW,CACf3gB,GAAOwf,QACPH,GAAWrf,GAAOqf,QAClBM,GAAW3f,GAAO2f,SAEpB,OACEve,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAOtB,GAAOsf,KAClBle,EAAA,cAACoD,GAAA,EAAD,CAAMlD,MAAOqf,GAAb,OAA4BjX,GAC5BtI,EAAA,cAACye,GAAD,CAAOve,MAAOqf,EAAUb,SAAUA,KAUxC,SAASc,GAATC,GAAmD,IAA9BC,EAA8BD,EAA9BC,KAAMzT,EAAwBwT,EAAxBxT,MACnB0T,EAAeD,EAAKE,MAAM,GAC5BC,EAAMC,OAAOC,iBACbC,EAAMF,OAAOG,iBAWjB,OAVIN,EAAathB,QAAU,GACzBshB,EAAaO,QAAQ,SAAAhC,GACfA,EAAM2B,IACRA,EAAM3B,GAEJA,EAAM8B,IACRA,EAAM9B,KAKVle,EAAA,cAAC0T,GAAA,EAAD,CAAYxT,MAAOtB,GAAO0f,YACvBoB,EAAK1M,IAAI,SAACkL,EAAKvD,GAAN,OACR3a,EAAA,cAACqf,GAAD,CACE/W,IAAKoX,EAAKrhB,OAASsc,EACnBnb,IAAKkgB,EAAKrhB,OAASsc,EACnB+D,SAAoB,IAAV/D,EAAc1O,EAAQiS,EAAMA,EACtCD,QAASC,IAAQ2B,EACjBtB,QAASL,IAAQ8B,OAW3B,SAASG,GAATC,GAAkD,IAA5B1d,EAA4B0d,EAA5B1d,SACpB,OAAO1C,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAOtB,GAAOkf,YAAapb,GAKnC,IAAM2d,GAAb,SAAArhB,GAAA,SAAAqhB,IAAA,IAAAvf,EAAAC,EAAAlI,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAmhB,GAAA,QAAArf,EAAA5C,UAAAC,OAAA4C,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/C,UAAA+C,GAAA,OAAAJ,EAAAlI,OAAAsG,EAAA,EAAAtG,CAAAqG,MAAA4B,EAAAjI,OAAAuG,EAAA,EAAAvG,CAAAwnB,IAAAjf,KAAA/B,MAAAyB,EAAA,CAAA5B,MAAAP,OAAAsC,MACSxI,MAAQ,CACbinB,KAAM,GACNrQ,IAAK,EACLoD,MAAO,GAJX1R,EAMSkL,WANT,EAAAlL,EAYS0R,MAAQ,WACb,IAAMpD,GAAM,IAAID,MAAOkR,UACvBvf,EAAK8I,SAAS,CACZ6V,KAAM,CAAC,GACPrQ,MACAoD,MAAOpD,IAETtO,EAAKwf,OAnBTxf,EAsBSmd,IAAM,WACX,IAAM/O,GAAY,IAAIC,MAAOkR,UADZvJ,EAEYhW,EAAKtI,MAA1BinB,EAFS3I,EAET2I,KAAMrQ,EAFG0H,EAEH1H,IAAKoD,EAFFsE,EAEEtE,MAFF+N,EAAA3nB,OAAA4nB,GAAA,EAAA5nB,CAGY6mB,GAAtBgB,EAHUF,EAAA,GAGGG,EAHHH,EAAAZ,MAAA,GAIjB7e,EAAK8I,SAAS,CACZ6V,KAAI,CAAG,EAAGgB,EAAWrR,EAAMoD,GAAvB9T,OAAA9F,OAAA+nB,EAAA,EAAA/nB,CAAiC8nB,IACrCtR,IAAKF,EACLsD,MAAOtD,KA7BbpO,EAiCS8f,KAAO,WACZxU,cAActL,EAAKkL,OADD,IAAA+K,EAEWjW,EAAKtI,MAA1BinB,EAFU1I,EAEV0I,KAAMrQ,EAFI2H,EAEJ3H,IAAKoD,EAFDuE,EAECvE,MAFDqO,EAAAjoB,OAAA4nB,GAAA,EAAA5nB,CAGW6mB,GAAtBgB,EAHWI,EAAA,GAGEH,EAHFG,EAAAlB,MAAA,GAIlB7e,EAAK8I,SAAS,CACZ6V,KAAI,CAAGgB,EAAWrR,EAAMoD,GAApB9T,OAAA9F,OAAA+nB,EAAA,EAAA/nB,CAA8B8nB,IAClCtR,IAAK,EACLoD,MAAO,KAxCb1R,EA4CSggB,MAAQ,WACbhgB,EAAK8I,SAAS,CACZ6V,KAAM,GACNrQ,IAAK,EACLoD,MAAO,KAhDb1R,EAoDSwf,IAAM,WACXxf,EAAKkL,MAAQE,YAAY,WACvBpL,EAAK8I,SAAS,CAAEwF,KAAK,IAAID,MAAOkR,aAC/B,MAvDPvf,EA0DSigB,OAAS,WACd,IAAM3R,GAAM,IAAID,MAAOkR,UACvBvf,EAAK8I,SAAS,CACZwF,MACAoD,MAAOpD,IAETtO,EAAKwf,OAhETxf,EAAA,OAAAlI,OAAAyG,EAAA,EAAAzG,CAAAwnB,EAAArhB,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAwnB,EAAA,EAAA7gB,IAAA,uBAAAC,MAAA,WASI4M,cAAcnN,KAAK+M,SATvB,CAAAzM,IAAA,SAAAC,MAAA,WAmEkB,IAAAwhB,EACe/hB,KAAKzG,MAA1B4W,EADM4R,EACN5R,IAAKoD,EADCwO,EACDxO,MAAOiN,EADNuB,EACMvB,KACZ5N,EAAY5S,KAAKS,MAAjBmS,QACF7F,EAAQoD,EAAMoD,EACpB,OACEzS,EAAA,cAAC+R,GAAD,CAAQ7K,YAAa,kBAAM4K,EAAQE,UAAU9R,MAAOtB,GAAO6E,WACzDzD,EAAA,cAACye,GAAD,CACEC,SAAUgB,EAAKwB,OAAO,SAACC,EAAOC,GAAR,OAAiBD,EAAQC,GAAM,GAAKnV,EAC1D/L,MAAOtB,GAAOqN,QAEC,IAAhByT,EAAKrhB,QACJ2B,EAAA,cAACmgB,GAAD,KACEngB,EAAA,cAACkf,GAAD,CACErf,MAAM,MACNjF,MAAM,UACNC,WAAW,UACXmK,QAAS9F,KAAKgf,IACdvY,UAAQ,IAEV3F,EAAA,cAACkf,GAAD,CACErf,MAAM,QACNjF,MAAM,UACNC,WAAW,UACXmK,QAAS9F,KAAKuT,SAInBA,EAAQ,GACPzS,EAAA,cAACmgB,GAAD,KACEngB,EAAA,cAACkf,GAAD,CACErf,MAAM,MACNjF,MAAM,UACNC,WAAW,UACXmK,QAAS9F,KAAKgf,MAEhBle,EAAA,cAACkf,GAAD,CACErf,MAAM,OACNjF,MAAM,UACNC,WAAW,UACXmK,QAAS9F,KAAK2hB,QAInBnB,EAAKrhB,OAAS,GAAe,IAAVoU,GAClBzS,EAAA,cAACmgB,GAAD,KACEngB,EAAA,cAACkf,GAAD,CACErf,MAAM,QACNjF,MAAM,UACNC,WAAW,UACXmK,QAAS9F,KAAK6hB,QAEhB/gB,EAAA,cAACkf,GAAD,CACErf,MAAM,QACNjF,MAAM,UACNC,WAAW,UACXmK,QAAS9F,KAAK8hB,UAIpBhhB,EAAA,cAACwf,GAAD,CAAWE,KAAMA,EAAMzT,MAAOA,SA9HtCoU,EAAA,CAA+B/f,iBCxKlB+gB,GAAb,SAAAriB,GAAA,SAAAqiB,IAAA,IAAAvgB,EAAAC,EAAAlI,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAmiB,GAAA,QAAArgB,EAAA5C,UAAAC,OAAA4C,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/C,UAAA+C,GAAA,OAAAJ,EAAAlI,OAAAsG,EAAA,EAAAtG,CAAAqG,MAAA4B,EAAAjI,OAAAuG,EAAA,EAAAvG,CAAAwoB,IAAAjgB,KAAA/B,MAAAyB,EAAA,CAAA5B,MAAAP,OAAAsC,MACSxI,MAAQ,CACb8V,QAAS,GACT+S,SAAU,IAHdvgB,EAKSnC,OAAS+D,IAAWC,OAAO,CAChC8G,IAAK,CACH5F,cAAe,SAPrB/C,EAUSwgB,KAAO,MAVhBxgB,EA6BUuY,WAAa,SAAA/W,GAAiC,IAA9BvJ,EAA8BuJ,EAA9BvJ,KACtB,OACEgH,EAAA,cAAC2G,GAAA,EAAD,CACEnH,IAAKxG,EAAKgW,GACV9O,MAAO,CACL4D,cAAe,MACfC,eAAgB,WAChBia,WAAYrjB,EAAMgC,QAAQG,MAG5BkD,EAAA,cAAC2G,GAAA,EAAD,CACEzG,MAAO,CACLqD,gBAAiB5I,EAAMC,MAAMO,QAC7ByI,aAAcjJ,EAAMgC,QAAQI,IAC5BJ,QAAShC,EAAMgC,QAAQG,MAGzBkD,EAAA,cAACI,GAAD,CAAMP,MAAO7G,EAAKuV,QAAS1S,OAAK,IAChCmE,EAAA,cAACwhB,GAAD,CAAclV,KAAMtT,EAAKK,aAE3B2G,EAAA,cAAC6L,GAAD,CACEhM,MAAM,IACNmF,QAAS,WACPjE,EAAK8I,SAAS,CACZyX,SAAUvgB,EAAKtI,MAAM6oB,SAASvoB,OAC5B,SAACwV,GAAD,OAAsBA,EAAQS,KAAOhW,EAAKgW,YAtD1DjO,EA8DUoY,aAAe,SAACngB,GAAD,OAAmBA,EAAKgW,IA9DjDjO,EA+DU0gB,QAAU,kBAAM1gB,EAAKpB,MAAMmS,QAAQE,UA/D7CjR,EAgEU2gB,gBAAkB,SAACnT,GAAD,OAAqBxN,EAAK8I,SAAS,CAAE0E,aAhEjExN,EAiEU4gB,SAAW,WAAM,IAAA5K,EACOhW,EAAKtI,MAA3B8V,EADewI,EACfxI,QAAS+S,EADMvK,EACNuK,SACjB,GAA8B,IAA1B/S,EAAQqT,OAAOvjB,OAAnB,CAGA,IAAMiO,EAAO8C,KAAKC,MACZwS,EAAsB,CAC1BC,SAAS,EACTzoB,UAAWiT,EACXyV,UAAWhhB,EAAKwgB,KAChBvS,GAAIC,IAAKC,KACTX,UACAiB,UAAWlD,GAEbvL,EAAK8I,SAAS,CAAE0E,QAAS,GAAI+S,SAAQ,CAAGO,GAAHljB,OAAA9F,OAAA+nB,EAAA,EAAA/nB,CAAkByoB,QA/E3DvgB,EAAA,OAAAlI,OAAAyG,EAAA,EAAAzG,CAAAwoB,EAAAriB,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAwoB,EAAA,EAAA7hB,IAAA,SAAAC,MAAA,WAWkB,IAAAuX,EACgB9X,KAAKzG,MAA3B8V,EADMyI,EACNzI,QAAS+S,EADHtK,EACGsK,SACjB,OACEthB,EAAA,cAAC+R,GAAD,CAAQ7K,YAAahI,KAAKuiB,SACxBzhB,EAAA,cAACkZ,GAAA,EAAD,CACE8I,UAAQ,EACR3I,KAAMiI,EACNnI,aAAcja,KAAKia,aACnBG,WAAYpa,KAAKoa,aAEnBtZ,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAOhB,KAAKN,OAAO8K,KACvB1J,EAAA,cAACiZ,GAAD,CAAWxZ,MAAO8O,EAAStE,aAAc/K,KAAKwiB,kBAC9C1hB,EAAA,cAAC6L,GAAD,CAAQtH,KAAK,QAAQS,QAAS9F,KAAKyiB,iBAvB7CN,EAAA,CAA0B/gB,iBCAbuQ,GAAb,SAAA7R,GAAA,SAAA6R,IAAA,IAAA/P,EAAAC,EAAAlI,OAAAoG,EAAA,EAAApG,CAAAqG,KAAA2R,GAAA,QAAA7P,EAAA5C,UAAAC,OAAA4C,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/C,UAAA+C,GAAA,OAAAJ,EAAAlI,OAAAsG,EAAA,EAAAtG,CAAAqG,MAAA4B,EAAAjI,OAAAuG,EAAA,EAAAvG,CAAAgY,IAAAzP,KAAA/B,MAAAyB,EAAA,CAAA5B,MAAAP,OAAAsC,MACUghB,QAAe,CACrBvP,QACAoC,WACAjC,SACAwO,QACAlF,cACAtH,QACAV,SACA+I,mBACArD,SACAF,QACA1C,eACAiD,iBACA5C,aACA+I,cAfJtf,EA2BUmhB,eAAiB,kBACvBrpB,OAAOud,KAAKrV,EAAKkhB,SAASjP,IAAI,SAAClE,GAAD,OAC5B9O,EAAA,cAACyQ,EAAD,CACEjR,IAAKsP,EACL5M,KAAI,GAAAvD,OAAKoC,EAAKpB,MAAMoc,MAAM7Z,KAAtB,KAAAvD,OAA8BmQ,EAAOqT,eACzC3gB,UAAWT,EAAKkhB,QAAQnT,QAhChC/N,EAoCU0gB,QAAU,kBAAM1gB,EAAKpB,MAAMmS,QAAQE,UApC7CjR,EAsCUqhB,eAAiB,kBACvBpiB,EAAA,cAAC+R,GAAD,CAAQ7K,YAAanG,EAAK0gB,SACvB5oB,OAAOud,KAAKrV,EAAKkhB,SAASjP,IAAI,SAAClE,GAAD,OAC7B9O,EAAA,cAACqiB,EAAD,CACE7iB,IAAKsP,EACLlP,GAAE,GAAAjB,OAAKoC,EAAKpB,MAAMoc,MAAM7Z,KAAtB,KAAAvD,OAA8BmQ,GAChCjP,MAAOiP,QA5CjB/N,EAAA,OAAAlI,OAAAyG,EAAA,EAAAzG,CAAAgY,EAAA7R,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAgY,EAAA,EAAArR,IAAA,SAAAC,MAAA,WAmBI,OACEO,EAAA,cAACG,EAAA,EAAD,KACGjB,KAAKgjB,iBACNliB,EAAA,cAACyQ,EAAD,CAAOjP,UAAWtC,KAAKkjB,sBAtB/BvR,EAAA,CAA2BvQ,iBCZrByO,GAASnB,KAAWC,IAAI,UAExBjP,GAAS+D,IAAWC,OAAO,CAC/Ba,UAAW,CACTmD,KAAM,EACNtC,OAAQyK,GAAOzK,OACfZ,WAAY,UAEd4e,OAAQ,CACN5e,WAAY,WACZkD,KAAM,EACN9C,cAAe,MACfC,eAAgB,YAQdwe,oLACK,IACCzQ,EAAY5S,KAAKS,MAAjBmS,QACR,OACE9R,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAOtB,GAAO0jB,QAClBtiB,EAAA,cAAC6L,GAAD,CAAQhM,MAAM,UAAUmF,QAAS,kBAAM8M,EAAQuB,KAAK,aACpDrT,EAAA,cAAC6L,GAAD,CAAQhM,MAAM,SAASmF,QAAS,kBAAM8M,EAAQuB,KAAK,aACnDrT,EAAA,cAAC6L,GAAD,CAAQhM,MAAM,QAAQmF,QAAS,kBAAM8M,EAAQuB,KAAK,qBAPrC/S,iBAafkiB,oLAEF,OAAOxiB,EAAA,cAAC2G,GAAA,EAAD,aAFUrG,iBAMRqQ,GAAb,SAAA8R,GAAA,SAAA9R,IAAA,OAAA9X,OAAAoG,EAAA,EAAApG,CAAAqG,KAAAyR,GAAA9X,OAAAsG,EAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,EAAA,EAAAvG,CAAA8X,GAAAtR,MAAAH,KAAAd,YAAA,OAAAvF,OAAAyG,EAAA,EAAAzG,CAAA8X,EAAA8R,GAAA5pB,OAAA0G,EAAA,EAAA1G,CAAA8X,EAAA,EAAAnR,IAAA,oBAAAC,MAAA,WAEwBP,KAAKS,MAAjBmS,QACAuB,KAAK,uBAHjB,CAAA7T,IAAA,SAAAC,MAAA,WAKkB,IACNqS,EAAY5S,KAAKS,MAAjBmS,QACR,OACE9R,EAAA,cAAC2G,GAAA,EAAD,CAAMzG,MAAOtB,GAAO6E,WAClBzD,EAAA,cAAC0iB,GAAD,MACA1iB,EAAA,cAACI,GAAD,CAAMP,MAAO0I,OAAOwG,GAAOzK,UAC3BtE,EAAA,cAAC2iB,GAAD,CAAQ7Q,QAASA,SAXzBnB,EAAA,CAA6BrQ,iBCvChBsQ,GAAb,SAAA5R,GAAA,SAAA4R,IAAA,IAAA9P,EAAAC,EAAAlI,OAAAoG,EAAA,EAAApG,CAAAqG,KAAA0R,GAAA,QAAA5P,EAAA5C,UAAAC,OAAA4C,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/C,UAAA+C,GAAA,OAAAJ,EAAAlI,OAAAsG,EAAA,EAAAtG,CAAAqG,MAAA4B,EAAAjI,OAAAuG,EAAA,EAAAvG,CAAA+X,IAAAxP,KAAA/B,MAAAyB,EAAA,CAAA5B,MAAAP,OAAAsC,MACSxI,MAAQ,CACbqhB,MAAO,GACPC,SAAU,IAHdhZ,EAAA,OAAAlI,OAAAyG,EAAA,EAAAzG,CAAA+X,EAAA5R,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAA+X,EAAA,EAAApR,IAAA,SAAAC,MAAA,WAMkB,IAAA6B,EAAApC,KAAAQ,EACgBR,KAAKS,MAA3B0C,EADM3C,EACN2C,SAAUyP,EADJpS,EACIoS,QACV1P,GAASC,EAAS5J,OAAS,CAAE2J,KAAM,CAAED,SAAU,UAA/CC,KACR,OACEpC,EAAA,cAAC+R,GAAD,KACE/R,EAAA,cAACI,GAAD,CAAMP,MAAM,UACZG,EAAA,cAACiZ,GAAD,CACEpZ,MAAM,QACN+K,YAAY,oBACZX,aAAc,SAAA3O,GAAI,OAAIgG,EAAKuI,SAAS,CAAEiQ,MAAOxe,KAC7CmE,MAAOP,KAAKzG,MAAMqhB,QAEpB9Z,EAAA,cAACiZ,GAAD,CACEpZ,MAAM,WACN+K,YAAY,6CACZX,aAAc,SAAA3O,GAAI,OAAIgG,EAAKuI,SAAS,CAAEkQ,SAAUze,KAChDmE,MAAOP,KAAKzG,MAAMshB,WAEpB/Z,EAAA,cAAC6L,GAAD,CAAQhM,MAAM,uBAAuBmF,QAAS,eAC9ChF,EAAA,cAAC6L,GAAD,CAAQhM,MAAM,yBAAyBmF,QAAS,eAChDhF,EAAA,cAAC6L,GAAD,CACEhM,MAAM,SACNmF,QAAS,kBAAM4d,EAASniB,aAAa,kBAAMqR,EAAQuB,KAAKjR,QAE1DpC,EAAA,cAAC6L,GAAD,CAAQhM,MAAM,SAASmF,QAAS,kBAAM8M,EAAQuB,KAAK,eACnDrT,EAAA,cAAC6L,GAAD,CAAQhM,MAAM,UAAUmF,QAAS,kBAAM8M,EAAQuB,KAAK,QACpDrT,EAAA,cAAC6L,GAAD,CAAQhM,MAAM,MAAMmF,QAAS,kBAAM8M,EAAQuB,KAAK,gBAhCxDzC,EAAA,CAA2BtQ,iBCLdwQ,GAAb,SAAA9R,GAAA,SAAA8R,IAAA,OAAAjY,OAAAoG,EAAA,EAAApG,CAAAqG,KAAA4R,GAAAjY,OAAAsG,EAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,EAAA,EAAAvG,CAAAiY,GAAAzR,MAAAH,KAAAd,YAAA,OAAAvF,OAAAyG,EAAA,EAAAzG,CAAAiY,EAAA9R,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAiY,EAAA,EAAAtR,IAAA,SAAAC,MAAA,WACkB,IACNqS,EAAY5S,KAAKS,MAAjBmS,QACR,OACE9R,EAAA,cAAC+R,GAAD,KACE/R,EAAA,cAACI,GAAD,CAAMP,MAAM,SACZG,EAAA,cAAC6L,GAAD,CACEhM,MAAM,SACNmF,QAAS,WACP4d,EAAShiB,QAAQ,kBAAMkR,EAAQuB,KAAK,eAThDvC,EAAA,CAA0BxQ,iBCFbyQ,GAAb,SAAA/R,GAAA,SAAA+R,IAAA,OAAAlY,OAAAoG,EAAA,EAAApG,CAAAqG,KAAA6R,GAAAlY,OAAAsG,EAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,EAAA,EAAAvG,CAAAkY,GAAA1R,MAAAH,KAAAd,YAAA,OAAAvF,OAAAyG,EAAA,EAAAzG,CAAAkY,EAAA/R,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAkY,EAAA,EAAAvR,IAAA,SAAAC,MAAA,WAEI,OACEO,EAAA,cAAC+R,GAAD,KACE/R,EAAA,cAACI,GAAD,CAAMP,MAAM,WACZG,EAAA,cAACqiB,EAAD,CAAMziB,GAAG,OAAOC,MAAM,mBAL9BkR,EAAA,CAA8BzQ,yDCK9BuiB,IAAUC,eAAe,CAAC,UAAW,kBAE9B,IAAMC,GAAb,SAAA/jB,GAAA,SAAA+jB,IAAA,OAAAlqB,OAAAoG,EAAA,EAAApG,CAAAqG,KAAA6jB,GAAAlqB,OAAAsG,EAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,EAAA,EAAAvG,CAAAkqB,GAAA1jB,MAAAH,KAAAd,YAAA,OAAAvF,OAAAyG,EAAA,EAAAzG,CAAAkqB,EAAA/jB,GAAAnG,OAAA0G,EAAA,EAAA1G,CAAAkqB,EAAA,EAAAvjB,IAAA,SAAAC,MAAA,WAEI,OACEO,EAAA,cAACgjB,EAAA,EAAD,CAAU9S,MAAOA,IACflQ,EAAA,cAACoR,GAAD,WAJR2R,EAAA,CAA8BziB,iBAU9B2iB,IAAYC,kBAAkBjpB,EAAOJ,IAAIK,KAAM,kBAAM6oB,KACjD1K,IAASC,KAAOre,EAAOG,GAAGG,KAC5B0oB,IAAYE,eAAelpB,EAAOJ,IAAIK,KAAM,CAC1CkpB,QAASC,SAASC,eAAerpB,EAAOM,IAAIC","file":"static/js/main.1f706dc5.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\nimport { ActionType, createStandardAction, getType } from \"typesafe-actions\";\nimport { DeepReadonly } from \"utility-types\";\nimport uuid from \"uuid\";\nimport { RootAction, RootState } from \"../../../../../../models\";\n\n// interfaces\nexport type Item = DeepReadonly<{\n  id: string;\n  name: string;\n  description?: string;\n  active: boolean;\n  userId: string;\n  sources?: string[];\n  order?: number;\n  createdAt: number;\n  updatedAt: number;\n}>;\nexport type Items = DeepReadonly<{ [key: string]: Item }>;\nexport type ItemsArray = DeepReadonly<Item[]>;\nexport type ItemActions = ActionType<\n  | typeof createItem\n  | typeof removeItem\n  | typeof updateItem\n  | typeof toggleActiveItem\n>;\ninterface CreateItem {\n  name: string;\n  description?: string;\n  active?: boolean;\n}\ntype UpdateItem = CreateItem & { id: string };\n\n// actions\nexport const createItem = createStandardAction(\"ITEM/CREATE\")<CreateItem>();\nexport const updateItem = createStandardAction(\"ITEM/UPDATE\")<UpdateItem>();\nexport const removeItem = createStandardAction(\"ITEM/REMOVE\")<string>();\nexport const toggleActiveItem = createStandardAction(\"ITEM/TOGGLE_ACTIVE\")<\n  string\n>();\n\n// indexes\nexport const indexItemsByCreatedAt = (rows: Items): Items =>\n  Object.values(rows).reduce(\n    (index: any, row) => ((index[row.createdAt] = row.id), index),\n    {}\n  );\nexport const indexItemsByUserId = (rows: Items): Items =>\n  Object.values(rows).reduce(\n    (index: any, row) => (\n      (index[row.userId] = row.hasOwnProperty(\"userId\")\n        ? [...index[row.userId], row.id]\n        : [row.id]),\n      index\n    ),\n    {}\n  );\n\n// selectors\nexport const getItems = (state: RootState): Items => state.items;\nexport const getItemsFilterByActive = createSelector(\n  [getItems],\n  items => Object.values(items).filter(item => item.active)\n);\nexport const getItemsByCreatedAt = createSelector(\n  [getItems],\n  items => Object.values(items).sort((a, b) => a.createdAt - b.createdAt)\n);\n\n// reducer\nconst initialState = {};\nexport const itemReducer = (\n  state: Items = initialState,\n  action: RootAction\n): Items => {\n  switch (action.type) {\n    case getType(createItem):\n      const id = uuid.v4();\n      const timestamp = Date.now();\n      return {\n        ...state,\n        [id]: {\n          ...action.payload,\n          active: true,\n          createdAt: timestamp,\n          id,\n          order: timestamp,\n          updatedAt: timestamp,\n          userId: \"1\"\n        }\n      };\n    case getType(updateItem):\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          ...action.payload,\n          updatedAt: Date.now()\n        }\n      };\n    case getType(removeItem):\n      return {\n        ...state,\n        [action.payload]: {\n          ...state[action.payload],\n          active: false,\n          updatedAt: Date.now()\n        }\n      };\n    case getType(toggleActiveItem):\n      return {\n        ...state,\n        [action.payload]: {\n          ...state[action.payload],\n          active: !state[action.payload].active,\n          updatedAt: Date.now()\n        }\n      };\n    default:\n      return state;\n  }\n};\n","import { createSelector } from \"reselect\";\nimport { ActionType, createStandardAction } from \"typesafe-actions\";\nimport { DeepReadonly } from \"utility-types\";\nimport { RootAction, RootState } from \"../../../../../../models\";\n\n// Interfaces\nexport type List = DeepReadonly<{\n  id: string;\n  name: string;\n  description?: string;\n  active: boolean;\n  frequency: string[];\n  visibility: string[];\n  createdAt: number;\n  updatedAt: number;\n  userId: string;\n  item: string[];\n  history: string[];\n  viewed: string[];\n  liked: string[];\n  copied: string[];\n  modified: string[];\n}>;\nexport type Lists = DeepReadonly<{ [key: string]: List }>;\nexport type ListActions = ActionType<\n  | typeof createList\n  | typeof removeList\n  | typeof updateList\n  | typeof toggleActiveList\n>;\ninterface CreateList {\n  name: string;\n  description?: string;\n  active?: boolean;\n}\ntype UpdateList = CreateList & { id: string };\n\n// Actions\nexport const createList = createStandardAction(\"LIST/CREATE\")<CreateList>();\nexport const updateList = createStandardAction(\"LIST/UPDATE\")<UpdateList>();\nexport const removeList = createStandardAction(\"LIST/REMOVE\")<string>();\nexport const toggleActiveList = createStandardAction(\"LIST/TOGGLE_ACTIVE\")<\n  string\n>();\n\n// Indexes\nexport const indexListsByCreatedAt = (rows: Lists) =>\n  Object.values(rows).reduce(\n    (index: any, row) => ((index[row.createdAt] = row.id), index),\n    {}\n  );\nexport const indexListsByUserId = (rows: Lists) =>\n  Object.values(rows).reduce(\n    (index: any, row) => (\n      (index[row.userId] = row.hasOwnProperty(\"userId\")\n        ? [...index[row.userId], row.id]\n        : [row.id]),\n      index\n    ),\n    {}\n  );\n\n// Selectors\nexport const selectLists = (state: RootState): Lists => state.lists;\nexport const selectListsFilterByActive = createSelector(\n  [selectLists],\n  items => Object.values(items).filter(item => item.active)\n);\nexport const selectListsByCreatedAt = createSelector(\n  [selectLists],\n  items => Object.values(items).sort((a, b) => a.createdAt - b.createdAt)\n);\n\n// Reducer\nexport const listReducer = (state: Lists = {}, action: RootAction): Lists => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n","import { AppStateStatus } from \"react-native\";\nimport { createSelector } from \"reselect\";\nimport { ActionType, createStandardAction, getType } from \"typesafe-actions\";\nimport { RootAction, RootState } from \"../../models\";\n// import { logout } from \"../Auth\";\n\n// interfaces\nexport interface AppState {\n  appVersion?: string;\n  buildVersion?: string;\n  bundleIdentifier?: string;\n  applicationName?: string;\n  buildNumber?: string;\n  version?: string;\n  readableVersion?: string;\n  status: AppStateStatus;\n  keyboardVisible: boolean;\n}\nexport type AppActions = ActionType<\n  typeof onAppLoad | typeof onAppStatusChange | typeof onKeyboardChange\n>;\n\n// actions\nexport const onAppLoad = createStandardAction(\"APP/LOAD\")<AppState>();\nexport const onAppStatusChange = createStandardAction(\"APP/UPDATE_STATUS\")<\n  AppStateStatus\n>();\nexport const onKeyboardChange = createStandardAction(\n  \"APP/UPDATE_KEYBOARD_VISIBILITY\"\n)<boolean>();\n\n// selectors\nexport const getAppStatus = (state: RootState): AppStateStatus =>\n  state.app.status;\nexport const getKeyboardVisible = (state: RootState): boolean =>\n  state.app.keyboardVisible;\nexport const getAppStatusForeground = createSelector(\n  getAppStatus,\n  (status: AppStateStatus): boolean => status === \"active\"\n);\n\n// reducers\nexport const appInitialState: AppState = {\n  keyboardVisible: false,\n  status: \"inactive\"\n};\nexport function appReducer(\n  state: AppState = appInitialState,\n  action: RootAction\n): AppState {\n  switch (action.type) {\n    case getType(onAppLoad):\n      return {\n        ...state,\n        ...action.payload\n      };\n    case getType(onAppStatusChange):\n      return {\n        ...state,\n        status: action.payload\n      };\n    case getType(onKeyboardChange):\n      return {\n        ...state,\n        keyboardVisible: action.payload\n      };\n    // case getType(logout):\n    //   return appInitialState;\n    default:\n      return state;\n  }\n}\n","const color = {\n  background: \"hsl(0, 100%, 100%)\",\n  brand: \"hsl(264, 34%, 36%)\",\n  danger: \"hsl(354, 70%, 54%)\",\n  dark: \"hsl(210, 10%, 23%)\",\n  info: \"hsl(188, 78%, 41%)\",\n  light: \"hsl(210, 17%, 98%)\",\n  primary: \"hsl(211, 100%, 50%)\",\n  secondary: \"hsl(208, 7%, 46%)\",\n  success: \"hsl(134, 61%, 41%)\",\n  text: \"hsl(0, 0%, 0%)\",\n  warning: \"hsl(45, 100%, 51%)\"\n};\n\nconst padding = {\n  p00: 0,\n  p01: 4,\n  p02: 8,\n  p03: 12,\n  p04: 16,\n  p05: 20,\n  p06: 24,\n  p07: 28,\n  p08: 32,\n  p09: 36,\n  p10: 40,\n  p11: 44,\n  p12: 48,\n  p13: 52,\n  p14: 56,\n  p15: 60,\n  p16: 64,\n  p17: 68,\n  p18: 72,\n  p19: 76,\n  p20: 80\n};\n\nenum FontWeight {\n  Light = \"100\",\n  Regular = \"300\",\n  Medium = \"600\"\n}\n\n// sizing: https://material.io/design/typography/the-type-system.html#applying-the-type-scale\nconst fontSize = {\n  body1: {\n    fontSize: 16,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0.5\n  },\n  body2: {\n    fontSize: 14,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0.25\n  },\n  button: {\n    fontSize: 14,\n    fontWeight: FontWeight.Medium,\n    letterSpacing: 0.75\n  },\n  caption: {\n    fontSize: 12,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0.4\n  },\n  h1: {\n    fontSize: 96,\n    fontWeight: FontWeight.Light,\n    letterSpacing: -1.5\n  },\n  h2: {\n    fontSize: 60,\n    fontWeight: FontWeight.Light,\n    letterSpacing: -0.5\n  },\n  h3: {\n    fontSize: 48,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0\n  },\n  h4: {\n    fontSize: 34,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0.25\n  },\n  h5: {\n    fontSize: 24,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0\n  },\n  h6: {\n    fontSize: 20,\n    fontWeight: FontWeight.Medium,\n    letterSpacing: 0.15\n  },\n  overline: {\n    fontSize: 10,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 1.5\n  },\n  subtitle1: {\n    fontSize: 16,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0.15\n  },\n  subtitle2: {\n    fontSize: 14,\n    fontWeight: FontWeight.Medium,\n    letterSpacing: 0.1\n  }\n};\n\nexport const Theme = {\n  color,\n  fontSize,\n  padding\n};\n\nexport const colorWithOpacity = (colorCode: string, opacity = 0.5) => {\n  const boundedOpacity = opacity < 0 ? 0 : opacity > 1 ? 1 : opacity;\n  const leading = 4;\n  if (!colorCode.startsWith(\"hsl\")) {\n    return colorCode;\n  }\n  const substr = colorCode.substring(leading, colorCode.length - 1);\n  return `hsla(${substr}, ${boundedOpacity})`;\n};\n","export const Config = {\n  app: {\n    name: \"example\",\n    timeout: 5000\n  },\n  os: {\n    android: \"android\",\n    ios: \"ios\",\n    web: \"web\"\n  },\n  web: {\n    root: \"root\"\n  }\n};\n","import * as React from \"react\";\nimport {\n  StyleSheet,\n  TextInput as Original,\n  TextStyle,\n  View\n} from \"react-native\";\nimport { Button } from \"..\";\nimport { Theme } from \"../../utils\";\nimport { Title } from \"./Title\";\n\ninterface Props {\n  title?: string;\n  optional?: boolean;\n  error?: string;\n  hasError?: boolean;\n  errorIcon?: string;\n  clearIcon?: string;\n  style?: TextStyle | {};\n  placeholder?: string;\n  value: string;\n  disableFullscreenUI?: boolean;\n  editable?: boolean;\n  autoCorrect?: boolean;\n  blurOnSubmit?: boolean;\n  secureTextEntry?: boolean;\n  keyboardType?: KeyboardType;\n  returnKeyType?: ReturnKeyType;\n  onChangeText(text: string): void;\n}\n\ninterface State {\n  focus: boolean;\n}\n\nexport enum KeyboardType {\n  Default = \"default\",\n  Number = \"number-pad\",\n  Decimal = \"decimal-pad\",\n  Numeric = \"numeric\",\n  Email = \"email-address\",\n  Phone = \"phone-pad\"\n}\n\nexport enum ReturnKeyType {\n  Done = \"done\",\n  Go = \"go\",\n  Next = \"next\",\n  Search = \"search\",\n  Send = \"send\"\n}\n\nexport class TextInput extends React.PureComponent<Props, State> {\n  public state = {\n    focus: false\n  };\n  // styling https://uxdesign.cc/design-better-forms-96fadca0f49c\n  private styles = StyleSheet.create({\n    borderError: {\n      borderColor: Theme.color.danger\n    },\n    borderFocus: {\n      borderColor: Theme.color.primary\n    },\n    clear: {\n      position: \"absolute\",\n      right: -6,\n      top: 6\n    },\n    container: {\n      flex: 1\n    },\n    row: {\n      flexDirection: \"row\"\n    },\n    textInput: {\n      backgroundColor: Theme.color.background,\n      borderColor: Theme.color.secondary,\n      borderRadius: Theme.padding.p01,\n      borderWidth: 2,\n      padding: Theme.padding.p02,\n      paddingRight: Theme.padding.p08,\n      width: \"100%\"\n    }\n  });\n  private textInput?: Original;\n\n  public render() {\n    const {\n      title,\n      optional,\n      error = \"\",\n      editable = true,\n      autoCorrect,\n      secureTextEntry,\n      keyboardType,\n      returnKeyType,\n      blurOnSubmit = true,\n      placeholder,\n      onChangeText,\n      value,\n      hasError,\n      disableFullscreenUI = true,\n      errorIcon = \"alert-circle\",\n      clearIcon = \"close-circle\",\n      style\n    } = this.props;\n    const { focus } = this.state;\n    const textInputStyle = [\n      this.styles.textInput,\n      error && this.styles.borderError,\n      focus && this.styles.borderFocus,\n      Theme.fontSize.body2,\n      style\n    ];\n    const noValue = value.length === 0;\n    return (\n      <View style={this.styles.container}>\n        <Title title={title} optional={optional} onPress={this.focusOnInput} />\n        <View style={this.styles.row}>\n          <Original\n            ref={input => (this.textInput = input ? input : undefined)}\n            autoCorrect={autoCorrect}\n            selectionColor={Theme.color.primary}\n            disableFullscreenUI={disableFullscreenUI}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            editable={editable}\n            placeholderTextColor={Theme.color.secondary}\n            blurOnSubmit={blurOnSubmit}\n            secureTextEntry={secureTextEntry}\n            returnKeyType={returnKeyType}\n            keyboardType={keyboardType}\n            underlineColorAndroid=\"transparent\"\n            style={textInputStyle}\n            placeholder={placeholder}\n            onChangeText={onChangeText}\n            value={value}\n          />\n          <Button\n            secondary\n            hidden={noValue}\n            icon={clearIcon}\n            buttonStyle={this.styles.clear}\n            onPress={this.textClear}\n          />\n        </View>\n        <Button\n          hidden={!hasError}\n          label\n          wrap\n          lowercase\n          activeOpacity={1}\n          icon={errorIcon}\n          title={error}\n          danger\n          onPress={this.focusOnInput}\n        />\n      </View>\n    );\n  }\n\n  private onFocus = () => this.setState({ focus: true });\n\n  private onBlur = () => this.setState({ focus: false });\n\n  private focusOnInput = () => {\n    if (!this.textInput) {\n      return;\n    }\n    this.textInput.focus();\n  };\n\n  private textClear = () => {\n    const { onChangeText } = this.props;\n    if (!this.textInput) {\n      return;\n    }\n    this.textInput.clear();\n    onChangeText(\"\");\n  };\n}\n","import * as React from \"react\";\nimport { TextStyle, TouchableOpacity, ViewStyle } from \"react-native\";\nimport { Link as Original } from \"react-router-dom\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = {\n  link: {\n    color: Theme.color.dark,\n    textDecoration: \"none\"\n  }\n};\n\ninterface Props {\n  to: string;\n  title: string;\n  buttonStyle?: ViewStyle | {};\n  textStyle?: TextStyle | {};\n}\n\nexport class Link extends React.PureComponent<Props> {\n  public render() {\n    const { to, title, buttonStyle, textStyle } = this.props;\n    return (\n      <TouchableOpacity style={buttonStyle}>\n        <Original to={to} style={styles.link}>\n          <Text button center title={title} style={textStyle} />\n        </Original>\n      </TouchableOpacity>\n    );\n  }\n}\n","type ICallback = () => any;\n\nexport default {\n  isAuthenticated: false,\n  authenticate(cb: ICallback) {\n    this.isAuthenticated = true;\n    setTimeout(cb, 1000);\n  },\n  signout(cb: ICallback) {\n    this.isAuthenticated = false;\n    setTimeout(cb, 1000);\n  }\n};\n","import * as React from \"react\";\nimport User from \"../../models/User\"; // TODO: make models export not export default\n\nexport class Auth extends React.PureComponent<any> {\n  private fallback = \"/login\";\n  public render() {\n    const {\n      component: Component,\n      original: Original,\n      redirect: Redirect,\n      ...rest\n    } = this.props;\n    return (\n      <Original\n        {...rest}\n        render={(props: any) =>\n          !rest.auth ||\n          rest.path === this.fallback ||\n          (rest.auth && User.isAuthenticated) ? (\n            <Component {...props} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: this.fallback,\n                state: { from: props.location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  BrowserRouter,\n  Redirect,\n  Route as Original,\n  Switch\n} from \"react-router-dom\";\nimport { Auth } from \"./Auth\";\n\nconst Route = ({ component, ...rest }: any) => (\n  <Auth\n    original={Original}\n    redirect={Redirect}\n    component={component}\n    {...rest}\n  />\n);\n\nclass Router extends React.PureComponent {\n  public render() {\n    const { children } = this.props;\n    return <BrowserRouter>{children}</BrowserRouter>;\n  }\n}\n\nexport { Route, Router, Redirect, Switch };\n","import * as React from \"react\";\nimport { StyleSheet, Text as Original, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  bold: {\n    fontWeight: \"600\" // TODO: figure out why I cannot import FontWeight.Medium with tests\n  },\n  center: {\n    textAlign: \"center\"\n  }\n});\n\ninterface Props {\n  title?: string;\n  style?: ViewStyle | {};\n\n  center?: boolean;\n  bold?: boolean;\n  hidden?: boolean;\n\n  h1?: boolean;\n  h2?: boolean;\n  h3?: boolean;\n  h4?: boolean;\n  h5?: boolean;\n  h6?: boolean;\n  subtitle1?: boolean;\n  subtitle2?: boolean;\n  body1?: boolean;\n  body2?: boolean;\n  button?: boolean;\n  caption?: boolean;\n  overline?: boolean;\n}\n\nexport class Text extends React.PureComponent<Props> {\n  public getFont() {\n    const {\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6,\n      subtitle1,\n      subtitle2,\n      body1,\n      body2,\n      button,\n      caption,\n      overline\n    } = this.props;\n    if (h1) {\n      return Theme.fontSize.h1;\n    }\n    if (h2) {\n      return Theme.fontSize.h2;\n    }\n    if (h3) {\n      return Theme.fontSize.h3;\n    }\n    if (h4) {\n      return Theme.fontSize.h4;\n    }\n    if (h5) {\n      return Theme.fontSize.h5;\n    }\n    if (h6) {\n      return Theme.fontSize.h6;\n    }\n    if (subtitle1) {\n      return Theme.fontSize.subtitle1;\n    }\n    if (subtitle2) {\n      return Theme.fontSize.subtitle2;\n    }\n    if (body1) {\n      return Theme.fontSize.body1;\n    }\n    if (body2) {\n      return Theme.fontSize.body2;\n    }\n    if (button) {\n      return Theme.fontSize.button;\n    }\n    if (caption) {\n      return Theme.fontSize.caption;\n    }\n    if (overline) {\n      return Theme.fontSize.overline;\n    }\n    return Theme.fontSize.body2;\n  }\n\n  public render() {\n    const { title, style, button, bold, overline, center, hidden } = this.props;\n    const text = button || overline ? (title || \"\").toUpperCase() : title;\n    const textStyle = [\n      this.getFont(),\n      center && styles.center,\n      bold && styles.bold,\n      style\n    ];\n    if (title === undefined || title.length === 0 || hidden) {\n      return null;\n    }\n    return <Original style={textStyle}>{text}</Original>;\n  }\n}\n","import * as React from \"react\";\nimport {\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  ViewStyle\n} from \"react-native\";\nimport { Icon, Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  center: {\n    alignSelf: \"center\"\n  },\n  containedBody: {\n    backgroundColor: Theme.color.primary\n  },\n  containedText: {\n    color: Theme.color.background\n  },\n  container: {\n    alignItems: \"center\",\n    borderColor: \"transparent\", // TODO: add border to be same size as outlined\n    borderRadius: Theme.padding.p01,\n    borderWidth: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    paddingHorizontal: Theme.padding.p04\n  },\n  danger: {\n    color: Theme.color.danger\n  },\n  disableBody: {\n    backgroundColor: Theme.color.light\n  },\n  disableText: {\n    color: Theme.color.secondary\n  },\n  fab: {\n    alignSelf: \"flex-start\",\n    borderRadius: Theme.padding.p08,\n    padding: Theme.padding.p04\n  },\n  half: {\n    width: \"50%\"\n  },\n  height: {\n    height: Theme.padding.p09\n  },\n  icon: {\n    paddingRight: 2\n  },\n  label: {\n    height: Theme.padding.p05,\n    justifyContent: \"flex-start\",\n    margin: Theme.padding.p01,\n    paddingHorizontal: 0\n  },\n  neutral: {\n    color: Theme.color.text\n  },\n  nonFlex: {\n    alignSelf: \"flex-start\"\n  },\n  outlined: {\n    borderColor: Theme.color.secondary\n  },\n  right: {\n    alignSelf: \"flex-end\"\n  },\n  secondary: {\n    color: Theme.color.secondary\n  },\n  text: {\n    backgroundColor: \"transparent\",\n    color: Theme.color.primary\n  }\n});\n\n// styling: https://material.io/design/components/buttons.html#usage\ninterface Props {\n  // content\n  title?: string;\n  icon?: string;\n  // styling\n  buttonStyle?: ViewStyle | {};\n  textStyle?: TextStyle | {};\n  iconColor?: string;\n  // state\n  active?: boolean;\n  hidden?: boolean;\n  disable?: boolean;\n  activeOpacity?: number;\n  // shape\n  text?: boolean; // low emphasis\n  outlined?: boolean; // mid emphasis\n  contained?: boolean; // high emphasis\n  fab?: boolean;\n  toggle?: boolean;\n  label?: boolean;\n  // color\n  neutral?: boolean;\n  secondary?: boolean;\n  danger?: boolean;\n  // size\n  wrap?: boolean;\n  half?: boolean;\n  full?: boolean;\n  center?: boolean;\n  right?: boolean;\n  lowercase?: boolean;\n  // event\n  onPress(): void;\n}\n\nexport class Button extends React.PureComponent<Props> {\n  public render() {\n    const {\n      title,\n      onPress,\n      disable,\n      buttonStyle,\n      textStyle,\n      contained,\n      outlined,\n      wrap,\n      fab,\n      hidden,\n      neutral,\n      half,\n      center,\n      right,\n      icon,\n      iconColor,\n      secondary,\n      danger,\n      label,\n      lowercase,\n      activeOpacity\n    } = this.props;\n    const buttonStyleGroup = [\n      styles.container,\n      !fab && styles.height,\n      this.getShape(),\n      disable && (contained || outlined) && styles.disableBody,\n      fab && styles.fab,\n      wrap && styles.nonFlex,\n      half && styles.half,\n      center && styles.center,\n      right && styles.right,\n      label && styles.label,\n      buttonStyle\n    ];\n    const textStyleGroup = [\n      styles.text,\n      neutral && styles.neutral,\n      secondary && styles.secondary,\n      danger && styles.danger,\n      contained && styles.containedText,\n      disable && styles.disableText,\n      textStyle\n    ];\n    const iconStyleGroup = [title && styles.icon, !iconColor && textStyleGroup];\n    if (hidden) {\n      return null;\n    }\n    return (\n      <TouchableOpacity\n        activeOpacity={activeOpacity}\n        style={buttonStyleGroup}\n        onPress={onPress}\n        disabled={disable}\n      >\n        <Icon\n          color={iconColor}\n          name={icon}\n          size={Theme.padding.p04}\n          style={iconStyleGroup}\n        />\n        <Text center button={!lowercase} title={title} style={textStyleGroup} />\n      </TouchableOpacity>\n    );\n  }\n  private getShape() {\n    const { contained, outlined, fab, text } = this.props;\n    if (contained) {\n      return styles.containedBody;\n    }\n    if (outlined) {\n      return styles.outlined;\n    }\n    if (fab) {\n      return styles.fab;\n    }\n    if (text) {\n      return styles.text;\n    }\n    return styles.text;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    backgroundColor: Theme.color.background,\n    elevation: 1,\n    margin: Theme.padding.p02,\n    padding: Theme.padding.p04,\n    position: \"relative\",\n    shadowColor: Theme.color.dark,\n    shadowOffset: {\n      height: 4,\n      width: 0\n    },\n    shadowOpacity: 0.6,\n    shadowRadius: 6,\n    zIndex: 1\n  }\n});\n\ninterface Props {\n  style?: ViewStyle;\n  onPress?(): void;\n}\n\nexport class Card extends React.PureComponent<Props> {\n  private touchOpacity = 0.3;\n  public render() {\n    const { style, children, onPress } = this.props;\n    return (\n      <TouchableOpacity\n        style={[styles.containerStyle, style]}\n        onPress={onPress && onPress}\n        activeOpacity={onPress ? this.touchOpacity : 1}\n      >\n        {children}\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TextStyle, View } from \"react-native\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    backgroundColor: Theme.color.background,\n    borderBottomWidth: 0.5,\n    borderColor: Theme.color.dark,\n    flexDirection: \"row\",\n    paddingHorizontal: 20,\n    paddingVertical: 10\n  }\n});\n\ninterface Props {\n  style?: TextStyle;\n}\n\nexport class CardSection extends React.PureComponent<Props> {\n  public render() {\n    const { style, children } = this.props;\n    return <View style={[styles.containerStyle, style]}>{children}</View>;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TextStyle, View } from \"react-native\";\nimport { Text } from \"..\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\"\n  }\n});\n\ninterface Props {\n  title: string;\n  style?: TextStyle;\n}\n\nexport class Markdown extends React.PureComponent<Props> {\n  private boldSyntax = \"*\";\n  private withoutSyntaxIndex = 2;\n\n  public render() {\n    const { title, style } = this.props;\n    const words = title.split(\" \");\n    return (\n      <View style={styles.container}>\n        {words.map((word: string, index: number) => (\n          <Text\n            style={style}\n            key={index}\n            bold={this.isWordBold(word)}\n            title={this.formattedWord(words, word, index)}\n          />\n        ))}\n      </View>\n    );\n  }\n\n  private isWordBold(word: string) {\n    return (\n      word.length > this.withoutSyntaxIndex &&\n      word[0] === this.boldSyntax &&\n      word[word.length - 1] === this.boldSyntax\n    );\n  }\n\n  private formattedWord(words: string[], word: string, index: number) {\n    const space = words.length - 1 === index ? \"\" : \" \";\n    const trimmed = this.isWordBold(word)\n      ? word.substring(1, word.length - 1)\n      : word;\n    return trimmed + space;\n  }\n}\n","// import * as React from \"react\";\n// import {\n//   View,\n//   Animated,\n//   PanResponder,\n//   Dimensions,\n//   LayoutAnimation,\n//   UIManager,\n//   Platform\n// } from \"react-native\";\n\n// const SCREEN_WIDTH = Dimensions.get(\"window\").width;\n// const SWIPE_THRESHOLD = 0.25 * SCREEN_WIDTH;\n// const SWIPE_OUT_DURATION = 250;\n\n// interface Props {}\n// interface State {\n//   panResponder: number;\n//   position: number;\n//   index: number;\n// }\n\n// class Swipe extends React.PureComponent<Props, State> {\n//   static defaultProps = {\n//     onSwipeRight: () => {},\n//     onSwipeLeft: () => {},\n//     keyProp: \"id\"\n//   };\n\n//   constructor(props: Props) {\n//     super(props);\n\n//     const position = new Animated.ValueXY();\n//     const panResponder = PanResponder.create({\n//       onStartShouldSetPanResponder: () => true,\n//       onPanResponderMove: (_, gesture) => {\n//         position.setValue({ x: gesture.dx, y: gesture.dy });\n//       },\n//       onPanResponderRelease: (_, gesture) => {\n//         if (gesture.dx > SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"right\");\n//         } else if (gesture.dx < -SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"left\");\n//         } else {\n//           this.resetPosition();\n//         }\n//       }\n//     });\n\n//     this.state = { panResponder, position, index: 0 };\n//   }\n\n//   componentWillReceiveProps(nextProps: Props) {\n//     if (nextProps.data !== this.props.data) {\n//       this.setState({ index: 0 });\n//     }\n//   }\n\n//   componentWillUpdate() {\n//     UIManager.setLayoutAnimationEnabledExperimental &&\n//       UIManager.setLayoutAnimationEnabledExperimental(true);\n//     LayoutAnimation.spring();\n//   }\n\n//   forceSwipe(direction) {\n//     const x = direction === \"right\" ? SCREEN_WIDTH : -SCREEN_WIDTH;\n//     Animated.timing(this.state.position, {\n//       toValue: { x, y: 0 },\n//       duration: SWIPE_OUT_DURATION\n//     }).start(() => this.onSwipeComplete(direction));\n//   }\n\n//   onSwipeComplete(direction) {\n//     const { onSwipeLeft, onSwipeRight, data } = this.props;\n//     const item = data[this.state.index];\n\n//     direction === \"right\" ? onSwipeRight(item) : onSwipeLeft(item);\n//     this.state.position.setValue({ x: 0, y: 0 });\n//     this.setState({ index: this.state.index + 1 });\n//   }\n\n//   resetPosition() {\n//     Animated.spring(this.state.position, {\n//       toValue: { x: 0, y: 0 }\n//     }).start();\n//   }\n\n//   getCardStyle() {\n//     const { position } = this.state;\n//     const rotate = position.x.interpolate({\n//       inputRange: [-SCREEN_WIDTH * 1.5, 0, SCREEN_WIDTH * 1.5],\n//       outputRange: [\"-120deg\", \"0deg\", \"120deg\"]\n//     });\n\n//     return {\n//       ...position.getLayout(),\n//       transform: [{ rotate }]\n//     };\n//   }\n\n//   renderCards() {\n//     if (this.state.index >= this.props.data.length) {\n//       return this.props.renderNoMoreCards();\n//     }\n\n//     const deck = this.props.data.map((item, i) => {\n//       if (i < this.state.index) {\n//         return null;\n//       }\n\n//       if (i === this.state.index) {\n//         return (\n//           <Animated.View\n//             key={item[this.props.keyProp]}\n//             style={[this.getCardStyle(), styles.cardStyle, { zIndex: 99 }]}\n//             {...this.state.panResponder.panHandlers}\n//           >\n//             {this.props.renderCard(item)}\n//           </Animated.View>\n//         );\n//       }\n\n//       return (\n//         <Animated.View\n//           key={item[this.props.keyProp]}\n//           style={[\n//             styles.cardStyle,\n//             { top: 10 * (i - this.state.index), zIndex: -i }\n//           ]}\n//         >\n//           {this.props.renderCard(item)}\n//         </Animated.View>\n//       );\n//     });\n\n//     return Platform.OS === \"android\" ? deck : deck.reverse();\n//   }\n\n//   render() {\n//     return <View>{this.renderCards()}</View>;\n//   }\n// }\n\n// const styles = {\n//   cardStyle: {\n//     position: \"absolute\",\n//     width: SCREEN_WIDTH\n//   }\n// };\n\n// export default Swipe;\n\nimport * as React from \"react\";\nimport { View } from \"react-native\";\n\nexport class Swipe extends React.PureComponent {\n  public render() {\n    return <View />;\n  }\n}\n","import * as React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\ninterface Props {\n  style: ViewStyle | {};\n}\n\nexport class KeyboardAvoid extends React.PureComponent<Props> {\n  public render() {\n    const { style, children } = this.props;\n    return <View style={style}>{children}</View>;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Icon } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  button: {\n    flex: 1,\n    padding: Theme.padding.p03\n  },\n  buttonRight: {\n    alignSelf: \"flex-end\"\n  }\n});\n\ninterface Props {\n  icon: string;\n  isRight?: boolean;\n  onPress?(): void;\n}\n\nexport class NavButton extends React.PureComponent<Props> {\n  public render() {\n    const { onPress, icon, isRight } = this.props;\n    if (!onPress) { return null; }\n    return (\n      <TouchableOpacity style={styles.button} onPress={onPress}>\n        <Icon\n          color={Theme.color.dark}\n          style={isRight && styles.buttonRight}\n          name={icon}\n        />\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\nimport { NavButton } from \"./NavButton\";\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  title: {\n    flex: 1,\n    fontSize: Theme.padding.p05,\n    textAlign: \"center\"\n  }\n});\n\ninterface Props {\n  title?: string;\n  leftIcon?: string;\n  rightIcon?: string;\n  onLeftPress?(): void;\n  onRightPress?(): void;\n}\n\nexport class NavBar extends React.PureComponent<Props> {\n  public render() {\n    const {\n      title = \"\",\n      onLeftPress,\n      onRightPress,\n      leftIcon = \"arrow-left\",\n      rightIcon = \"close\"\n    } = this.props;\n    const isEnabled = title.length > 0 || onLeftPress || onRightPress;\n    if (!isEnabled) {\n      return null;\n    }\n    return (\n      <View style={styles.container}>\n        <NavButton icon={leftIcon} onPress={onLeftPress} />\n        <Text hidden={title.length === 0} style={styles.title} title={title} />\n        <NavButton icon={rightIcon} isRight onPress={onRightPress} />\n      </View>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { SafeAreaView, StyleSheet, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\nimport { KeyboardAvoid } from \"./KeyboardAvoid\";\nimport { NavBar } from \"./NavBar\";\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Theme.color.background,\n    flex: 1\n  }\n});\n\ninterface OwnProps {\n  style?: ViewStyle | {};\n  title?: string;\n  leftIcon?: string;\n  rightIcon?: string;\n  disableScroll?: boolean;\n  onLeftPress?(): void;\n  onRightPress?(): void;\n}\n\ntype Props = OwnProps;\n\nexport class Screen extends React.PureComponent<Props> {\n  public render() {\n    const {\n      title,\n      style,\n      onLeftPress,\n      onRightPress,\n      children,\n      disableScroll,\n      leftIcon,\n      rightIcon\n    } = this.props;\n    return (\n      <SafeAreaView style={[styles.container, style]}>\n        <NavBar\n          title={title}\n          leftIcon={leftIcon}\n          rightIcon={rightIcon}\n          onLeftPress={onLeftPress}\n          onRightPress={onRightPress}\n        />\n        <KeyboardAvoid\n          scrollEnabled={!disableScroll}\n          style={[styles.container, style]}\n        >\n          {children}\n        </KeyboardAvoid>\n      </SafeAreaView>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  badgeContainer: {\n    alignItems: \"center\",\n    backgroundColor: Theme.color.primary,\n    borderRadius: 20,\n    height: 20,\n    justifyContent: \"center\",\n    position: \"absolute\",\n    right: -10,\n    top: -10,\n    width: 20\n  },\n  badgeText: {\n    color: Theme.color.background,\n    fontSize: Theme.padding.p02\n  }\n});\n\ninterface Props {\n  badge: number;\n}\n\nexport class Badge extends React.PureComponent<Props> {\n  private badgeLimit = \"!\";\n  private maxBadgeNumber = 99;\n  public render() {\n    const { badge } = this.props;\n    const num = badge > this.maxBadgeNumber ? this.badgeLimit : String(badge);\n    if (badge <= 0) {\n      return null;\n    }\n    return (\n      <View style={styles.badgeContainer}>\n        <Text center style={styles.badgeText} title={num} />\n      </View>\n    );\n  }\n}\n","// TODO: icons for web\n\nimport * as React from \"react\";\nimport { Text } from \"..\";\n\ninterface Props {\n  name: string;\n  size: number;\n  color: string;\n}\n\nexport class IconSource extends React.PureComponent<Props> {\n  public render() {\n    const { name } = this.props;\n    return <Text title={name} />;\n  }\n}\n","// usage: <Icon name='check' />\n// source: https://materialdesignicons.com/\n\nimport * as React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\nimport { Badge } from \"./Badge\";\nimport { IconSource } from \"./IconSource\";\n\ninterface Props {\n  badge?: number;\n  style?: ViewStyle | {};\n  clear?: boolean;\n  hidden?: boolean;\n  size?: number;\n  color?: string;\n  name?: string;\n}\n\nexport class Icon extends React.PureComponent<Props> {\n  public render() {\n    const {\n      name,\n      style,\n      badge = 0,\n      clear,\n      size = Theme.padding.p06,\n      color = Theme.color.dark,\n      hidden\n    } = this.props;\n    const colored = clear ? Theme.color.background : color;\n    if (name === undefined || name.length === 0 || hidden) {\n      return null;\n    }\n    return (\n      <View style={style}>\n        <IconSource name={name} size={size} color={colored} style={style} />\n        <Badge badge={badge} />\n      </View>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\"\n  },\n  optional: {\n    color: Theme.color.secondary\n  },\n  title: {\n    margin: Theme.padding.p01,\n    textTransform: \"capitalize\"\n  }\n});\n\ninterface Props {\n  title?: string;\n  optional?: boolean;\n  onPress(): void;\n}\n\n// TODO:  remove title and move into index.tsx\nexport class Title extends React.PureComponent<Props> {\n  private optionalText = \" - Optional\";\n  public render() {\n    const { title, optional, onPress } = this.props;\n    const stylesOptional = [styles.title, styles.optional];\n    if (title === undefined || title.length === 0) {\n      return null;\n    }\n    return (\n      // TODO: remove touchableopacity and move to button component\n      <TouchableOpacity\n        activeOpacity={1}\n        style={styles.container}\n        onPress={onPress}\n      >\n        <Text title={title} style={styles.title} />\n        <Text\n          hidden={!optional}\n          title={this.optionalText}\n          style={stylesOptional}\n        />\n      </TouchableOpacity>\n    );\n  }\n}\n","import moment from \"moment\";\nimport * as React from \"react\";\nimport { TouchableOpacity } from \"react-native\";\nimport { Text } from \"..\";\n\ninterface Props {\n  date: number;\n}\n\ninterface State {\n  showRelativeDate: boolean;\n}\n\nclass RelativeDate extends React.PureComponent<Props, State> {\n  public state = { showRelativeDate: true };\n  private minute = 60 * 1000;\n  private timer?: number;\n\n  public componentDidMount() {\n    this.timer = setInterval(() => this.forceUpdate(), this.minute);\n  }\n\n  public componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  public render() {\n    const { date } = this.props;\n    const { showRelativeDate } = this.state;\n    return (\n      <TouchableOpacity onPress={this.toggleRelativeDate}>\n        <Text hidden={!showRelativeDate} title={moment(date).fromNow()} />\n        <Text\n          hidden={showRelativeDate}\n          title={moment(date).format(\"MMM D YYYY, h:mm a\")}\n        />\n      </TouchableOpacity>\n    );\n  }\n\n  private toggleRelativeDate = () => {\n    this.setState({ showRelativeDate: !this.state.showRelativeDate });\n  };\n}\n\nexport default RelativeDate;\n","import axios from \"axios\";\nimport { ActionType, createStandardAction, getType } from \"typesafe-actions\";\nimport { RootAction, RootState, RootThunkAction } from \"../../models\";\nimport { Config } from \"../../utils\";\n\n// interfaces\nexport interface AuthState {\n  token?: string;\n  loading: boolean;\n  error?: string;\n}\nexport type AuthActions = ActionType<\n  | typeof loginRequest\n  | typeof loginSuccess\n  | typeof loginFailure\n  | typeof registerRequest\n  | typeof registerSuccess\n  | typeof registerFailure\n  | typeof logout\n>;\n\n// actions\nexport const loginRequest = createStandardAction(\"AUTH/LOGIN_REQUEST\")();\nexport const loginSuccess = createStandardAction(\"AUTH/REGISTER_SUCCESS\")<\n  string\n>();\nexport const loginFailure = createStandardAction(\"AUTH/REGISTER_FAILURE\")<\n  Error\n>();\nexport const registerRequest = createStandardAction(\"AUTH/REGISTER_REQUEST\")();\nexport const registerSuccess = createStandardAction(\"AUTH/REGISTER_SUCCESS\")<\n  string\n>();\nexport const registerFailure = createStandardAction(\"AUTH/REGISTER_FAILURE\")<\n  Error\n>();\nexport const logout = createStandardAction(\"Auth/LOGOUT\")();\n\n// action creators\nexport const onLogin = (): RootThunkAction<void> => async dispatch => {\n  dispatch(loginRequest());\n  try {\n    const res = await axios({\n      data: {\n        email: \"sydney@fife\",\n        password: \"pistol\"\n      },\n      method: \"post\",\n      timeout: Config.app.timeout,\n      url: \"https://reqres.in/api/login\"\n    });\n    dispatch(loginSuccess(res.data.token));\n  } catch (error) {\n    dispatch(loginFailure(error));\n  }\n};\nexport const onRegister = (): RootThunkAction<void> => async dispatch => {\n  dispatch(loginRequest());\n  try {\n    const res = await axios({\n      data: {\n        email: \"sydney@fife\",\n        password: \"pistol\"\n      },\n      method: \"post\",\n      timeout: Config.app.timeout,\n      url: \"https://reqres.in/api/register\"\n    });\n    dispatch(loginSuccess(res.data.token));\n  } catch (error) {\n    dispatch(loginFailure(error));\n  }\n};\nexport const onLogout = (): RootThunkAction<void> => async (\n  dispatch,\n  getState\n) => {\n  const token = getState().auth.token;\n  dispatch(logout());\n  axios({\n    data: {\n      token\n    },\n    method: \"post\",\n    timeout: Config.app.timeout,\n    url: \"https://reqres.in/api/logout\"\n  });\n};\n\n// selectors\nexport const getAuthToken = (state: RootState): string | undefined =>\n  state.auth.token;\nexport const getAuthLoading = (state: RootState): boolean => state.auth.loading;\n\n// reducers\nexport const authInitialState: AuthState = {\n  loading: false\n};\nexport function authReducer(\n  state: AuthState = authInitialState,\n  action: RootAction\n): AuthState {\n  switch (action.type) {\n    case getType(loginRequest):\n    case getType(registerRequest):\n      return {\n        ...state,\n        loading: true\n      };\n    case getType(loginFailure):\n    case getType(registerFailure):\n      return {\n        ...state,\n        error: action.payload.message,\n        loading: false\n      };\n    case getType(loginSuccess):\n    case getType(registerSuccess):\n      return {\n        ...state,\n        loading: false,\n        token: action.payload\n      };\n    case getType(logout):\n      return authInitialState;\n    default:\n      return state;\n  }\n}\n","import * as React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { Router } from \"../../components\";\nimport { store } from \"../../models\";\n\ninterface Props {\n  Component: any;\n}\n\nexport class MockProviderAndRouter extends React.PureComponent<Props> {\n  private mock = jest.fn();\n  private history = {\n    push: this.mock\n  };\n  public render() {\n    const { Component } = this.props;\n    return (\n      <Provider store={store}>\n        <Router>\n          <Component\n            match={this.mock}\n            location={this.mock}\n            history={this.history}\n          />\n        </Router>\n      </Provider>\n    );\n  }\n}\n","import {\n  ConnectionInfo,\n  ConnectionType,\n  Dimensions,\n  EffectiveConnectionType,\n  ScaledSize\n} from \"react-native\";\nimport { ActionType, createStandardAction, getType } from \"typesafe-actions\";\nimport { RootAction, RootState } from \"../../models\";\n// import { logout } from \"../Auth\";\n\n// interfaces\nexport interface DimensionsProps {\n  window: ScaledSize;\n  screen: ScaledSize;\n}\nexport interface DeviceState {\n  uniqueId?: string;\n  manufacturer?: string;\n  brand?: string;\n  model?: string;\n  deviceId?: string;\n  systemName?: string;\n  systemVersion?: string;\n  deviceName?: string;\n  userAgent?: string;\n  deviceLocale?: string;\n  deviceCountry?: string;\n  timezone?: string;\n  instanceId?: string;\n  installReferrer?: string;\n  isEmulator?: boolean;\n  isTablet?: boolean;\n  fontScale?: number;\n  is24Hour?: boolean;\n  isPinOrFingerprintSet?: boolean;\n  firstInstallTime?: number;\n  lastUpdateTime?: number;\n  serialNumber?: string;\n  phoneNumber?: string;\n  apiLevel?: number;\n  carrier?: string;\n  totalMemory?: number;\n  maxMemory?: number;\n  totalDiskCapacity?: number;\n  freeDiskStorage?: number;\n  batteryLevel?: number;\n  networkType?: ConnectionType;\n  networkEffectiveType?: EffectiveConnectionType;\n  windowDimensions: ScaledSize;\n  screenDimensions: ScaledSize;\n}\nexport type DeviceActions = ActionType<\n  | typeof onBatteryChange\n  | typeof onFingerprintChange\n  | typeof onDeviceLoad\n  | typeof onNetworkChange\n  | typeof onDimensionChange\n>;\n\n// actions\nexport const onBatteryChange = createStandardAction(\"DEVICE/UPDATE_BATTERY\")<\n  number\n>();\nexport const onFingerprintChange = createStandardAction(\n  \"DEVICE/UPDATE_FINGERPRINT\"\n)<boolean>();\nexport const onDeviceLoad = createStandardAction(\"DEVICE/LOAD\")<DeviceState>();\nexport const onNetworkChange = createStandardAction(\"DEVICE/UPDATE_NETWORK\")<\n  ConnectionInfo\n>();\nexport const onDimensionChange = createStandardAction(\n  \"DEVICE/UPDATE_DIMENSION\"\n)<DimensionsProps>();\n\n// selectors\nexport const getLandscapeOrientation = (state: RootState): boolean =>\n  state.device.windowDimensions.height < state.device.windowDimensions.width;\nexport const getSmallestDimension = (state: RootState): number =>\n  state.device.windowDimensions.height > state.device.windowDimensions.width\n    ? state.device.windowDimensions.width\n    : state.device.windowDimensions.height;\nexport const getLargestDimension = (state: RootState): number =>\n  state.device.windowDimensions.height > state.device.windowDimensions.width\n    ? state.device.windowDimensions.height\n    : state.device.windowDimensions.width;\nexport const getWidth = (state: RootState): number =>\n  state.device.windowDimensions.width;\nexport const getHeight = (state: RootState): number =>\n  state.device.windowDimensions.height;\n\n// reducers\nconst windowDimensions = Dimensions.get(\"window\");\nconst screenDimensions = Dimensions.get(\"screen\");\nexport const deviceInitialState: DeviceState = {\n  screenDimensions,\n  windowDimensions\n};\nexport const deviceReducer = (\n  state: DeviceState = deviceInitialState,\n  action: RootAction\n): DeviceState => {\n  switch (action.type) {\n    case getType(onBatteryChange):\n      return {\n        ...state,\n        batteryLevel: action.payload\n      };\n    case getType(onFingerprintChange):\n      return {\n        ...state,\n        isPinOrFingerprintSet: action.payload\n      };\n    case getType(onNetworkChange):\n      return {\n        ...state,\n        networkEffectiveType: action.payload.effectiveType,\n        networkType: action.payload.type\n      };\n    case getType(onDimensionChange):\n      return {\n        ...state,\n        screenDimensions: action.payload.screen,\n        windowDimensions: action.payload.window\n      };\n    case getType(onDeviceLoad):\n      return {\n        ...state,\n        ...action.payload\n      };\n    // TODO: add back logout\n    // case getType(logout):\n    // return deviceInitialState;\n    default:\n      return state;\n  }\n};\n","import { offline } from \"@redux-offline/redux-offline\";\nimport offlineConfig from \"@redux-offline/redux-offline/lib/defaults\";\nimport {\n  applyMiddleware,\n  combineReducers,\n  compose,\n  createStore,\n  Middleware\n} from \"redux\";\nimport thunk, { ThunkAction } from \"redux-thunk\";\nimport { DeepReadonly } from \"utility-types\";\nimport {\n  ItemActions,\n  itemReducer,\n  Items,\n  ListActions,\n  listReducer,\n  Lists\n} from \"../screens/Debug/screens/Checklists/models\";\nimport { AppActions, appReducer, AppState } from \"./App\";\nimport { AuthActions, authReducer, AuthState } from \"./Auth\";\nimport { DeviceActions, deviceReducer, DeviceState } from \"./Device\";\n\n// models\nexport * from \"./App\";\nexport * from \"./Device\";\nexport * from \"./Auth\";\n\n// interfaces\nexport type RootState = DeepReadonly<{\n  app: AppState;\n  auth: AuthState;\n  device: DeviceState;\n  items: Items;\n  lists: Lists;\n}>;\n\n// reducers\nconst reducers = combineReducers<RootState>({\n  app: appReducer,\n  auth: authReducer,\n  device: deviceReducer,\n  items: itemReducer,\n  lists: listReducer\n});\n\n// actions\nexport type RootAction =\n  | AppActions\n  | DeviceActions\n  | AuthActions\n  | ListActions\n  | ItemActions;\nexport type RootThunkAction<R> = ThunkAction<R, RootState, {}, RootAction>;\n\n// constants\nconst middlewares: Middleware[] = [thunk];\nconst composers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancers = composers(\n  applyMiddleware(...middlewares),\n  offline(offlineConfig)\n);\n\n// store\nexport const store = createStore(reducers, enhancers);\n","import * as React from \"react\";\nimport {\n  AppState,\n  AppStateStatus,\n  ConnectionInfo,\n  ConnectionType,\n  Dimensions,\n  NetInfo\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { Route, Router, Switch } from \"../../components\";\nimport {\n  DimensionsProps,\n  onAppStatusChange,\n  onDimensionChange,\n  onNetworkChange\n} from \"../../models\";\nimport { Debug, Landing, Login, Main, NotFound } from \"../../screens\";\n\ninterface DispatchProps {\n  onAppStatusChange: typeof onAppStatusChange;\n  onNetworkChange: typeof onNetworkChange;\n  onDimensionChange: typeof onDimensionChange;\n}\n\ntype Props = DispatchProps;\n\nclass Component extends React.PureComponent<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.enableListeners();\n  }\n\n  public componentWillUnmount() {\n    this.disableListeners();\n  }\n\n  public render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Landing} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/debug\" component={Debug} />\n          <Route auth path=\"/app\" component={Main} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    );\n  }\n\n  private enableListeners() {\n    NetInfo.addEventListener(\"connectionChange\", this.onNetworkChange);\n    Dimensions.addEventListener(\"change\", this.onDimensionChange);\n    AppState.addEventListener(\"change\", this.onAppStateChange);\n  }\n\n  private disableListeners() {\n    NetInfo.removeEventListener(\"connectionChange\", this.onNetworkChange);\n    Dimensions.removeEventListener(\"change\", this.onDimensionChange);\n    AppState.removeEventListener(\"change\", this.onAppStateChange);\n  }\n\n  private onNetworkChange = (change: ConnectionType | ConnectionInfo) => {\n    if (typeof change === \"string\") {\n      return;\n    }\n    this.props.onNetworkChange(change);\n  };\n\n  private onDimensionChange = (change: DimensionsProps) => {\n    this.props.onDimensionChange(change);\n  };\n\n  private onAppStateChange = (change: AppStateStatus) => {\n    this.props.onAppStatusChange(change);\n  };\n}\n\nexport const App = connect(\n  null,\n  {\n    onAppStatusChange,\n    onDimensionChange,\n    onNetworkChange\n  }\n)(Component);\n","import * as React from \"react\";\nimport { Animated, StyleSheet, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen } from \"../../../../components\";\nimport { getHeight, getWidth, RootState } from \"../../../../models\";\n\nconst styles = StyleSheet.create({\n  ball: {\n    borderColor: \"black\",\n    borderRadius: 30,\n    borderWidth: 30,\n    height: 60,\n    marginLeft: -30,\n    marginTop: -30,\n    width: 60\n  },\n  button: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  private ballPosition: Animated.ValueXY;\n\n  constructor(props: Props) {\n    super(props);\n    const { width, height } = this.props;\n    this.ballPosition = new Animated.ValueXY({ x: width / 2, y: height / 2 });\n  }\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <Animated.View style={[this.ballPosition.getLayout(), styles.ball]} />\n        <View style={styles.button}>\n          <Button title=\"initial\" onPress={() => this.animate(0.5, 0.5)} />\n          <Button\n            title=\"random\"\n            onPress={() => this.animate(Math.random(), Math.random())}\n          />\n        </View>\n      </Screen>\n    );\n  }\n\n  private animate(dx: number, dy: number) {\n    const { width, height } = this.props;\n    Animated.spring(this.ballPosition, {\n      toValue: { x: width * dx, y: height * dy }\n    }).start();\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  height: getHeight(state),\n  width: getWidth(state)\n});\n\nexport const Ball = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport { Animated, Dimensions, StyleSheet, View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen } from \"../../../../components\";\n\nconst cardHeight = 250;\nconst cardTitle = 45;\nconst cardPadding = 10;\n\nconst { height } = Dimensions.get(\"window\");\nconst cards = [\n  {\n    color: \"#a9d0b6\",\n    name: \"Shot\",\n    price: \"30 CHF\"\n  },\n  {\n    color: \"#e9bbd1\",\n    name: \"Juice\",\n    price: \"64 CHF\"\n  },\n  {\n    color: \"#eba65c\",\n    name: \"Mighty Juice\",\n    price: \"80 CHF\"\n  },\n  {\n    color: \"#95c3e4\",\n    name: \"Sandwich\",\n    price: \"85 CHF\"\n  },\n  {\n    color: \"#1c1c1c\",\n    name: \"Combi\",\n    price: \"145 CHF\"\n  },\n  {\n    color: \"#a390bc\",\n    name: \"Signature\",\n    price: \"92 CHF\"\n  },\n  {\n    color: \"#fef2a0\",\n    name: \"Coffee\",\n    price: \"47 CHF\"\n  }\n];\n\ntype Props = RouteComponentProps;\n\nexport class Cards extends React.PureComponent<Props> {\n  public state = {\n    y: new Animated.Value(0)\n  };\n\n  public render() {\n    const { y } = this.state;\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <View style={styles.container}>\n          <View style={StyleSheet.absoluteFill}>\n            {cards.map((card, i) => {\n              const inputRange = [-cardHeight, 0];\n              const outputRange = [\n                cardHeight * i,\n                (cardHeight - cardTitle) * -i\n              ];\n              if (i > 0) {\n                inputRange.push(cardPadding * i);\n                outputRange.push((cardHeight - cardPadding) * -i);\n              }\n              const translateY = y.interpolate({\n                extrapolateRight: \"clamp\",\n                inputRange,\n                outputRange\n              });\n              return (\n                <Animated.View\n                  key={card.name}\n                  style={{ transform: [{ translateY }] }}\n                >\n                  <View\n                    style={[styles.card, { backgroundColor: card.color }]}\n                  />\n                </Animated.View>\n              );\n            })}\n          </View>\n          <Animated.ScrollView\n            scrollEventThrottle={16}\n            contentContainerStyle={styles.content}\n            showsVerticalScrollIndicator={false}\n            onScroll={Animated.event([\n              {\n                nativeEvent: {\n                  contentOffset: { y }\n                }\n              }\n            ])}\n          />\n        </View>\n      </Screen>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    borderRadius: 10,\n    height: cardHeight\n  },\n  container: {\n    flex: 1\n  },\n  content: {\n    height: height * 2\n  },\n  root: {\n    flex: 1,\n    margin: 16\n  }\n});\n","import * as React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\n\ntype Props = RouteComponentProps;\n\nexport class Fonts extends React.PureComponent<Props> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <ScrollView>\n          <Text h1 title=\"H1: The quick brown fox jumps over the lazy dog.\" />\n          <Text h2 title=\"H2: The quick brown fox jumps over the lazy dog.\" />\n          <Text h3 title=\"H3: The quick brown fox jumps over the lazy dog.\" />\n          <Text h4 title=\"H4: The quick brown fox jumps over the lazy dog.\" />\n          <Text h5 title=\"H5: The quick brown fox jumps over the lazy dog.\" />\n          <Text h6 title=\"H6: The quick brown fox jumps over the lazy dog.\" />\n          <Text\n            subtitle1\n            title=\"SUBTITLE1: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            subtitle2\n            title=\"SUBTITLE2: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            body1\n            title=\"BODY1: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            body2\n            title=\"BODY2: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            overline\n            title=\"OVERLINE: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            caption\n            title=\"CAPTION: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            button\n            title=\"BUTTON: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text title=\"NOTHING: The quick brown fox jumps over the lazy dog.\" />\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  Animated,\n  PanResponder,\n  PanResponderInstance,\n  StyleSheet\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\nimport { getHeight, getWidth } from \"../../../../models\";\nimport { RootState } from \"../../../../models\";\n\nconst styles = StyleSheet.create({\n  ball: {\n    borderColor: \"black\",\n    borderRadius: 30,\n    borderWidth: 30,\n    height: 60,\n    marginLeft: -30,\n    marginTop: -30,\n    width: 60\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  private ballPosition: Animated.ValueXY;\n  private panGesture: PanResponderInstance;\n\n  constructor(props: Props) {\n    super(props);\n    const { width, height } = this.props;\n    this.ballPosition = new Animated.ValueXY({ x: width / 2, y: height / 2 });\n    this.panGesture = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: (_, gestureState) => {\n        Animated.spring(this.ballPosition, {\n          toValue: { x: gestureState.moveX, y: gestureState.moveY }\n        }).start();\n      }\n    });\n  }\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <Text center title=\"drag the circle\" />\n        <Animated.View\n          style={[this.ballPosition.getLayout(), styles.ball]}\n          {...this.panGesture.panHandlers}\n        />\n      </Screen>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  height: getHeight(state),\n  width: getWidth(state)\n});\n\nexport const Drag = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen } from \"../../../../components\";\n\ntype Props = RouteComponentProps;\n\nexport class Buttons extends React.PureComponent<Props> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <ScrollView>\n          <Button title=\"nothing\" onPress={() => undefined} />\n          <Button neutral title=\"neutral\" onPress={() => undefined} />\n          <Button text title=\"text\" onPress={() => undefined} />\n          <Button outlined title=\"outlined\" onPress={() => undefined} />\n          <Button contained title=\"contained\" onPress={() => undefined} />\n\n          <Button wrap title=\"nothing\" onPress={() => undefined} />\n          <Button wrap neutral title=\"neutral\" onPress={() => undefined} />\n          <Button wrap text title=\"text\" onPress={() => undefined} />\n          <Button wrap outlined title=\"outlined\" onPress={() => undefined} />\n          <Button wrap contained title=\"contained\" onPress={() => undefined} />\n\n          <Button half title=\"nothing\" onPress={() => undefined} />\n          <Button half neutral title=\"neutral\" onPress={() => undefined} />\n          <Button half text title=\"text\" onPress={() => undefined} />\n          <Button half outlined title=\"outlined\" onPress={() => undefined} />\n          <Button half contained title=\"contained\" onPress={() => undefined} />\n\n          <Button half center title=\"nothing\" onPress={() => undefined} />\n          <Button\n            half\n            center\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button half center text title=\"text\" onPress={() => undefined} />\n          <Button\n            half\n            center\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            center\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button right title=\"nothing\" onPress={() => undefined} />\n          <Button right neutral title=\"neutral\" onPress={() => undefined} />\n          <Button right text title=\"text\" onPress={() => undefined} />\n          <Button right outlined title=\"outlined\" onPress={() => undefined} />\n          <Button right contained title=\"contained\" onPress={() => undefined} />\n\n          <Button disable wrap title=\"nothing\" onPress={() => undefined} />\n          <Button\n            disable\n            wrap\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button disable wrap text title=\"text\" onPress={() => undefined} />\n          <Button\n            disable\n            wrap\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            disable\n            wrap\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button half icon=\"check\" title=\"nothing\" onPress={() => undefined} />\n          <Button\n            half\n            icon=\"check\"\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            text\n            title=\"text\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button wrap icon=\"check\" onPress={() => undefined} />\n          <Button wrap icon=\"check\" neutral onPress={() => undefined} />\n          <Button wrap icon=\"check\" text onPress={() => undefined} />\n          <Button wrap icon=\"check\" outlined onPress={() => undefined} />\n          <Button wrap icon=\"check\" contained onPress={() => undefined} />\n\n          <Button fab icon=\"check\" onPress={() => undefined} />\n          <Button fab icon=\"check\" iconColor=\"red\" onPress={() => undefined} />\n          <Button fab icon=\"check\" neutral onPress={() => undefined} />\n          <Button fab icon=\"check\" text onPress={() => undefined} />\n          <Button fab icon=\"check\" outlined onPress={() => undefined} />\n          <Button fab icon=\"check\" contained onPress={() => undefined} />\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import { NativeTouchEvent, PointPropType } from \"react-native\";\n\ninterface Touches {\n  [key: string]: PointPropType;\n}\n\ninterface Outcome {\n  spread: boolean;\n  pinch: boolean;\n}\n\nexport class GestureHandler {\n  private minTouches: number;\n  private finish: Touches = {};\n  private start: Touches = {};\n\n  constructor({ minTouches = 4 } = {}) {\n    this.minTouches = minTouches;\n  }\n\n  public onPanResponderMove(event: any) {\n    const touches: NativeTouchEvent[] = event.nativeEvent.touches;\n    touches.map((touch: NativeTouchEvent) => {\n      this.recordFinish(touch);\n      this.recordStart(touch);\n    });\n  }\n\n  public onPanResponderRelease(): Outcome {\n    const outcome = this.determineOutcome();\n    this.start = {};\n    this.finish = {};\n    return outcome;\n  }\n\n  private recordStart(touch: NativeTouchEvent) {\n    if (this.isStartAlreadyRecorded(touch)) {\n      return;\n    }\n    this.start[String(touch.identifier)] = {\n      x: touch.locationX,\n      y: touch.locationY\n    };\n  }\n\n  private isStartAlreadyRecorded(touch: NativeTouchEvent) {\n    return this.start[String(touch.identifier)];\n  }\n\n  private recordFinish(touch: NativeTouchEvent) {\n    this.finish[String(touch.identifier)] = {\n      x: touch.locationX,\n      y: touch.locationY\n    };\n  }\n\n  private isSpread(\n    start: PointPropType,\n    finish: PointPropType,\n    center: PointPropType\n  ) {\n    const startXDistance = Math.abs(start.x - center.x);\n    const startYDistance = Math.abs(start.y - center.y);\n    const finishXDistance = Math.abs(finish.x - center.x);\n    const finishYDistance = Math.abs(finish.y - center.y);\n    return (\n      startXDistance <= finishXDistance && startYDistance <= finishYDistance\n    );\n  }\n\n  private determineCenter(points: Touches) {\n    const numRecordedTouched = Object.keys(points).length;\n    let x = 0;\n    let y = 0;\n    for (let i = 1; i <= numRecordedTouched; i++) {\n      const point = points[i];\n      x += point.x;\n      y += point.x;\n    }\n    return { x: x / numRecordedTouched, y: y / numRecordedTouched };\n  }\n\n  private determineOutcome(): Outcome {\n    const numRecordedTouched = Object.keys(this.start).length;\n    const outcome = {\n      pinch: false,\n      spread: false\n    };\n    if (numRecordedTouched < this.minTouches) {\n      return outcome;\n    }\n    let spread = false;\n    let pinch = false;\n    const center = this.determineCenter(this.start);\n    for (let i = 1; i <= numRecordedTouched; i++) {\n      const start = this.start[i];\n      const finish = this.finish[i];\n      const isPinch = !this.isSpread(start, finish, center);\n      const isSpread = this.isSpread(start, finish, center);\n      if (isPinch && isSpread) {\n        return outcome;\n      }\n      if (!isPinch && !isSpread) {\n        return outcome;\n      }\n      if (isPinch && spread) {\n        return outcome;\n      }\n      if (isSpread && pinch) {\n        return outcome;\n      }\n      pinch = isPinch;\n      spread = isSpread;\n    }\n    return { spread, pinch };\n  }\n}\n","import * as React from \"react\";\nimport {\n  Animated,\n  PanResponder,\n  PanResponderInstance,\n  StyleSheet\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\nimport { getHeight, getWidth } from \"../../../../models\";\nimport { RootState } from \"../../../../models\";\nimport { GestureHandler } from \"./logic\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  public state = {\n    pinchCount: 0,\n    spreadCount: 0\n  };\n  private panGesture: PanResponderInstance;\n  private gestureHandler: GestureHandler;\n  private minTouches = 3;\n  private title = `pinch or spread the screen with ${\n    this.minTouches\n  } fingers minimum`;\n\n  constructor(props: Props) {\n    super(props);\n    this.gestureHandler = new GestureHandler({ minTouches: this.minTouches });\n    this.panGesture = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: event => {\n        this.gestureHandler.onPanResponderMove(event);\n      },\n      onPanResponderRelease: () => {\n        const { spreadCount, pinchCount } = this.state;\n        const outcome = this.gestureHandler.onPanResponderRelease();\n        if (outcome.spread) {\n          this.setState({ spreadCount: spreadCount + 1 });\n        }\n        if (outcome.pinch) {\n          this.setState({ pinchCount: pinchCount + 1 });\n        }\n      }\n    });\n  }\n\n  public render() {\n    const { history } = this.props;\n    const { spreadCount, pinchCount } = this.state;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <Text center title={this.title} />\n        <Text center title={`spread: ${spreadCount}`} />\n        <Text center title={`pinch: ${pinchCount}`} />\n        <Animated.View\n          style={styles.container}\n          {...this.panGesture.panHandlers}\n        />\n      </Screen>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  height: getHeight(state),\n  width: getWidth(state)\n});\n\nexport const PinchSpread = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport {\n  Animated,\n  EmitterSubscription,\n  FlatList,\n  Keyboard,\n  Platform,\n  StyleSheet,\n  View\n} from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Icon, Screen, Text, TextInput } from \"../../../../components\";\nimport { colorWithOpacity, Config, Theme } from \"../../../../utils\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    backgroundColor: Theme.color.light,\n    height: Theme.padding.p20,\n    justifyContent: \"center\",\n    padding: Theme.padding.p02\n  },\n  item: {\n    borderBottomColor: Theme.color.light,\n    borderWidth: 0.2,\n    padding: Theme.padding.p06\n  },\n  text: {\n    fontSize: Theme.padding.p06\n  },\n  textContainer: {\n    alignItems: \"center\",\n    backgroundColor: Theme.color.background,\n    flexDirection: \"row\",\n    height: \"100%\",\n    padding: Theme.padding.p02\n  },\n  textInput: {\n    flex: 1,\n    marginLeft: Theme.padding.p02\n  }\n});\n\nconst DATA = [\n  { id: 1, name: \"1\" },\n  { id: 2, name: \"2\" },\n  { id: 3, name: \"3\" },\n  { id: 4, name: \"4\" },\n  { id: 5, name: \"5\" },\n  { id: 6, name: \"6\" },\n  { id: 7, name: \"7\" },\n  { id: 8, name: \"8\" },\n  { id: 9, name: \"9\" },\n  { id: 10, name: \"10\" },\n  { id: 11, name: \"11\" },\n  { id: 12, name: \"12\" },\n  { id: 13, name: \"13\" },\n  { id: 14, name: \"14\" },\n  { id: 15, name: \"15\" },\n  { id: 16, name: \"16\" },\n  { id: 17, name: \"17\" },\n  { id: 18, name: \"18\" },\n  { id: 19, name: \"19\" }\n];\n\ninterface State {\n  input: string;\n  iconName: string;\n  animation: Animated.Value;\n}\n\ntype Props = RouteComponentProps;\n\nexport class SearchBar extends React.PureComponent<Props, State> {\n  public iconSearch = \"magnify\";\n  public state: State = {\n    animation: new Animated.Value(0),\n    iconName: this.iconSearch,\n    input: \"\"\n  };\n  private iconBack = \"arrow-left\";\n  private textInputPlaceHolder = \"Search\";\n  private animationDuration = 400;\n  private translateIcon = this.state.animation.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [1, -60, 1]\n  });\n  private fadeContainer = this.state.animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\n      Theme.color.background,\n      colorWithOpacity(Theme.color.secondary)\n    ]\n  });\n  private iconChangeTimeout?: number;\n  private keyboardDidShowListener: EmitterSubscription;\n  private keyboardDidHideListener: EmitterSubscription;\n  private keyboardWillShowListener: EmitterSubscription;\n  private keyboardWillHideListener: EmitterSubscription;\n\n  constructor(props: Props) {\n    super(props);\n    this.keyboardDidShowListener = Keyboard.addListener(\n      \"keyboardDidShow\",\n      this.keyboardDidShow\n    );\n    this.keyboardDidHideListener = Keyboard.addListener(\n      \"keyboardDidHide\",\n      this.keyboardDidHide\n    );\n    this.keyboardWillShowListener = Keyboard.addListener(\n      \"keyboardWillShow\",\n      this.keyboardWillShow\n    );\n    this.keyboardWillHideListener = Keyboard.addListener(\n      \"keyboardWillHide\",\n      this.keyboardWillHide\n    );\n  }\n\n  public componentWillUnmount() {\n    this.keyboardDidShowListener.remove();\n    this.keyboardDidHideListener.remove();\n    this.keyboardWillShowListener.remove();\n    this.keyboardWillHideListener.remove();\n    clearTimeout(this.iconChangeTimeout);\n  }\n\n  public render() {\n    const { history } = this.props;\n    const { iconName, input } = this.state;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <View style={styles.header}>\n          <View style={styles.textContainer}>\n            <Animated.View\n              style={{\n                transform: [{ translateX: this.translateIcon }]\n              }}\n            >\n              <Icon name={iconName} style={styles.text} />\n            </Animated.View>\n            <TextInput\n              value={input}\n              onChangeText={(value: string) => this.setState({ input: value })}\n              placeholder={this.textInputPlaceHolder}\n              style={[styles.textInput, styles.text]}\n            />\n          </View>\n        </View>\n        <Animated.View style={{ flex: 1, backgroundColor: this.fadeContainer }}>\n          <FlatList\n            keyExtractor={item => item.id.toString()}\n            data={DATA}\n            renderItem={({ item }) => (\n              <Text subtitle2 style={styles.item} title={item.name} />\n            )}\n          />\n        </Animated.View>\n      </Screen>\n    );\n  }\n\n  private onSearchBarFocus() {\n    this.animate(1);\n    this.changeIcon(this.iconBack);\n  }\n\n  private animate(value: number) {\n    Animated.timing(this.state.animation, {\n      duration: this.animationDuration,\n      toValue: value\n    }).start();\n  }\n\n  private changeIcon(iconName: string) {\n    this.iconChangeTimeout = setTimeout(() => {\n      clearTimeout(this.iconChangeTimeout);\n      this.setState({ iconName });\n    }, this.animationDuration / 2);\n  }\n\n  private onSearchBarUnFocus() {\n    this.animate(0);\n    this.changeIcon(this.iconSearch);\n  }\n\n  private keyboardWillShow = () => {\n    if (Platform.OS !== Config.os.ios) {\n      return;\n    }\n    this.onSearchBarFocus();\n  };\n\n  private keyboardWillHide = () => {\n    if (Platform.OS !== Config.os.ios) {\n      return;\n    }\n    this.onSearchBarUnFocus();\n  };\n\n  private keyboardDidShow = () => {\n    if (Platform.OS !== Config.os.android) {\n      return;\n    }\n    this.onSearchBarFocus();\n  };\n\n  private keyboardDidHide = () => {\n    if (Platform.OS !== Config.os.android) {\n      return;\n    }\n    this.onSearchBarUnFocus();\n  };\n}\n","import * as React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Card, Screen, Text } from \"../../../../components\";\nimport { Theme } from \"../../../../utils\";\n\ntype Props = RouteComponentProps;\n\n// TODO: why need scrollview for screen?\nexport class OKRs extends React.PureComponent<Props> {\n  public state = {\n    value: 0\n  };\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <ScrollView\n          contentContainerStyle={{ paddingHorizontal: Theme.padding.p05 }}\n        >\n          <Card>\n            <Text h6 title=\"Company\" />\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Mission\" />\n              <Text\n                title=\"We strive to offer our customers the lowest possible prices\n        the best available selection and the utmost convenience.\"\n              />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Vision\" />\n              <Text title=\"To be Earth’s most customer-centric company where customers can find and discover anything they might want to buy online.\" />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Values\" />\n              <Text title=\"Customer Obsession\" />\n              <Text title=\"Ownership\" />\n              <Text title=\"Invent and Simplify\" />\n              <Text title=\"Are Right a Lot\" />\n              <Text title=\"Learn and Be Curious\" />\n              <Text title=\"Hire and Develop the Best\" />\n              <Text title=\"Insist on the Highest Standards\" />\n              <Text title=\"Think Big\" />\n              <Text title=\"Bias for Action\" />\n              <Text title=\"Frugality\" />\n              <Text title=\"Earn Trust\" />\n              <Text title=\"Dive Deep\" />\n              <Text title=\"Have Backbone; Disagree and Commit\" />\n              <Text title=\"Deliver Results\" />\n            </Card>\n          </Card>\n          <Card>\n            <Text h6 title=\"Product\" />\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Vision\" />\n              <Text title=\"Jim, owner\" />\n            </Card>\n\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"KPIs\" />\n              <Text title=\"Customer Lifetime Value\" />\n              <Text title=\"Average Revenue Per user\" />\n              <Text title=\"Customer Aquisition Cost\" />\n              <Text title=\"Monthly Recurring Revenue\" />\n              <Text title=\"Churn\" />\n              <Text title=\"Cost of Sales\" />\n              <Text title=\"Contributing Margins\" />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Team\" />\n              <Text title=\"Jim, owner\" />\n              <Text title=\"Bob, designer\" />\n              <Text title=\"Steve, engineer\" />\n              <Text title=\"Greg, engineer\" />\n            </Card>\n\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Objective\" />\n              <Text title=\"Jim, owner\" />\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Objective\" />\n              <Text title=\"Jim, owner\" />\n            </Card>\n          </Card>\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport {\n  Button,\n  KeyboardType,\n  Screen,\n  TextInput\n} from \"../../../../components\";\nimport { Theme } from \"../../../../utils\";\n\ntype Props = RouteComponentProps;\n\nexport class Input extends React.PureComponent<Props> {\n  public state = {\n    email: \"\",\n    error: \"\",\n    name: \"\",\n    password: \"\"\n  };\n  public render() {\n    const { email, password, name, error } = this.state;\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <View\n          style={{ flex: 1, backgroundColor: Theme.color.light, padding: 20 }}\n        >\n          <TextInput\n            title=\"Name\"\n            placeholder=\"jane doe\"\n            optional\n            value={name}\n            onChangeText={val => this.setState({ name: val })}\n            error={error}\n          />\n          <TextInput\n            title=\"EMAIL\"\n            value={email}\n            onChangeText={val => this.setState({ email: val })}\n            keyboardType={KeyboardType.Email}\n            placeholder=\"example@gmail.com\"\n            error={error}\n          />\n          <TextInput\n            value={password}\n            onChangeText={val => this.setState({ password: val })}\n            title=\"Password\"\n            placeholder=\"•••••••\"\n            secureTextEntry\n          />\n          <Button\n            contained\n            title=\"complete form\"\n            onPress={() => this.setState({ error: \"Invalid Email\" })}\n          />\n        </View>\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Dimensions, FlatList, View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text } from \"../../../../components\";\n\ninterface OwnProps {\n  title: string;\n}\n\ntype Props = OwnProps & RouteComponentProps;\n\nexport class Questionnaire extends React.PureComponent<Props> {\n  public data = [\n    {\n      choices: [\n        {\n          key: \"1\",\n          selected: false,\n          title: \"individual\"\n        },\n        {\n          key: \"2\",\n          selected: false,\n          title: \"couple\"\n        },\n        {\n          key: \"3\",\n          selected: false,\n          title: \"teen\"\n        }\n      ],\n      key: \"1\",\n      next: \"2\",\n      title: \"What type of counseling are you looking for\",\n      type: \"radio\"\n    },\n    { key: \"2\", title: \"2\" },\n    { key: \"3\", title: \"3\" },\n    { key: \"4\", title: \"4\" },\n    { key: \"5\", title: \"5\" }\n  ];\n  public output: any = {};\n  public width = Dimensions.get(\"window\").width;\n  public tableView: any;\n  public currentIndex = 0;\n\n  public onViewableItemsChanged = ({ viewableItems }: any) => {\n    this.currentIndex = viewableItems[0].index || 0;\n  };\n\n  public onProgress = (direction = 1) => {\n    const index = this.currentIndex + direction;\n    if (index < 0) {\n      return;\n    }\n    if (index >= this.data.length) {\n      this.onFinish();\n      return;\n    }\n    this.tableView.scrollToIndex({\n      animated: true,\n      index\n    });\n  };\n\n  public onSelection = (item: any, choice: any) => {\n    this.output = {\n      ...this.output,\n      [item.key]: {\n        ...this.output[item.key],\n        [choice.key]: true\n      }\n    };\n\n    // this.onProgress();\n  };\n\n  public onFinish = () => undefined;\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <FlatList\n          scrollEnabled={false}\n          ref={(ref: any) => (this.tableView = ref)}\n          removeClippedSubviews\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          onViewableItemsChanged={this.onViewableItemsChanged}\n          viewabilityConfig={{\n            itemVisiblePercentThreshold: 50\n          }}\n          horizontal\n          pagingEnabled\n          data={this.data}\n          renderItem={({ item }) => {\n            let items: any = <View style={{ flex: 1 }} />;\n\n            if (item.choices) {\n              items = (\n                <View style={{ flex: 1 }}>\n                  {item.choices.map(choice => {\n                    return (\n                      <Button\n                        key={choice.title}\n                        title={choice.title}\n                        onPress={() => {\n                          this.onSelection(item, choice);\n                        }}\n                      />\n                    );\n                  })}\n                </View>\n              );\n            }\n\n            return (\n              <View style={{ width: this.width }}>\n                <Text title={item.title} />\n                {items}\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-around\"\n                  }}\n                >\n                  <Button title=\"prev\" onPress={() => this.onProgress(-1)} />\n                  <Button title=\"next\" onPress={() => this.onProgress(1)} />\n                  <Button title=\"next2\" onPress={() => this.onProgress(2)} />\n                </View>\n              </View>\n            );\n          }}\n        />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, TextInput } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\nimport { createItem } from \"../../models/Item\";\n\ninterface DispatchProps {\n  createItem: typeof createItem;\n}\ntype Props = RouteComponentProps & DispatchProps;\ninterface State {\n  name: string;\n  description: string;\n}\n\nclass Component extends React.PureComponent<Props, State> {\n  public state = {\n    description: \"\",\n    name: \"\"\n  };\n  public render() {\n    const { name, description } = this.state;\n    const { history } = this.props;\n\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <TextInput title=\"name\" value={name} onChangeText={this.setName} />\n        <TextInput\n          title=\"description\"\n          value={description}\n          onChangeText={this.setDescription}\n        />\n        <Button title=\"create\" onPress={this.createItem} />\n      </Screen>\n    );\n  }\n\n  private setName = (name: string) => {\n    this.setState({ name });\n  };\n  private setDescription = (description: string) => {\n    this.setState({ description });\n  };\n  private createItem = () => {\n    const { createItem: create, history } = this.props;\n    const { name, description } = this.state;\n    create({ name, description });\n    history.goBack();\n  };\n}\n\nexport const ItemCreate = connect(\n  (state: RootState) => ({\n    state\n  }),\n  { createItem }\n)(Component);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, TextInput } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\nimport { createItem } from \"../../models/Item\";\n\ninterface DispatchProps {\n  createItem: typeof createItem;\n}\ntype Props = RouteComponentProps & DispatchProps;\ninterface State {\n  name: string;\n  description: string;\n}\n\nclass Component extends React.PureComponent<Props, State> {\n  public state = {\n    description: \"\",\n    name: \"\"\n  };\n  public render() {\n    const { name, description } = this.state;\n    const { history } = this.props;\n\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <TextInput title=\"name\" value={name} onChangeText={this.setName} />\n        <TextInput\n          title=\"description\"\n          value={description}\n          onChangeText={this.setDescription}\n        />\n        <Button title=\"create\" onPress={this.createItem} />\n      </Screen>\n    );\n  }\n\n  private setName = (name: string) => {\n    this.setState({ name });\n  };\n  private setDescription = (description: string) => {\n    this.setState({ description });\n  };\n  private createItem = () => {\n    const { createItem: create, history } = this.props;\n    const { name, description } = this.state;\n    create({ name, description });\n    history.goBack();\n  };\n}\n\nexport const ItemUpdate = connect(\n  (state: RootState) => ({\n    state\n  }),\n  { createItem }\n)(Component);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, TextInput } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\nimport { createItem } from \"../../models/Item\";\n\ninterface DispatchProps {\n  createItem: typeof createItem;\n}\ntype Props = RouteComponentProps & DispatchProps;\ninterface State {\n  name: string;\n  description: string;\n}\n\nclass Component extends React.PureComponent<Props, State> {\n  public state = {\n    description: \"\",\n    name: \"\"\n  };\n  public render() {\n    const { name, description } = this.state;\n    const { history } = this.props;\n\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <TextInput title=\"name\" value={name} onChangeText={this.setName} />\n        <TextInput\n          title=\"description\"\n          value={description}\n          onChangeText={this.setDescription}\n        />\n        <Button title=\"create\" onPress={this.createItem} />\n      </Screen>\n    );\n  }\n\n  private setName = (name: string) => {\n    this.setState({ name });\n  };\n  private setDescription = (description: string) => {\n    this.setState({ description });\n  };\n  private createItem = () => {\n    const { createItem: create, history } = this.props;\n    const { name, description } = this.state;\n    create({ name, description });\n    history.goBack();\n  };\n}\n\nexport const ListUpdate = connect(\n  (state: RootState) => ({\n    state\n  }),\n  { createItem }\n)(Component);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, TextInput } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\nimport { createItem } from \"../../models/Item\";\n\ninterface DispatchProps {\n  createItem: typeof createItem;\n}\ntype Props = RouteComponentProps & DispatchProps;\ninterface State {\n  name: string;\n  description: string;\n}\n\nclass Component extends React.PureComponent<Props, State> {\n  public state = {\n    description: \"\",\n    name: \"\"\n  };\n  public render() {\n    const { name, description } = this.state;\n    const { history } = this.props;\n\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <TextInput title=\"name\" value={name} onChangeText={this.setName} />\n        <TextInput\n          title=\"description\"\n          value={description}\n          onChangeText={this.setDescription}\n        />\n        <Button title=\"create\" onPress={this.createList} />\n      </Screen>\n    );\n  }\n\n  private setName = (name: string) => {\n    this.setState({ name });\n  };\n  private setDescription = (description: string) => {\n    this.setState({ description });\n  };\n  private createList = () => {\n    const { createItem: create, history } = this.props;\n    const { name, description } = this.state;\n    create({ name, description });\n    history.goBack();\n  };\n}\n\nexport const ListCreate = connect(\n  (state: RootState) => ({\n    state\n  }),\n  { createItem }\n)(Component);\n","import * as React from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\n\ntype Props = RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  private items = [\n    {\n      id: \"1\",\n      title: \"bob\"\n    },\n    {\n      id: \"2\",\n      title: \"steve\"\n    },\n    {\n      id: \"3\",\n      title: \"jill\"\n    }\n  ];\n  public render() {\n    const { history, match } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <Text title=\"checklists\" />\n        <FlatList\n          keyExtractor={item => item.id}\n          data={this.items}\n          renderItem={({ item }) => (\n            <View style={{ flexDirection: \"row\" }}>\n              <Button\n                contained\n                title={item.id}\n                onPress={() => history.push(`${match.path}/${item.id}`)}\n              />\n            </View>\n          )}\n        />\n        <Button\n          right\n          contained\n          fab\n          icon=\"plus\"\n          onPress={() => history.push(`${match.path}/create`)}\n        />\n      </Screen>\n    );\n  }\n}\n\nexport const Lists = connect(\n  (state: RootState) => ({\n    state\n  }),\n  {}\n)(Component);\n","import * as React from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\nimport { Theme } from \"../../../../../../utils\";\nimport {\n  getItemsByCreatedAt,\n  ItemsArray,\n  removeItem,\n  toggleActiveItem,\n  updateItem\n} from \"../../models/Item\";\n\ninterface StateProps {\n  items: ItemsArray;\n}\n\ninterface DispatchProps {\n  updateItem: typeof updateItem;\n  removeItem: typeof removeItem;\n  toggleActiveItem: typeof toggleActiveItem;\n}\n\ntype Props = RouteComponentProps & StateProps & DispatchProps;\n\nclass Component extends React.PureComponent<Props> {\n  public render() {\n    const {\n      history,\n      items,\n      removeItem: remove,\n      toggleActiveItem: toggle\n    } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <FlatList\n          keyExtractor={item => item.id}\n          data={items}\n          renderItem={({ item }) => (\n            <View style={{ flexDirection: \"row\" }}>\n              <Button\n                label\n                icon=\"checkbox-marked-circle\"\n                iconColor={Theme.color.success}\n                onPress={() => undefined}\n              />\n              <Button\n                label\n                icon=\"close-circle\"\n                iconColor={Theme.color.danger}\n                onPress={() => remove(item.id)}\n              />\n              <Button\n                label\n                iconColor={Theme.color.warning}\n                icon=\"clock\"\n                onPress={() => toggle(item.id)}\n              />\n              <Button\n                label\n                neutral={item.active}\n                lowercase\n                title={item.name}\n                onPress={() => undefined}\n              />\n            </View>\n          )}\n        />\n        <Button\n          fab\n          contained\n          icon=\"plus\"\n          onPress={() => history.push(\"create\")}\n        />\n      </Screen>\n    );\n  }\n}\n\nexport const List = connect(\n  (state: RootState) => ({\n    items: getItemsByCreatedAt(state)\n  }),\n  {\n    removeItem,\n    toggleActiveItem,\n    updateItem\n  }\n)(Component);\n","// @ts-ignore-file\n/* tslint:disable */\n\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Route, Switch } from \"../../../../components\";\nimport { List, ListCreate, Lists } from \"./screens\";\n\ntype Props = RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  public render() {\n    const { match } = this.props;\n    return (\n      <Switch>\n        <Route exact path={`${match.path}`} component={Lists} />\n        <Route path={`${match.path}/create`} component={ListCreate} />\n        <Route path={`${match.path}/:id`} component={List} />\n      </Switch>\n    );\n  }\n}\n\nexport const Checklists = connect(\n  null,\n  null\n)(Component);\n","import * as React from \"react\";\nimport { ActivityIndicator, Animated, StyleSheet, View } from \"react-native\";\n\ninterface Props {\n  uri: string;\n  height: number;\n  width: number;\n  color?: string;\n  size?: number | \"small\" | \"large\";\n}\n\nexport class AsyncImage extends React.PureComponent<Props> {\n  private styles = StyleSheet.create({\n    indicatorOverlay: {\n      justifyContent: \"center\",\n      position: \"absolute\"\n    }\n  });\n  private imageAnimated = new Animated.Value(0);\n  private indicatorAnimated = new Animated.Value(1);\n\n  public render() {\n    const { uri, height, width, color = \"black\", size = \"small\" } = this.props;\n    const containerStyle = { width, height };\n    const imageStyle = [containerStyle, { opacity: this.imageAnimated }];\n    const indicatorStyle = [\n      containerStyle,\n      { opacity: this.indicatorAnimated },\n      this.styles.indicatorOverlay\n    ];\n    return (\n      <View style={containerStyle}>\n        <Animated.Image\n          source={{ uri }}\n          style={imageStyle}\n          onLoad={this.onImageLoad}\n        />\n        <Animated.View style={indicatorStyle}>\n          <ActivityIndicator size={size} color={color} />\n        </Animated.View>\n      </View>\n    );\n  }\n\n  private onImageLoad = () => {\n    Animated.parallel([\n      Animated.timing(this.indicatorAnimated, {\n        toValue: 0,\n        useNativeDriver: true\n      }),\n      Animated.timing(this.imageAnimated, {\n        toValue: 1,\n        useNativeDriver: true\n      })\n    ]).start();\n  };\n}\n","import * as React from \"react\";\nimport { Dimensions, FlatList } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen } from \"../../../../components\";\nimport { AsyncImage } from \"./AsyncImage\";\n\ntype Props = RouteComponentProps;\n\nexport class ImageCollection extends React.PureComponent<Props> {\n  private data: number[] = [\n    Math.random(),\n    Math.random(),\n    Math.random(),\n    Math.random(),\n    Math.random(),\n    Math.random(),\n    Math.random(),\n    Math.random()\n  ];\n  private numColumns = 3;\n  private infiniteScrollThreshold = 0.3;\n  private columnWidth = Dimensions.get(\"window\").width / this.numColumns;\n  private imageUrl = `http://lorempixel.com/${this.columnWidth}/${\n    this.columnWidth\n  }`;\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <FlatList\n          keyExtractor={data => data.toString()}\n          data={this.data}\n          onEndReached={this.fetchMore}\n          onEndReachedThreshold={this.infiniteScrollThreshold}\n          numColumns={this.numColumns}\n          renderItem={this.renderImage}\n        />\n      </Screen>\n    );\n  }\n\n  private fetchMore = () => {\n    this.data.push(Math.random());\n    this.data.push(Math.random());\n    this.data.push(Math.random());\n    this.data.push(Math.random());\n    this.data.push(Math.random());\n  };\n\n  private renderImage = () => (\n    <AsyncImage\n      uri={this.imageUrl}\n      width={this.columnWidth}\n      height={this.columnWidth}\n    />\n  );\n}\n","import moment from \"moment\";\nimport * as React from \"react\";\nimport {\n  ScrollView,\n  StyleProp,\n  StyleSheet,\n  Text,\n  TextStyle,\n  TouchableOpacity,\n  View\n} from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen } from \"../../../../components\";\n\nconst styles = StyleSheet.create({\n  button: {\n    alignItems: \"center\",\n    borderRadius: 40,\n    height: 80,\n    justifyContent: \"center\",\n    width: 80\n  },\n  buttonBorder: {\n    alignItems: \"center\",\n    borderRadius: 38,\n    borderWidth: 1,\n    height: 76,\n    justifyContent: \"center\",\n    width: 76\n  },\n  buttonTitle: {\n    fontSize: 18\n  },\n  buttonsRow: {\n    alignSelf: \"stretch\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginBottom: 30,\n    marginTop: 80\n  },\n  container: {\n    alignItems: \"center\",\n    backgroundColor: \"#0D0D0D\",\n    flex: 1,\n    paddingHorizontal: 20,\n    paddingTop: 130\n  },\n  fastest: {\n    color: \"#4BC05F\"\n  },\n  lap: {\n    borderColor: \"#151515\",\n    borderTopWidth: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingVertical: 10\n  },\n  lapText: {\n    color: \"#FFFFFF\",\n    fontFamily: \"Courier\",\n    fontSize: 18\n  },\n  scrollView: {\n    alignSelf: \"stretch\"\n  },\n  slowest: {\n    color: \"#CC3531\"\n  },\n  timer: {\n    color: \"#FFFFFF\",\n    fontFamily: \"Courier\",\n    fontSize: 54,\n    fontWeight: \"200\"\n  },\n  timerContainer: {\n    flexDirection: \"row\"\n  }\n});\n\ninterface TimerProps {\n  interval: number;\n  style: StyleProp<TextStyle>;\n}\n\nfunction Timer({ interval, style }: TimerProps) {\n  const pad = (n: number) => (n < 10 ? \"0\" + n : n);\n  const duration = moment.duration(interval);\n  const centiseconds = Math.floor(duration.milliseconds() / 10);\n  return (\n    <View style={styles.timerContainer}>\n      <Text style={style}>{pad(duration.minutes())}:</Text>\n      <Text style={style}>{pad(duration.seconds())}.</Text>\n      <Text style={style}>{pad(centiseconds)}</Text>\n    </View>\n  );\n}\n\ninterface RoundButtonProps {\n  title: string;\n  color: string;\n  background: string;\n  disabled?: boolean;\n  onPress(): void;\n}\n\nfunction RoundButton({\n  title,\n  color,\n  background,\n  onPress,\n  disabled = false\n}: RoundButtonProps) {\n  return (\n    <TouchableOpacity\n      onPress={() => !disabled && onPress()}\n      style={[styles.button, { backgroundColor: background }]}\n      activeOpacity={disabled ? 1.0 : 0.7}\n    >\n      <View style={styles.buttonBorder}>\n        <Text style={[styles.buttonTitle, { color }]}>{title}</Text>\n      </View>\n    </TouchableOpacity>\n  );\n}\n\ninterface LapProps {\n  num: number;\n  interval: number;\n  fastest: boolean;\n  slowest: boolean;\n}\n\nfunction Lap({ num, interval, fastest, slowest }: LapProps) {\n  const lapStyle = [\n    styles.lapText,\n    fastest && styles.fastest,\n    slowest && styles.slowest\n  ];\n  return (\n    <View style={styles.lap}>\n      <Text style={lapStyle}>Lap {num}</Text>\n      <Timer style={lapStyle} interval={interval} />\n    </View>\n  );\n}\n\ninterface LapTableProps {\n  laps: number[];\n  timer: number;\n}\n\nfunction LapsTable({ laps, timer }: LapTableProps) {\n  const finishedLaps = laps.slice(1);\n  let min = Number.MAX_SAFE_INTEGER;\n  let max = Number.MIN_SAFE_INTEGER;\n  if (finishedLaps.length >= 2) {\n    finishedLaps.forEach(lap => {\n      if (lap < min) {\n        min = lap;\n      }\n      if (lap > max) {\n        max = lap;\n      }\n    });\n  }\n  return (\n    <ScrollView style={styles.scrollView}>\n      {laps.map((lap, index) => (\n        <Lap\n          num={laps.length - index}\n          key={laps.length - index}\n          interval={index === 0 ? timer + lap : lap}\n          fastest={lap === min}\n          slowest={lap === max}\n        />\n      ))}\n    </ScrollView>\n  );\n}\n\ninterface ButtonRowProps {\n  children: React.ReactElement | React.ReactElement[];\n}\n\nfunction ButtonsRow({ children }: ButtonRowProps) {\n  return <View style={styles.buttonsRow}>{children}</View>;\n}\n\ntype Props = RouteComponentProps;\n\nexport class Stopwatch extends React.PureComponent<Props> {\n  public state = {\n    laps: [],\n    now: 0,\n    start: 0\n  };\n  public timer?: number;\n\n  public componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  public start = () => {\n    const now = new Date().getTime();\n    this.setState({\n      laps: [0],\n      now,\n      start: now\n    });\n    this.run();\n  };\n\n  public lap = () => {\n    const timestamp = new Date().getTime();\n    const { laps, now, start } = this.state;\n    const [firstLap, ...other] = laps;\n    this.setState({\n      laps: [0, firstLap + now - start, ...other],\n      now: timestamp,\n      start: timestamp\n    });\n  };\n\n  public stop = () => {\n    clearInterval(this.timer);\n    const { laps, now, start } = this.state;\n    const [firstLap, ...other] = laps;\n    this.setState({\n      laps: [firstLap + now - start, ...other],\n      now: 0,\n      start: 0\n    });\n  };\n\n  public reset = () => {\n    this.setState({\n      laps: [],\n      now: 0,\n      start: 0\n    });\n  };\n\n  public run = () => {\n    this.timer = setInterval(() => {\n      this.setState({ now: new Date().getTime() });\n    }, 100);\n  };\n\n  public resume = () => {\n    const now = new Date().getTime();\n    this.setState({\n      now,\n      start: now\n    });\n    this.run();\n  };\n\n  public render() {\n    const { now, start, laps } = this.state;\n    const { history } = this.props;\n    const timer = now - start;\n    return (\n      <Screen onLeftPress={() => history.goBack()} style={styles.container}>\n        <Timer\n          interval={laps.reduce((total, curr) => total + curr, 0) + timer}\n          style={styles.timer}\n        />\n        {laps.length === 0 && (\n          <ButtonsRow>\n            <RoundButton\n              title=\"Lap\"\n              color=\"#8B8B90\"\n              background=\"#151515\"\n              onPress={this.lap}\n              disabled\n            />\n            <RoundButton\n              title=\"Start\"\n              color=\"#50D167\"\n              background=\"#1B361F\"\n              onPress={this.start}\n            />\n          </ButtonsRow>\n        )}\n        {start > 0 && (\n          <ButtonsRow>\n            <RoundButton\n              title=\"Lap\"\n              color=\"#FFFFFF\"\n              background=\"#3D3D3D\"\n              onPress={this.lap}\n            />\n            <RoundButton\n              title=\"Stop\"\n              color=\"#E33935\"\n              background=\"#3C1715\"\n              onPress={this.stop}\n            />\n          </ButtonsRow>\n        )}\n        {laps.length > 0 && start === 0 && (\n          <ButtonsRow>\n            <RoundButton\n              title=\"Reset\"\n              color=\"#FFFFFF\"\n              background=\"#3D3D3D\"\n              onPress={this.reset}\n            />\n            <RoundButton\n              title=\"Start\"\n              color=\"#50D167\"\n              background=\"#1B361F\"\n              onPress={this.resume}\n            />\n          </ButtonsRow>\n        )}\n        <LapsTable laps={laps} timer={timer} />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { FlatList, StyleSheet, View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport uuid from \"uuid\";\nimport { Button, Screen, Text, TextInput } from \"../../../../components\";\nimport RelativeDate from \"../../../../components/RelativeDate\";\nimport { Theme } from \"../../../../utils\";\n\ninterface Message {\n  id: string;\n  createdBy: string;\n  updatedAt: number;\n  createdAt: number;\n  message: string;\n  archive: boolean;\n}\ntype Props = RouteComponentProps;\ninterface State {\n  message: string;\n  messages: Message[];\n}\n\nexport class Chat extends React.PureComponent<Props, State> {\n  public state = {\n    message: \"\",\n    messages: []\n  };\n  public styles = StyleSheet.create({\n    row: {\n      flexDirection: \"row\"\n    }\n  });\n  public user = \"123\";\n  public render() {\n    const { message, messages } = this.state;\n    return (\n      <Screen onLeftPress={this.navBack}>\n        <FlatList\n          inverted\n          data={messages}\n          keyExtractor={this.keyExtractor}\n          renderItem={this.renderItem}\n        />\n        <View style={this.styles.row}>\n          <TextInput value={message} onChangeText={this.onMessageChange} />\n          <Button icon=\"check\" onPress={this.onSubmit} />\n        </View>\n      </Screen>\n    );\n  }\n\n  private renderItem = ({ item }: { item: Message }) => {\n    return (\n      <View\n        key={item.id}\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"flex-end\",\n          paddingTop: Theme.padding.p02\n        }}\n      >\n        <View\n          style={{\n            backgroundColor: Theme.color.primary,\n            borderRadius: Theme.padding.p03,\n            padding: Theme.padding.p02\n          }}\n        >\n          <Text title={item.message} body2 />\n          <RelativeDate date={item.createdAt} />\n        </View>\n        <Button\n          title=\"D\"\n          onPress={() => {\n            this.setState({\n              messages: this.state.messages.filter(\n                (message: Message) => message.id !== item.id\n              )\n            });\n          }}\n        />\n      </View>\n    );\n  };\n  private keyExtractor = (item: Message) => item.id;\n  private navBack = () => this.props.history.goBack();\n  private onMessageChange = (message: string) => this.setState({ message });\n  private onSubmit = () => {\n    const { message, messages } = this.state;\n    if (message.trim().length === 0) {\n      return;\n    }\n    const date = Date.now();\n    const newMessage: Message = {\n      archive: false,\n      createdAt: date,\n      createdBy: this.user,\n      id: uuid.v4(),\n      message,\n      updatedAt: date\n    };\n    this.setState({ message: \"\", messages: [newMessage, ...messages] });\n  };\n}\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Link, Route, Screen, Switch } from \"../../components\";\nimport {\n  Ball,\n  Buttons,\n  Cards,\n  Chat,\n  Checklists,\n  Drag,\n  Fonts,\n  ImageCollection,\n  Input,\n  OKRs,\n  PinchSpread,\n  Questionnaire,\n  SearchBar,\n  Stopwatch\n} from \"./screens\";\n\ntype Props = RouteComponentProps;\n\nexport class Debug extends React.PureComponent<Props> {\n  private screens: any = {\n    Ball,\n    Buttons,\n    Cards,\n    Chat,\n    Checklists,\n    Drag,\n    Fonts,\n    ImageCollection,\n    Input,\n    OKRs,\n    PinchSpread,\n    Questionnaire,\n    SearchBar,\n    Stopwatch\n  };\n\n  public render() {\n    return (\n      <Switch>\n        {this.generateRoutes()}\n        <Route component={this.showHomeScreen} />\n      </Switch>\n    );\n  }\n\n  private generateRoutes = () =>\n    Object.keys(this.screens).map((screen: string) => (\n      <Route\n        key={screen}\n        path={`${this.props.match.path}/${screen.toLowerCase()}`}\n        component={this.screens[screen]}\n      />\n    ));\n\n  private navBack = () => this.props.history.goBack();\n\n  private showHomeScreen = () => (\n    <Screen onLeftPress={this.navBack}>\n      {Object.keys(this.screens).map((screen: string) => (\n        <Link\n          key={screen}\n          to={`${this.props.match.path}/${screen}`}\n          title={screen}\n        />\n      ))}\n    </Screen>\n  );\n}\n","/* tslint:disable */\n// @ts-ignore\n\n// TODO: https://telegram.com, https://anydo.com, https://lyft.com, http://www.shegy.nazwa.pl/materialupmarket/mdlp/index_light.html\n\nimport * as React from \"react\";\nimport { Dimensions, StyleSheet, View } from \"react-native\";\nimport { Text, Button } from \"../../components\";\nimport { RouteComponentProps } from \"react-router\";\n\nconst window = Dimensions.get(\"window\");\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: window.height,\n    alignItems: \"center\"\n  },\n  footer: {\n    alignItems: \"flex-end\",\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  }\n});\n\ninterface Props {\n  history: any;\n}\n\nclass Footer extends React.PureComponent<Props> {\n  render() {\n    const { history } = this.props;\n    return (\n      <View style={styles.footer}>\n        <Button title=\"Sign up\" onPress={() => history.push(\"/login\")} />\n        <Button title=\"Log in\" onPress={() => history.push(\"/login\")} />\n        <Button title=\"Debug\" onPress={() => history.push(\"/debug\")} />\n      </View>\n    );\n  }\n}\n\nclass Header extends React.PureComponent {\n  render() {\n    return <View />;\n  }\n}\n\nexport class Landing extends React.PureComponent<RouteComponentProps> {\n  public componentDidMount() {\n    const { history } = this.props;\n    history.push(\"/debug/checklists\");\n  }\n  public render() {\n    const { history } = this.props;\n    return (\n      <View style={styles.container}>\n        <Header />\n        <Text title={String(window.height)} />\n        <Footer history={history} />\n      </View>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text, TextInput } from \"../../components\";\nimport fakeAuth from \"../../models/User\";\n\ninterface State {\n  email: string;\n  password: string;\n}\n\nexport class Login extends React.PureComponent<RouteComponentProps, State> {\n  public state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  public render() {\n    const { location, history } = this.props;\n    const { from } = location.state || { from: { pathname: \"/app\" } };\n    return (\n      <Screen>\n        <Text title=\"Login\" />\n        <TextInput\n          title=\"email\"\n          placeholder=\"example@gmail.com\"\n          onChangeText={text => this.setState({ email: text })}\n          value={this.state.email}\n        />\n        <TextInput\n          title=\"password\"\n          placeholder=\"•••••••\"\n          onChangeText={text => this.setState({ password: text })}\n          value={this.state.password}\n        />\n        <Button title=\"Continue with Google\" onPress={() => undefined} />\n        <Button title=\"Continue with Facebook\" onPress={() => undefined} />\n        <Button\n          title=\"Signup\"\n          onPress={() => fakeAuth.authenticate(() => history.push(from))}\n        />\n        <Button title=\"Forgot\" onPress={() => history.push(\"/nowhere\")} />\n        <Button title=\"Landing\" onPress={() => history.push(\"/\")} />\n        <Button title=\"App\" onPress={() => history.push(\"/app\")} />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text } from \"../../components\";\nimport fakeAuth from \"../../models/User\";\n\nexport class Main extends React.PureComponent<RouteComponentProps> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen>\n        <Text title=\"Main\" />\n        <Button\n          title=\"logout\"\n          onPress={() => {\n            fakeAuth.signout(() => history.push(\"/\"));\n          }}\n        />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Link, Screen, Text } from \"../../components\";\n\nexport class NotFound extends React.PureComponent {\n  public render() {\n    return (\n      <Screen>\n        <Text title=\"404 :(\" />\n        <Link to=\"/app\" title=\"go to App\" />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { AppRegistry, Platform, YellowBox } from \"react-native\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./models\";\nimport { App } from \"./screens\";\nimport { Config } from \"./utils\";\n\n// TODO: remove\nYellowBox.ignoreWarnings([\"NetInfo\", \"Async Storage\"]);\n\nexport class Launcher extends React.PureComponent {\n  public render() {\n    return (\n      <Provider store={store}>\n        <App />\n      </Provider>\n    );\n  }\n}\n\nAppRegistry.registerComponent(Config.app.name, () => Launcher);\nif (Platform.OS === Config.os.web) {\n  AppRegistry.runApplication(Config.app.name, {\n    rootTag: document.getElementById(Config.web.root)\n  });\n}\n"],"sourceRoot":""}