{"version":3,"sources":["apps/Debug/screens/Buttons/index.tsx"],"names":["Container","nav","to","props","navigate","onLeftPress","this","title","onPress","neutral","text","outlined","contained","wrap","half","center","right","disable","icon","fab","iconColor","React","PureComponent","mapDispatchToProps","connect"],"mappings":"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","file":"static/js/19.82522d07.chunk.js","sourcesContent":["import React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { Button, Screen } from \"../../../../components\";\nimport { NavigationScreen, navigate } from \"../../../../models\";\n\ninterface DispatchProps {\n  navigate: typeof navigate;\n}\n\ntype Props = DispatchProps;\n\nclass Container extends React.PureComponent<Props> {\n  public render() {\n    return (\n      <Screen onLeftPress={this.nav(\"debug\")}>\n        <ScrollView>\n          <Button title=\"nothing\" onPress={() => undefined} />\n          <Button neutral title=\"neutral\" onPress={() => undefined} />\n          <Button text title=\"text\" onPress={() => undefined} />\n          <Button outlined title=\"outlined\" onPress={() => undefined} />\n          <Button contained title=\"contained\" onPress={() => undefined} />\n\n          <Button wrap title=\"nothing\" onPress={() => undefined} />\n          <Button wrap neutral title=\"neutral\" onPress={() => undefined} />\n          <Button wrap text title=\"text\" onPress={() => undefined} />\n          <Button wrap outlined title=\"outlined\" onPress={() => undefined} />\n          <Button wrap contained title=\"contained\" onPress={() => undefined} />\n\n          <Button half title=\"nothing\" onPress={() => undefined} />\n          <Button half neutral title=\"neutral\" onPress={() => undefined} />\n          <Button half text title=\"text\" onPress={() => undefined} />\n          <Button half outlined title=\"outlined\" onPress={() => undefined} />\n          <Button half contained title=\"contained\" onPress={() => undefined} />\n\n          <Button half center title=\"nothing\" onPress={() => undefined} />\n          <Button\n            half\n            center\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button half center text title=\"text\" onPress={() => undefined} />\n          <Button\n            half\n            center\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            center\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button right title=\"nothing\" onPress={() => undefined} />\n          <Button right neutral title=\"neutral\" onPress={() => undefined} />\n          <Button right text title=\"text\" onPress={() => undefined} />\n          <Button right outlined title=\"outlined\" onPress={() => undefined} />\n          <Button right contained title=\"contained\" onPress={() => undefined} />\n\n          <Button disable wrap title=\"nothing\" onPress={() => undefined} />\n          <Button\n            disable\n            wrap\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button disable wrap text title=\"text\" onPress={() => undefined} />\n          <Button\n            disable\n            wrap\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            disable\n            wrap\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button half icon=\"check\" title=\"nothing\" onPress={() => undefined} />\n          <Button\n            half\n            icon=\"check\"\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            text\n            title=\"text\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button wrap icon=\"check\" onPress={() => undefined} />\n          <Button wrap icon=\"check\" neutral onPress={() => undefined} />\n          <Button wrap icon=\"check\" text onPress={() => undefined} />\n          <Button wrap icon=\"check\" outlined onPress={() => undefined} />\n          <Button wrap icon=\"check\" contained onPress={() => undefined} />\n\n          <Button fab icon=\"check\" onPress={() => undefined} />\n          <Button fab icon=\"check\" iconColor=\"red\" onPress={() => undefined} />\n          <Button fab icon=\"check\" neutral onPress={() => undefined} />\n          <Button fab icon=\"check\" text onPress={() => undefined} />\n          <Button fab icon=\"check\" outlined onPress={() => undefined} />\n          <Button fab icon=\"check\" contained onPress={() => undefined} />\n        </ScrollView>\n      </Screen>\n    );\n  }\n  private nav = (to: NavigationScreen) => () => this.props.navigate(to);\n}\n\nconst mapDispatchToProps: DispatchProps = { navigate };\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Container);\n"],"sourceRoot":""}