{"version":3,"sources":["screens/Debug/screens/Checklists/models/Item/index.tsx","screens/Debug/screens/Checklists/models/List/index.tsx","models/App/index.tsx","components/TextInput/index.tsx","utils/Config/index.tsx","utils/Theme/index.tsx","components/Link/index.web.tsx","models/User/index.tsx","components/Router/Auth.tsx","components/Router/index.web.tsx","components/Text/index.tsx","components/Button/index.tsx","components/Card/index.tsx","components/CardSection/index.tsx","components/Markdown/index.tsx","components/Swipe/index.tsx","components/Screen/KeyboardAvoid.web.tsx","components/Screen/NavButton.tsx","components/Screen/NavBar.tsx","components/Screen/index.tsx","components/Icon/Badge.tsx","components/Icon/IconSource.web.tsx","components/Icon/index.tsx","components/TextInput/Clear.tsx","components/TextInput/Error.tsx","components/TextInput/Title.tsx","utils/Font/index.tsx","utils/Mock/index.tsx","models/Auth/index.tsx","models/Device/index.tsx","models/index.tsx","screens/App/index.web.tsx","screens/Debug/screens/Ball/index.tsx","screens/Debug/screens/Cards/index.tsx","screens/Debug/screens/Fonts/index.tsx","screens/Debug/screens/Drag/index.tsx","screens/Debug/screens/Buttons/index.tsx","screens/Debug/screens/PinchSpread/logic.tsx","screens/Debug/screens/PinchSpread/index.tsx","screens/Debug/screens/SearchBar/index.tsx","screens/Debug/screens/OKRs/index.tsx","screens/Debug/screens/Input/index.tsx","screens/Debug/screens/Questionnaire/index.tsx","screens/Debug/screens/Checklists/screens/ItemCreate/index.tsx","screens/Debug/screens/Checklists/screens/ItemUpdate/index.tsx","screens/Debug/screens/Checklists/screens/ListUpdate/index.tsx","screens/Debug/screens/Checklists/screens/ListCreate/index.tsx","screens/Debug/screens/Checklists/screens/Lists/index.tsx","screens/Debug/screens/Checklists/screens/List/index.tsx","screens/Debug/screens/Checklists/index.tsx","screens/Debug/screens/ImageCollection/AsyncImage.tsx","screens/Debug/screens/ImageCollection/index.tsx","screens/Debug/index.tsx","screens/Landing/index.web.tsx","screens/Login/index.tsx","screens/Main/index.tsx","screens/NotFound/index.tsx","index.tsx"],"names":["createItem","createStandardAction","updateItem","removeItem","toggleActiveItem","getItems","state","items","getItemsByCreatedAt","createSelector","Object","values","filter","item","active","sort","a","b","createdAt","initialState","selectLists","lists","onAppLoad","onAppStatusChange","onKeyboardChange","appInitialState","app","status","keyboardVisible","KeyboardType","ReturnKeyType","Config","name","timeout","os","android","ios","web","root","Theme","color","background","brand","danger","dark","info","light","primary","secondary","success","text","warning","padding","p00","p01","p02","p03","p04","p05","p06","p07","p08","p09","p10","p11","p12","p13","p14","p15","p16","p17","p18","p19","p20","colorWithOpacity","opacity","arguments","length","undefined","boundedOpacity","startsWith","substr","substring","concat","styles","link","textDecoration","Link","_React$PureComponent","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","_this$props","props","to","title","buttonStyle","textStyle","react","TouchableOpacity","style","react_router_dom","Text_Text","button","center","React","User","isAuthenticated","authenticate","cb","setTimeout","signout","Auth","_getPrototypeOf2","_this","_len","args","Array","_key","call","fallback","_this2","Component","component","Original","original","Redirect","redirect","rest","objectWithoutProperties","assign","render","auth","path","pathname","from","location","Route","_ref","Auth_Auth","Router","children","StyleSheet","create","bold","fontWeight","textAlign","Text","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","FontSize","_this$props2","hidden","toUpperCase","getFont","exports_Text","alignSelf","containedBody","backgroundColor","containedText","container","alignItems","borderColor","borderRadius","borderWidth","flexDirection","justifyContent","paddingHorizontal","disableBody","disableText","fab","half","width","height","icon","paddingRight","label","margin","neutral","nonFlex","outlined","right","Button","onPress","disable","contained","wrap","iconColor","lowercase","activeOpacity","buttonStyleGroup","getShape","textStyleGroup","iconStyleGroup","disabled","Icon_Icon","size","containerStyle","elevation","position","shadowColor","shadowOffset","shadowOpacity","shadowRadius","zIndex","Card","touchOpacity","borderBottomWidth","paddingVertical","KeyboardAvoid","View","flex","buttonRight","NavButton","isRight","fontSize","NavBar","_this$props$title","onLeftPress","onRightPress","_this$props$leftIcon","leftIcon","_this$props$rightIcon","rightIcon","NavButton_NavButton","Screen","disableScroll","SafeAreaView","NavBar_NavBar","KeyboardAvoid_web_KeyboardAvoid","scrollEnabled","badgeContainer","top","badgeText","Badge","badgeLimit","maxBadgeNumber","badge","num","String","IconSource","Icon","_this$props$badge","clear","_this$props$size","_this$props$color","colored","IconSource_web_IconSource","Badge_Badge","Clear","Button_Button","Error","error","message","optional","textTransform","Title","optionalText","stylesOptional","borderError","borderFocus","row","textInput","marginTop","FontWeight","TextInput","focus","updateFocus","setState","focusOnInput","textClear","onChangeText","_this$props$editable","editable","autoCorrect","secureTextEntry","keyboardType","returnKeyType","_this$props$blurOnSub","blurOnSubmit","placeholder","_this$props$disableFu","disableFullscreenUI","textInputStyle","noValue","Title_Title","exports_TextInput","ref","input","selectionColor","onFocus","onBlur","placeholderTextColor","underlineColorAndroid","Clear_Clear","Error_Error","Regular","letterSpacing","Medium","Light","loginRequest","loginSuccess","loginFailure","registerRequest","registerSuccess","registerFailure","logout","authInitialState","loading","onBatteryChange","onFingerprintChange","onDeviceLoad","onNetworkChange","onDimensionChange","getWidth","device","windowDimensions","getHeight","Dimensions","get","deviceInitialState","screenDimensions","reducers","combineReducers","action","type","getType","objectSpread","payload","token","batteryLevel","isPinOrFingerprintSet","networkEffectiveType","effectiveType","networkType","screen","window","id","v4","timestamp","Date","now","defineProperty","order","updatedAt","userId","middlewares","thunk","enhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","offline","offlineConfig","store","createStore","change","onAppStateChange","enableListeners","disableListeners","index_web_Router","index_web_Route","exact","Landing","Login","Debug","Main","NotFound","NetInfo","addEventListener","AppState","removeEventListener","App","connect","ball","marginLeft","ballPosition","Animated","ValueXY","x","y","history","Screen_Screen","goBack","getLayout","animate","Math","random","dx","dy","spring","toValue","start","Ball","cards","price","Cards","Value","absoluteFill","map","card","i","inputRange","outputRange","push","translateY","interpolate","extrapolateRight","transform","ScrollView","scrollEventThrottle","contentContainerStyle","content","showsVerticalScrollIndicator","onScroll","event","nativeEvent","contentOffset","Fonts","panGesture","PanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","_","gestureState","moveX","moveY","panHandlers","Drag","Buttons","GestureHandler","_ref$minTouches","minTouches","finish","touches","touch","recordFinish","recordStart","outcome","determineOutcome","isStartAlreadyRecorded","identifier","locationX","locationY","startXDistance","abs","startYDistance","finishXDistance","finishYDistance","points","numRecordedTouched","keys","point","pinch","spread","determineCenter","isPinch","isSpread","pinchCount","spreadCount","gestureHandler","onPanResponderRelease","_this$state","_this$state2","PinchSpread","header","borderBottomColor","textContainer","DATA","SearchBar","iconSearch","animation","iconName","iconBack","textInputPlaceHolder","animationDuration","translateIcon","fadeContainer","iconChangeTimeout","keyboardDidShowListener","keyboardDidHideListener","keyboardWillShowListener","keyboardWillHideListener","keyboardWillShow","Platform","OS","onSearchBarFocus","keyboardWillHide","onSearchBarUnFocus","keyboardDidShow","keyboardDidHide","Keyboard","addListener","remove","clearTimeout","translateX","TextInput_TextInput","FlatList","keyExtractor","toString","data","renderItem","changeIcon","timing","duration","_this3","OKRs","Card_Card","Input","email","password","val","Email","Questionnaire","choices","selected","next","output","tableView","currentIndex","onViewableItemsChanged","viewableItems","index","onProgress","direction","onFinish","scrollToIndex","animated","onSelection","choice","removeClippedSubviews","showsHorizontalScrollIndicator","viewabilityConfig","itemVisiblePercentThreshold","horizontal","pagingEnabled","_ref2","description","setName","setDescription","createList","ListCreate","match","Lists","toggle","List","Checklists","AsyncImage","indicatorOverlay","imageAnimated","indicatorAnimated","onImageLoad","parallel","useNativeDriver","uri","imageStyle","indicatorStyle","Image","source","onLoad","ActivityIndicator","ImageCollection","numColumns","infiniteScrollThreshold","columnWidth","imageUrl","fetchMore","renderImage","AsyncImage_AsyncImage","onEndReached","onEndReachedThreshold","screens","generateRoutes","toLowerCase","navBack","showHomeScreen","index_web_Link","footer","Footer","Header","_React$PureComponent3","index_web_Header","index_web_Footer","fakeAuth","YellowBox","ignoreWarnings","Launcher","es","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.306d2231.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\nimport { ActionType, createStandardAction, getType } from \"typesafe-actions\";\nimport { DeepReadonly } from \"utility-types\";\nimport { v4 } from \"uuid\";\nimport { RootAction, RootState } from \"../../../../../../models\";\n\n// interfaces\nexport type Item = DeepReadonly<{\n  id: string;\n  name: string;\n  description?: string;\n  active: boolean;\n  userId: string;\n  sources?: string[];\n  order?: number;\n  createdAt: number;\n  updatedAt: number;\n}>;\nexport type Items = DeepReadonly<{ [key: string]: Item }>;\nexport type ItemsArray = DeepReadonly<Item[]>;\nexport type ItemActions = ActionType<\n  | typeof createItem\n  | typeof removeItem\n  | typeof updateItem\n  | typeof toggleActiveItem\n>;\ninterface CreateItem {\n  name: string;\n  description?: string;\n  active?: boolean;\n}\ntype UpdateItem = CreateItem & { id: string };\n\n// actions\nexport const createItem = createStandardAction(\"ITEM/CREATE\")<CreateItem>();\nexport const updateItem = createStandardAction(\"ITEM/UPDATE\")<UpdateItem>();\nexport const removeItem = createStandardAction(\"ITEM/REMOVE\")<string>();\nexport const toggleActiveItem = createStandardAction(\"ITEM/TOGGLE_ACTIVE\")<\n  string\n>();\n\n// indexes\nexport const indexItemsByCreatedAt = (rows: Items): Items =>\n  Object.values(rows).reduce(\n    (index: any, row) => ((index[row.createdAt] = row.id), index),\n    {}\n  );\nexport const indexItemsByUserId = (rows: Items): Items =>\n  Object.values(rows).reduce(\n    (index: any, row) => (\n      (index[row.userId] = row.hasOwnProperty(\"userId\")\n        ? [...index[row.userId], row.id]\n        : [row.id]),\n      index\n    ),\n    {}\n  );\n\n// selectors\nexport const getItems = (state: RootState): Items => state.items;\nexport const getItemsFilterByActive = createSelector(\n  [getItems],\n  items => Object.values(items).filter(item => item.active)\n);\nexport const getItemsByCreatedAt = createSelector(\n  [getItems],\n  items => Object.values(items).sort((a, b) => a.createdAt - b.createdAt)\n);\n\n// reducer\nconst initialState = {};\nexport const itemReducer = (\n  state: Items = initialState,\n  action: RootAction\n): Items => {\n  switch (action.type) {\n    case getType(createItem):\n      const id = v4();\n      const timestamp = Date.now();\n      return {\n        ...state,\n        [id]: {\n          ...action.payload,\n          active: true,\n          createdAt: timestamp,\n          id,\n          order: timestamp,\n          updatedAt: timestamp,\n          userId: \"1\"\n        }\n      };\n    case getType(updateItem):\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          ...action.payload,\n          updatedAt: Date.now()\n        }\n      };\n    case getType(removeItem):\n      return {\n        ...state,\n        [action.payload]: {\n          ...state[action.payload],\n          active: false,\n          updatedAt: Date.now()\n        }\n      };\n    case getType(toggleActiveItem):\n      return {\n        ...state,\n        [action.payload]: {\n          ...state[action.payload],\n          active: !state[action.payload].active,\n          updatedAt: Date.now()\n        }\n      };\n    default:\n      return state;\n  }\n};\n","import { createSelector } from \"reselect\";\nimport { ActionType, createStandardAction } from \"typesafe-actions\";\nimport { DeepReadonly } from \"utility-types\";\nimport { RootAction, RootState } from \"../../../../../../models\";\n\n// Interfaces\nexport type List = DeepReadonly<{\n  id: string;\n  name: string;\n  description?: string;\n  active: boolean;\n  frequency: string[];\n  visibility: string[];\n  createdAt: number;\n  updatedAt: number;\n  userId: string;\n  item: string[];\n  history: string[];\n  viewed: string[];\n  liked: string[];\n  copied: string[];\n  modified: string[];\n}>;\nexport type Lists = DeepReadonly<{ [key: string]: List }>;\nexport type ListActions = ActionType<\n  | typeof createList\n  | typeof removeList\n  | typeof updateList\n  | typeof toggleActiveList\n>;\ninterface CreateList {\n  name: string;\n  description?: string;\n  active?: boolean;\n}\ntype UpdateList = CreateList & { id: string };\n\n// Actions\nexport const createList = createStandardAction(\"LIST/CREATE\")<CreateList>();\nexport const updateList = createStandardAction(\"LIST/UPDATE\")<UpdateList>();\nexport const removeList = createStandardAction(\"LIST/REMOVE\")<string>();\nexport const toggleActiveList = createStandardAction(\"LIST/TOGGLE_ACTIVE\")<\n  string\n>();\n\n// Indexes\nexport const indexListsByCreatedAt = (rows: Lists) =>\n  Object.values(rows).reduce(\n    (index: any, row) => ((index[row.createdAt] = row.id), index),\n    {}\n  );\nexport const indexListsByUserId = (rows: Lists) =>\n  Object.values(rows).reduce(\n    (index: any, row) => (\n      (index[row.userId] = row.hasOwnProperty(\"userId\")\n        ? [...index[row.userId], row.id]\n        : [row.id]),\n      index\n    ),\n    {}\n  );\n\n// Selectors\nexport const selectLists = (state: RootState): Lists => state.lists;\nexport const selectListsFilterByActive = createSelector(\n  [selectLists],\n  items => Object.values(items).filter(item => item.active)\n);\nexport const selectListsByCreatedAt = createSelector(\n  [selectLists],\n  items => Object.values(items).sort((a, b) => a.createdAt - b.createdAt)\n);\n\n// Reducer\nexport const listReducer = (state: Lists = {}, action: RootAction): Lists => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n","import { AppStateStatus } from \"react-native\";\nimport { createSelector } from \"reselect\";\nimport { ActionType, createStandardAction, getType } from \"typesafe-actions\";\nimport { RootAction, RootState } from \"../../models\";\n// import { logout } from \"../Auth\";\n\n// interfaces\nexport interface AppState {\n  appVersion?: string;\n  buildVersion?: string;\n  bundleIdentifier?: string;\n  applicationName?: string;\n  buildNumber?: string;\n  version?: string;\n  readableVersion?: string;\n  status: AppStateStatus;\n  keyboardVisible: boolean;\n}\nexport type AppActions = ActionType<\n  typeof onAppLoad | typeof onAppStatusChange | typeof onKeyboardChange\n>;\n\n// actions\nexport const onAppLoad = createStandardAction(\"APP/LOAD\")<AppState>();\nexport const onAppStatusChange = createStandardAction(\"APP/UPDATE_STATUS\")<\n  AppStateStatus\n>();\nexport const onKeyboardChange = createStandardAction(\n  \"APP/UPDATE_KEYBOARD_VISIBILITY\"\n)<boolean>();\n\n// selectors\nexport const getAppStatus = (state: RootState): AppStateStatus =>\n  state.app.status;\nexport const getKeyboardVisible = (state: RootState): boolean =>\n  state.app.keyboardVisible;\nexport const getAppStatusForeground = createSelector(\n  getAppStatus,\n  (status: AppStateStatus): boolean => status === \"active\"\n);\n\n// reducers\nexport const appInitialState: AppState = {\n  keyboardVisible: false,\n  status: \"inactive\"\n};\nexport function appReducer(\n  state: AppState = appInitialState,\n  action: RootAction\n): AppState {\n  switch (action.type) {\n    case getType(onAppLoad):\n      return {\n        ...state,\n        ...action.payload\n      };\n    case getType(onAppStatusChange):\n      return {\n        ...state,\n        status: action.payload\n      };\n    case getType(onKeyboardChange):\n      return {\n        ...state,\n        keyboardVisible: action.payload\n      };\n    // case getType(logout):\n    //   return appInitialState;\n    default:\n      return state;\n  }\n}\n","import * as React from \"react\";\nimport {\n  StyleSheet,\n  TextInput as Original,\n  TextStyle,\n  View\n} from \"react-native\";\nimport { FontSize, Theme } from \"../../utils\";\nimport { Clear } from \"./Clear\";\nimport { Error } from \"./Error\";\nimport { Title } from \"./Title\";\n\n// styling https://uxdesign.cc/design-better-forms-96fadca0f49c\nconst styles = StyleSheet.create({\n  borderError: {\n    borderColor: Theme.color.danger\n  },\n  borderFocus: {\n    borderColor: Theme.color.primary\n  },\n  row: {\n    flexDirection: \"row\"\n  },\n  textInput: {\n    backgroundColor: Theme.color.background,\n    borderColor: Theme.color.secondary,\n    borderRadius: Theme.padding.p01,\n    borderWidth: 2,\n    flex: 1,\n    marginTop: Theme.padding.p01,\n    padding: Theme.padding.p02,\n    paddingRight: Theme.padding.p08\n  }\n});\n\ninterface Props {\n  title?: string;\n  optional?: boolean;\n  error?: string;\n  style?: TextStyle | {};\n  placeholder?: string;\n  value: string;\n  disableFullscreenUI?: boolean;\n  editable?: boolean;\n  autoCorrect?: boolean;\n  blurOnSubmit?: boolean;\n  secureTextEntry?: boolean;\n  keyboardType?: KeyboardType;\n  returnKeyType?: ReturnKeyType;\n  onChangeText(text: string): void;\n}\n\ninterface State {\n  focus: boolean;\n}\n\nexport enum KeyboardType {\n  Default = \"default\",\n  Number = \"number-pad\",\n  Decimal = \"decimal-pad\",\n  Numeric = \"numeric\",\n  Email = \"email-address\",\n  Phone = \"phone-pad\"\n}\n\nexport enum ReturnKeyType {\n  Done = \"done\",\n  Go = \"go\",\n  Next = \"next\",\n  Search = \"search\",\n  Send = \"send\"\n}\n\nexport class TextInput extends React.PureComponent<Props, State> {\n  public state = {\n    focus: false\n  };\n  private textInput?: Original;\n\n  public render() {\n    const {\n      title,\n      optional,\n      error,\n      editable = true,\n      autoCorrect,\n      secureTextEntry,\n      keyboardType,\n      returnKeyType,\n      blurOnSubmit = true,\n      placeholder,\n      onChangeText,\n      value,\n      disableFullscreenUI = true,\n      style\n    } = this.props;\n    const { focus } = this.state;\n    const textInputStyle = [\n      styles.textInput,\n      error && styles.borderError,\n      focus && styles.borderFocus,\n      FontSize.body2,\n      style\n    ];\n    const noValue = value.length === 0;\n    return (\n      <>\n        <Title title={title} optional={optional} onPress={this.focusOnInput} />\n        <View style={styles.row}>\n          <Original\n            ref={input => {\n              if (!input) {\n                return;\n              }\n              this.textInput = input;\n            }}\n            autoCorrect={autoCorrect}\n            selectionColor={Theme.color.primary}\n            disableFullscreenUI={disableFullscreenUI}\n            onFocus={() => this.updateFocus(true)}\n            onBlur={() => this.updateFocus(false)}\n            editable={editable}\n            placeholderTextColor={Theme.color.secondary}\n            blurOnSubmit={blurOnSubmit}\n            secureTextEntry={secureTextEntry}\n            returnKeyType={returnKeyType}\n            keyboardType={keyboardType}\n            underlineColorAndroid=\"transparent\"\n            style={textInputStyle}\n            placeholder={placeholder}\n            onChangeText={onChangeText}\n            value={value}\n          />\n          <Clear hidden={noValue} onPress={this.textClear} />\n        </View>\n        <Error error={error} onPress={this.focusOnInput} />\n      </>\n    );\n  }\n\n  private updateFocus = (focus: boolean) => {\n    this.setState({ focus });\n  };\n\n  private focusOnInput = () => {\n    if (!this.textInput) {\n      return;\n    }\n    this.textInput.focus();\n  };\n\n  private textClear = () => {\n    const { onChangeText } = this.props;\n    if (!this.textInput) {\n      return;\n    }\n    this.textInput.clear();\n    onChangeText(\"\");\n  };\n}\n","export const Config = {\n  app: {\n    name: \"example\",\n    timeout: 5000\n  },\n  os: {\n    android: \"android\",\n    ios: \"ios\",\n    web: \"web\"\n  },\n  web: {\n    root: \"root\"\n  }\n};\n","export const Theme = {\n  color: {\n    background: \"hsl(0, 100%, 100%)\",\n    brand: \"hsl(264, 34%, 36%)\",\n    danger: \"hsl(354, 70%, 54%)\",\n    dark: \"hsl(210, 10%, 23%)\",\n    info: \"hsl(188, 78%, 41%)\",\n    light: \"hsl(210, 17%, 98%)\",\n    primary: \"hsl(211, 100%, 50%)\",\n    secondary: \"hsl(208, 7%, 46%)\",\n    success: \"hsl(134, 61%, 41%)\",\n    text: \"hsl(0, 0%, 0%)\",\n    warning: \"hsl(45, 100%, 51%)\"\n  },\n  padding: {\n    p00: 0,\n    p01: 4,\n    p02: 8,\n    p03: 12,\n    p04: 16,\n    p05: 20,\n    p06: 24,\n    p07: 28,\n    p08: 32,\n    p09: 36,\n    p10: 40,\n    p11: 44,\n    p12: 48,\n    p13: 52,\n    p14: 56,\n    p15: 60,\n    p16: 64,\n    p17: 68,\n    p18: 72,\n    p19: 76,\n    p20: 80\n  }\n};\n\nexport const colorWithOpacity = (color: string, opacity = 0.5) => {\n  const boundedOpacity = opacity < 0 ? 0 : opacity > 1 ? 1 : opacity;\n  const leading = 4;\n  if (!color.startsWith(\"hsl\")) {\n    return color;\n  }\n  const substr = color.substring(leading, color.length - 1);\n  return `hsla(${substr}, ${boundedOpacity})`;\n};\n","import * as React from \"react\";\nimport { TextStyle, TouchableOpacity, ViewStyle } from \"react-native\";\nimport { Link as Original } from \"react-router-dom\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = {\n  link: {\n    color: Theme.color.dark,\n    textDecoration: \"none\"\n  }\n};\n\ninterface Props {\n  to: string;\n  title: string;\n  buttonStyle?: ViewStyle | {};\n  textStyle?: TextStyle | {};\n}\n\nexport class Link extends React.PureComponent<Props> {\n  public render() {\n    const { to, title, buttonStyle, textStyle } = this.props;\n    return (\n      <TouchableOpacity style={buttonStyle}>\n        <Original to={to} style={styles.link}>\n          <Text button center title={title} style={textStyle} />\n        </Original>\n      </TouchableOpacity>\n    );\n  }\n}\n","type ICallback = () => any;\n\nexport default {\n  isAuthenticated: false,\n  authenticate(cb: ICallback) {\n    this.isAuthenticated = true;\n    setTimeout(cb, 1000);\n  },\n  signout(cb: ICallback) {\n    this.isAuthenticated = false;\n    setTimeout(cb, 1000);\n  }\n};\n","import * as React from \"react\";\nimport User from \"../../models/User\"; // TODO: make models export not export default\n\nexport class Auth extends React.PureComponent<any> {\n  private fallback = \"/login\";\n  public render() {\n    const {\n      component: Component,\n      original: Original,\n      redirect: Redirect,\n      ...rest\n    } = this.props;\n    return (\n      <Original\n        {...rest}\n        render={(props: any) =>\n          !rest.auth ||\n          rest.path === this.fallback ||\n          (rest.auth && User.isAuthenticated) ? (\n            <Component {...props} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: this.fallback,\n                state: { from: props.location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  BrowserRouter,\n  Redirect,\n  Route as Original,\n  Switch\n} from \"react-router-dom\";\nimport { Auth } from \"./Auth\";\n\nconst Route = ({ component, ...rest }: any) => (\n  <Auth\n    original={Original}\n    redirect={Redirect}\n    component={component}\n    {...rest}\n  />\n);\n\nclass Router extends React.PureComponent {\n  public render() {\n    const { children } = this.props;\n    return <BrowserRouter>{children}</BrowserRouter>;\n  }\n}\n\nexport { Route, Router, Redirect, Switch };\n","import * as React from \"react\";\nimport { StyleSheet, Text as Original, ViewStyle } from \"react-native\";\nimport { FontSize } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  bold: {\n    fontWeight: \"600\" // TODO: figure out why I cannot import FontWeight.Medium with tests\n  },\n  center: {\n    textAlign: \"center\"\n  }\n});\n\ninterface Props {\n  title?: string;\n  style?: ViewStyle | {};\n\n  center?: boolean;\n  bold?: boolean;\n  hidden?: boolean;\n\n  h1?: boolean;\n  h2?: boolean;\n  h3?: boolean;\n  h4?: boolean;\n  h5?: boolean;\n  h6?: boolean;\n  subtitle1?: boolean;\n  subtitle2?: boolean;\n  body1?: boolean;\n  body2?: boolean;\n  button?: boolean;\n  caption?: boolean;\n  overline?: boolean;\n}\n\nexport class Text extends React.PureComponent<Props> {\n  public getFont() {\n    const {\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6,\n      subtitle1,\n      subtitle2,\n      body1,\n      body2,\n      button,\n      caption,\n      overline\n    } = this.props;\n    if (h1) {\n      return FontSize.h1;\n    }\n    if (h2) {\n      return FontSize.h2;\n    }\n    if (h3) {\n      return FontSize.h3;\n    }\n    if (h4) {\n      return FontSize.h4;\n    }\n    if (h5) {\n      return FontSize.h5;\n    }\n    if (h6) {\n      return FontSize.h6;\n    }\n    if (subtitle1) {\n      return FontSize.subtitle1;\n    }\n    if (subtitle2) {\n      return FontSize.subtitle2;\n    }\n    if (body1) {\n      return FontSize.body1;\n    }\n    if (body2) {\n      return FontSize.body2;\n    }\n    if (button) {\n      return FontSize.button;\n    }\n    if (caption) {\n      return FontSize.caption;\n    }\n    if (overline) {\n      return FontSize.overline;\n    }\n    return FontSize.body2;\n  }\n\n  public render() {\n    const { title, style, button, bold, overline, center, hidden } = this.props;\n    const text = button || overline ? (title || \"\").toUpperCase() : title;\n    const textStyle = [\n      this.getFont(),\n      center && styles.center,\n      bold && styles.bold,\n      style\n    ];\n    if (title === undefined || title.length === 0 || hidden) {\n      return null;\n    }\n    return <Original style={textStyle}>{text}</Original>;\n  }\n}\n","import * as React from \"react\";\nimport {\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  ViewStyle\n} from \"react-native\";\nimport { Icon, Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  center: {\n    alignSelf: \"center\"\n  },\n  containedBody: {\n    backgroundColor: Theme.color.primary\n  },\n  containedText: {\n    color: Theme.color.background\n  },\n  container: {\n    alignItems: \"center\",\n    borderColor: \"transparent\", // TODO: add border to be same size as outlined\n    borderRadius: Theme.padding.p01,\n    borderWidth: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    paddingHorizontal: Theme.padding.p04\n  },\n  danger: {\n    color: Theme.color.danger\n  },\n  disableBody: {\n    backgroundColor: Theme.color.light\n  },\n  disableText: {\n    color: Theme.color.secondary\n  },\n  fab: {\n    alignSelf: \"flex-start\",\n    borderRadius: Theme.padding.p08,\n    padding: Theme.padding.p04\n  },\n  half: {\n    width: \"50%\"\n  },\n  height: {\n    height: Theme.padding.p09\n  },\n  icon: {\n    paddingRight: 2\n  },\n  label: {\n    height: Theme.padding.p05,\n    justifyContent: \"flex-start\",\n    margin: Theme.padding.p01,\n    paddingHorizontal: 0\n  },\n  neutral: {\n    color: Theme.color.text\n  },\n  nonFlex: {\n    alignSelf: \"flex-start\"\n  },\n  outlined: {\n    borderColor: Theme.color.secondary\n  },\n  right: {\n    alignSelf: \"flex-end\"\n  },\n  secondary: {\n    color: Theme.color.secondary\n  },\n  text: {\n    backgroundColor: \"transparent\",\n    color: Theme.color.primary\n  }\n});\n\n// styling: https://material.io/design/components/buttons.html#usage\ninterface Props {\n  // content\n  title?: string;\n  icon?: string;\n  // styling\n  buttonStyle?: ViewStyle | {};\n  textStyle?: TextStyle | {};\n  iconColor?: string;\n  // state\n  active?: boolean;\n  hidden?: boolean;\n  disable?: boolean;\n  activeOpacity?: number;\n  // shape\n  text?: boolean; // low emphasis\n  outlined?: boolean; // mid emphasis\n  contained?: boolean; // high emphasis\n  fab?: boolean;\n  toggle?: boolean;\n  label?: boolean;\n  // color\n  neutral?: boolean;\n  secondary?: boolean;\n  danger?: boolean;\n  // size\n  wrap?: boolean;\n  half?: boolean;\n  full?: boolean;\n  center?: boolean;\n  right?: boolean;\n  lowercase?: boolean;\n  // event\n  onPress(): void;\n}\n\nexport class Button extends React.PureComponent<Props> {\n  public render() {\n    const {\n      title,\n      onPress,\n      disable,\n      buttonStyle,\n      textStyle,\n      contained,\n      outlined,\n      wrap,\n      fab,\n      hidden,\n      neutral,\n      half,\n      center,\n      right,\n      icon,\n      iconColor,\n      secondary,\n      danger,\n      label,\n      lowercase,\n      activeOpacity\n    } = this.props;\n    const buttonStyleGroup = [\n      styles.container,\n      !fab && styles.height,\n      this.getShape(),\n      disable && (contained || outlined) && styles.disableBody,\n      fab && styles.fab,\n      wrap && styles.nonFlex,\n      half && styles.half,\n      center && styles.center,\n      right && styles.right,\n      label && styles.label,\n      buttonStyle\n    ];\n    const textStyleGroup = [\n      styles.text,\n      neutral && styles.neutral,\n      secondary && styles.secondary,\n      danger && styles.danger,\n      contained && styles.containedText,\n      disable && styles.disableText,\n      textStyle\n    ];\n    const iconStyleGroup = [title && styles.icon, !iconColor && textStyleGroup];\n    if (hidden) {\n      return null;\n    }\n    return (\n      <TouchableOpacity\n        activeOpacity={activeOpacity}\n        style={buttonStyleGroup}\n        onPress={onPress}\n        disabled={disable}\n      >\n        <Icon\n          color={iconColor}\n          name={icon}\n          size={Theme.padding.p04}\n          style={iconStyleGroup}\n        />\n        <Text center button={!lowercase} title={title} style={textStyleGroup} />\n      </TouchableOpacity>\n    );\n  }\n  private getShape() {\n    const { contained, outlined, fab, text } = this.props;\n    if (contained) {\n      return styles.containedBody;\n    }\n    if (outlined) {\n      return styles.outlined;\n    }\n    if (fab) {\n      return styles.fab;\n    }\n    if (text) {\n      return styles.text;\n    }\n    return styles.text;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    backgroundColor: Theme.color.background,\n    elevation: 1,\n    margin: Theme.padding.p02,\n    padding: Theme.padding.p04,\n    position: \"relative\",\n    shadowColor: Theme.color.dark,\n    shadowOffset: {\n      height: 4,\n      width: 0\n    },\n    shadowOpacity: 0.6,\n    shadowRadius: 6,\n    zIndex: 1\n  }\n});\n\ninterface Props {\n  style?: ViewStyle;\n  onPress?(): void;\n}\n\nexport class Card extends React.PureComponent<Props> {\n  private touchOpacity = 0.3;\n  public render() {\n    const { style, children, onPress } = this.props;\n    return (\n      <TouchableOpacity\n        style={[styles.containerStyle, style]}\n        onPress={onPress && onPress}\n        activeOpacity={onPress ? this.touchOpacity : 1}\n      >\n        {children}\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TextStyle, View } from \"react-native\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    backgroundColor: Theme.color.background,\n    borderBottomWidth: 0.5,\n    borderColor: Theme.color.dark,\n    flexDirection: \"row\",\n    paddingHorizontal: 20,\n    paddingVertical: 10\n  }\n});\n\ninterface Props {\n  style?: TextStyle;\n}\n\nexport class CardSection extends React.PureComponent<Props> {\n  public render() {\n    const { style, children } = this.props;\n    return <View style={[styles.containerStyle, style]}>{children}</View>;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TextStyle, View } from \"react-native\";\nimport { Text } from \"..\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\"\n  }\n});\n\ninterface Props {\n  title: string;\n  style?: TextStyle;\n}\n\nexport class Markdown extends React.PureComponent<Props> {\n  private boldSyntax = \"*\";\n  private withoutSyntaxIndex = 2;\n\n  public render() {\n    const { title, style } = this.props;\n    const words = title.split(\" \");\n    return (\n      <View style={styles.container}>\n        {words.map((word: string, index: number) => (\n          <Text\n            style={style}\n            key={index}\n            bold={this.isWordBold(word)}\n            title={this.formattedWord(words, word, index)}\n          />\n        ))}\n      </View>\n    );\n  }\n\n  private isWordBold(word: string) {\n    return (\n      word.length > this.withoutSyntaxIndex &&\n      word[0] === this.boldSyntax &&\n      word[word.length - 1] === this.boldSyntax\n    );\n  }\n\n  private formattedWord(words: string[], word: string, index: number) {\n    const space = words.length - 1 === index ? \"\" : \" \";\n    const trimmed = this.isWordBold(word)\n      ? word.substring(1, word.length - 1)\n      : word;\n    return trimmed + space;\n  }\n}\n","// import * as React from \"react\";\n// import {\n//   View,\n//   Animated,\n//   PanResponder,\n//   Dimensions,\n//   LayoutAnimation,\n//   UIManager,\n//   Platform\n// } from \"react-native\";\n\n// const SCREEN_WIDTH = Dimensions.get(\"window\").width;\n// const SWIPE_THRESHOLD = 0.25 * SCREEN_WIDTH;\n// const SWIPE_OUT_DURATION = 250;\n\n// interface Props {}\n// interface State {\n//   panResponder: number;\n//   position: number;\n//   index: number;\n// }\n\n// class Swipe extends React.PureComponent<Props, State> {\n//   static defaultProps = {\n//     onSwipeRight: () => {},\n//     onSwipeLeft: () => {},\n//     keyProp: \"id\"\n//   };\n\n//   constructor(props: Props) {\n//     super(props);\n\n//     const position = new Animated.ValueXY();\n//     const panResponder = PanResponder.create({\n//       onStartShouldSetPanResponder: () => true,\n//       onPanResponderMove: (_, gesture) => {\n//         position.setValue({ x: gesture.dx, y: gesture.dy });\n//       },\n//       onPanResponderRelease: (_, gesture) => {\n//         if (gesture.dx > SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"right\");\n//         } else if (gesture.dx < -SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"left\");\n//         } else {\n//           this.resetPosition();\n//         }\n//       }\n//     });\n\n//     this.state = { panResponder, position, index: 0 };\n//   }\n\n//   componentWillReceiveProps(nextProps: Props) {\n//     if (nextProps.data !== this.props.data) {\n//       this.setState({ index: 0 });\n//     }\n//   }\n\n//   componentWillUpdate() {\n//     UIManager.setLayoutAnimationEnabledExperimental &&\n//       UIManager.setLayoutAnimationEnabledExperimental(true);\n//     LayoutAnimation.spring();\n//   }\n\n//   forceSwipe(direction) {\n//     const x = direction === \"right\" ? SCREEN_WIDTH : -SCREEN_WIDTH;\n//     Animated.timing(this.state.position, {\n//       toValue: { x, y: 0 },\n//       duration: SWIPE_OUT_DURATION\n//     }).start(() => this.onSwipeComplete(direction));\n//   }\n\n//   onSwipeComplete(direction) {\n//     const { onSwipeLeft, onSwipeRight, data } = this.props;\n//     const item = data[this.state.index];\n\n//     direction === \"right\" ? onSwipeRight(item) : onSwipeLeft(item);\n//     this.state.position.setValue({ x: 0, y: 0 });\n//     this.setState({ index: this.state.index + 1 });\n//   }\n\n//   resetPosition() {\n//     Animated.spring(this.state.position, {\n//       toValue: { x: 0, y: 0 }\n//     }).start();\n//   }\n\n//   getCardStyle() {\n//     const { position } = this.state;\n//     const rotate = position.x.interpolate({\n//       inputRange: [-SCREEN_WIDTH * 1.5, 0, SCREEN_WIDTH * 1.5],\n//       outputRange: [\"-120deg\", \"0deg\", \"120deg\"]\n//     });\n\n//     return {\n//       ...position.getLayout(),\n//       transform: [{ rotate }]\n//     };\n//   }\n\n//   renderCards() {\n//     if (this.state.index >= this.props.data.length) {\n//       return this.props.renderNoMoreCards();\n//     }\n\n//     const deck = this.props.data.map((item, i) => {\n//       if (i < this.state.index) {\n//         return null;\n//       }\n\n//       if (i === this.state.index) {\n//         return (\n//           <Animated.View\n//             key={item[this.props.keyProp]}\n//             style={[this.getCardStyle(), styles.cardStyle, { zIndex: 99 }]}\n//             {...this.state.panResponder.panHandlers}\n//           >\n//             {this.props.renderCard(item)}\n//           </Animated.View>\n//         );\n//       }\n\n//       return (\n//         <Animated.View\n//           key={item[this.props.keyProp]}\n//           style={[\n//             styles.cardStyle,\n//             { top: 10 * (i - this.state.index), zIndex: -i }\n//           ]}\n//         >\n//           {this.props.renderCard(item)}\n//         </Animated.View>\n//       );\n//     });\n\n//     return Platform.OS === \"android\" ? deck : deck.reverse();\n//   }\n\n//   render() {\n//     return <View>{this.renderCards()}</View>;\n//   }\n// }\n\n// const styles = {\n//   cardStyle: {\n//     position: \"absolute\",\n//     width: SCREEN_WIDTH\n//   }\n// };\n\n// export default Swipe;\n\nimport * as React from \"react\";\nimport { View } from \"react-native\";\n\nexport class Swipe extends React.PureComponent {\n  public render() {\n    return <View />;\n  }\n}\n","import * as React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\ninterface Props {\n  style: ViewStyle | {};\n}\n\nexport class KeyboardAvoid extends React.PureComponent<Props> {\n  public render() {\n    const { style, children } = this.props;\n    return <View style={style}>{children}</View>;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Icon } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  button: {\n    flex: 1,\n    padding: Theme.padding.p03\n  },\n  buttonRight: {\n    alignSelf: \"flex-end\"\n  }\n});\n\ninterface Props {\n  icon: string;\n  isRight?: boolean;\n  onPress?(): void;\n}\n\nexport class NavButton extends React.PureComponent<Props> {\n  public render() {\n    const { onPress, icon, isRight } = this.props;\n    if (!onPress) { return null; }\n    return (\n      <TouchableOpacity style={styles.button} onPress={onPress}>\n        <Icon\n          color={Theme.color.dark}\n          style={isRight && styles.buttonRight}\n          name={icon}\n        />\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\nimport { NavButton } from \"./NavButton\";\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    backgroundColor: Theme.color.background,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  title: {\n    flex: 1,\n    fontSize: Theme.padding.p05,\n    textAlign: \"center\"\n  }\n});\n\ninterface Props {\n  title?: string;\n  leftIcon?: string;\n  rightIcon?: string;\n  onLeftPress?(): void;\n  onRightPress?(): void;\n}\n\nexport class NavBar extends React.PureComponent<Props> {\n  public render() {\n    const {\n      title = \"\",\n      onLeftPress,\n      onRightPress,\n      leftIcon = \"arrow-left\",\n      rightIcon = \"close\"\n    } = this.props;\n    const isEnabled = title.length > 0 || onLeftPress || onRightPress;\n    if (!isEnabled) { return null; }\n    return (\n      <View style={styles.container}>\n        <NavButton icon={leftIcon} onPress={onLeftPress} />\n        <Text hidden={title.length === 0} style={styles.title} title={title} />\n        <NavButton icon={rightIcon} isRight onPress={onRightPress} />\n      </View>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { SafeAreaView, StyleSheet, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\nimport { KeyboardAvoid } from \"./KeyboardAvoid\";\nimport { NavBar } from \"./NavBar\";\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Theme.color.background,\n    flex: 1\n  }\n});\n\ninterface OwnProps {\n  style?: ViewStyle | {};\n  title?: string;\n  leftIcon?: string;\n  rightIcon?: string;\n  disableScroll?: boolean;\n  onLeftPress?(): void;\n  onRightPress?(): void;\n}\n\ntype Props = OwnProps;\n\nexport class Screen extends React.PureComponent<Props> {\n  public render() {\n    const {\n      title,\n      style,\n      onLeftPress,\n      onRightPress,\n      children,\n      disableScroll,\n      leftIcon,\n      rightIcon\n    } = this.props;\n    return (\n      <SafeAreaView style={[styles.container, style]}>\n        <NavBar\n          title={title}\n          leftIcon={leftIcon}\n          rightIcon={rightIcon}\n          onLeftPress={onLeftPress}\n          onRightPress={onRightPress}\n        />\n        <KeyboardAvoid\n          scrollEnabled={!disableScroll}\n          style={[styles.container, style]}\n        >\n          {children}\n        </KeyboardAvoid>\n      </SafeAreaView>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  badgeContainer: {\n    alignItems: \"center\",\n    backgroundColor: Theme.color.primary,\n    borderRadius: 20,\n    height: 20,\n    justifyContent: \"center\",\n    position: \"absolute\",\n    right: -10,\n    top: -10,\n    width: 20\n  },\n  badgeText: {\n    color: Theme.color.background,\n    fontSize: Theme.padding.p02\n  }\n});\n\ninterface Props {\n  badge: number;\n}\n\nexport class Badge extends React.PureComponent<Props> {\n  private badgeLimit = \"!\";\n  private maxBadgeNumber = 99;\n  public render() {\n    const { badge } = this.props;\n    const num = badge > this.maxBadgeNumber ? this.badgeLimit : String(badge);\n    if (badge <= 0) {\n      return null;\n    }\n    return (\n      <View style={styles.badgeContainer}>\n        <Text center style={styles.badgeText} title={num} />\n      </View>\n    );\n  }\n}\n","// TODO: icons for web\n\nimport * as React from \"react\";\nimport { Text } from \"..\";\n\ninterface Props {\n  name: string;\n  size: number;\n  color: string;\n}\n\nexport class IconSource extends React.PureComponent<Props> {\n  public render() {\n    const { name } = this.props;\n    return <Text title={name} />;\n  }\n}\n","// usage: <Icon name='check' />\n// source: https://materialdesignicons.com/\n\nimport * as React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\nimport { Badge } from \"./Badge\";\nimport { IconSource } from \"./IconSource\";\n\ninterface Props {\n  badge?: number;\n  style?: ViewStyle | {};\n  clear?: boolean;\n  hidden?: boolean;\n  size?: number;\n  color?: string;\n  name?: string;\n}\n\nexport class Icon extends React.PureComponent<Props> {\n  public render() {\n    const {\n      name,\n      style,\n      badge = 0,\n      clear,\n      size = Theme.padding.p06,\n      color = Theme.color.dark,\n      hidden\n    } = this.props;\n    const colored = clear ? Theme.color.background : color;\n    if (name === undefined || name.length === 0 || hidden) {\n      return null;\n    }\n    return (\n      <View style={style}>\n        <IconSource name={name} size={size} color={colored} style={style} />\n        <Badge badge={badge} />\n      </View>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { Button } from \"..\";\n\nconst styles = StyleSheet.create({\n  clear: {\n    position: \"absolute\",\n    right: -6,\n    top: 6\n  }\n});\n\ninterface Props {\n  hidden: boolean;\n  onPress(): void;\n}\n\nexport class Clear extends React.PureComponent<Props> {\n  private icon = \"close-circle\";\n  public render() {\n    const { hidden, onPress } = this.props;\n    return (\n      <Button\n        secondary\n        hidden={hidden}\n        icon={this.icon}\n        buttonStyle={styles.clear}\n        onPress={onPress}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Button } from \"..\";\n\ninterface Props {\n  error?: string;\n  onPress(): void;\n}\n\nexport class Error extends React.PureComponent<Props> {\n  private icon = \"alert-circle\";\n  public render() {\n    const { error, onPress } = this.props;\n    const icon = error && this.icon;\n    const message = error || \" \";\n    return (\n      <Button\n        label\n        wrap\n        lowercase\n        activeOpacity={1}\n        icon={icon}\n        title={message}\n        danger\n        onPress={onPress}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\"\n  },\n  optional: {\n    color: Theme.color.secondary\n  },\n  title: {\n    textTransform: \"capitalize\"\n  }\n});\n\ninterface Props {\n  title?: string;\n  optional?: boolean;\n  onPress(): void;\n}\n\nexport class Title extends React.PureComponent<Props> {\n  private optionalText = \" - Optional\";\n  public render() {\n    const { title, optional, onPress } = this.props;\n    const stylesOptional = [styles.title, styles.optional];\n    if (title === undefined || title.length === 0) {\n      return null;\n    }\n    return (\n      // TODO: remove touchableopacity and move to button component\n      <TouchableOpacity\n        activeOpacity={1}\n        style={styles.container}\n        onPress={onPress}\n      >\n        <Text title={title} style={styles.title} />\n        <Text\n          hidden={!optional}\n          title={this.optionalText}\n          style={stylesOptional}\n        />\n      </TouchableOpacity>\n    );\n  }\n}\n","export enum FontWeight {\n  Light = \"100\",\n  Regular = \"300\",\n  Medium = \"600\"\n}\n\n// sizing: https://material.io/design/typography/the-type-system.html#applying-the-type-scale\nexport const FontSize = {\n  body1: {\n    fontSize: 16,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0.5\n  },\n  body2: {\n    fontSize: 14,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0.25\n  },\n  button: {\n    fontSize: 14,\n    fontWeight: FontWeight.Medium,\n    letterSpacing: 0.75\n  },\n  caption: {\n    fontSize: 12,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0.4\n  },\n  h1: {\n    fontSize: 96,\n    fontWeight: FontWeight.Light,\n    letterSpacing: -1.5\n  },\n  h2: {\n    fontSize: 60,\n    fontWeight: FontWeight.Light,\n    letterSpacing: -0.5\n  },\n  h3: {\n    fontSize: 48,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0\n  },\n  h4: {\n    fontSize: 34,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0.25\n  },\n  h5: {\n    fontSize: 24,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0\n  },\n  h6: {\n    fontSize: 20,\n    fontWeight: FontWeight.Medium,\n    letterSpacing: 0.15\n  },\n  overline: {\n    fontSize: 10,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 1.5\n  },\n  subtitle1: {\n    fontSize: 16,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0.15\n  },\n  subtitle2: {\n    fontSize: 14,\n    fontWeight: FontWeight.Medium,\n    letterSpacing: 0.1\n  }\n};\n","import * as React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { Router } from \"../../components\";\nimport { store } from \"../../models\";\n\ninterface Props {\n  Component: any;\n}\n\nexport class MockProviderAndRouter extends React.PureComponent<Props> {\n  private mock = jest.fn();\n  private history = {\n    push: this.mock\n  };\n  public render() {\n    const { Component } = this.props;\n    return (\n      <Provider store={store}>\n        <Router>\n          <Component\n            match={this.mock}\n            location={this.mock}\n            history={this.history}\n          />\n        </Router>\n      </Provider>\n    );\n  }\n}\n","import axios from \"axios\";\nimport { ActionType, createStandardAction, getType } from \"typesafe-actions\";\nimport { RootAction, RootState, RootThunkAction } from \"../../models\";\nimport { Config } from \"../../utils\";\n\n// interfaces\nexport interface AuthState {\n  token?: string;\n  loading: boolean;\n  error?: string;\n}\nexport type AuthActions = ActionType<\n  | typeof loginRequest\n  | typeof loginSuccess\n  | typeof loginFailure\n  | typeof registerRequest\n  | typeof registerSuccess\n  | typeof registerFailure\n  | typeof logout\n>;\n\n// actions\nexport const loginRequest = createStandardAction(\"AUTH/LOGIN_REQUEST\")();\nexport const loginSuccess = createStandardAction(\"AUTH/REGISTER_SUCCESS\")<\n  string\n>();\nexport const loginFailure = createStandardAction(\"AUTH/REGISTER_FAILURE\")<\n  Error\n>();\nexport const registerRequest = createStandardAction(\"AUTH/REGISTER_REQUEST\")();\nexport const registerSuccess = createStandardAction(\"AUTH/REGISTER_SUCCESS\")<\n  string\n>();\nexport const registerFailure = createStandardAction(\"AUTH/REGISTER_FAILURE\")<\n  Error\n>();\nexport const logout = createStandardAction(\"Auth/LOGOUT\")();\n\n// action creators\nexport const onLogin = (): RootThunkAction<void> => async dispatch => {\n  dispatch(loginRequest());\n  try {\n    const res = await axios({\n      data: {\n        email: \"sydney@fife\",\n        password: \"pistol\"\n      },\n      method: \"post\",\n      timeout: Config.app.timeout,\n      url: \"https://reqres.in/api/login\"\n    });\n    dispatch(loginSuccess(res.data.token));\n  } catch (error) {\n    dispatch(loginFailure(error));\n  }\n};\nexport const onRegister = (): RootThunkAction<void> => async dispatch => {\n  dispatch(loginRequest());\n  try {\n    const res = await axios({\n      data: {\n        email: \"sydney@fife\",\n        password: \"pistol\"\n      },\n      method: \"post\",\n      timeout: Config.app.timeout,\n      url: \"https://reqres.in/api/register\"\n    });\n    dispatch(loginSuccess(res.data.token));\n  } catch (error) {\n    dispatch(loginFailure(error));\n  }\n};\nexport const onLogout = (): RootThunkAction<void> => async (\n  dispatch,\n  getState\n) => {\n  const token = getState().auth.token;\n  dispatch(logout());\n  axios({\n    data: {\n      token\n    },\n    method: \"post\",\n    timeout: Config.app.timeout,\n    url: \"https://reqres.in/api/logout\"\n  });\n};\n\n// selectors\nexport const getAuthToken = (state: RootState): string | undefined =>\n  state.auth.token;\nexport const getAuthLoading = (state: RootState): boolean => state.auth.loading;\n\n// reducers\nexport const authInitialState: AuthState = {\n  loading: false\n};\nexport function authReducer(\n  state: AuthState = authInitialState,\n  action: RootAction\n): AuthState {\n  switch (action.type) {\n    case getType(loginRequest):\n    case getType(registerRequest):\n      return {\n        ...state,\n        loading: true\n      };\n    case getType(loginFailure):\n    case getType(registerFailure):\n      return {\n        ...state,\n        error: action.payload.message,\n        loading: false\n      };\n    case getType(loginSuccess):\n    case getType(registerSuccess):\n      return {\n        ...state,\n        loading: false,\n        token: action.payload\n      };\n    case getType(logout):\n      return authInitialState;\n    default:\n      return state;\n  }\n}\n","import {\n  ConnectionInfo,\n  ConnectionType,\n  Dimensions,\n  EffectiveConnectionType,\n  ScaledSize\n} from \"react-native\";\nimport { ActionType, createStandardAction, getType } from \"typesafe-actions\";\nimport { RootAction, RootState } from \"../../models\";\n// import { logout } from \"../Auth\";\n\n// interfaces\nexport interface DimensionsProps {\n  window: ScaledSize;\n  screen: ScaledSize;\n}\nexport interface DeviceState {\n  uniqueId?: string;\n  manufacturer?: string;\n  brand?: string;\n  model?: string;\n  deviceId?: string;\n  systemName?: string;\n  systemVersion?: string;\n  deviceName?: string;\n  userAgent?: string;\n  deviceLocale?: string;\n  deviceCountry?: string;\n  timezone?: string;\n  instanceId?: string;\n  installReferrer?: string;\n  isEmulator?: boolean;\n  isTablet?: boolean;\n  fontScale?: number;\n  is24Hour?: boolean;\n  isPinOrFingerprintSet?: boolean;\n  firstInstallTime?: number;\n  lastUpdateTime?: number;\n  serialNumber?: string;\n  phoneNumber?: string;\n  apiLevel?: number;\n  carrier?: string;\n  totalMemory?: number;\n  maxMemory?: number;\n  totalDiskCapacity?: number;\n  freeDiskStorage?: number;\n  batteryLevel?: number;\n  networkType?: ConnectionType;\n  networkEffectiveType?: EffectiveConnectionType;\n  windowDimensions: ScaledSize;\n  screenDimensions: ScaledSize;\n}\nexport type DeviceActions = ActionType<\n  | typeof onBatteryChange\n  | typeof onFingerprintChange\n  | typeof onDeviceLoad\n  | typeof onNetworkChange\n  | typeof onDimensionChange\n>;\n\n// actions\nexport const onBatteryChange = createStandardAction(\"DEVICE/UPDATE_BATTERY\")<\n  number\n>();\nexport const onFingerprintChange = createStandardAction(\n  \"DEVICE/UPDATE_FINGERPRINT\"\n)<boolean>();\nexport const onDeviceLoad = createStandardAction(\"DEVICE/LOAD\")<DeviceState>();\nexport const onNetworkChange = createStandardAction(\"DEVICE/UPDATE_NETWORK\")<\n  ConnectionInfo\n>();\nexport const onDimensionChange = createStandardAction(\n  \"DEVICE/UPDATE_DIMENSION\"\n)<DimensionsProps>();\n\n// selectors\nexport const getLandscapeOrientation = (state: RootState): boolean =>\n  state.device.windowDimensions.height < state.device.windowDimensions.width;\nexport const getSmallestDimension = (state: RootState): number =>\n  state.device.windowDimensions.height > state.device.windowDimensions.width\n    ? state.device.windowDimensions.width\n    : state.device.windowDimensions.height;\nexport const getLargestDimension = (state: RootState): number =>\n  state.device.windowDimensions.height > state.device.windowDimensions.width\n    ? state.device.windowDimensions.height\n    : state.device.windowDimensions.width;\nexport const getWidth = (state: RootState): number =>\n  state.device.windowDimensions.width;\nexport const getHeight = (state: RootState): number =>\n  state.device.windowDimensions.height;\n\n// reducers\nconst windowDimensions = Dimensions.get(\"window\");\nconst screenDimensions = Dimensions.get(\"screen\");\nexport const deviceInitialState: DeviceState = {\n  screenDimensions,\n  windowDimensions\n};\nexport const deviceReducer = (\n  state: DeviceState = deviceInitialState,\n  action: RootAction\n): DeviceState => {\n  switch (action.type) {\n    case getType(onBatteryChange):\n      return {\n        ...state,\n        batteryLevel: action.payload\n      };\n    case getType(onFingerprintChange):\n      return {\n        ...state,\n        isPinOrFingerprintSet: action.payload\n      };\n    case getType(onNetworkChange):\n      return {\n        ...state,\n        networkEffectiveType: action.payload.effectiveType,\n        networkType: action.payload.type\n      };\n    case getType(onDimensionChange):\n      return {\n        ...state,\n        screenDimensions: action.payload.screen,\n        windowDimensions: action.payload.window\n      };\n    case getType(onDeviceLoad):\n      return {\n        ...state,\n        ...action.payload\n      };\n    // case getType(logout):\n    // return deviceInitialState;\n    default:\n      return state;\n  }\n};\n","import { offline } from \"@redux-offline/redux-offline\";\nimport offlineConfig from \"@redux-offline/redux-offline/lib/defaults\";\nimport {\n  applyMiddleware,\n  combineReducers,\n  compose,\n  createStore,\n  Middleware\n} from \"redux\";\nimport thunk, { ThunkAction } from \"redux-thunk\";\nimport { DeepReadonly } from \"utility-types\";\nimport {\n  ItemActions,\n  itemReducer,\n  Items,\n  ListActions,\n  listReducer,\n  Lists\n} from \"../screens/Debug/screens/Checklists/models\";\nimport { AppActions, appReducer, AppState } from \"./App\";\nimport { AuthActions, authReducer, AuthState } from \"./Auth\";\nimport { DeviceActions, deviceReducer, DeviceState } from \"./Device\";\n\n// models\nexport * from \"./App\";\nexport * from \"./Device\";\nexport * from \"./Auth\";\n\n// interfaces\nexport type RootState = DeepReadonly<{\n  app: AppState;\n  auth: AuthState;\n  device: DeviceState;\n  items: Items;\n  lists: Lists;\n}>;\n\n// reducers\nconst reducers = combineReducers<RootState>({\n  app: appReducer,\n  auth: authReducer,\n  device: deviceReducer,\n  items: itemReducer,\n  lists: listReducer\n});\n\n// actions\nexport type RootAction =\n  | AppActions\n  | DeviceActions\n  | AuthActions\n  | ListActions\n  | ItemActions;\nexport type RootThunkAction<R> = ThunkAction<R, RootState, {}, RootAction>;\n\n// constants\nconst middlewares: Middleware[] = [thunk];\nconst composers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancers = composers(\n  applyMiddleware(...middlewares),\n  offline(offlineConfig)\n);\n\n// store\nexport const store = createStore(reducers, enhancers);\n","import * as React from \"react\";\nimport {\n  AppState,\n  AppStateStatus,\n  ConnectionInfo,\n  ConnectionType,\n  Dimensions,\n  NetInfo\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { Route, Router, Switch } from \"../../components\";\nimport {\n  DimensionsProps,\n  onAppStatusChange,\n  onDimensionChange,\n  onNetworkChange\n} from \"../../models\";\nimport { Debug, Landing, Login, Main, NotFound } from \"../../screens\";\n\ninterface DispatchProps {\n  onAppStatusChange: typeof onAppStatusChange;\n  onNetworkChange: typeof onNetworkChange;\n  onDimensionChange: typeof onDimensionChange;\n}\n\ntype Props = DispatchProps;\n\nclass Component extends React.PureComponent<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.enableListeners();\n  }\n\n  public componentWillUnmount() {\n    this.disableListeners();\n  }\n\n  public render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Landing} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/debug\" component={Debug} />\n          <Route auth path=\"/app\" component={Main} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    );\n  }\n\n  private enableListeners() {\n    NetInfo.addEventListener(\"connectionChange\", this.onNetworkChange);\n    Dimensions.addEventListener(\"change\", this.onDimensionChange);\n    AppState.addEventListener(\"change\", this.onAppStateChange);\n  }\n\n  private disableListeners() {\n    NetInfo.removeEventListener(\"connectionChange\", this.onNetworkChange);\n    Dimensions.removeEventListener(\"change\", this.onDimensionChange);\n    AppState.removeEventListener(\"change\", this.onAppStateChange);\n  }\n\n  private onNetworkChange = (change: ConnectionType | ConnectionInfo) => {\n    if (typeof change === \"string\") {\n      return;\n    }\n    this.props.onNetworkChange(change);\n  };\n\n  private onDimensionChange = (change: DimensionsProps) => {\n    this.props.onDimensionChange(change);\n  };\n\n  private onAppStateChange = (change: AppStateStatus) => {\n    this.props.onAppStatusChange(change);\n  };\n}\n\nexport const App = connect(\n  null,\n  {\n    onAppStatusChange,\n    onDimensionChange,\n    onNetworkChange\n  }\n)(Component);\n","import * as React from \"react\";\nimport { Animated, StyleSheet, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen } from \"../../../../components\";\nimport { getHeight, getWidth, RootState } from \"../../../../models\";\n\nconst styles = StyleSheet.create({\n  ball: {\n    borderColor: \"black\",\n    borderRadius: 30,\n    borderWidth: 30,\n    height: 60,\n    marginLeft: -30,\n    marginTop: -30,\n    width: 60\n  },\n  button: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  private ballPosition: Animated.ValueXY;\n\n  constructor(props: Props) {\n    super(props);\n    const { width, height } = this.props;\n    this.ballPosition = new Animated.ValueXY({ x: width / 2, y: height / 2 });\n  }\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <Animated.View style={[this.ballPosition.getLayout(), styles.ball]} />\n        <View style={styles.button}>\n          <Button title=\"initial\" onPress={() => this.animate(0.5, 0.5)} />\n          <Button\n            title=\"random\"\n            onPress={() => this.animate(Math.random(), Math.random())}\n          />\n        </View>\n      </Screen>\n    );\n  }\n\n  private animate(dx: number, dy: number) {\n    const { width, height } = this.props;\n    Animated.spring(this.ballPosition, {\n      toValue: { x: width * dx, y: height * dy }\n    }).start();\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  height: getHeight(state),\n  width: getWidth(state)\n});\n\nexport const Ball = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport { Animated, Dimensions, StyleSheet, View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen } from \"../../../../components\";\n\nconst cardHeight = 250;\nconst cardTitle = 45;\nconst cardPadding = 10;\n\nconst { height } = Dimensions.get(\"window\");\nconst cards = [\n  {\n    color: \"#a9d0b6\",\n    name: \"Shot\",\n    price: \"30 CHF\"\n  },\n  {\n    color: \"#e9bbd1\",\n    name: \"Juice\",\n    price: \"64 CHF\"\n  },\n  {\n    color: \"#eba65c\",\n    name: \"Mighty Juice\",\n    price: \"80 CHF\"\n  },\n  {\n    color: \"#95c3e4\",\n    name: \"Sandwich\",\n    price: \"85 CHF\"\n  },\n  {\n    color: \"#1c1c1c\",\n    name: \"Combi\",\n    price: \"145 CHF\"\n  },\n  {\n    color: \"#a390bc\",\n    name: \"Signature\",\n    price: \"92 CHF\"\n  },\n  {\n    color: \"#fef2a0\",\n    name: \"Coffee\",\n    price: \"47 CHF\"\n  }\n];\n\ntype Props = RouteComponentProps;\n\nexport class Cards extends React.PureComponent<Props> {\n  public state = {\n    y: new Animated.Value(0)\n  };\n\n  public render() {\n    const { y } = this.state;\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <View style={styles.container}>\n          <View style={StyleSheet.absoluteFill}>\n            {cards.map((card, i) => {\n              const inputRange = [-cardHeight, 0];\n              const outputRange = [\n                cardHeight * i,\n                (cardHeight - cardTitle) * -i\n              ];\n              if (i > 0) {\n                inputRange.push(cardPadding * i);\n                outputRange.push((cardHeight - cardPadding) * -i);\n              }\n              const translateY = y.interpolate({\n                extrapolateRight: \"clamp\",\n                inputRange,\n                outputRange\n              });\n              return (\n                <Animated.View\n                  key={card.name}\n                  style={{ transform: [{ translateY }] }}\n                >\n                  <View\n                    style={[styles.card, { backgroundColor: card.color }]}\n                  />\n                </Animated.View>\n              );\n            })}\n          </View>\n          <Animated.ScrollView\n            scrollEventThrottle={16}\n            contentContainerStyle={styles.content}\n            showsVerticalScrollIndicator={false}\n            onScroll={Animated.event([\n              {\n                nativeEvent: {\n                  contentOffset: { y }\n                }\n              }\n            ])}\n          />\n        </View>\n      </Screen>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    borderRadius: 10,\n    height: cardHeight\n  },\n  container: {\n    flex: 1\n  },\n  content: {\n    height: height * 2\n  },\n  root: {\n    flex: 1,\n    margin: 16\n  }\n});\n","import * as React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\n\ntype Props = RouteComponentProps;\n\nexport class Fonts extends React.PureComponent<Props> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <ScrollView>\n          <Text h1 title=\"H1: The quick brown fox jumps over the lazy dog.\" />\n          <Text h2 title=\"H2: The quick brown fox jumps over the lazy dog.\" />\n          <Text h3 title=\"H3: The quick brown fox jumps over the lazy dog.\" />\n          <Text h4 title=\"H4: The quick brown fox jumps over the lazy dog.\" />\n          <Text h5 title=\"H5: The quick brown fox jumps over the lazy dog.\" />\n          <Text h6 title=\"H6: The quick brown fox jumps over the lazy dog.\" />\n          <Text\n            subtitle1\n            title=\"SUBTITLE1: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            subtitle2\n            title=\"SUBTITLE2: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            body1\n            title=\"BODY1: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            body2\n            title=\"BODY2: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            overline\n            title=\"OVERLINE: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            caption\n            title=\"CAPTION: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            button\n            title=\"BUTTON: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text title=\"NOTHING: The quick brown fox jumps over the lazy dog.\" />\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  Animated,\n  PanResponder,\n  PanResponderInstance,\n  StyleSheet\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\nimport { getHeight, getWidth } from \"../../../../models\";\nimport { RootState } from \"../../../../models\";\n\nconst styles = StyleSheet.create({\n  ball: {\n    borderColor: \"black\",\n    borderRadius: 30,\n    borderWidth: 30,\n    height: 60,\n    marginLeft: -30,\n    marginTop: -30,\n    width: 60\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  private ballPosition: Animated.ValueXY;\n  private panGesture: PanResponderInstance;\n\n  constructor(props: Props) {\n    super(props);\n    const { width, height } = this.props;\n    this.ballPosition = new Animated.ValueXY({ x: width / 2, y: height / 2 });\n    this.panGesture = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: (_, gestureState) => {\n        Animated.spring(this.ballPosition, {\n          toValue: { x: gestureState.moveX, y: gestureState.moveY }\n        }).start();\n      }\n    });\n  }\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <Text center title=\"drag the circle\" />\n        <Animated.View\n          style={[this.ballPosition.getLayout(), styles.ball]}\n          {...this.panGesture.panHandlers}\n        />\n      </Screen>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  height: getHeight(state),\n  width: getWidth(state)\n});\n\nexport const Drag = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen } from \"../../../../components\";\n\ntype Props = RouteComponentProps;\n\nexport class Buttons extends React.PureComponent<Props> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <ScrollView>\n          <Button title=\"nothing\" onPress={() => undefined} />\n          <Button neutral title=\"neutral\" onPress={() => undefined} />\n          <Button text title=\"text\" onPress={() => undefined} />\n          <Button outlined title=\"outlined\" onPress={() => undefined} />\n          <Button contained title=\"contained\" onPress={() => undefined} />\n\n          <Button wrap title=\"nothing\" onPress={() => undefined} />\n          <Button wrap neutral title=\"neutral\" onPress={() => undefined} />\n          <Button wrap text title=\"text\" onPress={() => undefined} />\n          <Button wrap outlined title=\"outlined\" onPress={() => undefined} />\n          <Button wrap contained title=\"contained\" onPress={() => undefined} />\n\n          <Button half title=\"nothing\" onPress={() => undefined} />\n          <Button half neutral title=\"neutral\" onPress={() => undefined} />\n          <Button half text title=\"text\" onPress={() => undefined} />\n          <Button half outlined title=\"outlined\" onPress={() => undefined} />\n          <Button half contained title=\"contained\" onPress={() => undefined} />\n\n          <Button half center title=\"nothing\" onPress={() => undefined} />\n          <Button\n            half\n            center\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button half center text title=\"text\" onPress={() => undefined} />\n          <Button\n            half\n            center\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            center\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button right title=\"nothing\" onPress={() => undefined} />\n          <Button right neutral title=\"neutral\" onPress={() => undefined} />\n          <Button right text title=\"text\" onPress={() => undefined} />\n          <Button right outlined title=\"outlined\" onPress={() => undefined} />\n          <Button right contained title=\"contained\" onPress={() => undefined} />\n\n          <Button disable wrap title=\"nothing\" onPress={() => undefined} />\n          <Button\n            disable\n            wrap\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button disable wrap text title=\"text\" onPress={() => undefined} />\n          <Button\n            disable\n            wrap\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            disable\n            wrap\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button half icon=\"check\" title=\"nothing\" onPress={() => undefined} />\n          <Button\n            half\n            icon=\"check\"\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            text\n            title=\"text\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button wrap icon=\"check\" onPress={() => undefined} />\n          <Button wrap icon=\"check\" neutral onPress={() => undefined} />\n          <Button wrap icon=\"check\" text onPress={() => undefined} />\n          <Button wrap icon=\"check\" outlined onPress={() => undefined} />\n          <Button wrap icon=\"check\" contained onPress={() => undefined} />\n\n          <Button fab icon=\"check\" onPress={() => undefined} />\n          <Button fab icon=\"check\" iconColor=\"red\" onPress={() => undefined} />\n          <Button fab icon=\"check\" neutral onPress={() => undefined} />\n          <Button fab icon=\"check\" text onPress={() => undefined} />\n          <Button fab icon=\"check\" outlined onPress={() => undefined} />\n          <Button fab icon=\"check\" contained onPress={() => undefined} />\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import { NativeTouchEvent, PointPropType } from \"react-native\";\n\ninterface Touches {\n  [key: string]: PointPropType;\n}\n\ninterface Outcome {\n  spread: boolean;\n  pinch: boolean;\n}\n\nexport class GestureHandler {\n  private minTouches: number;\n  private finish: Touches = {};\n  private start: Touches = {};\n\n  constructor({ minTouches = 4 } = {}) {\n    this.minTouches = minTouches;\n  }\n\n  public onPanResponderMove(event: any) {\n    const touches: NativeTouchEvent[] = event.nativeEvent.touches;\n    touches.map((touch: NativeTouchEvent) => {\n      this.recordFinish(touch);\n      this.recordStart(touch);\n    });\n  }\n\n  public onPanResponderRelease(): Outcome {\n    const outcome = this.determineOutcome();\n    this.start = {};\n    this.finish = {};\n    return outcome;\n  }\n\n  private recordStart(touch: NativeTouchEvent) {\n    if (this.isStartAlreadyRecorded(touch)) {\n      return;\n    }\n    this.start[String(touch.identifier)] = {\n      x: touch.locationX,\n      y: touch.locationY\n    };\n  }\n\n  private isStartAlreadyRecorded(touch: NativeTouchEvent) {\n    return this.start[String(touch.identifier)];\n  }\n\n  private recordFinish(touch: NativeTouchEvent) {\n    this.finish[String(touch.identifier)] = {\n      x: touch.locationX,\n      y: touch.locationY\n    };\n  }\n\n  private isSpread(\n    start: PointPropType,\n    finish: PointPropType,\n    center: PointPropType\n  ) {\n    const startXDistance = Math.abs(start.x - center.x);\n    const startYDistance = Math.abs(start.y - center.y);\n    const finishXDistance = Math.abs(finish.x - center.x);\n    const finishYDistance = Math.abs(finish.y - center.y);\n    return (\n      startXDistance <= finishXDistance && startYDistance <= finishYDistance\n    );\n  }\n\n  private determineCenter(points: Touches) {\n    const numRecordedTouched = Object.keys(points).length;\n    let x = 0;\n    let y = 0;\n    for (let i = 1; i <= numRecordedTouched; i++) {\n      const point = points[i];\n      x += point.x;\n      y += point.x;\n    }\n    return { x: x / numRecordedTouched, y: y / numRecordedTouched };\n  }\n\n  private determineOutcome(): Outcome {\n    const numRecordedTouched = Object.keys(this.start).length;\n    const outcome = {\n      pinch: false,\n      spread: false\n    };\n    if (numRecordedTouched < this.minTouches) {\n      return outcome;\n    }\n    let spread = false;\n    let pinch = false;\n    const center = this.determineCenter(this.start);\n    for (let i = 1; i <= numRecordedTouched; i++) {\n      const start = this.start[i];\n      const finish = this.finish[i];\n      const isPinch = !this.isSpread(start, finish, center);\n      const isSpread = this.isSpread(start, finish, center);\n      if (isPinch && isSpread) {\n        return outcome;\n      }\n      if (!isPinch && !isSpread) {\n        return outcome;\n      }\n      if (isPinch && spread) {\n        return outcome;\n      }\n      if (isSpread && pinch) {\n        return outcome;\n      }\n      pinch = isPinch;\n      spread = isSpread;\n    }\n    return { spread, pinch };\n  }\n}\n","import * as React from \"react\";\nimport {\n  Animated,\n  PanResponder,\n  PanResponderInstance,\n  StyleSheet\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\nimport { getHeight, getWidth } from \"../../../../models\";\nimport { RootState } from \"../../../../models\";\nimport { GestureHandler } from \"./logic\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  public state = {\n    pinchCount: 0,\n    spreadCount: 0\n  };\n  private panGesture: PanResponderInstance;\n  private gestureHandler: GestureHandler;\n  private minTouches = 3;\n  private title = `pinch or spread the screen with ${\n    this.minTouches\n  } fingers minimum`;\n\n  constructor(props: Props) {\n    super(props);\n    this.gestureHandler = new GestureHandler({ minTouches: this.minTouches });\n    this.panGesture = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: event => {\n        this.gestureHandler.onPanResponderMove(event);\n      },\n      onPanResponderRelease: () => {\n        const { spreadCount, pinchCount } = this.state;\n        const outcome = this.gestureHandler.onPanResponderRelease();\n        if (outcome.spread) {\n          this.setState({ spreadCount: spreadCount + 1 });\n        }\n        if (outcome.pinch) {\n          this.setState({ pinchCount: pinchCount + 1 });\n        }\n      }\n    });\n  }\n\n  public render() {\n    const { history } = this.props;\n    const { spreadCount, pinchCount } = this.state;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <Text center title={this.title} />\n        <Text center title={`spread: ${spreadCount}`} />\n        <Text center title={`pinch: ${pinchCount}`} />\n        <Animated.View\n          style={styles.container}\n          {...this.panGesture.panHandlers}\n        />\n      </Screen>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  height: getHeight(state),\n  width: getWidth(state)\n});\n\nexport const PinchSpread = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport {\n  Animated,\n  EmitterSubscription,\n  FlatList,\n  Keyboard,\n  Platform,\n  StyleSheet,\n  View\n} from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Icon, Screen, Text, TextInput } from \"../../../../components\";\nimport { colorWithOpacity, Config, Theme } from \"../../../../utils\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    backgroundColor: Theme.color.light,\n    height: Theme.padding.p20,\n    justifyContent: \"center\",\n    padding: Theme.padding.p02\n  },\n  item: {\n    borderBottomColor: Theme.color.light,\n    borderWidth: 0.2,\n    padding: Theme.padding.p06\n  },\n  text: {\n    fontSize: Theme.padding.p06\n  },\n  textContainer: {\n    alignItems: \"center\",\n    backgroundColor: Theme.color.background,\n    flexDirection: \"row\",\n    height: \"100%\",\n    padding: Theme.padding.p02\n  },\n  textInput: {\n    flex: 1,\n    marginLeft: Theme.padding.p02\n  }\n});\n\nconst DATA = [\n  { id: 1, name: \"1\" },\n  { id: 2, name: \"2\" },\n  { id: 3, name: \"3\" },\n  { id: 4, name: \"4\" },\n  { id: 5, name: \"5\" },\n  { id: 6, name: \"6\" },\n  { id: 7, name: \"7\" },\n  { id: 8, name: \"8\" },\n  { id: 9, name: \"9\" },\n  { id: 10, name: \"10\" },\n  { id: 11, name: \"11\" },\n  { id: 12, name: \"12\" },\n  { id: 13, name: \"13\" },\n  { id: 14, name: \"14\" },\n  { id: 15, name: \"15\" },\n  { id: 16, name: \"16\" },\n  { id: 17, name: \"17\" },\n  { id: 18, name: \"18\" },\n  { id: 19, name: \"19\" }\n];\n\ninterface State {\n  input: string;\n  iconName: string;\n  animation: Animated.Value;\n}\n\ntype Props = RouteComponentProps;\n\nexport class SearchBar extends React.PureComponent<Props, State> {\n  public iconSearch = \"magnify\";\n  public state: State = {\n    animation: new Animated.Value(0),\n    iconName: this.iconSearch,\n    input: \"\"\n  };\n  private iconBack = \"arrow-left\";\n  private textInputPlaceHolder = \"Search\";\n  private animationDuration = 400;\n  private translateIcon = this.state.animation.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [1, -60, 1]\n  });\n  private fadeContainer = this.state.animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\n      Theme.color.background,\n      colorWithOpacity(Theme.color.secondary)\n    ]\n  });\n  private iconChangeTimeout?: number;\n  private keyboardDidShowListener: EmitterSubscription;\n  private keyboardDidHideListener: EmitterSubscription;\n  private keyboardWillShowListener: EmitterSubscription;\n  private keyboardWillHideListener: EmitterSubscription;\n\n  constructor(props: Props) {\n    super(props);\n    this.keyboardDidShowListener = Keyboard.addListener(\n      \"keyboardDidShow\",\n      this.keyboardDidShow\n    );\n    this.keyboardDidHideListener = Keyboard.addListener(\n      \"keyboardDidHide\",\n      this.keyboardDidHide\n    );\n    this.keyboardWillShowListener = Keyboard.addListener(\n      \"keyboardWillShow\",\n      this.keyboardWillShow\n    );\n    this.keyboardWillHideListener = Keyboard.addListener(\n      \"keyboardWillHide\",\n      this.keyboardWillHide\n    );\n  }\n\n  public componentWillUnmount() {\n    this.keyboardDidShowListener.remove();\n    this.keyboardDidHideListener.remove();\n    this.keyboardWillShowListener.remove();\n    this.keyboardWillHideListener.remove();\n    clearTimeout(this.iconChangeTimeout);\n  }\n\n  public render() {\n    const { history } = this.props;\n    const { iconName, input } = this.state;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <View style={styles.header}>\n          <View style={styles.textContainer}>\n            <Animated.View\n              style={{\n                transform: [{ translateX: this.translateIcon }]\n              }}\n            >\n              <Icon name={iconName} style={styles.text} />\n            </Animated.View>\n            <TextInput\n              value={input}\n              onChangeText={(value: string) => this.setState({ input: value })}\n              placeholder={this.textInputPlaceHolder}\n              style={[styles.textInput, styles.text]}\n            />\n          </View>\n        </View>\n        <Animated.View style={{ flex: 1, backgroundColor: this.fadeContainer }}>\n          <FlatList\n            keyExtractor={item => item.id.toString()}\n            data={DATA}\n            renderItem={({ item }) => (\n              <Text subtitle2 style={styles.item} title={item.name} />\n            )}\n          />\n        </Animated.View>\n      </Screen>\n    );\n  }\n\n  private onSearchBarFocus() {\n    this.animate(1);\n    this.changeIcon(this.iconBack);\n  }\n\n  private animate(value: number) {\n    Animated.timing(this.state.animation, {\n      duration: this.animationDuration,\n      toValue: value\n    }).start();\n  }\n\n  private changeIcon(iconName: string) {\n    this.iconChangeTimeout = setTimeout(() => {\n      clearTimeout(this.iconChangeTimeout);\n      this.setState({ iconName });\n    }, this.animationDuration / 2);\n  }\n\n  private onSearchBarUnFocus() {\n    this.animate(0);\n    this.changeIcon(this.iconSearch);\n  }\n\n  private keyboardWillShow = () => {\n    if (Platform.OS !== Config.os.ios) {\n      return;\n    }\n    this.onSearchBarFocus();\n  };\n\n  private keyboardWillHide = () => {\n    if (Platform.OS !== Config.os.ios) {\n      return;\n    }\n    this.onSearchBarUnFocus();\n  };\n\n  private keyboardDidShow = () => {\n    if (Platform.OS !== Config.os.android) {\n      return;\n    }\n    this.onSearchBarFocus();\n  };\n\n  private keyboardDidHide = () => {\n    if (Platform.OS !== Config.os.android) {\n      return;\n    }\n    this.onSearchBarUnFocus();\n  };\n}\n","import * as React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Card, Screen, Text } from \"../../../../components\";\nimport { Theme } from \"../../../../utils\";\n\ntype Props = RouteComponentProps;\n\n// TODO: why need scrollview for screen?\nexport class OKRs extends React.PureComponent<Props> {\n  public state = {\n    value: 0\n  };\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <ScrollView\n          contentContainerStyle={{ paddingHorizontal: Theme.padding.p05 }}\n        >\n          <Card>\n            <Text h6 title=\"Company\" />\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Mission\" />\n              <Text\n                title=\"We strive to offer our customers the lowest possible prices\n        the best available selection and the utmost convenience.\"\n              />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Vision\" />\n              <Text title=\"To be Earth’s most customer-centric company where customers can find and discover anything they might want to buy online.\" />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Values\" />\n              <Text title=\"Customer Obsession\" />\n              <Text title=\"Ownership\" />\n              <Text title=\"Invent and Simplify\" />\n              <Text title=\"Are Right a Lot\" />\n              <Text title=\"Learn and Be Curious\" />\n              <Text title=\"Hire and Develop the Best\" />\n              <Text title=\"Insist on the Highest Standards\" />\n              <Text title=\"Think Big\" />\n              <Text title=\"Bias for Action\" />\n              <Text title=\"Frugality\" />\n              <Text title=\"Earn Trust\" />\n              <Text title=\"Dive Deep\" />\n              <Text title=\"Have Backbone; Disagree and Commit\" />\n              <Text title=\"Deliver Results\" />\n            </Card>\n          </Card>\n          <Card>\n            <Text h6 title=\"Product\" />\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Vision\" />\n              <Text title=\"Jim, owner\" />\n            </Card>\n\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"KPIs\" />\n              <Text title=\"Customer Lifetime Value\" />\n              <Text title=\"Average Revenue Per user\" />\n              <Text title=\"Customer Aquisition Cost\" />\n              <Text title=\"Monthly Recurring Revenue\" />\n              <Text title=\"Churn\" />\n              <Text title=\"Cost of Sales\" />\n              <Text title=\"Contributing Margins\" />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Team\" />\n              <Text title=\"Jim, owner\" />\n              <Text title=\"Bob, designer\" />\n              <Text title=\"Steve, engineer\" />\n              <Text title=\"Greg, engineer\" />\n            </Card>\n\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Objective\" />\n              <Text title=\"Jim, owner\" />\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Objective\" />\n              <Text title=\"Jim, owner\" />\n            </Card>\n          </Card>\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport {\n  Button,\n  KeyboardType,\n  Screen,\n  TextInput\n} from \"../../../../components\";\nimport { Theme } from \"../../../../utils\";\n\ntype Props = RouteComponentProps;\n\nexport class Input extends React.PureComponent<Props> {\n  public state = {\n    email: \"\",\n    error: \"\",\n    name: \"\",\n    password: \"\"\n  };\n  public render() {\n    const { email, password, name, error } = this.state;\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <View\n          style={{ flex: 1, backgroundColor: Theme.color.light, padding: 20 }}\n        >\n          <TextInput\n            title=\"Name\"\n            placeholder=\"jane doe\"\n            optional\n            value={name}\n            onChangeText={val => this.setState({ name: val })}\n            error={error}\n          />\n          <TextInput\n            title=\"EMAIL\"\n            value={email}\n            onChangeText={val => this.setState({ email: val })}\n            keyboardType={KeyboardType.Email}\n            placeholder=\"example@gmail.com\"\n            error={error}\n          />\n          <TextInput\n            value={password}\n            onChangeText={val => this.setState({ password: val })}\n            title=\"Password\"\n            placeholder=\"•••••••\"\n            secureTextEntry\n          />\n          <Button\n            contained\n            title=\"complete form\"\n            onPress={() => this.setState({ error: \"Invalid Email\" })}\n          />\n        </View>\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Dimensions, FlatList, View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text } from \"../../../../components\";\n\ninterface OwnProps {\n  title: string;\n}\n\ntype Props = OwnProps & RouteComponentProps;\n\nexport class Questionnaire extends React.PureComponent<Props> {\n  public data = [\n    {\n      choices: [\n        {\n          key: \"1\",\n          selected: false,\n          title: \"individual\"\n        },\n        {\n          key: \"2\",\n          selected: false,\n          title: \"couple\"\n        },\n        {\n          key: \"3\",\n          selected: false,\n          title: \"teen\"\n        }\n      ],\n      key: \"1\",\n      next: \"2\",\n      title: \"What type of counseling are you looking for\",\n      type: \"radio\"\n    },\n    { key: \"2\", title: \"2\" },\n    { key: \"3\", title: \"3\" },\n    { key: \"4\", title: \"4\" },\n    { key: \"5\", title: \"5\" }\n  ];\n  public output: any = {};\n  public width = Dimensions.get(\"window\").width;\n  public tableView: any;\n  public currentIndex = 0;\n\n  public onViewableItemsChanged = ({ viewableItems }: any) => {\n    this.currentIndex = viewableItems[0].index || 0;\n  };\n\n  public onProgress = (direction = 1) => {\n    const index = this.currentIndex + direction;\n    if (index < 0) {\n      return;\n    }\n    if (index >= this.data.length) {\n      this.onFinish();\n      return;\n    }\n    this.tableView.scrollToIndex({\n      animated: true,\n      index\n    });\n  };\n\n  public onSelection = (item: any, choice: any) => {\n    this.output = {\n      ...this.output,\n      [item.key]: {\n        ...this.output[item.key],\n        [choice.key]: true\n      }\n    };\n\n    // this.onProgress();\n  };\n\n  public onFinish = () => undefined;\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <FlatList\n          scrollEnabled={false}\n          ref={(ref: any) => (this.tableView = ref)}\n          removeClippedSubviews\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          onViewableItemsChanged={this.onViewableItemsChanged}\n          viewabilityConfig={{\n            itemVisiblePercentThreshold: 50\n          }}\n          horizontal\n          pagingEnabled\n          data={this.data}\n          renderItem={({ item }) => {\n            let items: any = <View style={{ flex: 1 }} />;\n\n            if (item.choices) {\n              items = (\n                <View style={{ flex: 1 }}>\n                  {item.choices.map(choice => {\n                    return (\n                      <Button\n                        key={choice.title}\n                        title={choice.title}\n                        onPress={() => {\n                          this.onSelection(item, choice);\n                        }}\n                      />\n                    );\n                  })}\n                </View>\n              );\n            }\n\n            return (\n              <View style={{ width: this.width }}>\n                <Text title={item.title} />\n                {items}\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-around\"\n                  }}\n                >\n                  <Button title=\"prev\" onPress={() => this.onProgress(-1)} />\n                  <Button title=\"next\" onPress={() => this.onProgress(1)} />\n                  <Button title=\"next2\" onPress={() => this.onProgress(2)} />\n                </View>\n              </View>\n            );\n          }}\n        />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, TextInput } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\nimport { createItem } from \"../../models/Item\";\n\ninterface DispatchProps {\n  createItem: typeof createItem;\n}\ntype Props = RouteComponentProps & DispatchProps;\ninterface State {\n  name: string;\n  description: string;\n}\n\nclass Component extends React.PureComponent<Props, State> {\n  public state = {\n    description: \"\",\n    name: \"\"\n  };\n  public render() {\n    const { name, description } = this.state;\n    const { history } = this.props;\n\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <TextInput title=\"name\" value={name} onChangeText={this.setName} />\n        <TextInput\n          title=\"description\"\n          value={description}\n          onChangeText={this.setDescription}\n        />\n        <Button title=\"create\" onPress={this.createItem} />\n      </Screen>\n    );\n  }\n\n  private setName = (name: string) => {\n    this.setState({ name });\n  };\n  private setDescription = (description: string) => {\n    this.setState({ description });\n  };\n  private createItem = () => {\n    const { createItem: create, history } = this.props;\n    const { name, description } = this.state;\n    create({ name, description });\n    history.goBack();\n  };\n}\n\nexport const ItemCreate = connect(\n  (state: RootState) => ({\n    state\n  }),\n  { createItem }\n)(Component);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, TextInput } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\nimport { createItem } from \"../../models/Item\";\n\ninterface DispatchProps {\n  createItem: typeof createItem;\n}\ntype Props = RouteComponentProps & DispatchProps;\ninterface State {\n  name: string;\n  description: string;\n}\n\nclass Component extends React.PureComponent<Props, State> {\n  public state = {\n    description: \"\",\n    name: \"\"\n  };\n  public render() {\n    const { name, description } = this.state;\n    const { history } = this.props;\n\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <TextInput title=\"name\" value={name} onChangeText={this.setName} />\n        <TextInput\n          title=\"description\"\n          value={description}\n          onChangeText={this.setDescription}\n        />\n        <Button title=\"create\" onPress={this.createItem} />\n      </Screen>\n    );\n  }\n\n  private setName = (name: string) => {\n    this.setState({ name });\n  };\n  private setDescription = (description: string) => {\n    this.setState({ description });\n  };\n  private createItem = () => {\n    const { createItem: create, history } = this.props;\n    const { name, description } = this.state;\n    create({ name, description });\n    history.goBack();\n  };\n}\n\nexport const ItemUpdate = connect(\n  (state: RootState) => ({\n    state\n  }),\n  { createItem }\n)(Component);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, TextInput } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\nimport { createItem } from \"../../models/Item\";\n\ninterface DispatchProps {\n  createItem: typeof createItem;\n}\ntype Props = RouteComponentProps & DispatchProps;\ninterface State {\n  name: string;\n  description: string;\n}\n\nclass Component extends React.PureComponent<Props, State> {\n  public state = {\n    description: \"\",\n    name: \"\"\n  };\n  public render() {\n    const { name, description } = this.state;\n    const { history } = this.props;\n\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <TextInput title=\"name\" value={name} onChangeText={this.setName} />\n        <TextInput\n          title=\"description\"\n          value={description}\n          onChangeText={this.setDescription}\n        />\n        <Button title=\"create\" onPress={this.createItem} />\n      </Screen>\n    );\n  }\n\n  private setName = (name: string) => {\n    this.setState({ name });\n  };\n  private setDescription = (description: string) => {\n    this.setState({ description });\n  };\n  private createItem = () => {\n    const { createItem: create, history } = this.props;\n    const { name, description } = this.state;\n    create({ name, description });\n    history.goBack();\n  };\n}\n\nexport const ListUpdate = connect(\n  (state: RootState) => ({\n    state\n  }),\n  { createItem }\n)(Component);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, TextInput } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\nimport { createItem } from \"../../models/Item\";\n\ninterface DispatchProps {\n  createItem: typeof createItem;\n}\ntype Props = RouteComponentProps & DispatchProps;\ninterface State {\n  name: string;\n  description: string;\n}\n\nclass Component extends React.PureComponent<Props, State> {\n  public state = {\n    description: \"\",\n    name: \"\"\n  };\n  public render() {\n    const { name, description } = this.state;\n    const { history } = this.props;\n\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <TextInput title=\"name\" value={name} onChangeText={this.setName} />\n        <TextInput\n          title=\"description\"\n          value={description}\n          onChangeText={this.setDescription}\n        />\n        <Button title=\"create\" onPress={this.createList} />\n      </Screen>\n    );\n  }\n\n  private setName = (name: string) => {\n    this.setState({ name });\n  };\n  private setDescription = (description: string) => {\n    this.setState({ description });\n  };\n  private createList = () => {\n    const { createItem: create, history } = this.props;\n    const { name, description } = this.state;\n    create({ name, description });\n    history.goBack();\n  };\n}\n\nexport const ListCreate = connect(\n  (state: RootState) => ({\n    state\n  }),\n  { createItem }\n)(Component);\n","import * as React from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\n\ntype Props = RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  private items = [\n    {\n      id: \"1\",\n      title: \"bob\"\n    },\n    {\n      id: \"2\",\n      title: \"steve\"\n    },\n    {\n      id: \"3\",\n      title: \"jill\"\n    }\n  ];\n  public render() {\n    const { history, match } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <Text title=\"checklists\" />\n        <FlatList\n          keyExtractor={item => item.id}\n          data={this.items}\n          renderItem={({ item }) => (\n            <View style={{ flexDirection: \"row\" }}>\n              <Button\n                contained\n                title={item.id}\n                onPress={() => history.push(`${match.path}/${item.id}`)}\n              />\n            </View>\n          )}\n        />\n        <Button\n          right\n          contained\n          fab\n          icon=\"plus\"\n          onPress={() => history.push(`${match.path}/create`)}\n        />\n      </Screen>\n    );\n  }\n}\n\nexport const Lists = connect(\n  (state: RootState) => ({\n    state\n  }),\n  {}\n)(Component);\n","import * as React from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\nimport { Theme } from \"../../../../../../utils\";\nimport {\n  getItemsByCreatedAt,\n  ItemsArray,\n  removeItem,\n  toggleActiveItem,\n  updateItem\n} from \"../../models/Item\";\n\ninterface StateProps {\n  items: ItemsArray;\n}\n\ninterface DispatchProps {\n  updateItem: typeof updateItem;\n  removeItem: typeof removeItem;\n  toggleActiveItem: typeof toggleActiveItem;\n}\n\ntype Props = RouteComponentProps & StateProps & DispatchProps;\n\nclass Component extends React.PureComponent<Props> {\n  public render() {\n    const {\n      history,\n      items,\n      removeItem: remove,\n      toggleActiveItem: toggle\n    } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <FlatList\n          keyExtractor={item => item.id}\n          data={items}\n          renderItem={({ item }) => (\n            <View style={{ flexDirection: \"row\" }}>\n              <Button\n                label\n                icon=\"checkbox-marked-circle\"\n                iconColor={Theme.color.success}\n                onPress={() => undefined}\n              />\n              <Button\n                label\n                icon=\"close-circle\"\n                iconColor={Theme.color.danger}\n                onPress={() => remove(item.id)}\n              />\n              <Button\n                label\n                iconColor={Theme.color.warning}\n                icon=\"clock\"\n                onPress={() => toggle(item.id)}\n              />\n              <Button\n                label\n                neutral={item.active}\n                lowercase\n                title={item.name}\n                onPress={() => undefined}\n              />\n            </View>\n          )}\n        />\n        <Button\n          fab\n          contained\n          icon=\"plus\"\n          onPress={() => history.push(\"create\")}\n        />\n      </Screen>\n    );\n  }\n}\n\nexport const List = connect(\n  (state: RootState) => ({\n    items: getItemsByCreatedAt(state)\n  }),\n  {\n    removeItem,\n    toggleActiveItem,\n    updateItem\n  }\n)(Component);\n","// @ts-ignore-file\n/* tslint:disable */\n\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Route, Switch } from \"../../../../components\";\nimport { List, ListCreate, Lists } from \"./screens\";\n\ntype Props = RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  public render() {\n    const { match } = this.props;\n    return (\n      <Switch>\n        <Route exact path={`${match.path}`} component={Lists} />\n        <Route path={`${match.path}/create`} component={ListCreate} />\n        <Route path={`${match.path}/:id`} component={List} />\n      </Switch>\n    );\n  }\n}\n\nexport const Checklists = connect(\n  null,\n  null\n)(Component);\n","import * as React from \"react\";\nimport { ActivityIndicator, Animated, StyleSheet, View } from \"react-native\";\n\ninterface Props {\n  uri: string;\n  height: number;\n  width: number;\n  color?: string;\n  size?: number | \"small\" | \"large\";\n}\n\nexport class AsyncImage extends React.PureComponent<Props> {\n  private styles = StyleSheet.create({\n    indicatorOverlay: {\n      justifyContent: \"center\",\n      position: \"absolute\"\n    }\n  });\n  private imageAnimated = new Animated.Value(0);\n  private indicatorAnimated = new Animated.Value(1);\n\n  public render() {\n    const { uri, height, width, color = \"black\", size = \"small\" } = this.props;\n    const containerStyle = { width, height };\n    const imageStyle = [containerStyle, { opacity: this.imageAnimated }];\n    const indicatorStyle = [\n      containerStyle,\n      { opacity: this.indicatorAnimated },\n      this.styles.indicatorOverlay\n    ];\n    return (\n      <View style={containerStyle}>\n        <Animated.Image\n          source={{ uri }}\n          style={imageStyle}\n          onLoad={this.onImageLoad}\n        />\n        <Animated.View style={indicatorStyle}>\n          <ActivityIndicator size={size} color={color} />\n        </Animated.View>\n      </View>\n    );\n  }\n\n  private onImageLoad = () => {\n    Animated.parallel([\n      Animated.timing(this.indicatorAnimated, {\n        toValue: 0,\n        useNativeDriver: true\n      }),\n      Animated.timing(this.imageAnimated, {\n        toValue: 1,\n        useNativeDriver: true\n      })\n    ]).start();\n  };\n}\n","import * as React from \"react\";\nimport { Dimensions, FlatList } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen } from \"../../../../components\";\nimport { AsyncImage } from \"./AsyncImage\";\n\ntype Props = RouteComponentProps;\n\nexport class ImageCollection extends React.PureComponent<Props> {\n  private data: number[] = [\n    Math.random(),\n    Math.random(),\n    Math.random(),\n    Math.random(),\n    Math.random(),\n    Math.random(),\n    Math.random(),\n    Math.random()\n  ];\n  private numColumns = 3;\n  private infiniteScrollThreshold = 0.3;\n  private columnWidth = Dimensions.get(\"window\").width / this.numColumns;\n  private imageUrl = `http://lorempixel.com/${this.columnWidth}/${\n    this.columnWidth\n  }`;\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <FlatList\n          keyExtractor={data => data.toString()}\n          data={this.data}\n          onEndReached={this.fetchMore}\n          onEndReachedThreshold={this.infiniteScrollThreshold}\n          numColumns={this.numColumns}\n          renderItem={this.renderImage}\n        />\n      </Screen>\n    );\n  }\n\n  private fetchMore = () => {\n    this.data.push(Math.random());\n    this.data.push(Math.random());\n    this.data.push(Math.random());\n    this.data.push(Math.random());\n    this.data.push(Math.random());\n  };\n\n  private renderImage = () => (\n    <AsyncImage\n      uri={this.imageUrl}\n      width={this.columnWidth}\n      height={this.columnWidth}\n    />\n  );\n}\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Link, Route, Screen, Switch } from \"../../components\";\nimport {\n  Ball,\n  Buttons,\n  Cards,\n  Checklists,\n  Drag,\n  Fonts,\n  ImageCollection,\n  Input,\n  OKRs,\n  PinchSpread,\n  Questionnaire,\n  SearchBar\n} from \"./screens\";\n\ntype Props = RouteComponentProps;\n\nexport class Debug extends React.PureComponent<Props> {\n  private screens: any = {\n    Ball,\n    Buttons,\n    Cards,\n    Checklists,\n    Drag,\n    Fonts,\n    ImageCollection,\n    Input,\n    OKRs,\n    PinchSpread,\n    Questionnaire,\n    SearchBar\n  };\n\n  public render() {\n    return (\n      <Switch>\n        {this.generateRoutes()}\n        <Route component={this.showHomeScreen} />\n      </Switch>\n    );\n  }\n\n  private generateRoutes = () =>\n    Object.keys(this.screens).map((screen: string) => (\n      <Route\n        key={screen}\n        path={`${this.props.match.path}/${screen.toLowerCase()}`}\n        component={this.screens[screen]}\n      />\n    ));\n\n  private navBack = () => this.props.history.goBack();\n\n  private showHomeScreen = () => (\n    <Screen onLeftPress={this.navBack}>\n      {Object.keys(this.screens).map((screen: string) => (\n        <Link\n          key={screen}\n          to={`${this.props.match.path}/${screen}`}\n          title={screen}\n        />\n      ))}\n    </Screen>\n  );\n}\n","/* tslint:disable */\n// @ts-ignore\n\n// TODO: https://telegram.com, https://anydo.com, https://lyft.com, http://www.shegy.nazwa.pl/materialupmarket/mdlp/index_light.html\n\nimport * as React from \"react\";\nimport { Dimensions, StyleSheet, View } from \"react-native\";\nimport { Text, Button } from \"../../components\";\nimport { RouteComponentProps } from \"react-router\";\n\nconst window = Dimensions.get(\"window\");\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: window.height,\n    alignItems: \"center\"\n  },\n  footer: {\n    alignItems: \"flex-end\",\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  }\n});\n\ninterface Props {\n  history: any;\n}\n\nclass Footer extends React.PureComponent<Props> {\n  render() {\n    const { history } = this.props;\n    return (\n      <View style={styles.footer}>\n        <Button title=\"Sign up\" onPress={() => history.push(\"/login\")} />\n        <Button title=\"Log in\" onPress={() => history.push(\"/login\")} />\n        <Button title=\"Debug\" onPress={() => history.push(\"/debug\")} />\n      </View>\n    );\n  }\n}\n\nclass Header extends React.PureComponent {\n  render() {\n    return <View />;\n  }\n}\n\nexport class Landing extends React.PureComponent<RouteComponentProps> {\n  public componentDidMount() {\n    const { history } = this.props;\n    history.push(\"/debug/checklists\");\n  }\n  public render() {\n    const { history } = this.props;\n    return (\n      <View style={styles.container}>\n        <Header />\n        <Text title={String(window.height)} />\n        <Footer history={history} />\n      </View>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text, TextInput } from \"../../components\";\nimport fakeAuth from \"../../models/User\";\n\ninterface State {\n  email: string;\n  password: string;\n}\n\nexport class Login extends React.PureComponent<RouteComponentProps, State> {\n  public state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  public render() {\n    const { location, history } = this.props;\n    const { from } = location.state || { from: { pathname: \"/app\" } };\n    return (\n      <Screen>\n        <Text title=\"Login\" />\n        <TextInput\n          title=\"email\"\n          placeholder=\"example@gmail.com\"\n          onChangeText={text => this.setState({ email: text })}\n          value={this.state.email}\n        />\n        <TextInput\n          title=\"password\"\n          placeholder=\"•••••••\"\n          onChangeText={text => this.setState({ password: text })}\n          value={this.state.password}\n        />\n        <Button title=\"Continue with Google\" onPress={() => undefined} />\n        <Button title=\"Continue with Facebook\" onPress={() => undefined} />\n        <Button\n          title=\"Signup\"\n          onPress={() => fakeAuth.authenticate(() => history.push(from))}\n        />\n        <Button title=\"Forgot\" onPress={() => history.push(\"/nowhere\")} />\n        <Button title=\"Landing\" onPress={() => history.push(\"/\")} />\n        <Button title=\"App\" onPress={() => history.push(\"/app\")} />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text } from \"../../components\";\nimport fakeAuth from \"../../models/User\";\n\nexport class Main extends React.PureComponent<RouteComponentProps> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen>\n        <Text title=\"Main\" />\n        <Button\n          title=\"logout\"\n          onPress={() => {\n            fakeAuth.signout(() => history.push(\"/\"));\n          }}\n        />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Link, Screen, Text } from \"../../components\";\n\nexport class NotFound extends React.PureComponent {\n  public render() {\n    return (\n      <Screen>\n        <Text title=\"404 :(\" />\n        <Link to=\"/app\" title=\"go to App\" />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { AppRegistry, Platform, YellowBox } from \"react-native\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./models\";\nimport { App } from \"./screens\";\nimport { Config } from \"./utils\";\n\n// TODO: remove\nYellowBox.ignoreWarnings([\"NetInfo\", \"Async Storage\"]);\n\nexport class Launcher extends React.PureComponent {\n  public render() {\n    return (\n      <Provider store={store}>\n        <App />\n      </Provider>\n    );\n  }\n}\n\nAppRegistry.registerComponent(Config.app.name, () => Launcher);\nif (Platform.OS === Config.os.web) {\n  AppRegistry.runApplication(Config.app.name, {\n    rootTag: document.getElementById(Config.web.root)\n  });\n}\n"],"sourceRoot":""}