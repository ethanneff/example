{"version":3,"sources":["../node_modules/react-native-web/dist/exports/NativeModules/index.js","apps/Debug/screens/Reminder/Reminders.tsx","apps/Debug/screens/Reminder/Item.tsx","apps/Debug/screens/Reminder/OneTime.tsx","apps/Debug/screens/Reminder/Radio.tsx","apps/Debug/screens/Reminder/Location.tsx","apps/Debug/screens/Reminder/Repeat.tsx","apps/Debug/screens/Reminder/CreateReminderModal.tsx","../node_modules/react-native-web/dist/exports/Linking/index.js","../node_modules/react-native-rate/index.js","features/RateApp/Rating.tsx","features/RateApp/index.tsx","apps/Debug/screens/Reminder/index.tsx"],"names":["NativeModules","UIManager","memo","props","renderItem","useCallback","item","index","title","format","button","reminders","length","FlatList","inverted","keyExtractor","id","style","flex","data","Item","description","onPress","icon","hidden","active","marginBottom","color","useColor","styles","StyleSheet","create","container","flexDirection","paddingHorizontal","Theme","padding","p02","borderRadius","p01","height","p13","justifyContent","borderColor","secondary","borderWidth","primary","text","subtitle","paddingTop","paddingLeft","textContainer","TouchableOpacity","key","View","body1","caption","name","size","p05","daysOfWeek","buttons","laterToday","dayjs","add","set","evening","tomorrow","nextWeek","nextMonth","yesterday","subtract","value","visible","day","generateButtons","map","valueOf","onChange","horizontal","locations","v4","location","useState","setActive","items","type","reminderTypes","state","setState","section","p06","paddingBottom","submit","marginTop","handleReminderTypePress","onBackgroundPress","h2","onOneTimePress","disable","emphasis","buttonStyle","initialURL","canUseDOM","window","href","Linking","addEventListener","removeEventListener","canOpenURL","Promise","resolve","getInitialURL","openURL","url","open","e","reject","_validateURL","invariant","URL","toString","GooglePrefix","AndroidMarket","noop","Rate","inputOptions","options","AppleAppID","GooglePackageName","AmazonPackageName","OtherAndroidURL","preferredAndroidMarket","preferInApp","openAppStoreIfInAppFails","inAppDelay","fallbackPlatformURL","Object","keys","forEach","callback","filterOptions","Platform","OS","AppleNativePrefix","RNRate","rate","response","then","supported","Rating","count","rating","colorFilled","colorUnfilled","iconFilled","iconUnfilled","handleOnPress","Array","fill","_","initialState","modal","feedback","ratingOptions","RateApp","onComplete","ratingRef","useRef","navigatedToAppStore","form","setForm","p04","completeState","current","handleReset","handleReviewApp","handleRating","prev","setTimeout","success","handleTextChange","handleFeedbackSubmit","handleComplete","h4","center","onSubmitEditing","onChangeText","placeholder","p08","nav","useNav","modals","customDate","createReminder","selected","undefined","handleOneTimeReminder","date","isBefore","handleCustomDateClose","handleCreateReminder","handleCreateReminderClose","handleLocation","handleLocationClose","showRate","setShowRate","onLeftPress","to","onLocationPress"],"mappings":"qGAAA,IAUIA,EAAgB,CAClBC,UAXF,MAWaA,GAEED,O,iICJAE,kBAAK,SAAmBC,GACrC,IAAMC,EAAaC,uBACjB,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACE,kBAAC,IAAD,CAAMC,MAAOF,EAAKG,OAAQC,OAAQH,IAAUJ,EAAMQ,UAAUC,OAAS,MAEvE,CAACT,IAGH,OACE,kBAACU,EAAA,EAAD,CACEC,UAAQ,EACRC,aAAc,SAAAT,GAAI,OAAIA,EAAKU,IAC3BC,MAAO,CAAEC,KAAM,GACfC,KAAMhB,EAAMQ,UACZP,WAAYA,O,8BCDLgB,EAAOlB,gBAAK,YASd,IARTM,EAQQ,EARRA,MAQQ,IAPRa,mBAOQ,MAPM,GAON,EANRC,EAMQ,EANRA,QACAC,EAKQ,EALRA,KACAN,EAIQ,EAJRA,MACAO,EAGQ,EAHRA,OACAC,EAEQ,EAFRA,OACAC,EACQ,EADRA,aAEMC,EAAQC,cACRC,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTd,KAAM,EACNe,cAAe,MAEfC,kBAAmBC,IAAMC,QAAQC,KAEnC3B,OAAQ,CACN4B,aAAcH,IAAMC,QAAQG,IAC5BN,cAAe,MACfO,OAAQL,IAAMC,QAAQK,IACtBC,eAAgB,gBAChBC,YAAahB,EAAMiB,UACnBC,YAAa,EACbnB,aAAcA,EAAeS,IAAMC,QAAQC,IAAM,GAEnD7B,MAAO,CACLmB,MAAOF,EAASE,EAAMmB,QAAUnB,EAAMoB,MAExCC,SAAU,CACRC,WAAYd,IAAMC,QAAQG,IAC1BW,YAAa,GAEfC,cAAe,CACbjC,KAAM,EACNwB,eAAgB,UAElBnB,KAAM,CACJmB,eAAgB,YAIpB,OAAOlB,EAAS,KACd,kBAAC4B,EAAA,EAAD,CACEC,IAAK7C,EACLS,MAAO,CAACY,EAAOnB,OAAQO,GACvBK,QAASA,GAET,kBAACgC,EAAA,EAAD,CAAMrC,MAAOY,EAAOG,WAClB,kBAACsB,EAAA,EAAD,CAAMrC,MAAOY,EAAOsB,eAClB,kBAAC,IAAD,CAAMI,OAAK,EAAC/C,MAAOA,EAAOS,MAAOY,EAAOrB,QACvCa,EAAYT,OAAS,GACpB,kBAAC,IAAD,CAAM4C,SAAO,EAAChD,MAAOa,EAAaJ,MAAOY,EAAOmB,YAGnDzB,GACC,kBAAC,IAAD,CAAMkC,KAAMlC,EAAMmC,KAAMvB,IAAMC,QAAQuB,IAAK1C,MAAOY,EAAON,YC1E7DqC,EAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAuE/C1D,kBAAK,YAAsC,IAAnBoB,EAAkB,EAAlBA,QAC/BuC,EAvEgB,WACtB,IAAMC,EAAaC,MAChBC,IAAI,EAAG,QACPA,IAAI,GAAI,UACRC,IAAI,SAAU,GAEXC,EAAUH,MACbE,IAAI,OAAQ,IACZA,IAAI,SAAU,GAEXE,EAAWJ,MACdC,IAAI,EAAG,OACPC,IAAI,OAAQ,GACZA,IAAI,SAAU,GAEXG,EAAWL,MACdC,IAAI,EAAG,QACPC,IAAI,OAAQ,GACZA,IAAI,SAAU,GACdA,IAAI,MAAO,GAERI,EAAYN,MACfC,IAAI,EAAG,SACPC,IAAI,OAAQ,GACZA,IAAI,SAAU,GAEXK,EAAYP,MAAQQ,SAAS,EAAG,OAEtC,MAAO,CACL,CACE/D,MAAO,cACPa,YAAayC,EAAWrD,OAAO,WAC/B+D,MAAOV,EACPW,QAASV,MAAQE,IAAI,OAAQ,KAE/B,CACEzD,MAAO,eACPa,YAAa6C,EAAQzD,OAAO,WAC5B+D,MAAON,EACPO,QAASV,MAAQE,IAAI,OAAQ,KAE/B,CACEzD,MAAO,WACPa,YAAY,GAAD,OAAKuC,EAAWO,EAASO,OAAzB,YAAmCP,EAAS1D,OACrD,YAEF+D,MAAOL,GAET,CACE3D,MAAO,YACPa,YAAY,GAAD,OAAK+C,EAAS3D,OAAO,oBAChC+D,MAAOJ,GAET,CACE5D,MAAO,UACPa,YAAY,GACZmD,MAAOH,GAET,CACE7D,MAAO,SACPa,YAAY,GACZmD,MAAOF,IAUKK,GAChB,OACE,kBAACrB,EAAA,EAAD,KACGO,EAAQe,KAAI,SAAClE,EAAQH,GACpB,IAAMiB,EACJd,EAAO+D,SAAWV,MAAQc,UAAYnE,EAAO+D,QAAQI,UACvD,OACE,kBAACzD,EAAD,CACEG,KAAK,QACLC,OAAQA,EACRE,aAAcnB,IAAUsD,EAAQjD,OAAS,EACzCyC,IAAK3C,EAAOF,MACZA,MAAOE,EAAOF,MACda,YAAaX,EAAOW,YACpBC,QAASA,EAAQZ,EAAO8D,gBChFrBtE,kBAAK,YAKT,IAJT2D,EAIQ,EAJRA,QACAW,EAGQ,EAHRA,MACAM,EAEQ,EAFRA,SACAC,EACQ,EADRA,WAEA,OACE,kBAACzB,EAAA,EAAD,CACErC,MAAO,CACLyB,eAAgB,SAChBT,cAAe8C,EAAa,MAAQ,WAGrClB,EAAQe,KAAI,SAAClE,EAAQH,GAAT,OACX,kBAACa,EAAD,CACEZ,MAAOE,EACP2C,IAAK3C,EACLY,QAASwD,EAASpE,GAClBgB,aAAcnB,IAAUsD,EAAQjD,OAAS,EACzCa,OAAQf,IAAW8D,W,kBCnBdtE,kBAAK,WAClB,IAAM8E,EAAwB,CAC5B,CACEhE,GAAIiE,cACJzE,MAAO,OACPwC,SAAU,cAEZ,CACEhC,GAAIiE,cACJzE,MAAO,OACPwC,SAAU,cAEZ,CACEhC,GAAIiE,cACJzE,MAAO,MACPwC,SAAU,cAEZ,CACEhC,GAAIiE,cACJzE,MAAO,uBAIX,OACE,oCACGwE,EAAUJ,KAAI,SAACM,EAAU3E,GAAX,OACb,kBAACa,EAAD,CACEiC,IAAK6B,EAASlE,GACdM,QAAS,aACTd,MAAO0E,EAAS1E,MAChBa,YAAa6D,EAASlC,SACtBtB,aAAcnB,IAAUyE,EAAUpE,OAAS,WCpCtCV,kBAAK,WAAmB,IAAD,EACRiF,mBAAqB,SADb,mBAC7B1D,EAD6B,KACrB2D,EADqB,KAI9BC,EAAsB,CAAC,QAAS,SAAU,UAAW,UAC3D,OACE,kBAAC/B,EAAA,EAAD,KACG+B,EAAMT,KAAI,SAACtE,EAAMC,GAChB,OACE,kBAACa,EAAD,CACEK,OAAQnB,IAASmB,EACjBjB,MAAOF,EACP+C,IAAK/C,EACLgB,SAXOgE,EAWUhF,EAXW,kBAAM8E,EAAUE,KAY5C5D,aAAcnB,IAAU8E,EAAMzE,OAAS,IAZjC,IAAC0E,SCGbC,EAAgC,CAAC,WAAY,SAAU,YAQ9CrF,kBAAK,SAA6BC,GAAe,IAAD,EACnCgF,mBAAuB,YADY,mBACtDK,EADsD,KAC/CC,EAD+C,KAEvD5D,EAASC,IAAWC,OAAO,CAC/B2D,QAAS,CACPzC,WAAYd,IAAMC,QAAQuD,IAC1BC,cAAezD,IAAMC,QAAQC,KAE/BwD,OAAQ,CACNC,UAAW3D,IAAMC,QAAQuD,OAIvBI,EAA0B1F,uBAAY,SAAAiF,GAAI,OAAI,kBAAMG,EAASH,MAAO,IAE1E,OACE,kBAAC,IAAD,CAAOU,kBAAmB7F,EAAM6F,mBAC9B,kBAAC,IAAD,CAAMC,IAAE,EAACzF,MAAM,oBACf,kBAAC,IAAD,CAAMgD,SAAO,EAAChD,MAAM,gBAAgBS,MAAOY,EAAO6D,UAClD,kBAAC,EAAD,CACE7B,QAAS0B,EACTf,MAAOgB,EACPV,SAAUiB,IAEZ,kBAAC,IAAD,CAAMvC,SAAO,EAAChD,MAAM,gBAAgBS,MAAOY,EAAO6D,UACvC,aAAVF,EACC,kBAAC,EAAD,CAASlE,QAASnB,EAAM+F,iBACb,WAAVV,EACD,kBAAC,EAAD,MACW,aAAVA,EACD,kBAAC,EAAD,MAEA,kBAAC,IAAD,CAAMhF,MAAM,sBAEd,kBAAC,IAAD,CACE2F,SAAO,EACP3F,MAAM,SACNmB,MAAM,UACNyE,SAAS,OACTC,YAAaxE,EAAOgE,a,yDC9CxBS,EAAaC,YAAYC,OAAOtB,SAASuB,KAAO,GAChDC,EAAU,CACZC,iBAAkB,aAClBC,oBAAqB,aACrBC,WAAY,WACV,OAAOC,QAAQC,SAAQ,IAEzBC,cAAe,WACb,OAAOF,QAAQC,QAAQT,IAEzBW,QAAS,SAAiBC,GACxB,IAEE,OADAC,EAAKD,GACEJ,QAAQC,UACf,MAAOK,GACP,OAAON,QAAQO,OAAOD,KAG1BE,aAAc,SAAsBJ,GAClCK,IAAyB,kBAARL,EAAkB,yCAA2CA,GAC9EK,IAAUL,EAAK,kCAIfC,EAAO,SAAcD,GACnBX,cACFC,OAAOtB,SAAW,IAAIsC,IAAIN,EAAKV,OAAOtB,UAAUuC,aAIrCf,ICrCTgB,EAAe,gDAGRC,EACH,EADGA,EAEH,EAFGA,EAGJ,EAGHC,EAAO,aAEQC,E,2GACEC,GACnB,IAAMC,EAAU,CACdC,WAAY,GACZC,kBAAmB,GACnBC,kBAAmB,GACnBC,gBAAiB,GACjBC,uBAAwBT,EACxBU,aAAa,EACbC,0BAA0B,EAC1BC,WAAY,EACZC,oBAAqB,IAKvB,OAHAC,OAAOC,KAAKZ,GAAca,SAAQ,SAACtF,GACjC0E,EAAQ1E,GAAOyE,EAAazE,MAEvB0E,I,2BAGGD,GAA+B,IAAjBc,EAAiB,uDAANhB,EAC7BG,EAAUF,EAAKgB,cAAcf,GACnC,GAAoB,QAAhBgB,IAASC,GAAc,CACzBhB,EAAQiB,kBAnCY,sCAkCK,IAEjBC,EAAWjJ,IAAXiJ,OACRA,EAAOC,KAAKnB,GAAS,SAACoB,GACpBP,EAASO,UAEc,YAAhBL,IAASC,GACdhB,EAAQK,yBAA2BT,EACrCE,EAAKZ,QAAQS,EAAeK,EAAQE,kBAAmBW,GAC9Cb,EAAQK,yBAA2BT,EAC5CE,EAAKZ,QAzCQ,yBAyCec,EAAQG,kBAAmBU,GAC9Cb,EAAQK,yBAA2BT,GAC5CE,EAAKZ,QAAQc,EAAQI,gBAAiBS,GAGxCf,EAAKZ,QAAQc,EAAQS,oBAAqBI,K,8BAI/B1B,GAAsB,IAAjB0B,EAAiB,uDAANhB,EAC7BlB,EAAQG,WAAWK,GAAKkC,MAAK,SAACC,GAC5BT,EAASS,GACLA,GACF3C,EAAQO,QAAQC,U,KC3CXoC,EAASpJ,gBAAK,SAAoBC,GAC7C,IAAMwB,EAAQC,cAEZ8B,EAQEvD,EARFuD,KACA6F,EAOEpJ,EAPFoJ,MACAjI,EAMEnB,EANFmB,QACAkI,EAKErJ,EALFqJ,OANyD,EAWvDrJ,EAJFsJ,mBAPyD,MAO3C9H,EAAMoB,KAPqC,IAWvD5C,EAHFuJ,qBARyD,MAQzC/H,EAAMiB,UARmC,IAWvDzC,EAFFwJ,kBATyD,MAS5C,OAT4C,IAWvDxJ,EADFyJ,oBAVyD,MAU1C,eAV0C,EAYrDC,EAAgBxJ,uBACpB,SAACE,GAAD,OAAmB,WACjBe,EAAQf,MAEV,CAACe,IAEH,OACE,kBAACgC,EAAA,EAAD,CAAMrC,MAAO,CAAEgB,cAAe,MAAOS,eAAgB,kBAClDoH,MAAMP,GACJQ,KAAK,GACLnF,KAAI,SAACoF,EAAGzJ,GAAJ,OACH,kBAAC6C,EAAA,EAAD,CAAkBC,IAAK9C,EAAOe,QAASuI,EAActJ,IACnD,kBAAC,IAAD,CACEmD,KAAMA,EACND,KAAMlD,EAAQiJ,IAAWA,EAASI,EAAeD,EACjDhI,MAAOpB,EAAQiJ,IAAWA,EAASE,EAAgBD,YC9B3DQ,EAAsB,CAC1BT,OAAQ,EACRU,MAAO,UACPC,SAAU,IAGNC,EAAgB,CACpBpC,WAAY,YACZC,kBAAmB,+BACnBC,kBAAmB,+BACnBC,gBAAiB,wCACjBC,uBAAwBT,EACxBU,aAAa,EACbC,0BAA0B,EAC1BE,oBAAqB,kCAaV6B,EAAUnK,gBAAK,YAA6C,IAAtBoK,EAAqB,EAArBA,WAC3CC,EAAYC,iBAAO,GACnBC,EAAsBD,kBAAO,GAFmC,EAG9CrF,mBAAgB8E,GAH8B,mBAG/DS,EAH+D,KAGzDC,EAHyD,KAIhE9I,EAASC,IAAWC,OAAO,CAC/BvB,MAAO,CAAEoF,cAAezD,IAAMC,QAAQwI,KACtCV,MAAO,CAAE9H,QAASD,IAAMC,QAAQuD,OAE5BkF,EAAgB,CACpBrB,OAAQkB,EAAKlB,OACbW,SAAUO,EAAKP,SACfM,oBAAqBA,EAAoBK,SAGrCC,EAAc1K,uBAAY,WAC9BkK,EAAUO,QAAU,EACpBH,EAAQV,KACP,IAEGe,EAAkB3K,uBAAY,WAClC0K,IACAT,EAAW,eAAKO,EAAN,CAAqBJ,qBAAqB,KACpD5C,EAAKqB,KAAKkB,GAAe,iBACxB,CAACS,EAAeP,EAAYS,IAEzBE,EAAe5K,uBAAY,SAACmJ,GAChCe,EAAUO,QAAUtB,EACpBmB,GAAQ,SAAAO,GAAI,sBAAUA,EAAV,CAAgB1B,cAC5B2B,YAAW,WACT,IAAMC,EAAUb,EAAUO,SAnDd,EAoDZH,GAAQ,SAAAO,GAAI,sBAAUA,EAAV,CAAgBhB,MAAOkB,EAAU,SAAW,kBACvD,OACF,IAEGC,EAAmBhL,uBAAY,SAAC8J,GACpCQ,GAAQ,SAAAO,GAAI,sBAAUA,EAAV,CAAgBf,kBAC3B,IAEGmB,EAAuBjL,uBAAY,WACvCsK,GAAQ,SAAAO,GAAI,sBAAUA,EAAV,CAAgBhB,MAAO,mBAClC,IAEGqB,EAAiBlL,uBAAY,WACjCiK,EAAWO,KACV,CAACA,EAAeP,IAEnB,OACE,kBAAC,IAAD,CAAOtE,kBAAmBuF,GACR,WAAfb,EAAKR,MACJ,oCACE,kBAAC,IAAD,CACEsB,IAAE,EACFhL,MAAM,+BACNiL,QAAM,EACNxK,MAAOY,EAAOrB,QAEhB,kBAAC,IAAD,CACEA,MAAM,6CACNiL,QAAM,EACNxK,MAAOY,EAAOrB,QAEhB,kBAAC,IAAD,CAAQA,MAAM,OAAOc,QAAS0J,KAEhB,aAAfN,EAAKR,MACN,oCACE,kBAAC,IAAD,CAAMsB,IAAE,EAAChL,MAAM,YAAYiL,QAAM,EAACxK,MAAOY,EAAOrB,QAChD,kBAAC,IAAD,CACEA,MAAM,4DACNiL,QAAM,EACNxK,MAAOY,EAAOrB,QAEhB,kBAAC,IAAD,CACEkL,gBAAiBJ,EACjB9G,MAAOkG,EAAKP,SACZwB,aAAcN,EACdO,YAAY,wBAEd,kBAAC,IAAD,CAAQpL,MAAM,SAASc,QAASgK,KAElB,cAAfZ,EAAKR,MACN,oCACE,kBAAC,IAAD,CAAMsB,IAAE,EAAChL,MAAM,YAAYiL,QAAM,EAACxK,MAAOY,EAAOrB,QAChD,kBAAC,IAAD,CACEA,MAAM,yCACNS,MAAOY,EAAOrB,MACdiL,QAAM,IAER,kBAAC,IAAD,CAAQjL,MAAM,QAAQc,QAASiK,KAGjC,oCACE,kBAAC,IAAD,CACEC,IAAE,EACFhL,MAAM,uCACNiL,QAAM,EACNxK,MAAOY,EAAOrB,QAEhB,kBAAC8I,EAAD,CACEC,MAAO,EACP7F,KAAMvB,IAAMC,QAAQyJ,IACpBrC,OAAQkB,EAAKlB,OACblI,QAAS2J,SChHN/K,0BAAK,WAClB,IAAM4L,EAAMC,cAD+B,EAEnB5G,mBAAgB,CACtCG,KAAM,WACN3E,UAAW,GACXqL,OAAQ,CACNC,YAAY,EACZC,gBAAgB,EAChBhH,UAAU,GAEZiH,SAAU,CACRjH,cAAUkH,KAX6B,mBAEpC1B,EAFoC,KAE9BC,EAF8B,KAerC0B,EAAwBhM,uBAC5B,SAACiM,GAAD,OAAiB,WACXA,EAAKC,SAASxI,OAChB4G,GAAQ,SAAAO,GAAI,sBACPA,EADO,CAEVc,OAAO,eAAMd,EAAKc,OAAZ,CAAoBC,YAAY,SAI1CtB,GAAQ,SAAAO,GAAI,sBACPA,EADO,CAEVc,OAAO,eACFd,EAAKc,OADJ,CAEJE,gBAAgB,IAElBvL,UAAU,GAAD,mBACJuK,EAAKvK,WADD,CAEP,CACEK,GAAIiE,cACJqH,KAAMA,EAAKzH,UACXpE,OAAQ6L,EAAK7L,OAAO,mCAK5B,IAGI+L,EAAwBnM,uBAAY,WACxCsK,GAAQ,SAAAO,GAAI,sBACPA,EADO,CAEVc,OAAO,eAAMd,EAAKc,OAAZ,CAAoBC,YAAY,WAEvC,IAEGQ,EAAuBpM,uBAAY,WACvCsK,GAAQ,SAAAO,GAAI,sBACPA,EADO,CAEVc,OAAO,eAAMd,EAAKc,OAAZ,CAAoBE,gBAAgB,WAE3C,IAEGQ,EAA4BrM,uBAAY,WAC5CsK,GAAQ,SAAAO,GAAI,sBACPA,EADO,CAEVc,OAAO,eAAMd,EAAKc,OAAZ,CAAoBE,gBAAgB,WAE3C,IAEGS,EAAiBtM,uBACrB,SAACW,GAAD,OAAgB,WACd2J,GAAQ,SAAAO,GAAI,sBACPA,EADO,CAEVc,OAAO,eAAMd,EAAKc,OAAZ,CAAoB9G,UAAU,IACpCiH,SAAU,CAAEjH,SAAUlE,WAG1B,IAGI4L,EAAsBvM,uBAAY,WACtCsK,GAAQ,SAAAO,GAAI,sBACPA,EADO,CAEVc,OAAO,eAAMd,EAAKc,OAAZ,CAAoB9G,UAAU,WAErC,IAhFwC,EAkFXC,oBAAS,GAlFE,mBAkFpC0H,EAlFoC,KAkF1BC,EAlF0B,KAoF3C,OACE,oCACE,kBAAC,IAAD,CAAQC,YAAajB,EAAIkB,GAAG,SAAUxM,MAAM,YAC1C,kBAAC,IAAD,CAAQA,MAAM,kBAAkBc,QAASmL,IACzC,kBAAC,IAAD,CAAMxG,IAAE,EAACzF,MAAM,YAAYiL,QAAM,IACjC,kBAAC,EAAD,CAAW9K,UAAW+J,EAAK/J,YAC3B,kBAAC,IAAD,CAAQH,MAAM,WAAWc,QAAS,kBAAMwL,GAAY,OAErDD,GAAY,kBAACxC,EAAD,CAASC,WAAY,kBAAMwC,GAAY,MACnDpC,EAAKsB,OAAOE,gBACX,kBAAC,EAAD,CACElG,kBAAmB0G,EACnBxG,eAAgBmG,EAChBY,gBAAiBN,IAGpBjC,EAAKsB,OAAOC,YACX,kBAAC,IAAD,CAAOjG,kBAAmBwG,GACxB,kBAAC,IAAD,CAAMhM,MAAM,WAGfkK,EAAKsB,OAAO9G,UACX,kBAAC,IAAD,CAAOc,kBAAmB4G,GACxB,kBAAC,IAAD,CAAMpM,MAAM","file":"static/js/12.9e73d677.chunk.js","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport UIManager from '../UIManager'; // NativeModules shim\n\nvar NativeModules = {\n  UIManager: UIManager\n};\nexport default NativeModules;","import { FlatList } from \"react-native\";\nimport { Text } from \"../../../../components\";\nimport React, { memo, useCallback } from \"react\";\nimport { Reminder } from \".\";\n\ninterface Props {\n  reminders: Reminder[];\n}\n\nexport default memo(function Reminders(props: Props) {\n  const renderItem = useCallback(\n    ({ item, index }) => \n      <Text title={item.format} button={index === props.reminders.length - 1} />\n    ,\n    [props]\n  );\n\n  return (\n    <FlatList\n      inverted\n      keyExtractor={item => item.id}\n      style={{ flex: 1 }}\n      data={props.reminders}\n      renderItem={renderItem}\n    />\n  );\n});\n","import React, { memo } from \"react\";\nimport {\n  View,\n  TouchableOpacity,\n  StyleSheet,\n  StyleProp,\n  ViewStyle\n} from \"react-native\";\nimport { Text, Icon } from \"../../../../components\";\nimport { Theme } from \"../../../../utils\";\nimport { useColor } from \"../../../../hooks\";\n\ninterface Props {\n  title: string;\n  description?: string;\n  icon?: string;\n  onPress: () => void;\n  style?: StyleProp<ViewStyle>;\n  marginBottom?: boolean;\n  active?: boolean;\n  hidden?: boolean;\n}\nexport const Item = memo(function ReminderItem({\n  title,\n  description = \"\",\n  onPress,\n  icon,\n  style,\n  hidden,\n  active,\n  marginBottom\n}: Props) {\n  const color = useColor();\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      flexDirection: \"row\",\n\n      paddingHorizontal: Theme.padding.p02\n    },\n    button: {\n      borderRadius: Theme.padding.p01,\n      flexDirection: \"row\",\n      height: Theme.padding.p13,\n      justifyContent: \"space-between\",\n      borderColor: color.secondary,\n      borderWidth: 1,\n      marginBottom: marginBottom ? Theme.padding.p02 : 0\n    },\n    title: {\n      color: active ? color.primary : color.text\n    },\n    subtitle: {\n      paddingTop: Theme.padding.p01,\n      paddingLeft: 1\n    },\n    textContainer: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    icon: {\n      justifyContent: \"center\"\n    }\n  });\n\n  return hidden ? null : \n    <TouchableOpacity\n      key={title}\n      style={[styles.button, style]}\n      onPress={onPress}\n    >\n      <View style={styles.container}>\n        <View style={styles.textContainer}>\n          <Text body1 title={title} style={styles.title} />\n          {description.length > 0 && \n            <Text caption title={description} style={styles.subtitle} />\n          }\n        </View>\n        {icon && \n          <Icon name={icon} size={Theme.padding.p05} style={styles.icon} />\n        }\n      </View>\n    </TouchableOpacity>\n  ;\n});\n","import dayjs, { Dayjs } from \"dayjs\";\nimport React, { memo } from \"react\";\nimport { View } from \"react-native\";\nimport { Item } from \"./Item\";\n\nconst daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst generateButtons = () => {\n  const laterToday = dayjs()\n    .add(3, \"hour\")\n    .add(30, \"minute\")\n    .set(\"minute\", 0);\n\n  const evening = dayjs()\n    .set(\"hour\", 18)\n    .set(\"minute\", 0);\n\n  const tomorrow = dayjs()\n    .add(1, \"day\")\n    .set(\"hour\", 6)\n    .set(\"minute\", 0);\n\n  const nextWeek = dayjs()\n    .add(1, \"week\")\n    .set(\"hour\", 6)\n    .set(\"minute\", 0)\n    .set(\"day\", 1);\n\n  const nextMonth = dayjs()\n    .add(2, \"month\")\n    .set(\"hour\", 6)\n    .set(\"minute\", 0);\n\n  const yesterday = dayjs().subtract(1, \"day\");\n\n  return [\n    {\n      title: \"Later today\",\n      description: laterToday.format(\"hh:mm A\"),\n      value: laterToday,\n      visible: dayjs().set(\"hour\", 18)\n    },\n    {\n      title: \"This Evening\",\n      description: evening.format(\"hh:mm A\"),\n      value: evening,\n      visible: dayjs().set(\"hour\", 18)\n    },\n    {\n      title: \"Tomorrow\",\n      description: `${daysOfWeek[tomorrow.day()]} ${tomorrow.format(\n        \"hh:mm A\"\n      )}`,\n      value: tomorrow\n    },\n    {\n      title: \"Next Week\",\n      description: `${nextWeek.format(\"MMM DD, hh:mm A\")}`,\n      value: nextWeek\n    },\n    {\n      title: \"Someday\",\n      description: ``,\n      value: nextMonth\n    },\n    {\n      title: \"Custom\",\n      description: ``,\n      value: yesterday\n    }\n  ];\n};\n\ninterface Props {\n  onPress: (value: Dayjs) => () => void;\n}\n\nexport default memo(function OneTime({ onPress }: Props) {\n  const buttons = generateButtons();\n  return (\n    <View>\n      {buttons.map((button, index) => {\n        const hidden =\n          button.visible && dayjs().valueOf() > button.visible.valueOf();\n        return (\n          <Item\n            icon=\"alarm\"\n            hidden={hidden}\n            marginBottom={index !== buttons.length - 1}\n            key={button.title}\n            title={button.title}\n            description={button.description}\n            onPress={onPress(button.value)}\n          />\n        );\n      })}\n    </View>\n  );\n});\n","import React, { memo } from \"react\";\nimport { View } from \"react-native\";\nimport { Item } from \"./Item\";\n\ninterface Props {\n  buttons: string[];\n  horizontal?: boolean;\n  value: string;\n  onChange: (id: string) => () => void;\n}\n\nexport default memo(function Radio({\n  buttons,\n  value,\n  onChange,\n  horizontal\n}: Props) {\n  return (\n    <View\n      style={{\n        justifyContent: \"center\",\n        flexDirection: horizontal ? \"row\" : \"column\"\n      }}\n    >\n      {buttons.map((button, index) => \n        <Item\n          title={button}\n          key={button}\n          onPress={onChange(button)}\n          marginBottom={index !== buttons.length - 1}\n          active={button === value}\n        />\n      )}\n    </View>\n  );\n});\n","import React, { memo } from \"react\";\nimport \"react-native-get-random-values\";\nimport { v4 } from \"uuid\";\nimport { Item } from \"./Item\";\n\ninterface Location {\n  id: string;\n  title: string;\n  subtitle?: string;\n}\n\nexport default memo(function Location() {\n  const locations: Location[] = [\n    {\n      id: v4(),\n      title: \"Home\",\n      subtitle: \"Tap to add\"\n    },\n    {\n      id: v4(),\n      title: \"Work\",\n      subtitle: \"Tap to add\"\n    },\n    {\n      id: v4(),\n      title: \"Gym\",\n      subtitle: \"Tap to add\"\n    },\n    {\n      id: v4(),\n      title: \"Add a new location\"\n    }\n  ];\n\n  return (\n    <>\n      {locations.map((location, index) => \n        <Item\n          key={location.id}\n          onPress={() => undefined}\n          title={location.title}\n          description={location.subtitle}\n          marginBottom={index !== locations.length - 1}\n        />\n      )}\n    </>\n  );\n});\n","import React, { memo, useState } from \"react\";\nimport { View } from \"react-native\";\nimport { Item } from \"./Item\";\n\ntype RepeatType = \"Daily\" | \"Weekly\" | \"Monthly\" | \"Yearly\";\n\nexport default memo(function Repeat() {\n  const [active, setActive] = useState<RepeatType>(\"Daily\");\n  const onPress = (type: RepeatType) => () => setActive(type);\n\n  const items: RepeatType[] = [\"Daily\", \"Weekly\", \"Monthly\", \"Yearly\"];\n  return (\n    <View>\n      {items.map((item, index) => {\n        return (\n          <Item\n            active={item === active}\n            title={item}\n            key={item}\n            onPress={onPress(item)}\n            marginBottom={index !== items.length - 1}\n          />\n        );\n      })}\n    </View>\n  );\n});\n","import React, { memo, useState, useCallback } from \"react\";\nimport { Text, Modal, Button } from \"../../../../components\";\nimport OneTime from \"./OneTime\";\nimport Radio from \"./Radio\";\nimport { Dayjs } from \"dayjs\";\nimport Location from \"./Location\";\nimport Repeat from \"./Repeat\";\nimport { Theme } from \"../../../../utils\";\nimport { StyleSheet } from \"react-native\";\n\ntype ReminderType = \"One time\" | \"Repeat\" | \"Location\";\nconst reminderTypes: ReminderType[] = [\"One time\", \"Repeat\", \"Location\"];\n\ninterface Props {\n  onBackgroundPress: () => void;\n  onOneTimePress: (date: Dayjs) => () => void; // TODO: handle models better so don't have to pass up to parent\n  onLocationPress: (id: string) => () => void;\n}\n\nexport default memo(function CreateReminderModal(props: Props) {\n  const [state, setState] = useState<ReminderType>(\"One time\");\n  const styles = StyleSheet.create({\n    section: {\n      paddingTop: Theme.padding.p06,\n      paddingBottom: Theme.padding.p02\n    },\n    submit: {\n      marginTop: Theme.padding.p06\n    }\n  });\n\n  const handleReminderTypePress = useCallback(type => () => setState(type), []);\n\n  return (\n    <Modal onBackgroundPress={props.onBackgroundPress}>\n      <Text h2 title=\"Create Reminder\" />\n      <Text caption title=\"Reminder type\" style={styles.section} />\n      <Radio\n        buttons={reminderTypes}\n        value={state}\n        onChange={handleReminderTypePress}\n      />\n      <Text caption title=\"Reminder time\" style={styles.section} />\n      {state === \"One time\" ? \n        <OneTime onPress={props.onOneTimePress} />\n       : state === \"Repeat\" ? \n        <Repeat />\n       : state === \"Location\" ? \n        <Location />\n       : \n        <Text title=\"invalid form type\" />\n      }\n      <Button\n        disable\n        title=\"submit\"\n        color=\"primary\"\n        emphasis=\"high\"\n        buttonStyle={styles.submit}\n      />\n    </Modal>\n  );\n});\n","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\nvar initialURL = canUseDOM ? window.location.href : '';\nvar Linking = {\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  canOpenURL: function canOpenURL() {\n    return Promise.resolve(true);\n  },\n  getInitialURL: function getInitialURL() {\n    return Promise.resolve(initialURL);\n  },\n  openURL: function openURL(url) {\n    try {\n      open(url);\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  _validateURL: function _validateURL(url) {\n    invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    invariant(url, 'Invalid URL: cannot be empty');\n  }\n};\n\nvar open = function open(url) {\n  if (canUseDOM) {\n    window.location = new URL(url, window.location).toString();\n  }\n};\n\nexport default Linking;","import { Platform, Linking, NativeModules } from 'react-native'\n\nconst AppleNativePrefix = 'itms-apps://itunes.apple.com/app/id'\nconst AppleWebPrefix = 'https://itunes.apple.com/app/id'\nconst GooglePrefix = 'http://play.google.com/store/apps/details?id='\nconst AmazonPrefix = 'amzn://apps/android?p='\n\nexport const AndroidMarket = {\n  Google: 1,\n  Amazon: 2,\n  Other: 3,\n}\n\nconst noop = () => {}\n\nexport default class Rate {\n  static filterOptions(inputOptions) {\n    const options = {\n      AppleAppID: '',\n      GooglePackageName: '',\n      AmazonPackageName: '',\n      OtherAndroidURL: '',\n      preferredAndroidMarket: AndroidMarket.Google,\n      preferInApp: false,\n      openAppStoreIfInAppFails: true,\n      inAppDelay: 3.0,\n      fallbackPlatformURL: '',\n    }\n    Object.keys(inputOptions).forEach((key) => {\n      options[key] = inputOptions[key]\n    })\n    return options\n  }\n\n  static rate(inputOptions, callback = noop) {\n    const options = Rate.filterOptions(inputOptions)\n    if (Platform.OS === 'ios') {\n      options.AppleNativePrefix = AppleNativePrefix\n      const { RNRate } = NativeModules\n      RNRate.rate(options, (response) => {\n        callback(response) // error?\n      })\n    } else if (Platform.OS === 'android') {\n      if (options.preferredAndroidMarket === AndroidMarket.Google) {\n        Rate.openURL(GooglePrefix + options.GooglePackageName, callback)\n      } else if (options.preferredAndroidMarket === AndroidMarket.Amazon) {\n        Rate.openURL(AmazonPrefix + options.AmazonPackageName, callback)\n      } else if (options.preferredAndroidMarket === AndroidMarket.Other) {\n        Rate.openURL(options.OtherAndroidURL, callback)\n      }\n    } else {\n      Rate.openURL(options.fallbackPlatformURL, callback)\n    }\n  }\n\n  static openURL(url, callback = noop) {\n    Linking.canOpenURL(url).then((supported) => {\n      callback(supported)\n      if (supported) {\n        Linking.openURL(url)\n      }\n    })\n  }\n}\n","import React, { memo, useCallback } from \"react\";\nimport { View, TouchableOpacity } from \"react-native\";\nimport { Icon } from \"../../components\";\nimport { useColor } from \"../../hooks\";\n\ninterface Props {\n  size: number;\n  count: number;\n  rating: number;\n  onPress: (index: number) => void;\n  colorFilled?: string;\n  colorUnfilled?: string;\n  iconFilled?: string;\n  iconUnfilled?: string;\n}\n\nexport const Rating = memo(function RatingMemo(props: Props) {\n  const color = useColor();\n  const {\n    size,\n    count,\n    onPress,\n    rating,\n    colorFilled = color.text,\n    colorUnfilled = color.secondary,\n    iconFilled = \"star\",\n    iconUnfilled = \"star-outline\"\n  } = props;\n  const handleOnPress = useCallback(\n    (index: number) => () => {\n      onPress(index);\n    },\n    [onPress]\n  );\n  return (\n    <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n      {Array(count)\n        .fill(0)\n        .map((_, index) => \n          <TouchableOpacity key={index} onPress={handleOnPress(index)}>\n            <Icon\n              size={size}\n              name={index > rating || !rating ? iconUnfilled : iconFilled}\n              color={index > rating || !rating ? colorUnfilled : colorFilled}\n            />\n          </TouchableOpacity>\n        )}\n    </View>\n  );\n});\n","import React, { memo, useCallback, useRef, useState } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport Rate, { AndroidMarket } from \"react-native-rate\";\nimport { Modal, Text, Button, TextInput } from \"../../components\";\nimport { Theme } from \"../../utils\";\nimport { Rating } from \"./Rating\";\n\ntype ModalState = \"default\" | \"thank you\" | \"review\" | \"feedback\";\ntype State = {\n  rating: number;\n  modal: ModalState;\n  feedback: string;\n};\nconst initialState: State = {\n  rating: 0,\n  modal: \"default\",\n  feedback: \"\"\n};\nconst ratingMin = 5;\nconst ratingOptions = {\n  AppleAppID: \"899247664\",\n  GooglePackageName: \"com.google.android.apps.maps\", // TODO: use configs\n  AmazonPackageName: \"com.google.android.apps.maps\",\n  OtherAndroidURL: \"http://www.mywebsite.com/app/47172391\",\n  preferredAndroidMarket: AndroidMarket.Google,\n  preferInApp: true,\n  openAppStoreIfInAppFails: true,\n  fallbackPlatformURL: \"http://www.mywebsite.com/myapp\"\n};\n\ntype CompleteState = {\n  rating: number;\n  feedback: string;\n  navigatedToAppStore: boolean;\n};\n\ninterface Props {\n  onComplete: (completeState: CompleteState) => void;\n}\n\nexport const RateApp = memo(function RateAppMemo({ onComplete }: Props) {\n  const ratingRef = useRef(0);\n  const navigatedToAppStore = useRef(false);\n  const [form, setForm] = useState<State>(initialState);\n  const styles = StyleSheet.create({\n    title: { paddingBottom: Theme.padding.p04 },\n    modal: { padding: Theme.padding.p06 }\n  });\n  const completeState = {\n    rating: form.rating,\n    feedback: form.feedback,\n    navigatedToAppStore: navigatedToAppStore.current\n  };\n\n  const handleReset = useCallback(() => {\n    ratingRef.current = 0;\n    setForm(initialState);\n  }, []);\n\n  const handleReviewApp = useCallback(() => {\n    handleReset();\n    onComplete({ ...completeState, navigatedToAppStore: true });\n    Rate.rate(ratingOptions, () => undefined);\n  }, [completeState, onComplete, handleReset]);\n\n  const handleRating = useCallback((rating: number) => {\n    ratingRef.current = rating;\n    setForm(prev => ({ ...prev, rating }));\n    setTimeout(() => {\n      const success = ratingRef.current >= ratingMin;\n      setForm(prev => ({ ...prev, modal: success ? \"review\" : \"feedback\" }));\n    }, 300);\n  }, []);\n\n  const handleTextChange = useCallback((feedback: string) => {\n    setForm(prev => ({ ...prev, feedback }));\n  }, []);\n\n  const handleFeedbackSubmit = useCallback(() => {\n    setForm(prev => ({ ...prev, modal: \"thank you\" }));\n  }, []);\n\n  const handleComplete = useCallback(() => {\n    onComplete(completeState);\n  }, [completeState, onComplete]);\n\n  return (\n    <Modal onBackgroundPress={handleComplete}>\n      {form.modal === \"review\" ? \n        <>\n          <Text\n            h4\n            title=\"Thank you for your feedback!\"\n            center\n            style={styles.title}\n          />\n          <Text\n            title=\"Do you mind reviewing us on the app store?\"\n            center\n            style={styles.title}\n          />\n          <Button title=\"Okay\" onPress={handleReviewApp} />\n        </>\n       : form.modal === \"feedback\" ? \n        <>\n          <Text h4 title=\"Thank you\" center style={styles.title} />\n          <Text\n            title=\"Can you provide us with some feedback to help us improve?\"\n            center\n            style={styles.title}\n          />\n          <TextInput\n            onSubmitEditing={handleFeedbackSubmit}\n            value={form.feedback}\n            onChangeText={handleTextChange}\n            placeholder=\"How can we improve?\"\n          />\n          <Button title=\"Submit\" onPress={handleFeedbackSubmit} />\n        </>\n       : form.modal === \"thank you\" ? \n        <>\n          <Text h4 title=\"Thank you\" center style={styles.title} />\n          <Text\n            title=\"We have sent your feedback to our team\"\n            style={styles.title}\n            center\n          />\n          <Button title=\"Close\" onPress={handleComplete} />\n        </>\n       : \n        <>\n          <Text\n            h4\n            title=\"How are you enjoying the app so far?\"\n            center\n            style={styles.title}\n          />\n          <Rating\n            count={5}\n            size={Theme.padding.p08}\n            rating={form.rating}\n            onPress={handleRating}\n          />\n        </>\n      }\n    </Modal>\n  );\n});\n","import React, { memo, useState, useCallback } from \"react\";\nimport { Screen, Text, Button, Modal } from \"../../../../components\";\nimport { useNav } from \"../../../../hooks\";\nimport dayjs, { Dayjs } from \"dayjs\";\nimport Reminders from \"./Reminders\";\nimport CreateReminderModal from \"./CreateReminderModal\";\nimport \"react-native-get-random-values\";\nimport { v4 } from \"uuid\";\nimport { RateApp } from \"../../../../features\";\n\ntype ReminderType = \"one time\" | \"repeat\" | \"location\";\nexport type Reminder = {\n  id: string;\n  date: number;\n  format: string;\n};\ntype State = {\n  type: ReminderType;\n  reminders: Reminder[];\n  modals: {\n    customDate: boolean;\n    createReminder: boolean;\n    location: boolean;\n  };\n  selected: {\n    location: string | undefined;\n  };\n};\n\nexport default memo(function DebugReminder() {\n  const nav = useNav();\n  const [form, setForm] = useState<State>({\n    type: \"one time\",\n    reminders: [],\n    modals: {\n      customDate: false,\n      createReminder: false,\n      location: false\n    },\n    selected: {\n      location: undefined\n    }\n  });\n\n  const handleOneTimeReminder = useCallback(\n    (date: Dayjs) => () => {\n      if (date.isBefore(dayjs())) {\n        setForm(prev => ({\n          ...prev,\n          modals: { ...prev.modals, customDate: true }\n        }));\n        return;\n      }\n      setForm(prev => ({\n        ...prev,\n        modals: {\n          ...prev.modals,\n          createReminder: false\n        },\n        reminders: [\n          ...prev.reminders,\n          {\n            id: v4(),\n            date: date.valueOf(),\n            format: date.format(\"MMM DD, YYYY hh:mm A\")\n          }\n        ]\n      }));\n    },\n    []\n  );\n\n  const handleCustomDateClose = useCallback(() => {\n    setForm(prev => ({\n      ...prev,\n      modals: { ...prev.modals, customDate: false }\n    }));\n  }, []);\n\n  const handleCreateReminder = useCallback(() => {\n    setForm(prev => ({\n      ...prev,\n      modals: { ...prev.modals, createReminder: true }\n    }));\n  }, []);\n\n  const handleCreateReminderClose = useCallback(() => {\n    setForm(prev => ({\n      ...prev,\n      modals: { ...prev.modals, createReminder: false }\n    }));\n  }, []);\n\n  const handleLocation = useCallback(\n    (id: string) => () => {\n      setForm(prev => ({\n        ...prev,\n        modals: { ...prev.modals, location: true },\n        selected: { location: id }\n      }));\n    },\n    []\n  );\n\n  const handleLocationClose = useCallback(() => {\n    setForm(prev => ({\n      ...prev,\n      modals: { ...prev.modals, location: false }\n    }));\n  }, []);\n\n  const [showRate, setShowRate] = useState(false);\n\n  return (\n    <>\n      <Screen onLeftPress={nav.to(\"debug\")} title=\"Reminder\">\n        <Button title=\"create reminder\" onPress={handleCreateReminder} />\n        <Text h2 title=\"reminders\" center />\n        <Reminders reminders={form.reminders} />\n        <Button title=\"press me\" onPress={() => setShowRate(true)} />\n      </Screen>\n      {showRate && <RateApp onComplete={() => setShowRate(false)} />}\n      {form.modals.createReminder && \n        <CreateReminderModal\n          onBackgroundPress={handleCreateReminderClose}\n          onOneTimePress={handleOneTimeReminder}\n          onLocationPress={handleLocation}\n        />\n      }\n      {form.modals.customDate && \n        <Modal onBackgroundPress={handleCustomDateClose}>\n          <Text title=\"hello\" />\n        </Modal>\n      }\n      {form.modals.location && \n        <Modal onBackgroundPress={handleLocationClose}>\n          <Text title=\"location\" />\n        </Modal>\n      }\n    </>\n  );\n});\n"],"sourceRoot":""}