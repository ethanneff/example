{"version":3,"sources":["apps/Debug/screens/Reminder/Reminders.tsx","apps/Debug/screens/Reminder/OneTime.tsx","apps/Debug/screens/Reminder/Radio.tsx","apps/Debug/screens/Reminder/Location.tsx","apps/Debug/screens/Reminder/Repeat.tsx","apps/Debug/screens/Reminder/CreateReminderModal.tsx","apps/Debug/screens/Reminder/index.tsx"],"names":["memo","props","renderItem","useCallback","item","index","title","format","button","reminders","length","FlatList","inverted","keyExtractor","id","style","flex","data","daysOfWeek","onPress","buttons","laterToday","dayjs","add","set","evening","tomorrow","nextWeek","nextMonth","startOf","yesterday","subtract","description","value","day","generateButtons","View","map","TouchableOpacity","key","alignSelf","flexDirection","justifyContent","name","size","Theme","padding","p04","paddingLeft","p02","horizontal","primary","onChange","onLocationPress","locations","v4","subtitle","color","useColor","height","p15","borderColor","secondary","borderWidth","marginBottom","paddingHorizontal","h4","bounces","reminderTypes","useState","state","setState","handleReminderTypePress","type","onBackgroundPress","noScroll","h2","center","onOneTimePress","nav","useNav","modals","customDate","createReminder","location","selected","undefined","form","setForm","handleOneTimeReminder","date","isBefore","prev","valueOf","handleCustomDateClose","handleCreateReminder","handleCreateReminderClose","handleLocation","handleLocationClose","onLeftPress","to"],"mappings":"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","file":"static/js/33.c281c792.chunk.js","sourcesContent":["import { FlatList } from \"react-native\";\nimport { Text } from \"../../../../components\";\nimport React, { memo, useCallback } from \"react\";\nimport { Reminder } from \".\";\n\ninterface Props {\n  reminders: Reminder[];\n}\n\nexport default memo(function Reminders(props: Props) {\n  const renderItem = useCallback(\n    ({ item, index }) => \n      <Text title={item.format} button={index === props.reminders.length - 1} />\n    ,\n    [props]\n  );\n\n  return (\n    <FlatList\n      inverted\n      keyExtractor={item => item.id}\n      style={{ flex: 1 }}\n      data={props.reminders}\n      renderItem={renderItem}\n    />\n  );\n});\n","import dayjs, { Dayjs } from \"dayjs\";\nimport React, { memo } from \"react\";\nimport { View, TouchableOpacity } from \"react-native\";\nimport { Icon, Text } from \"../../../../components\";\nimport { Theme } from \"../../../../utils\";\n\nconst daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst generateButtons = () => {\n  const laterToday = dayjs()\n    .add(3, \"hour\")\n    .add(30, \"minute\")\n    .set(\"minute\", 0);\n\n  const evening = dayjs()\n    .set(\"hour\", 18)\n    .set(\"minute\", 0);\n\n  const tomorrow = dayjs()\n    .add(1, \"day\")\n    .set(\"hour\", 6)\n    .set(\"minute\", 0);\n\n  const nextWeek = dayjs()\n    .add(1, \"week\")\n    .set(\"hour\", 6)\n    .set(\"minute\", 0)\n    .set(\"day\", 0);\n\n  const nextMonth = dayjs()\n    .startOf(\"month\")\n    .add(2, \"month\")\n    .set(\"hour\", 6)\n    .set(\"minute\", 0);\n\n  const yesterday = dayjs().subtract(1, \"day\");\n\n  return [\n    {\n      title: \"Later today\",\n      description: laterToday.format(\"hh:mm A\"),\n      value: laterToday\n    },\n    {\n      title: \"This Evening\",\n      description: evening.format(\"hh:mm A\"),\n      value: evening\n    },\n    {\n      title: \"Tomorrow\",\n      description: `${daysOfWeek[tomorrow.day()]} ${tomorrow.format(\n        \"hh:mm A\"\n      )}`,\n      value: tomorrow\n    },\n    {\n      title: \"Next Week\",\n      description: `${nextWeek.format(\"MMM DD, hh:mm A\")}`,\n      value: nextWeek\n    },\n    {\n      title: \"Someday\",\n      description: ``,\n      value: nextMonth\n    },\n    {\n      title: \"Custom\",\n      description: ``,\n      value: yesterday\n    }\n  ];\n};\n\ninterface Props {\n  onPress: (value: Dayjs) => () => void;\n}\n\nexport default memo(function OneTime({ onPress }: Props) {\n  const buttons = generateButtons();\n  return (\n    <View>\n      {buttons.map(button => \n        <TouchableOpacity\n          key={button.title}\n          style={{\n            alignSelf: \"center\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          }}\n          onPress={onPress(button.value)}\n        >\n          <Icon name=\"alarm\" size={Theme.padding.p04} />\n          <Text\n            title={button.title}\n            style={{ paddingLeft: Theme.padding.p02, flex: 1 }}\n          />\n          <Text title={button.description} />\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n});\n","import React, { memo } from \"react\";\nimport { View } from \"react-native\";\nimport { Button } from \"../../../../components\";\n\ninterface Props {\n  buttons: string[];\n  horizontal?: boolean;\n  value?: string;\n  onChange: (id: string) => () => void;\n}\n\nexport default memo(function Radio(props: Props) {\n  return (\n    <View\n      style={{\n        justifyContent: \"center\",\n        flexDirection: props.horizontal ? \"row\" : \"column\"\n      }}\n    >\n      {props.buttons.map(button => \n        <Button\n          key={button}\n          title={button}\n          primary={button === props.value}\n          onPress={props.onChange(button)}\n        />\n      )}\n    </View>\n  );\n});\n","import React, { memo, useCallback } from \"react\";\nimport { View, TouchableOpacity, FlatList } from \"react-native\";\nimport { Text } from \"../../../../components\";\nimport { Theme } from \"../../../../utils\";\nimport { useColor } from \"../../../../hooks\";\nimport \"react-native-get-random-values\";\nimport { v4 } from \"uuid\";\n\ninterface Location {\n  id: string;\n  title: string;\n  subtitle?: string;\n}\n\ninterface Props {\n  onLocationPress: (id: string) => () => void;\n}\n\nexport default memo(function Location({ onLocationPress }: Props) {\n  const locations: Location[] = [\n    {\n      id: v4(),\n      title: \"Home\",\n      subtitle: \"Tap to add\"\n    },\n    {\n      id: v4(),\n      title: \"Work\",\n      subtitle: \"Tap to add\"\n    },\n    {\n      id: v4(),\n      title: \"Gym\",\n      subtitle: \"Tap to add\"\n    },\n    {\n      id: v4(),\n      title: \"Add a new location\"\n    }\n  ];\n\n  const color = useColor();\n\n  const keyExtractor = (item: Location) => item.id;\n\n  const renderItem = useCallback(\n    ({ item, index }) => {\n      return (\n        <TouchableOpacity\n          key={item.title}\n          style={{\n            flexDirection: \"row\",\n            height: Theme.padding.p15,\n            justifyContent: \"space-between\",\n            borderColor: color.secondary,\n            borderWidth: 1,\n            marginBottom: index !== locations.length - 1 ? Theme.padding.p02 : 0\n          }}\n          onPress={onLocationPress(item.id)}\n        >\n          {!item.subtitle ? \n            <View\n              style={{\n                flex: 1,\n                justifyContent: \"center\",\n                paddingHorizontal: Theme.padding.p02\n              }}\n            >\n              <Text h4 title={item.title} />\n            </View>\n           : \n            <View\n              style={{\n                flex: 1,\n                justifyContent: \"center\",\n                paddingHorizontal: Theme.padding.p02\n              }}\n            >\n              <Text h4 title={item.title} />\n              <Text title={item.subtitle} />\n            </View>\n          }\n        </TouchableOpacity>\n      );\n    },\n    [color.secondary, locations.length, onLocationPress]\n  );\n\n  return (\n    <FlatList\n      bounces\n      data={locations}\n      keyExtractor={keyExtractor}\n      renderItem={renderItem}\n    />\n  );\n});\n","import React, { memo } from \"react\";\nimport { View } from \"react-native\";\nimport { Button } from \"../../../../components\";\n\nexport default memo(function Repeat() {\n  const onPress = () => undefined;\n  return (\n    <View>\n      <Button title=\"daily\" onPress={onPress} />\n      <Button title=\"weekly\" onPress={onPress} />\n      <Button title=\"monthly\" onPress={onPress} />\n      <Button title=\"yearly\" onPress={onPress} />\n    </View>\n  );\n});\n","import React, { memo, useState, useCallback } from \"react\";\nimport { Text, Modal } from \"../../../../components\";\nimport OneTime from \"./OneTime\";\nimport Radio from \"./Radio\";\nimport { Dayjs } from \"dayjs\";\nimport Location from \"./Location\";\nimport Repeat from \"./Repeat\";\nimport { View } from \"react-native\";\n\ntype ReminderType = \"one time\" | \"repeat\" | \"location\";\nconst reminderTypes: ReminderType[] = [\"one time\", \"repeat\", \"location\"];\n\ninterface Props {\n  onBackgroundPress: () => void;\n  onOneTimePress: (date: Dayjs) => () => void; // TODO: handle models better so don't have to pass up to parent\n  onLocationPress: (id: string) => () => void;\n}\n\nexport default memo(function CreateReminderModal(props: Props) {\n  const [state, setState] = useState<ReminderType>(\"one time\");\n\n  const handleReminderTypePress = useCallback(type => () => setState(type), []);\n\n  return (\n    <Modal onBackgroundPress={props.onBackgroundPress} noScroll>\n      <View style={{ height: 250 }}>\n        <Text h2 title=\"Create Reminder\" center />\n        <Radio\n          buttons={reminderTypes}\n          horizontal\n          value={state}\n          onChange={handleReminderTypePress}\n        />\n        {state === \"one time\" ? \n          <OneTime onPress={props.onOneTimePress} />\n         : state === \"repeat\" ? \n          <Repeat />\n         : state === \"location\" ? \n          <Location onLocationPress={props.onLocationPress} />\n         : \n          <Text title=\"invalid form type\" />\n        }\n      </View>\n    </Modal>\n  );\n});\n","import React, { memo, useState, useCallback } from \"react\";\nimport { Screen, Text, Button, Modal } from \"../../../../components\";\nimport { useNav } from \"../../../../hooks\";\nimport dayjs, { Dayjs } from \"dayjs\";\nimport Reminders from \"./Reminders\";\nimport CreateReminderModal from \"./CreateReminderModal\";\nimport \"react-native-get-random-values\";\nimport { v4 } from \"uuid\";\n\ntype ReminderType = \"one time\" | \"repeat\" | \"location\";\nexport type Reminder = {\n  id: string;\n  date: number;\n  format: string;\n};\ntype State = {\n  type: ReminderType;\n  reminders: Reminder[];\n  modals: {\n    customDate: boolean;\n    createReminder: boolean;\n    location: boolean;\n  };\n  selected: {\n    location: string | undefined;\n  };\n};\n\nexport default memo(function DebugReminder() {\n  const nav = useNav();\n  const [form, setForm] = useState<State>({\n    type: \"one time\",\n    reminders: [],\n    modals: {\n      customDate: false,\n      createReminder: false,\n      location: false\n    },\n    selected: {\n      location: undefined\n    }\n  });\n\n  const handleOneTimeReminder = useCallback(\n    (date: Dayjs) => () => {\n      if (date.isBefore(dayjs())) {\n        setForm(prev => ({\n          ...prev,\n          modals: { ...prev.modals, customDate: true }\n        }));\n        return;\n      }\n      setForm(prev => ({\n        ...prev,\n        modals: {\n          ...prev.modals,\n          createReminder: false\n        },\n        reminders: [\n          ...prev.reminders,\n          {\n            id: v4(),\n            date: date.valueOf(),\n            format: date.format(\"MMM DD, YYYY hh:mm A\")\n          }\n        ]\n      }));\n    },\n    []\n  );\n\n  const handleCustomDateClose = useCallback(() => {\n    setForm(prev => ({\n      ...prev,\n      modals: { ...prev.modals, customDate: false }\n    }));\n  }, []);\n\n  const handleCreateReminder = useCallback(() => {\n    setForm(prev => ({\n      ...prev,\n      modals: { ...prev.modals, createReminder: true }\n    }));\n  }, []);\n\n  const handleCreateReminderClose = useCallback(() => {\n    setForm(prev => ({\n      ...prev,\n      modals: { ...prev.modals, createReminder: false }\n    }));\n  }, []);\n\n  const handleLocation = useCallback(\n    (id: string) => () => {\n      setForm(prev => ({\n        ...prev,\n        modals: { ...prev.modals, location: true },\n        selected: { location: id }\n      }));\n    },\n    []\n  );\n\n  const handleLocationClose = useCallback(() => {\n    setForm(prev => ({\n      ...prev,\n      modals: { ...prev.modals, location: false }\n    }));\n  }, []);\n\n  return (\n    <>\n      <Screen onLeftPress={nav.to(\"debug\")} title=\"Reminder\">\n        <Button title=\"create reminder\" onPress={handleCreateReminder} />\n        <Text h2 title=\"Reminders\" center />\n        <Reminders reminders={form.reminders} />\n      </Screen>\n      {form.modals.createReminder && \n        <CreateReminderModal\n          onBackgroundPress={handleCreateReminderClose}\n          onOneTimePress={handleOneTimeReminder}\n          onLocationPress={handleLocation}\n        />\n      }\n      {form.modals.customDate && \n        <Modal onBackgroundPress={handleCustomDateClose}>\n          <Text title=\"hello\" />\n        </Modal>\n      }\n      {form.modals.location && \n        <Modal onBackgroundPress={handleLocationClose}>\n          <Text title=\"location\" />\n        </Modal>\n      }\n    </>\n  );\n});\n"],"sourceRoot":""}