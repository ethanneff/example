{"version":3,"sources":["apps/Complete/configs.tsx","apps/Complete/components/TextInputWithIcons.tsx","apps/Complete/components/AddButton.tsx","apps/Complete/components/AddItem.tsx","apps/Complete/components/AddList.tsx","apps/Complete/components/Card.tsx","apps/Complete/components/ListHeader.tsx","apps/Complete/components/ListItem.tsx","apps/Complete/components/ListItems.tsx","apps/Complete/components/List.tsx","apps/Complete/components/Board.tsx","apps/Complete/components/DeleteModal.tsx","apps/Complete/components/ItemContext.tsx","apps/Complete/components/ItemEdit.tsx","apps/Complete/screens/Account/factory.ts","apps/Complete/screens/Account/index.tsx","apps/Complete/screens/Capture/index.tsx","apps/Complete/screens/ItemDetail/index.tsx","apps/Complete/screens/Landing/index.tsx","apps/Complete/screens/ListDetail/index.tsx","apps/Complete/screens/Project/index.tsx","apps/Complete/screens/Projects/index.tsx","apps/Complete/screens/Reflect/Graph.tsx","apps/Complete/screens/Reflect/index.tsx","apps/Complete/index.tsx"],"names":["config","borderRadius","Theme","padding","p02","p04","alert","width","height","TextInputWithIcons","memo","value","multiline","maxIconHeight","p06","placeholder","backgroundColor","editable","pointerEvents","focusOnLoad","icons","type","onSubmit","blurOnSubmit","onFocus","onBlur","onRef","color","useColor","bgColor","background","useState","text","setText","showControls","setShowControls","onTextChange","useCallback","change","onFocusInternal","onSubmitInternal","trim","length","onBlurInternal","onIconPressInternal","callback","containerHeight","setContainerHeight","iconHeight","clampIconHeight","onLayout","e","nativeEvent","layout","View","style","flex","flexDirection","onChangeText","onSubmitEditing","returnKeyType","alignItems","map","icon","hidden","focus","disabled","required","name","onPress","padded","size","AddButton","title","textInputRef","useRef","showInput","setShowInput","onAddItemPress","p","onItemTitleClose","onItemTitleSubmit","current","primary","p12","justifyContent","center","AddItem","listId","dispatch","useRootDispatch","userId","useRootSelector","s","completeUser","id","Error","itemId","v4","date","Date","now","item","active","createdAt","updatedAt","createItem","updateListAddItem","AddList","boardId","list","default","items","createList","updateBoardAddList","Card","children","margin","marginRight","marginBottom","ListHeader","navigate","useNavigation","completeList","onSave","updateListTitle","Keyboard","dismiss","onDetail","setActiveBoard","setActiveList","ListItem","completeItem","updateItem","onItemNav","childBoardId","onItemDetails","setActiveItem","onItemLongPress","onItemPress","TouchableOpacity","activeOpacity","onLongPress","surface","ListItems","maxHeight","listItems","cardsRef","cardsLength","onKeyExtractor","onCardSizeChange","scrollToEnd","onRenderItem","FlatList","data","keyExtractor","keyboardShouldPersistTaps","onContentSizeChange","ref","renderItem","showsVerticalScrollIndicator","List","orientation","listWidth","listMaxHeight","Board","listSize","board","completeBoard","getItemId","getItemLayout","_","index","offset","renderAddList","renderList","ListFooterComponent","contentContainerStyle","lists","decelerationRate","horizontal","showsHorizontalScrollIndicator","snapToAlignment","snapToInterval","DeleteModal","onCancel","onDelete","onBackgroundPress","overlayColor","widthPercent","paddingBottom","ItemContext","emphasis","ItemEdit","description","onClose","defaults","Account","goBack","navBack","onLogin","inboxItems","inboxList","inboxBoard","homeItems","homeLists","homeBoard","projectItems","projectsList","listsItems","listsList","categoryBoard","user","boards","getDefaultUserTemplate","createBoard","createUser","onLogout","removeUser","onSetActive","setActiveUser","onNavToAdmin","initialState","container","button","Capture","keyboardHeight","state","device","dimensions","setDimensions","android","Platform","OS","listHeight","getInboxBoardId","noListItems","onOrganize","key","event","navToAccount","onRightPress","rightIcon","render","disable","ItemDetail","deleteModal","setDeleteModal","onItemDelete","removeItem","updateListRemoveItem","onItemSubmit","onDeletePress","onDeleteClose","Landing","navPortfolioLogin","slides","info","warning","success","brand","ListDetail","onListDelete","removeList","updateBoardRemoveList","onListSubmit","updateList","Project","screenWidth","getSmallestDimension","setContainer","onLeftPress","Projects","getCategoryBoardId","listIds","getDomain","domain","Math","min","max","Graph","scaleX","scaleTime","d","range","scaleY","scaleLinear","strokeWidth","shape","x","y","curve","StyleSheet","absoluteFill","x1","x2","y1","y2","stopColor","fill","stroke","Title","getTime","Reflect","ScrollView","Dimensions","get","noHeader","headerShown","RootTab","createBottomTabNavigator","RootStack","createStackNavigator","ProjectsStack","tabIcons","capture","focused","unfocused","reflect","Focus","Navigator","screenOptions","Screen","component","Tabs","tabBarOptions","keyboardHidesTabBar","activeTintColor","inactiveTintColor","secondary","showLabel","route","tabBarIcon","iconColor","Main","mode","rootMode","rootScreenOptions","Notification","Modal"],"mappings":"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","file":"static/js/12.ac4497ed.chunk.js","sourcesContent":["import {Theme} from '../../utils';\n\nexport const config = {\n  borderRadius: Theme.padding.p02,\n  padding: Theme.padding.p04,\n  alert: {\n    width: 0.8,\n    height: 0.6,\n  },\n};\n","import React, {memo, MutableRefObject, useCallback, useState} from 'react';\nimport {LayoutChangeEvent, TextInput as Original, View} from 'react-native';\nimport {Icon, TextInput} from '../../../components';\nimport {PointerEvents} from '../../../components/TextInput/types';\nimport {useColor} from '../../../hooks';\nimport {FontType, Theme} from '../../../utils';\n\ntype Icon = {\n  name: string;\n  onPress: (text: string) => void;\n  hidden?: boolean;\n  color?: string;\n  focus?: boolean;\n  required?: boolean;\n};\n\ntype TextInputWithIconsProps = {\n  value: string;\n  placeholder: string;\n  icons: Icon[];\n  onRef?: MutableRefObject<Original | null>;\n  onSubmit: (text: string) => void;\n  backgroundColor?: string;\n  pointerEvents?: PointerEvents;\n  type?: FontType;\n  focusOnLoad?: boolean;\n  onBlur?: () => void;\n  onFocus?: () => void;\n  blurOnSubmit?: boolean;\n  multiline?: boolean;\n  maxIconHeight?: number;\n  editable?: boolean;\n};\n\nexport const TextInputWithIcons = memo(function TextInputWithIcons({\n  value,\n  multiline,\n  maxIconHeight = Theme.padding.p06,\n  placeholder,\n  backgroundColor,\n  editable,\n  pointerEvents,\n  focusOnLoad,\n  icons,\n  type,\n  onSubmit,\n  blurOnSubmit,\n  onFocus,\n  onBlur,\n  onRef,\n}: TextInputWithIconsProps) {\n  const color = useColor();\n  const bgColor = backgroundColor || color.background;\n  const [text, setText] = useState(value);\n  const [showControls, setShowControls] = useState(false);\n\n  const onTextChange = useCallback((change) => {\n    setText(change);\n  }, []);\n\n  const onFocusInternal = useCallback(() => {\n    setShowControls(true);\n    if (onFocus) onFocus();\n  }, [onFocus]);\n\n  const onSubmitInternal = useCallback(() => {\n    if (text.trim().length === 0) return;\n    onSubmit(text);\n    if (value === '') setText('');\n  }, [onSubmit, text, value]);\n\n  const onBlurInternal = useCallback(() => {\n    setText(value);\n    setShowControls(false);\n    if (onBlur) onBlur();\n  }, [onBlur, value]);\n\n  const onIconPressInternal = useCallback(\n    (callback) => () => {\n      callback(text);\n      if (value === '') setText('');\n    },\n    [text, value],\n  );\n  const [containerHeight, setContainerHeight] = useState(0);\n  const iconHeight = containerHeight - Theme.padding.p04;\n  const clampIconHeight =\n    iconHeight > maxIconHeight ? maxIconHeight : iconHeight;\n\n  const onLayout = useCallback(\n    (e: LayoutChangeEvent) => {\n      if (containerHeight) return;\n      setContainerHeight(e.nativeEvent.layout.height);\n    },\n    [containerHeight],\n  );\n\n  return (\n    <View onLayout={onLayout} style={{flex: 1, flexDirection: 'row'}}>\n      <TextInput\n        backgroundColor={bgColor}\n        blurOnSubmit={blurOnSubmit}\n        editable={editable}\n        flex\n        focusOnLoad={focusOnLoad}\n        multiline={multiline}\n        onBlur={onBlurInternal}\n        onChangeText={onTextChange}\n        onFocus={onFocusInternal}\n        onRef={onRef}\n        onSubmitEditing={onSubmitInternal}\n        placeholder={placeholder}\n        pointerEvents={pointerEvents}\n        returnKeyType=\"done\"\n        type={type}\n        value={text}\n      />\n      <View style={{flexDirection: 'row', alignItems: 'center'}}>\n        {icons.map((icon) =>\n          icon.hidden ||\n          (showControls && !icon.focus) ||\n          (!showControls && icon.focus) ? null : (\n            <Icon\n              color={icon.color}\n              disabled={icon.required && text.trim().length === 0}\n              key={`${icon.name}-focus`}\n              name={icon.name}\n              onPress={onIconPressInternal(icon.onPress)}\n              padded\n              size={clampIconHeight}\n            />\n          ),\n        )}\n      </View>\n    </View>\n  );\n});\n","import React, {memo, useCallback, useRef, useState} from 'react';\nimport {TextInput as OriginalTextInput, View} from 'react-native';\nimport {Button} from '../../../components';\nimport {useColor} from '../../../hooks';\nimport {Theme} from '../../../utils';\nimport {config} from '../configs';\nimport {TextInputWithIcons} from './TextInputWithIcons';\n\ntype AddButtonProps = {\n  width?: number;\n  placeholder: string;\n  title: string;\n  onSubmit: (value: string) => void;\n};\n\nexport const AddButton = memo(function AddButton({\n  width,\n  placeholder,\n  title,\n  onSubmit,\n}: AddButtonProps) {\n  const color = useColor();\n  const textInputRef = useRef<OriginalTextInput | null>(null);\n  const [showInput, setShowInput] = useState(false);\n  const onAddItemPress = useCallback(() => setShowInput((p) => !p), []);\n\n  const onItemTitleClose = useCallback(() => {\n    setShowInput(false);\n  }, []);\n\n  const onItemTitleSubmit = useCallback(\n    (text) => {\n      onSubmit(text);\n      textInputRef.current?.focus();\n    },\n    [onSubmit],\n  );\n\n  const onBlur = useCallback(() => {\n    setShowInput(false);\n  }, []);\n\n  const icons = [\n    {name: 'close', onPress: onItemTitleClose, focus: true},\n    {\n      name: 'send',\n      onPress: onItemTitleSubmit,\n      color: color.primary,\n      focus: true,\n      required: true,\n    },\n  ];\n\n  return (\n    <View\n      style={{\n        width,\n        height: Theme.padding.p12,\n        borderRadius: config.borderRadius,\n        backgroundColor: color.background,\n        justifyContent: 'center',\n      }}>\n      {showInput ? (\n        <TextInputWithIcons\n          blurOnSubmit={false}\n          focusOnLoad\n          icons={icons}\n          onBlur={onBlur}\n          onSubmit={onItemTitleSubmit}\n          placeholder={placeholder}\n          value=\"\"\n        />\n      ) : (\n        <Button center color=\"primary\" onPress={onAddItemPress} title={title} />\n      )}\n    </View>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {v4} from 'uuid';\nimport {useRootDispatch, useRootSelector} from '../../../utils';\nimport {createItem, Item, updateListAddItem} from '../models';\nimport {AddButton} from './AddButton';\n\ntype AddItemProps = {\n  listId: string;\n  placeholder: string;\n  title: string;\n};\n\nexport const AddItem = memo(function AddItem({\n  placeholder,\n  title,\n  listId,\n}: AddItemProps) {\n  const dispatch = useRootDispatch();\n  const userId = useRootSelector((s) => s.completeUser?.id);\n  if (!userId) throw new Error('missing user id on add item');\n  const onSubmit = useCallback(\n    (value: string) => {\n      const itemId = v4();\n      const date = Date.now();\n      const item: Item = {\n        id: itemId,\n        userId,\n        active: true,\n        title: value,\n        createdAt: date,\n        updatedAt: date,\n      };\n      dispatch(createItem(item));\n      dispatch(updateListAddItem({listId, itemId}));\n    },\n    [dispatch, listId, userId],\n  );\n\n  return (\n    <AddButton onSubmit={onSubmit} placeholder={placeholder} title={title} />\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {v4} from 'uuid';\nimport {useRootDispatch, useRootSelector} from '../../../utils';\nimport {createList, List, updateBoardAddList} from '../models';\nimport {AddButton} from './AddButton';\n\ntype AddListProps = {\n  boardId: string;\n  placeholder: string;\n  title: string;\n  width: number;\n};\n\nexport const AddList = memo(function AddList({\n  placeholder,\n  title,\n  boardId,\n  width,\n}: AddListProps) {\n  const dispatch = useRootDispatch();\n  const userId = useRootSelector((s) => s.completeUser?.id);\n  if (!userId) throw new Error('missing user id on add list');\n  const onSubmit = useCallback(\n    (value: string) => {\n      const listId = v4();\n      const date = Date.now();\n      const list: List = {\n        id: listId,\n        userId,\n        default: false,\n        active: true,\n        title: value,\n        createdAt: date,\n        updatedAt: date,\n        items: [],\n      };\n      dispatch(createList(list));\n      dispatch(updateBoardAddList({boardId, listId}));\n    },\n    [boardId, dispatch, userId],\n  );\n\n  return (\n    <AddButton\n      onSubmit={onSubmit}\n      placeholder={placeholder}\n      title={title}\n      width={width}\n    />\n  );\n});\n","import React, {memo, ReactElement} from 'react';\nimport {LayoutChangeEvent, View} from 'react-native';\nimport {useColor} from '../../../hooks';\nimport {config} from '../configs';\n\n// TODO: combine card components with global card\n\ntype CardProps = {\n  onLayout?: (event: LayoutChangeEvent) => void;\n  children: ReactElement | ReactElement[];\n  margin?: 'bottom' | 'right' | 'none';\n  width?: number;\n};\n\nexport const Card = memo(function Card({\n  children,\n  onLayout,\n  margin = 'none',\n  width,\n}: CardProps) {\n  const color = useColor();\n  return (\n    <View\n      onLayout={onLayout}\n      style={{\n        width,\n        borderRadius: config.borderRadius,\n        backgroundColor: color.background,\n        padding: config.padding / 2,\n        marginRight: margin === 'right' ? config.padding : 0,\n        marginBottom: margin === 'bottom' ? config.padding : 0,\n      }}>\n      {children}\n    </View>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback} from 'react';\nimport {Keyboard, View} from 'react-native';\nimport {useColor} from '../../../hooks';\nimport {useRootDispatch, useRootSelector} from '../../../utils';\nimport {setActiveBoard, setActiveList, updateListTitle} from '../models';\nimport {TextInputWithIcons} from './TextInputWithIcons';\n\ntype ListHeaderProps = {\n  listId: string;\n  boardId: string;\n};\n\nexport const ListHeader = memo(function ListHeader({\n  listId,\n  boardId,\n}: ListHeaderProps) {\n  const dispatch = useRootDispatch();\n  const {navigate} = useNavigation();\n  const color = useColor();\n  const list = useRootSelector((s) => s.completeList.items[listId]);\n\n  const onSave = useCallback(\n    (title) => {\n      dispatch(updateListTitle({listId, title}));\n      Keyboard.dismiss();\n    },\n    [dispatch, listId],\n  );\n\n  const onDetail = useCallback(() => {\n    dispatch(setActiveBoard(boardId));\n    dispatch(setActiveList(listId));\n    navigate('list-detail');\n  }, [boardId, dispatch, listId, navigate]);\n\n  const onClose = useCallback(() => Keyboard.dismiss(), []);\n\n  const icons = [\n    {name: 'close', onPress: onClose, focus: true},\n    {\n      name: 'send',\n      onPress: onSave,\n      color: color.primary,\n      focus: true,\n      required: true,\n    },\n    {name: 'dots-horizontal', onPress: onDetail},\n  ];\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n      }}>\n      <TextInputWithIcons\n        editable={!list.default}\n        icons={icons}\n        onSubmit={onSave}\n        placeholder=\"List title...\"\n        type=\"h4\"\n        value={list.title}\n      />\n    </View>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useRef} from 'react';\nimport {\n  Keyboard,\n  TextInput as OriginalTextInput,\n  TouchableOpacity,\n} from 'react-native';\nimport {useColor} from '../../../hooks';\nimport {useRootDispatch, useRootSelector} from '../../../utils';\nimport {config} from '../configs';\nimport {\n  setActiveBoard,\n  setActiveItem,\n  setActiveList,\n  updateItem,\n} from '../models';\nimport {TextInputWithIcons} from './TextInputWithIcons';\n\ntype ListItemProps = {\n  itemId: string;\n  listId: string;\n};\n\nexport const ListItem = memo(function ListItem({\n  itemId,\n  listId,\n}: ListItemProps) {\n  const item = useRootSelector((s) => s.completeItem.items[itemId]);\n  const textInputRef = useRef<OriginalTextInput | null>(null);\n  const dispatch = useRootDispatch();\n  const {navigate} = useNavigation();\n  const color = useColor();\n\n  const onItemTitleClose = useCallback(() => {\n    Keyboard.dismiss();\n  }, []);\n\n  const onItemTitleSubmit = useCallback(\n    (title: string) => {\n      dispatch(updateItem({...item, title}));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onItemNav = useCallback(() => {\n    if (!item.childBoardId)\n      throw new Error('item does not have a board to navigate to');\n    dispatch(setActiveBoard(item.childBoardId));\n    navigate('board');\n  }, [dispatch, item.childBoardId, navigate]);\n\n  const onItemDetails = useCallback(() => {\n    dispatch(setActiveItem(itemId));\n    dispatch(setActiveList(listId));\n    navigate('item-detail');\n  }, [dispatch, itemId, listId, navigate]);\n\n  const onItemLongPress = useCallback(() => undefined, []);\n\n  const onItemPress = useCallback(() => {\n    textInputRef.current?.focus();\n  }, []);\n\n  const icons = [\n    {name: 'close', onPress: onItemTitleClose, focus: true},\n    {\n      name: 'send',\n      onPress: onItemTitleSubmit,\n      color: color.primary,\n      focus: true,\n      required: true,\n    },\n    {name: 'dots-horizontal', onPress: onItemDetails},\n    {name: 'chevron-right', onPress: onItemNav, hidden: !item.childBoardId},\n  ];\n\n  return (\n    <TouchableOpacity\n      activeOpacity={1}\n      key={item.id}\n      onLongPress={onItemLongPress}\n      onPress={onItemPress}\n      style={{\n        flex: 1,\n        borderRadius: config.borderRadius,\n        margin: config.padding / 2,\n        backgroundColor: color.surface,\n        flexDirection: 'row',\n      }}>\n      <TextInputWithIcons\n        backgroundColor={color.surface}\n        icons={icons}\n        onRef={textInputRef}\n        onSubmit={onItemTitleSubmit}\n        placeholder=\"Item name...\"\n        pointerEvents=\"none\"\n        value={item.title}\n      />\n    </TouchableOpacity>\n  );\n});\n","import React, {memo, useCallback, useRef} from 'react';\nimport {FlatList, ListRenderItem} from 'react-native';\nimport {useRootSelector} from '../../../utils';\nimport {ListItem} from './ListItem';\n\ntype ListItemsProps = {\n  listId: string;\n  maxHeight?: number;\n};\n\nexport const ListItems = memo(function ListItems({\n  listId,\n  maxHeight,\n}: ListItemsProps) {\n  const listItems = useRootSelector((s) => s.completeList.items[listId].items);\n  const cardsRef = useRef<FlatList | null>(null);\n  const cardsLength = useRef(listItems.length);\n\n  const onKeyExtractor = useCallback((item) => item, []);\n\n  const onCardSizeChange = useCallback(() => {\n    if (listItems.length > cardsLength.current) {\n      cardsRef.current?.scrollToEnd();\n      cardsLength.current = listItems.length;\n    }\n  }, [listItems.length]);\n\n  const onRenderItem: ListRenderItem<string> = useCallback(\n    ({item}) => {\n      return <ListItem itemId={item} key={item} listId={listId} />;\n    },\n    [listId],\n  );\n\n  return (\n    <FlatList\n      data={listItems}\n      keyExtractor={onKeyExtractor}\n      keyboardShouldPersistTaps=\"handled\"\n      onContentSizeChange={onCardSizeChange}\n      ref={cardsRef}\n      renderItem={onRenderItem}\n      showsVerticalScrollIndicator={false}\n      style={{maxHeight}}\n    />\n  );\n});\n","import React, {memo} from 'react';\nimport {View} from 'react-native';\nimport {AddItem} from './AddItem';\nimport {Card} from './Card';\nimport {ListHeader} from './ListHeader';\nimport {ListItems} from './ListItems';\n\ntype ListProps = {\n  listWidth?: number;\n  listId: string;\n  boardId: string;\n  listMaxHeight: number;\n  orientation?: 'vertical' | 'horizontal';\n  title: string;\n  placeholder: string;\n};\n\nexport const List = memo(function List({\n  listId,\n  orientation,\n  listWidth,\n  listMaxHeight,\n  title,\n  placeholder,\n  boardId,\n}: ListProps) {\n  const margin = orientation === 'horizontal' ? 'right' : 'bottom';\n  return (\n    <View>\n      <Card margin={margin} width={listWidth}>\n        <ListHeader boardId={boardId} listId={listId} />\n        <ListItems listId={listId} maxHeight={listMaxHeight} />\n        <AddItem listId={listId} placeholder={placeholder} title={title} />\n      </Card>\n    </View>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {FlatList} from 'react-native';\nimport {useRootSelector} from '../../../utils';\nimport {config} from '../configs';\nimport {AddList} from './AddList';\nimport {List} from './List';\n\ntype BoardProps = {\n  boardId: string;\n  listMaxHeight: number;\n  listWidth: number;\n};\n\nexport const Board = memo(function Board({\n  boardId,\n  listMaxHeight,\n  listWidth,\n}: BoardProps) {\n  const listSize = listWidth + config.padding;\n  const board = useRootSelector((s) => s.completeBoard.items[boardId]);\n  const getItemId = useCallback((item) => item, []);\n\n  const getItemLayout = useCallback(\n    (_, index) => ({\n      length: listSize,\n      offset: listSize * index,\n      index,\n    }),\n    [listSize],\n  );\n\n  const renderAddList = useCallback(() => {\n    return (\n      <AddList\n        boardId={boardId}\n        placeholder=\"List title...\"\n        title=\"Add list\"\n        width={listWidth}\n      />\n    );\n  }, [boardId, listWidth]);\n\n  const renderList = useCallback(\n    ({item}) => {\n      return (\n        <List\n          boardId={boardId}\n          key={item}\n          listId={item}\n          listMaxHeight={listMaxHeight}\n          listWidth={listWidth}\n          orientation=\"horizontal\"\n          placeholder=\"Item title...\"\n          title=\"Add item\"\n        />\n      );\n    },\n    [boardId, listMaxHeight, listWidth],\n  );\n\n  return (\n    <FlatList\n      ListFooterComponent={renderAddList}\n      contentContainerStyle={{padding: config.padding}}\n      data={board.lists}\n      decelerationRate=\"fast\"\n      getItemLayout={getItemLayout}\n      horizontal\n      keyExtractor={getItemId}\n      keyboardShouldPersistTaps=\"handled\"\n      renderItem={renderList}\n      showsHorizontalScrollIndicator={false}\n      snapToAlignment=\"center\"\n      snapToInterval={listSize}\n      style={{height: '100%'}}\n    />\n  );\n});\n","import React, {memo} from 'react';\nimport {View} from 'react-native';\nimport {Button, Modal, Text} from '../../../components';\nimport {Theme} from '../../../utils';\n\ntype DeleteModalProps = {\n  onDelete: () => void;\n  onCancel: () => void;\n};\n\nexport const DeleteModal = memo(function DeleteModal({\n  onCancel,\n  onDelete,\n}: DeleteModalProps) {\n  return (\n    <Modal onBackgroundPress={onCancel} overlayColor widthPercent={0.5}>\n      <View style={{alignItems: 'center'}}>\n        <Text\n          style={{paddingBottom: Theme.padding.p02}}\n          title=\"Are you sure?\"\n          type=\"h4\"\n        />\n        <View style={{flexDirection: 'row', justifyContent: 'center'}}>\n          <Button color=\"secondary\" onPress={onCancel} title=\"cancel\" />\n          <Button onPress={onDelete} title=\"delete\" />\n        </View>\n      </View>\n    </Modal>\n  );\n});\n","import React, {memo} from 'react';\nimport {View} from 'react-native';\nimport {RelativeDate, Text} from '../../../components';\nimport {Card} from './Card';\n\ntype ItemContextProps = {\n  userId: string;\n  createdAt: number;\n  updatedAt: number;\n};\n\nexport const ItemContext = memo(function ItemContext({\n  userId,\n  createdAt,\n  updatedAt,\n}: ItemContextProps) {\n  return (\n    <View>\n      <Card margin=\"bottom\">\n        <View style={{flex: 1, flexDirection: 'row'}}>\n          <Text emphasis=\"medium\" title=\"Creator: \" />\n          <Text title={userId} />\n        </View>\n        <View style={{flexDirection: 'row'}}>\n          <Text emphasis=\"medium\" title=\"Created: \" />\n          <RelativeDate date={createdAt} />\n        </View>\n        <View style={{flexDirection: 'row'}}>\n          <Text emphasis=\"medium\" title=\"Updated: \" />\n          <RelativeDate date={updatedAt} />\n        </View>\n      </Card>\n    </View>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {Keyboard, View} from 'react-native';\nimport {useColor} from '../../../hooks';\nimport {Card} from './Card';\nimport {TextInputWithIcons} from './TextInputWithIcons';\n\ntype ItemEditProps = {\n  title: string;\n  description?: string;\n  placeholder: string;\n  onSubmit: (type: string) => (text: string) => void;\n};\n\nexport const ItemEdit = memo(function ItemEdit({\n  title,\n  description = '',\n  placeholder,\n  onSubmit,\n}: ItemEditProps) {\n  const color = useColor();\n  const onClose = useCallback(() => Keyboard.dismiss(), []);\n\n  const icons = useCallback(\n    (type: string) => [\n      {name: 'close', onPress: onClose, focus: true},\n      {\n        name: 'send',\n        onPress: onSubmit(type),\n        color: color.primary,\n        focus: true,\n        required: true,\n      },\n    ],\n    [color.primary, onClose, onSubmit],\n  );\n\n  return (\n    <View>\n      <Card margin=\"bottom\">\n        <TextInputWithIcons\n          icons={icons('title')}\n          onSubmit={onSubmit('title')}\n          placeholder={`${placeholder} title...`}\n          type=\"h4\"\n          value={title}\n        />\n      </Card>\n      <Card margin=\"bottom\">\n        <TextInputWithIcons\n          icons={icons('description')}\n          multiline\n          onSubmit={onSubmit('description')}\n          placeholder={`${placeholder} details...`}\n          value={description || ''}\n        />\n      </Card>\n    </View>\n  );\n});\n","import {v4} from 'uuid';\nimport {Board, Item, List, User} from '../../models';\n\ntype GetDefaultUserTemplate = {\n  user: User;\n  boards: Board[];\n  lists: List[];\n  items: Item[];\n};\n\nconst date = Date.now();\nconst userId = v4();\nconst defaults = () => ({\n  id: v4(),\n  userId,\n  active: true,\n  createdAt: date,\n  updatedAt: date,\n});\n\nexport const getDefaultUserTemplate = (): GetDefaultUserTemplate => {\n  // inbox\n  const inboxItems: Item[] = [\n    {...defaults(), title: 'do dishes'},\n    {...defaults(), title: 'schedule meeting with Jim'},\n    {...defaults(), title: 'run 4 miles'},\n    {...defaults(), title: 'change oil'},\n    {...defaults(), title: 'what is the best mediation'},\n    {...defaults(), title: 'record Kelly birthday on Sep 22'},\n    {...defaults(), title: 'drink water'},\n    {...defaults(), title: 'intensity + focus = deep work'},\n    {...defaults(), title: 'put $20 in phone'},\n    {...defaults(), title: 'clear emails'},\n  ];\n  const inboxList: List = {\n    ...defaults(),\n    default: true,\n    title: 'Inbox',\n    items: inboxItems.map((item) => item.id),\n  };\n  const inboxBoard: Board = {\n    ...defaults(),\n    title: 'Inbox',\n    lists: [inboxList.id],\n  };\n\n  // sub category\n  const homeItems: Item[] = [\n    {...defaults(), title: 'clean desk'},\n    {...defaults(), title: 'clean room'},\n    {...defaults(), title: 'walk dog'},\n    {...defaults(), title: 'brush teeth'},\n    {...defaults(), title: 'do laundry'},\n    {...defaults(), title: 'fix sink'},\n  ];\n  const homeLists: List[] = [\n    {\n      ...defaults(),\n      default: false,\n      title: 'Backlog',\n      items: homeItems.map((item) => item.id),\n    },\n    {...defaults(), default: false, title: 'Todo', items: []},\n    {...defaults(), default: false, title: 'In Progress', items: []},\n    {...defaults(), default: false, title: 'Done', items: []},\n  ];\n  const homeBoard: Board = {\n    ...defaults(),\n    title: 'Home',\n    lists: homeLists.map((item) => item.id),\n  };\n\n  // category\n  const projectItems: Item[] = [\n    {...defaults(), title: 'at home', childBoardId: homeBoard.id},\n    {...defaults(), title: 'at town'},\n    {...defaults(), title: 'at work'},\n    {...defaults(), title: 'at gym'},\n    {...defaults(), title: 'app release'},\n  ];\n  const projectsList: List = {\n    ...defaults(),\n    title: 'Projects',\n    default: true,\n    items: projectItems.map((item) => item.id),\n  };\n  const listsItems: Item[] = [\n    {...defaults(), title: 'meeting notes'},\n    {...defaults(), title: 'book summaries'},\n    {...defaults(), title: 'gift ideas'},\n    {...defaults(), title: 'checklists'},\n    {...defaults(), title: 'code languages'},\n  ];\n  const listsList: List = {\n    ...defaults(),\n    title: 'Lists',\n    default: true,\n    items: listsItems.map((item) => item.id),\n  };\n  const categoryBoard: Board = {\n    ...defaults(),\n    title: 'Categories',\n    lists: [projectsList.id, listsList.id],\n  };\n\n  // user\n  const user: User = {\n    ...defaults(),\n    id: userId,\n    name: 'Bob Smith',\n    boards: [inboxBoard.id, categoryBoard.id],\n  };\n\n  return {\n    user,\n    boards: [homeBoard, inboxBoard, categoryBoard],\n    lists: [inboxList, ...homeLists, projectsList, listsList],\n    items: [...inboxItems, ...homeItems, ...projectItems, ...listsItems],\n  };\n};\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback} from 'react';\nimport {Button, Modal, Text} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {Theme, useRootDispatch} from '../../../../utils';\nimport {Card} from '../../components';\nimport {\n  createBoard,\n  createItem,\n  createList,\n  createUser,\n  removeUser,\n  setActiveUser,\n} from '../../models';\nimport {getDefaultUserTemplate} from './factory';\n\n// TODO: figure out a place for this\n// TODO: add reminders\n// TODO: add profile information\n// TODO: add payment\n\nexport const Account = memo(function Account() {\n  const color = useColor();\n  const dispatch = useRootDispatch();\n  const {goBack, navigate} = useNavigation();\n  const navBack = useCallback(() => goBack(), [goBack]);\n\n  const onLogin = useCallback(() => {\n    const {user, boards, lists, items} = getDefaultUserTemplate();\n    items.map((item) => dispatch(createItem(item)));\n    lists.map((list) => dispatch(createList(list)));\n    boards.map((board) => dispatch(createBoard(board)));\n    dispatch(createUser(user));\n    goBack();\n  }, [dispatch, goBack]);\n  const onLogout = useCallback(() => {\n    dispatch(removeUser());\n    navigate('main');\n  }, [dispatch, navigate]);\n  const onSetActive = useCallback(() => {\n    dispatch(setActiveUser(true));\n  }, [dispatch]);\n\n  const onNavToAdmin = useCallback(() => navigate('admin'), [navigate]);\n\n  return (\n    <Modal backgroundColor={color.surface} onBackgroundPress={navBack}>\n      <Card>\n        <Text\n          style={{paddingBottom: Theme.padding.p04}}\n          title=\"Profile\"\n          type=\"h3\"\n        />\n        <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n      </Card>\n      <Card>\n        <Text\n          style={{paddingBottom: Theme.padding.p04}}\n          title=\"Reminders\"\n          type=\"h3\"\n        />\n        <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n      </Card>\n      <Card>\n        <Text\n          style={{paddingBottom: Theme.padding.p04}}\n          title=\"Payment\"\n          type=\"h3\"\n        />\n        <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n      </Card>\n      <Card>\n        <Text\n          style={{paddingBottom: Theme.padding.p04}}\n          title=\"Feedback\"\n          type=\"h3\"\n        />\n        <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n      </Card>\n      <Button onPress={onLogin} title=\"login\" />\n      <Button onPress={onLogout} title=\"logout\" />\n      <Button onPress={onSetActive} title=\"set active\" />\n      <Button onPress={onNavToAdmin} title=\"go to admin\" />\n    </Modal>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useState} from 'react';\nimport {LayoutChangeEvent, Platform, View} from 'react-native';\nimport {Button, KeyboardHandler, Screen, Text} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {useRootSelector} from '../../../../utils';\nimport {Card, List} from '../../components';\nimport {config} from '../../configs';\nimport {getInboxBoardId} from '../../models';\n\nconst initialState = {container: 0, button: 0};\nexport const Capture = memo(function Capture() {\n  const color = useColor();\n  const {navigate} = useNavigation();\n\n  const keyboardHeight = useRootSelector(\n    (state) => state.device.keyboardHeight,\n  );\n  const [dimensions, setDimensions] = useState(initialState);\n  const android = Platform.OS === 'android';\n\n  const listHeight =\n    keyboardHeight === 0\n      ? dimensions.container -\n        dimensions.button -\n        (android ? config.padding * 8 : config.padding * 10)\n      : dimensions.container -\n        keyboardHeight -\n        (android ? config.padding * 3 : config.padding * 4);\n\n  const boardId = useRootSelector(getInboxBoardId);\n  const listId = useRootSelector(\n    (s) => s.completeBoard.items[boardId].lists[0],\n  );\n  const noListItems = useRootSelector(\n    (s) => s.completeList.items[listId].items.length === 0,\n  );\n\n  const onOrganize = useCallback(() => undefined, []);\n\n  const onLayout = useCallback(\n    (key: keyof typeof initialState) => (event: LayoutChangeEvent) => {\n      const {height} = event.nativeEvent.layout;\n      const {container, button} = dimensions;\n      const preventMultipleUpdates = container > 0 && button > 0;\n      if (preventMultipleUpdates) return;\n      setDimensions((p) => ({...p, [key]: height}));\n    },\n    [dimensions],\n  );\n\n  const navToAccount = useCallback(() => navigate('account'), [navigate]);\n\n  return (\n    <Screen onRightPress={navToAccount} rightIcon=\"account\" title=\"Capture\">\n      <KeyboardHandler\n        backgroundColor={color.surface}\n        onLayout={onLayout('container')}\n        render={dimensions.container > 0}>\n        {listId ? (\n          <View style={{height: '100%', padding: config.padding}}>\n            <List\n              boardId={boardId}\n              listId={listId}\n              listMaxHeight={listHeight}\n              placeholder=\"Item title...\"\n              title=\"Add item\"\n            />\n            <Card onLayout={onLayout('button')}>\n              <Button\n                center\n                color=\"primary\"\n                disable={noListItems}\n                onPress={onOrganize}\n                title=\"Organize\"\n              />\n            </Card>\n          </View>\n        ) : (\n          <Text title=\"missing account\" />\n        )}\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useState} from 'react';\nimport {Keyboard, View} from 'react-native';\nimport {Button, Modal, Text} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {useRootDispatch, useRootSelector} from '../../../../utils';\nimport {Card, DeleteModal, ItemContext, ItemEdit} from '../../components';\nimport {removeItem, updateItem, updateListRemoveItem} from '../../models';\n\n// TODO: update does not go to previous screen\n\nexport const ItemDetail = memo(function ItemDetail() {\n  const dispatch = useRootDispatch();\n  const {goBack} = useNavigation();\n  const color = useColor();\n  const navBack = useCallback(() => goBack(), [goBack]);\n  const itemId = useRootSelector((s) => s.completeItem.active);\n  const listId = useRootSelector((s) => s.completeList.active);\n  const item = useRootSelector((s) => s.completeItem.items[itemId || '']);\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  const onItemDelete = useCallback(() => {\n    if (!itemId || !listId)\n      throw new Error('missing listId or itemId on item detail screen');\n    dispatch(removeItem(itemId));\n    dispatch(updateListRemoveItem({listId, itemId}));\n    setDeleteModal(false);\n    goBack();\n  }, [dispatch, goBack, itemId, listId]);\n\n  const onItemSubmit = useCallback(\n    (type: string) => (text: string) => {\n      dispatch(updateItem({...item, [type]: text}));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onDeletePress = useCallback(() => setDeleteModal(true), []);\n  const onDeleteClose = useCallback(() => setDeleteModal(false), []);\n\n  return !item ? null : (\n    <>\n      <Modal backgroundColor={color.surface} onBackgroundPress={navBack}>\n        {!item ? (\n          <Text title=\"missing item\" />\n        ) : (\n          <View>\n            <ItemEdit\n              description={item.description}\n              onSubmit={onItemSubmit}\n              placeholder=\"Item\"\n              title={item.title}\n            />\n            <Card margin=\"bottom\">\n              <Text title=\"Reminders\" />\n            </Card>\n            <Card margin=\"bottom\">\n              <Text title=\"Tags\" />\n            </Card>\n            <Card margin=\"bottom\">\n              <Text title=\"Comments\" />\n            </Card>\n            <ItemContext\n              createdAt={item.createdAt}\n              updatedAt={item.updatedAt}\n              userId={item.userId}\n            />\n            <Card>\n              <Button\n                center\n                color=\"danger\"\n                onPress={onDeletePress}\n                title=\"delete\"\n              />\n            </Card>\n          </View>\n        )}\n      </Modal>\n      {!deleteModal ? null : (\n        <DeleteModal onCancel={onDeleteClose} onDelete={onItemDelete} />\n      )}\n    </>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback} from 'react';\nimport {Button, Carousel, Screen} from '../../../../components';\nimport {Slide} from '../../../../components/Carousel/types';\nimport {useColor} from '../../../../hooks';\n\nexport const Landing = memo(function Landing() {\n  const {navigate} = useNavigation();\n  const color = useColor();\n  const navPortfolioLogin = useCallback(() => navigate('account'), [navigate]);\n\n  const slides: Slide[] = [\n    {id: '1', text: 'hello', color: color.info},\n    {id: '2', text: 'bob', color: color.warning},\n    {id: '3', text: 'steve', color: color.success},\n    {id: '4', text: 'jill', color: color.brand},\n  ];\n\n  return (\n    <Screen title=\"Landing\">\n      <Carousel slides={slides} />\n      <Button center onPress={navPortfolioLogin} title=\"Login\" />\n    </Screen>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useState} from 'react';\nimport {Keyboard, View} from 'react-native';\nimport {Button, Modal, Text} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {useRootDispatch, useRootSelector} from '../../../../utils';\nimport {Card, DeleteModal, ItemEdit} from '../../components';\nimport {ItemContext} from '../../components/ItemContext';\nimport {removeList, updateBoardRemoveList, updateList} from '../../models';\n\n// TODO: update does not go to previous screen\n\nexport const ListDetail = memo(function ListDetail() {\n  const dispatch = useRootDispatch();\n  const {goBack} = useNavigation();\n  const color = useColor();\n  const navBack = useCallback(() => goBack(), [goBack]);\n  const boardId = useRootSelector((s) => s.completeBoard.active);\n  const listId = useRootSelector((s) => s.completeList.active);\n  const list = useRootSelector((s) => s.completeList.items[listId || '']);\n  const [deleteModal, setDeleteModal] = useState(false);\n  if (!boardId || !listId)\n    throw new Error('missing listId or boardId on list detail screen');\n\n  const onListDelete = useCallback(() => {\n    dispatch(removeList(listId));\n    dispatch(updateBoardRemoveList({listId, boardId}));\n    setDeleteModal(false);\n    goBack();\n  }, [boardId, dispatch, goBack, listId]);\n\n  const onDeletePress = useCallback(() => setDeleteModal(true), []);\n  const onDeleteClose = useCallback(() => setDeleteModal(false), []);\n\n  const onListSubmit = useCallback(\n    (type: string) => (text: string) => {\n      dispatch(updateList({...list, [type]: text}));\n      Keyboard.dismiss();\n    },\n    [dispatch, list],\n  );\n\n  return !list ? null : (\n    <>\n      <Modal backgroundColor={color.surface} onBackgroundPress={navBack}>\n        {!list ? (\n          <Text title=\"missing list\" />\n        ) : (\n          <View>\n            <ItemEdit\n              description={list.description}\n              onSubmit={onListSubmit}\n              placeholder=\"List\"\n              title={list.title}\n            />\n            <ItemContext\n              createdAt={list.createdAt}\n              updatedAt={list.updatedAt}\n              userId={list.userId}\n            />\n            {list.default ? null : (\n              <Card>\n                <Button\n                  center\n                  color=\"danger\"\n                  onPress={onDeletePress}\n                  title=\"delete\"\n                />\n              </Card>\n            )}\n          </View>\n        )}\n      </Modal>\n      {!deleteModal ? null : (\n        <DeleteModal onCancel={onDeleteClose} onDelete={onListDelete} />\n      )}\n    </>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useState} from 'react';\nimport {LayoutChangeEvent, Platform} from 'react-native';\nimport {KeyboardHandler, Screen, Text} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {getSmallestDimension} from '../../../../models';\nimport {useRootSelector} from '../../../../utils';\nimport {Board} from '../../components';\nimport {config} from '../../configs';\n\n// TODO: figure out centering of list\n\nexport const Project = memo(function Project() {\n  const {goBack} = useNavigation();\n  const color = useColor();\n  const screenWidth = useRootSelector(getSmallestDimension);\n  const boardId = useRootSelector((s) => s.completeBoard.active);\n  const listWidth = screenWidth * 0.7;\n  const [container, setContainer] = useState(0);\n  const android = Platform.OS === 'android';\n  const keyboardHeight = useRootSelector(\n    (state) => state.device.keyboardHeight,\n  );\n\n  const listMaxHeight =\n    keyboardHeight === 0\n      ? container - (android ? config.padding * 8 : config.padding * 12)\n      : container -\n        keyboardHeight -\n        (android ? config.padding * 3 : config.padding * 7);\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      const {height} = event.nativeEvent.layout;\n      if (container > 0) return;\n\n      setContainer(height);\n    },\n    [container],\n  );\n\n  const navBack = useCallback(() => {\n    goBack();\n  }, [goBack]);\n\n  return (\n    <Screen onLeftPress={navBack} title=\"Focus\">\n      {!boardId ? (\n        <Text title=\"missing board\" />\n      ) : (\n        <KeyboardHandler\n          backgroundColor={color.surface}\n          onLayout={onLayout}\n          render={container > 0}>\n          <Board\n            boardId={boardId}\n            listMaxHeight={listMaxHeight}\n            listWidth={listWidth}\n          />\n        </KeyboardHandler>\n      )}\n    </Screen>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useState} from 'react';\nimport {LayoutChangeEvent, View} from 'react-native';\nimport {KeyboardHandler, Screen} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {useRootSelector} from '../../../../utils';\nimport {List} from '../../components';\nimport {config} from '../../configs';\nimport {getCategoryBoardId} from '../../models';\n\n// TODO: add journal\n// TODO: add historical data\n// TODO: add purpose\n// TODO: add goals\n\n// TODO: render as <Board />\n\nexport const Projects = memo(function Projects() {\n  const color = useColor();\n  const {navigate} = useNavigation();\n  const boardId = useRootSelector(getCategoryBoardId);\n  const listIds = useRootSelector((s) => s.completeBoard.items[boardId].lists);\n  const [dimensions, setDimensions] = useState(0);\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      const {height} = event.nativeEvent.layout;\n      if (dimensions > 0) return;\n\n      setDimensions(height);\n    },\n    [dimensions],\n  );\n\n  const maxHeight = dimensions / 2 - config.padding * 10;\n\n  const navToAccount = useCallback(() => navigate('account'), [navigate]);\n\n  return (\n    <Screen onRightPress={navToAccount} rightIcon=\"account\" title=\"Projects\">\n      <KeyboardHandler\n        backgroundColor={color.surface}\n        onLayout={onLayout}\n        render={dimensions > 0}>\n        <View style={{padding: config.padding}}>\n          {listIds.map((listId) => (\n            <List\n              boardId={boardId}\n              key={listId}\n              listId={listId}\n              listMaxHeight={maxHeight}\n              placeholder=\"List title...\"\n              title=\"Add list\"\n            />\n          ))}\n        </View>\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import {scaleLinear, scaleTime} from 'd3-scale';\nimport * as shape from 'd3-shape';\nimport * as React from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport Svg, {Defs, LinearGradient, Path, Stop} from 'react-native-svg';\n\ninterface DataPoint {\n  date: number;\n  value: number;\n}\n\ninterface GraphProps {\n  data: DataPoint[];\n  width: number;\n  height: number;\n}\n\nconst strokeWidth = 4;\nconst padding = strokeWidth / 2;\nconst getDomain = (domain: number[]) => [\n  Math.min(...domain),\n  Math.max(...domain),\n];\n\nexport const Graph = ({\n  data,\n  width,\n  height,\n}: GraphProps): React.ReactElement => {\n  const scaleX = scaleTime()\n    .domain(getDomain(data.map((d) => d.date)))\n    .range([0, width]);\n  const scaleY = scaleLinear()\n    .domain(getDomain(data.map((d) => d.value)))\n    .range([height - padding, padding]);\n  const d = shape\n    .line<DataPoint>()\n    .x((p) => scaleX(p.date))\n    .y((p) => scaleY(p.value))\n    .curve(shape.curveBasis)(data) as string;\n  return (\n    <View style={{width, height}}>\n      <Svg style={StyleSheet.absoluteFill}>\n        <Defs>\n          <LinearGradient id=\"gradient\" x1=\"50%\" x2=\"50%\" y1=\"0%\" y2=\"100%\">\n            <Stop offset=\"0%\" stopColor=\"#cee3f9\" />\n            <Stop offset=\"80%\" stopColor=\"#ddedfa\" />\n            <Stop offset=\"100%\" stopColor=\"#feffff\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d={`${d}L ${width} ${height} L 0 ${height}`}\n          fill=\"url(#gradient)\"\n        />\n        <Path fill=\"transparent\" stroke=\"#3977e3\" {...{d, strokeWidth}} />\n      </Svg>\n    </View>\n  );\n};\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback} from 'react';\nimport {Dimensions, ScrollView, View} from 'react-native';\nimport {Calendar, Screen, Text} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {Theme} from '../../../../utils';\nimport {Card} from '../../components/Card';\nimport {config} from '../../configs';\nimport {Graph} from './Graph';\n\n// TODO: add journal\n// TODO: add historical data\n// TODO: add purpose\n// TODO: add goals\n\ntype TitleProps = {name: string};\n\nconst Title = ({name}: TitleProps) => {\n  return (\n    <Text\n      emphasis=\"high\"\n      style={{paddingBottom: config.padding}}\n      title={name}\n      type=\"h4\"\n    />\n  );\n};\n\nconst data = [\n  {date: new Date(2018, 9, 1).getTime(), value: 0},\n  {date: new Date(2018, 9, 16).getTime(), value: 0},\n  {date: new Date(2018, 9, 17).getTime(), value: 200},\n  {date: new Date(2018, 10, 1).getTime(), value: 200},\n  {date: new Date(2018, 10, 2).getTime(), value: 300},\n  {date: new Date(2018, 10, 5).getTime(), value: 300},\n];\n\nexport const Reflect = memo(function Reflect() {\n  const color = useColor();\n  const {navigate} = useNavigation();\n  const navToAccount = useCallback(() => navigate('account'), [navigate]);\n\n  return (\n    <Screen onRightPress={navToAccount} rightIcon=\"account\" title=\"Reflect\">\n      <ScrollView\n        contentContainerStyle={{\n          padding: Theme.padding.p04,\n          backgroundColor: color.surface,\n        }}\n        style={{backgroundColor: color.surface}}>\n        <Card>\n          <View>\n            <Title name=\"Purpose\" />\n            <Text title=\"Make a significant positive difference in global productivity\" />\n          </View>\n        </Card>\n        <Card>\n          <View>\n            <Title name=\"Goals\" />\n            <Text title=\"Top 3\" />\n            <Text title=\"Deep Focus\" />\n            <Text title=\"Smile\" />\n            <Text title=\"1 More Rep\" />\n          </View>\n        </Card>\n        <Card>\n          <View>\n            <Title name=\"Review (Progress)\" />\n            <View\n              style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n              <Graph\n                data={data}\n                height={200}\n                width={Dimensions.get('window').width - config.padding * 4}\n              />\n            </View>\n          </View>\n        </Card>\n        <Card>\n          <View>\n            <Title name=\"Reflect (Journal)\" />\n            <Calendar />\n          </View>\n        </Card>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import {\n  BottomTabBarOptions,\n  createBottomTabNavigator,\n} from '@react-navigation/bottom-tabs';\nimport {Route} from '@react-navigation/native';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport React, {memo, useCallback} from 'react';\nimport {Icon, Modal, Notification} from '../../components';\nimport {useColor} from '../../hooks';\nimport {rootMode, rootScreenOptions} from '../../providers/Navigation/configs';\nimport {useRootSelector} from '../../utils';\nimport {\n  Account,\n  Capture,\n  ItemDetail,\n  Landing,\n  ListDetail,\n  Project,\n  Projects,\n  Reflect,\n} from './screens';\n\nconst noHeader: StackNavigationOptions = {headerShown: false};\nconst RootTab = createBottomTabNavigator();\nconst RootStack = createStackNavigator();\nconst ProjectsStack = createStackNavigator();\n\ntype Tabs = 'capture' | 'focus' | 'reflect';\ntype TabIcons = {\n  [key in Tabs]: {focused: string; unfocused: string};\n};\n\nconst tabIcons: TabIcons = {\n  capture: {\n    focused: 'pencil-plus-outline',\n    unfocused: 'pencil-plus-outline',\n  },\n  focus: {\n    focused: 'checkbox-multiple-marked-outline',\n    unfocused: 'checkbox-multiple-marked-outline',\n  },\n  reflect: {focused: 'finance', unfocused: 'finance'},\n};\n\ntype ScreenOptionsProps = {\n  route: Route<string, Record<string, unknown> | undefined>;\n};\n\ntype TabBarIconProps = {\n  focused: boolean;\n  size: number;\n};\n\nconst Focus = () => {\n  return (\n    <ProjectsStack.Navigator screenOptions={noHeader}>\n      <ProjectsStack.Screen component={Projects} name=\"boards\" />\n      <ProjectsStack.Screen component={Project} name=\"board\" />\n    </ProjectsStack.Navigator>\n  );\n};\n\nconst Tabs = () => {\n  const color = useColor();\n  const tabBarOptions: BottomTabBarOptions = {\n    keyboardHidesTabBar: true,\n    activeTintColor: color.text,\n    inactiveTintColor: color.secondary,\n    showLabel: false,\n  };\n  const screenOptions = useCallback(\n    ({route}: ScreenOptionsProps) => ({\n      tabBarIcon: function tabBarIcon({focused, size}: TabBarIconProps) {\n        const focus = focused ? 'focused' : 'unfocused';\n        const iconColor = focused ? color.text : color.secondary;\n        const name = (tabIcons as any)[route.name][focus];\n        return <Icon color={iconColor} name={name} size={size} />;\n      },\n    }),\n    [color],\n  );\n\n  return (\n    <RootTab.Navigator\n      screenOptions={screenOptions as any}\n      tabBarOptions={tabBarOptions}>\n      <RootTab.Screen component={Capture} name=\"capture\" />\n      <RootTab.Screen component={Focus} name=\"focus\" />\n      <RootTab.Screen component={Reflect} name=\"reflect\" />\n    </RootTab.Navigator>\n  );\n};\n\nexport default memo(function Complete() {\n  const user = useRootSelector((s) => s.completeUser);\n  const Main = user ? Tabs : Landing;\n  return (\n    <RootStack.Navigator mode={rootMode} screenOptions={rootScreenOptions}>\n      <RootStack.Screen component={Main} name=\"main\" />\n      <RootStack.Screen component={Account} name=\"account\" />\n      <RootStack.Screen component={Notification} name=\"notification\" />\n      <RootStack.Screen component={Modal} name=\"alert\" />\n      <RootStack.Screen component={ItemDetail} name=\"item-detail\" />\n      <RootStack.Screen component={ListDetail} name=\"list-detail\" />\n    </RootStack.Navigator>\n  );\n});\n\n/*\n\n# Data\n\n- user\n-> collections [projects, lists]\n-> boards [home, work, town] | [meeting notes, book summaries, checklists]\n-> lists [backlog, todo, in progress, done] | [draft, final]\n-> item [find comb, clear emails, daily standup]\n\n# Screens\n\n## Capture\n\n### Inbox (list -> item -> details)\n- \"add grey list\" -> @app\n- \"find comb\" -> @home\n- \"clear emails\" -> @work\n- \"put $20 in phone\" -> @town\n- \"drink water\" -> @after-waking-up\n- \"intensity + focus = deep work\" -> book summaries\n\n## Organize\n\n### Projects (item -> lists -> item -> details )\n- @home -> (backlog, todo, in progress, done xx, done xx)\n- @town\n- @work\n- @gym\n- @app\n\n### Lists (item -> list -> item -> detail)\n- meeting notes\n - one-on-one\n - daily standup\n- book summaries\n - the one thing\n - getting things done\n - eat that frog\n- gift ideas\n - mom\n - dad\n - girlfriend\n- checklists\n - after waking up\n - after entering bathroom\n\n## Reflect\n\n### Purpose\n\n### Goals\n\n### Review (Progress)\n\n### Reflect (Journal)\n\n## Account\n\n### Profile\n\n### Notifications\n\n### Payment\n*/\n"],"sourceRoot":""}