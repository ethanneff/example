{"version":3,"sources":["../node_modules/react-native-web/dist/exports/Keyboard/index.js","apps/Playground/SearchBar/index.tsx"],"names":["Keyboard","addListener","remove","dismiss","dismissKeyboard","removeAllListeners","removeListener","data","id","name","memo","nav","useNav","color","useColor","useState","animation","Animated","Value","iconName","input","state","setState","useDriver","useNativeDriver","translateIcon","interpolate","inputRange","outputRange","fadeContainer","background","colorWithOpacity","secondary","styles","StyleSheet","create","container","flex","header","backgroundColor","light","height","Theme","padding","p20","justifyContent","p02","item","borderBottomColor","borderWidth","p06","textContainer","alignItems","flexDirection","textInput","marginLeft","animate","useCallback","value","timing","duration","toValue","start","changeIcon","iconChangeTimeout","setTimeout","clearTimeout","animationDuration","onSearchBarFocus","onSearchBarUnFocus","keyboardWillShow","Platform","OS","Config","os","ios","keyboardWillHide","keyboardDidShow","android","keyboardDidHide","useEffect","process","JEST_WORKER_ID","keyboardDidShowListener","keyboardDidHideListener","keyboardWillShowListener","keyboardWillHideListener","renderItem","style","title","type","keyExtractor","toString","onChangeText","prev","onLeftPress","to","View","transform","translateX","containerStyle","placeholder","removeError"],"mappings":"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","file":"static/js/16.f8a2f2c9.chunk.js","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport dismissKeyboard from '../../modules/dismissKeyboard';\nvar Keyboard = {\n  addListener: function addListener() {\n    return {\n      remove: function remove() {}\n    };\n  },\n  dismiss: function dismiss() {\n    dismissKeyboard();\n  },\n  removeAllListeners: function removeAllListeners() {},\n  removeListener: function removeListener() {}\n};\nexport default Keyboard;","import React, {memo, useCallback, useEffect, useState} from 'react';\nimport {\n  Animated,\n  FlatList,\n  Keyboard,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {Icon, Screen, Text, TextInput} from '../../../components';\nimport {Config, Theme, colorWithOpacity} from '../../../utils';\nimport {useColor, useNativeDriver, useNav} from '../../../hooks';\n\nconst data = [\n  {id: 1, name: '1'},\n  {id: 2, name: '2'},\n  {id: 3, name: '3'},\n  {id: 4, name: '4'},\n  {id: 5, name: '5'},\n  {id: 6, name: '6'},\n  {id: 7, name: '7'},\n  {id: 8, name: '8'},\n  {id: 9, name: '9'},\n  {id: 10, name: '10'},\n  {id: 11, name: '11'},\n  {id: 12, name: '12'},\n  {id: 13, name: '13'},\n  {id: 14, name: '14'},\n  {id: 15, name: '15'},\n  {id: 16, name: '16'},\n  {id: 17, name: '17'},\n  {id: 18, name: '18'},\n  {id: 19, name: '19'},\n];\n\ninterface State {\n  input: string;\n  iconName: string;\n  animation: Animated.Value;\n}\n\nconst iconSearch = 'magnify';\nconst iconBack = 'arrow-left';\nconst textInputPlaceHolder = 'Search';\nconst animationDuration = 400;\n\nexport default memo(function PlaygroundSearchbar() {\n  const nav = useNav();\n  const color = useColor();\n  const [state, setState] = useState<State>({\n    animation: new Animated.Value(0),\n    iconName: iconSearch,\n    input: '',\n  });\n  const useDriver = useNativeDriver();\n  const translateIcon = state.animation.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [1, -60, 1],\n  });\n  const fadeContainer = state.animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [color.background, colorWithOpacity(color.secondary)],\n  });\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n    },\n    header: {\n      backgroundColor: color.light,\n      height: Theme.padding.p20,\n      justifyContent: 'center',\n      padding: Theme.padding.p02,\n    },\n    item: {\n      borderBottomColor: color.light,\n      borderWidth: 0.2,\n      padding: Theme.padding.p06,\n    },\n    textContainer: {\n      alignItems: 'center',\n      backgroundColor: color.background,\n      flexDirection: 'row',\n      height: '100%',\n      padding: Theme.padding.p02,\n    },\n    textInput: {\n      flex: 1,\n      marginLeft: Theme.padding.p02,\n    },\n  });\n\n  const animate = useCallback(\n    (value: number) => {\n      Animated.timing(state.animation, {\n        duration: animationDuration,\n        toValue: value,\n        useNativeDriver: useDriver,\n      }).start();\n    },\n    [state.animation, useDriver],\n  );\n\n  const changeIcon = useCallback(\n    (iconName: string) => {\n      const iconChangeTimeout = setTimeout(() => {\n        clearTimeout(iconChangeTimeout);\n        setState({...state, iconName});\n      }, animationDuration / 2);\n    },\n    [state],\n  );\n\n  const onSearchBarFocus = useCallback(() => {\n    animate(1);\n    changeIcon(iconBack);\n  }, [animate, changeIcon]);\n\n  const onSearchBarUnFocus = useCallback(() => {\n    animate(0);\n    changeIcon(iconSearch);\n  }, [animate, changeIcon]);\n\n  const keyboardWillShow = useCallback(() => {\n    if (Platform.OS !== Config.os.ios) {\n      return;\n    }\n    onSearchBarFocus();\n  }, [onSearchBarFocus]);\n\n  const keyboardWillHide = useCallback(() => {\n    if (Platform.OS !== Config.os.ios) {\n      return;\n    }\n    onSearchBarUnFocus();\n  }, [onSearchBarUnFocus]);\n\n  const keyboardDidShow = useCallback(() => {\n    if (Platform.OS !== Config.os.android) {\n      return;\n    }\n    onSearchBarFocus();\n  }, [onSearchBarFocus]);\n\n  const keyboardDidHide = useCallback(() => {\n    if (Platform.OS !== Config.os.android) {\n      return;\n    }\n    onSearchBarUnFocus();\n  }, [onSearchBarUnFocus]);\n\n  useEffect(() => {\n    if (process.env.JEST_WORKER_ID) {\n      return undefined;\n    }\n    const keyboardDidShowListener = Keyboard.addListener(\n      'keyboardDidShow',\n      keyboardDidShow,\n    );\n    const keyboardDidHideListener = Keyboard.addListener(\n      'keyboardDidHide',\n      keyboardDidHide,\n    );\n    const keyboardWillShowListener = Keyboard.addListener(\n      'keyboardWillShow',\n      keyboardWillShow,\n    );\n    const keyboardWillHideListener = Keyboard.addListener(\n      'keyboardWillHide',\n      keyboardWillHide,\n    );\n    return () => {\n      keyboardDidShowListener.remove();\n      keyboardDidHideListener.remove();\n      keyboardWillShowListener.remove();\n      keyboardWillHideListener.remove();\n    };\n  }, [keyboardDidHide, keyboardDidShow, keyboardWillHide, keyboardWillShow]);\n\n  const renderItem = useCallback(\n    ({item}) => <Text style={styles.item} title={item.name} type=\"subtitle2\" />,\n    [styles.item],\n  );\n\n  const keyExtractor = useCallback((item) => item.id.toString(), []);\n\n  const onChangeText = useCallback(\n    (value: string) => setState((prev) => ({...prev, input: value})),\n    [],\n  );\n\n  return (\n    <Screen onLeftPress={nav.to('playground')}>\n      <View style={styles.header}>\n        <View style={styles.textContainer}>\n          <Animated.View\n            style={{\n              transform: [{translateX: translateIcon}],\n            }}>\n            <Icon name={state.iconName} />\n          </Animated.View>\n          <TextInput\n            containerStyle={styles.textInput}\n            onChangeText={onChangeText}\n            placeholder={textInputPlaceHolder}\n            removeError\n            value={state.input}\n          />\n        </View>\n      </View>\n      <Animated.View style={{flex: 1, backgroundColor: fadeContainer}}>\n        <FlatList\n          data={data}\n          keyExtractor={keyExtractor}\n          renderItem={renderItem}\n        />\n      </Animated.View>\n    </Screen>\n  );\n});\n"],"sourceRoot":""}