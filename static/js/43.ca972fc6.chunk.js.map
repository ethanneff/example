{"version":3,"sources":["apps/Playground/Main/index.tsx"],"names":["playgroundScreens","memo","nav","useNav","renderItem","useCallback","str","item","key","onPress","title","replace","keyExtractor","navBack","onLeftPress","data"],"mappings":"qGAAA,oDAMMA,EAAwC,CAC5C,oBACA,iBACA,iBACA,iBACA,kBACA,4BACA,kBACA,iBACA,wBACA,0BACA,sBACA,oBACA,sBACA,qBACA,mBACA,sBACA,uBACA,qBACA,mBACA,kBACA,sBACA,0BACA,sBACA,wBACA,yBACA,sBAKaC,0BAAK,WAClB,IAAMC,EAAMC,cACNC,EAAaC,uBACjB,gBALiBC,EAKfC,EAAF,EAAEA,KAAF,OACE,kBAAC,IAAD,CAAQC,IAAKD,EAAME,QAASP,EAAIK,GAAOG,OANxBJ,EAM2CC,EAN3BD,EAAIK,QAAQ,aAAc,UAQ3D,CAACT,IAEGU,EAAeP,uBAAY,SAACE,GAAD,OAA4BA,IAAM,IAC7DM,EAAUR,sBAAYH,EAAI,oBAAqB,CAACA,IACtD,OACE,kBAAC,IAAD,CAAQY,YAAaD,EAASH,MAAM,cAClC,kBAAC,IAAD,CACEK,KAAMf,EACNY,aAAcA,EACdR,WAAYA","file":"static/js/43.ca972fc6.chunk.js","sourcesContent":["import React, {memo, useCallback} from 'react';\nimport {FlatList} from 'react-native';\nimport {Button, Screen} from '../../../components';\nimport {NavigationScreen} from '../../../models';\nimport {useNav} from '../../../hooks';\n\nconst playgroundScreens: NavigationScreen[] = [\n  'playgroundArticle',\n  'playgroundBall',\n  'playgroundChat',\n  'playgroundDrag',\n  'playgroundFonts',\n  'playgroundImageCollection',\n  'playgroundInput',\n  'playgroundOKRs',\n  'playgroundPinchSpread',\n  'playgroundQuestionnaire',\n  'playgroundSearchBar',\n  'playgroundStartup',\n  'playgroundStopwatch',\n  'playgroundDarkMode',\n  'playgroundColors',\n  'playgroundSwipeFeed',\n  'playgroundGameOfLife',\n  'playgroundReminder',\n  'playgroundTinder',\n  'playgroundDrift',\n  'playgroundAppleMask',\n  'playgroundBouncingBalls',\n  'playgroundBejeweled',\n  'playgroundSlotMachine',\n  'playgroundFortuneWheel',\n  'playgroundAppleFit',\n];\n\nconst formatTitle = (str: string) => str.replace('playground', '');\n\nexport default memo(function Playground() {\n  const nav = useNav();\n  const renderItem = useCallback(\n    ({item}: {item: NavigationScreen}) => (\n      <Button key={item} onPress={nav(item)} title={formatTitle(item)} />\n    ),\n    [nav],\n  );\n  const keyExtractor = useCallback((item: NavigationScreen) => item, []);\n  const navBack = useCallback(nav('portfolioLanding'), [nav]);\n  return (\n    <Screen onLeftPress={navBack} title=\"Playground\">\n      <FlatList\n        data={playgroundScreens}\n        keyExtractor={keyExtractor}\n        renderItem={renderItem}\n      />\n    </Screen>\n  );\n});\n"],"sourceRoot":""}