{"version":3,"sources":["assets/placeholder.png","../node_modules/react-native-web/dist/exports/Slider/index.js","apps/Debug/screens/DarkMode/index.tsx"],"names":["module","exports","memo","dispatch","useRootDispatch","themes","Object","values","ColorTheme","color","useColor","nav","useNav","currentTheme","useRootSelector","state","theme","currentColor","useState","elevation","setElevation","cards","title","value","target","chart","require","button","onLeftPress","to","View","style","backgroundColor","surface","flexDirection","justifyContent","FlatList","horizontal","keyExtractor","item","data","renderItem","key","onPress","changeTheme","contained","secondary","Slider","onValueChange","step","maximumValue","minimumValue","h2","center","numColumns","extraData","flex","overline","h3","paddingVertical","Theme","padding","p02","body2","Image","source","height","marginTop","resizeMode","width"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,yC,qFCC5B,E,OAAiB,E,wCCqBjBC,yBAAK,WAClB,IAAMC,EAAWC,cACXC,EAASC,OAAOC,OAAOC,KACvBC,EAAQC,cACRC,EAAMC,cACNC,EAAeC,YAAgB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,eALpB,EAOJC,mBAAS,GAPL,mBAO/BC,EAP+B,KAOpBC,EAPoB,KAUhCC,EAAgB,CACpB,CACEC,MAAO,YACPC,MAAO,WAET,CACEC,OAAQ,iBACRF,MAAO,aACPC,MAAO,OAET,CACEE,MAZUC,EAAQ,KAalBF,OAAQ,kBACRF,MAAO,aACPC,MAAO,WAET,CACEC,OAAQ,gBACRF,MAAO,QACPC,MAAO,WAET,CACEI,OAAQ,OACRL,MAAO,QACPC,MAAO,UAET,CACEC,OAAQ,mBACRF,MAAO,cACPC,MAAO,UAET,CACED,MAAO,WACPC,MAAO,UAET,CACED,MAAO,cACPC,MAAO,QAIX,OACE,kBAAC,IAAD,CAAQK,YAAajB,EAAIkB,GAAG,qBAC1B,kBAACC,EAAA,EAAD,CACEC,MAAO,CACLC,gBAAiBvB,EAAMwB,QACvBC,cAAe,MACfC,eAAgB,kBAGlB,kBAAC,IAAD,CAAMb,MAAM,UACZ,kBAACc,EAAA,EAAD,CACEC,YAAU,EACVC,aAAc,SAAAC,GAAI,OAAIA,GACtBC,KAAMnC,EACNoC,WAAY,gBA3DAzB,EA2DGuB,EAAH,EAAGA,KAAH,OACV,kBAAC,IAAD,CACEG,IAAKH,EACLjB,MAAOiB,EACPI,SA/DQ3B,EA+DYuB,EA/DU,kBAAMpC,EAASyC,YAAY5B,MAgEzD6B,UAAWhC,IAAiB0B,EAC5BO,UAAWjC,IAAiB0B,QAKpC,kBAAC,IAAD,CAAMjB,MAAK,UAAKH,KAChB,kBAAC4B,EAAD,CACExB,MAAOJ,EACP6B,cAvEe,SAACzB,GAAD,OAAmBH,EAAaG,IAwE/C0B,KAAM,EACNC,aAAc,GACdC,aAAc,IAEhB,kBAAC,IAAD,CAAM7B,MAAM,eAAe8B,IAAE,EAACC,QAAM,IACpC,kBAACjB,EAAA,EAAD,CACEkB,WAAY,EACZC,UAAWpC,EACXmB,aAAc,SAAAC,GAAI,OAAIA,EAAKjB,OAC3BkB,KAAMnB,EACNoB,WAAY,gBAAGF,EAAH,EAAGA,KAAH,OACV,kBAAC,IAAD,CAAMpB,UAAWA,EAAWwB,QAAS,aAAiBa,MAAI,GACxD,kBAAC,IAAD,CAAMlC,MAAOiB,EAAKjB,MAAOmC,UAAQ,IACjC,kBAAC,IAAD,CACEnC,MAAOiB,EAAKhB,MACZmC,IAAE,EACF3B,MAAO,CAAE4B,gBAAiBC,IAAMC,QAAQC,OAE1C,kBAAC,IAAD,CAAMxC,MAAOiB,EAAKf,OAAQuC,OAAK,IAC9BxB,EAAKd,OACJ,kBAACuC,EAAA,EAAD,CACEC,OAAQ1B,EAAKd,MACbM,MAAO,CACLmC,OAAQ,GACRC,UAAWP,IAAMC,QAAQC,IACzBM,WAAY,QACZC,MAAO","file":"static/js/6.459ae27f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder.d1d6991d.png\";","import UnimplementedView from '../../modules/UnimplementedView';\nexport default UnimplementedView;","// TODO: slider on web\nimport React, { useState, memo } from \"react\";\nimport {\n  FlatList,\n  Image,\n  ImageSourcePropType,\n  Slider,\n  View\n} from \"react-native\";\nimport { Button, Card, Screen, Text } from \"../../../../components\";\nimport { changeTheme, ColorTheme } from \"../../../../models\";\nimport { Theme, useRootDispatch, useRootSelector } from \"../../../../utils\";\nimport { useColor, useNav } from \"../../../../behaviors\";\n\ninterface Card {\n  title: string;\n  value: string;\n  target?: string;\n  chart?: ImageSourcePropType;\n  button?: string;\n}\n\nexport default memo(function DarkMode() {\n  const dispatch = useRootDispatch();\n  const themes = Object.values(ColorTheme);\n  const color = useColor();\n  const nav = useNav();\n  const currentTheme = useRootSelector(state => state.theme.currentColor);\n  const themePress = (theme: ColorTheme) => () => dispatch(changeTheme(theme));\n  const [elevation, setElevation] = useState(0);\n  const handleSlider = (value: number) => setElevation(value);\n  const image = require(\"../../../../assets/placeholder.png\");\n  const cards: Card[] = [\n    {\n      title: \"Marketing\",\n      value: \"123.4 M\"\n    },\n    {\n      target: \"+22% of target\",\n      title: \"Conversion\",\n      value: \"537\"\n    },\n    {\n      chart: image,\n      target: \"+12.3 of target\",\n      title: \"Conversion\",\n      value: \"432.1 M\"\n    },\n    {\n      target: \"11% of target\",\n      title: \"Sales\",\n      value: \"345.8 M\"\n    },\n    {\n      button: \"save\",\n      title: \"Users\",\n      value: \"45.5 M\"\n    },\n    {\n      target: \"+56.6% of target\",\n      title: \"Avg session\",\n      value: \"4:53 H\"\n    },\n    {\n      title: \"Sessions\",\n      value: \"23.242\"\n    },\n    {\n      title: \"Bounce rate\",\n      value: \"13%\"\n    }\n  ];\n\n  return (\n    <Screen onLeftPress={nav.to(\"portfolioLanding\")}>\n      <View\n        style={{\n          backgroundColor: color.surface,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\"\n        }}\n      >\n        <Text title=\"Theme\" />\n        <FlatList\n          horizontal\n          keyExtractor={item => item}\n          data={themes}\n          renderItem={({ item }) => (\n            <Button\n              key={item}\n              title={item}\n              onPress={themePress(item)}\n              contained={currentTheme === item}\n              secondary={currentTheme !== item}\n            />\n          )}\n        />\n      </View>\n      <Text title={`${elevation}`} />\n      <Slider\n        value={elevation}\n        onValueChange={handleSlider}\n        step={1}\n        maximumValue={10}\n        minimumValue={0}\n      />\n      <Text title=\"weekly stats\" h2 center />\n      <FlatList\n        numColumns={2}\n        extraData={elevation}\n        keyExtractor={item => item.title}\n        data={cards}\n        renderItem={({ item }) => (\n          <Card elevation={elevation} onPress={() => undefined} flex>\n            <Text title={item.title} overline />\n            <Text\n              title={item.value}\n              h3\n              style={{ paddingVertical: Theme.padding.p02 }}\n            />\n            <Text title={item.target} body2 />\n            {item.chart && (\n              <Image\n                source={item.chart}\n                style={{\n                  height: 80,\n                  marginTop: Theme.padding.p02,\n                  resizeMode: \"cover\",\n                  width: \"100%\"\n                }}\n              />\n            )}\n          </Card>\n        )}\n      />\n    </Screen>\n  );\n});\n"],"sourceRoot":""}