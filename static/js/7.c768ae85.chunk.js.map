{"version":3,"sources":["assets/placeholder.png","apps/Debug/screens/DarkMode/index.tsx"],"names":["module","exports","image","require","cards","title","value","target","chart","button","memo","dispatch","useRootDispatch","themes","Object","values","ColorTheme","color","useColor","nav","useNav","currentTheme","useRootSelector","state","theme","currentColor","useState","elevation","setElevation","columns","getLandscapeOrientation","onLeftPress","to","style","padding","Theme","p04","flexDirection","alignItems","map","item","key","onPress","changeTheme","primary","contained","minimumTrackTintColor","onValueChange","step","maximumValue","minimumValue","h2","center","data","numColumns","renderItem","index","touchable","overline","h3","marginTop","p02","body2","source","height","resizeMode","width","buttonStyle"],"mappings":"uFAAAA,EAAOC,QAAU,IAA0B,yC,sHC2BrCC,EAAQC,EAAQ,KAChBC,EAAgB,CACpB,CACEC,MAAO,YACPC,MAAO,UAET,CACEC,OAAQ,iBACRF,MAAO,aACPC,MAAO,OAET,CACEE,MAAON,EACPK,OAAQ,kBACRF,MAAO,aACPC,MAAO,UAET,CACEC,OAAQ,gBACRF,MAAO,QACPC,MAAO,SACPE,MAAON,GAET,CACEO,OAAQ,OACRJ,MAAO,QACPC,MAAO,UAET,CACEC,OAAQ,mBACRF,MAAO,cACPC,MAAO,UAET,CACED,MAAO,WACPC,MAAO,UAET,CACED,MAAO,cACPC,MAAO,QAIII,0BAAK,WAClB,IAAMC,EAAWC,cACXC,EAASC,OAAOC,OAAOC,KACvBC,EAAQC,cACRC,EAAMC,cACNC,EAAeC,aAAgB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,gBALpB,EAOJC,mBAAS,GAPL,mBAO/BC,EAP+B,KAOpBC,EAPoB,KAUhCC,EADYP,YAAgBQ,KACN,EAAI,EAEhC,OACE,kBAAC,IAAD,CAAQC,YAAaZ,EAAIa,GAAG,SAAU3B,MAAM,aAC1C,kBAAC,IAAD,CAAM4B,MAAO,CAAEC,QAASC,IAAMD,QAAQE,MACpC,kBAAC,IAAD,CACEH,MAAO,CACLI,cAAe,MACfC,WAAY,WAGd,kBAAC,IAAD,CAAMjC,MAAM,YACXQ,EAAO0B,KAAI,SAAAC,GAAI,OACd,kBAAC,IAAD,CACEC,IAAKD,EACLnC,MAAOmC,EACPE,SApBQlB,EAoBYgB,EApBU,kBAAM7B,EAASgC,YAAYnB,MAqBzDoB,SAAO,EACPC,UAAWxB,IAAiBmB,IAtBrB,IAAChB,MA0Bd,kBAAC,IAAD,CAAMnB,MAAK,qBAAgBsB,KAC3B,kBAAC,IAAD,CACEmB,sBAAuB7B,EAAM2B,QAC7BtC,MAAOqB,EACPoB,cA5Ba,SAACzC,GAAD,OAAmBsB,EAAatB,IA6B7C0C,KAAM,EACNC,aAAc,GACdC,aAAc,KAGlB,kBAAC,IAAD,CAAM7C,MAAM,eAAe8C,IAAE,EAACC,QAAM,IACpC,kBAAC,IAAD,CACEC,KAAMjD,EACNkD,WAAYzB,EACZ0B,WAAY,gBAAGf,EAAH,EAAGA,KAAMgB,EAAT,EAASA,MAAT,OACV,kBAAC,IAAD,CACE7B,UAAWA,EACXe,QAAS,aACTe,WAAS,EACThB,IAAKe,GAEL,kBAAC,IAAD,CAAMnD,MAAOmC,EAAKnC,MAAOqD,UAAQ,IACjC,kBAAC,IAAD,CACErD,MAAOmC,EAAKlC,MACZqD,IAAE,EACF1B,MAAO,CAAE2B,UAAWzB,IAAMD,QAAQ2B,OAEnCrB,EAAKjC,QACJ,kBAAC,IAAD,CACEF,MAAOmC,EAAKjC,OACZuD,OAAK,EACL7B,MAAO,CAAE2B,UAAWzB,IAAMD,QAAQ2B,OAGrCrB,EAAKhC,OACJ,kBAAC,IAAD,CACEuD,OAAQvB,EAAKhC,MACbyB,MAAO,CACL+B,OAAQ,GACRJ,UAAWzB,IAAMD,QAAQ2B,IACzBI,WAAY,QACZC,MAAO,UAIZ1B,EAAK/B,QACJ,kBAAC,IAAD,CACEoC,WAAS,EACTxC,MAAOmC,EAAK/B,OACZ0D,YAAa,CAAEP,UAAWzB,IAAMD,QAAQ2B","file":"static/js/7.c768ae85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder.d1d6991d.png\";","// TODO: slider on web\nimport React, { memo, useState } from \"react\";\nimport { Image, ImageSourcePropType, View } from \"react-native\";\nimport {\n  Button,\n  Card,\n  Screen,\n  Text,\n  Masonry,\n  Slider\n} from \"../../../../components\";\nimport {\n  ColorTheme,\n  changeTheme,\n  getLandscapeOrientation\n} from \"../../../../models\";\nimport { Theme, useRootDispatch, useRootSelector } from \"../../../../utils\";\nimport { useColor, useNav } from \"../../../../hooks\";\n\ninterface Card {\n  title: string;\n  value: string;\n  target?: string;\n  chart?: ImageSourcePropType;\n  button?: string;\n}\n\nconst image = require(\"../../../../assets/placeholder.png\");\nconst cards: Card[] = [\n  {\n    title: \"Marketing\",\n    value: \"12.4 M\"\n  },\n  {\n    target: \"+22% of target\",\n    title: \"Conversion\",\n    value: \"537\"\n  },\n  {\n    chart: image,\n    target: \"+12.3 of target\",\n    title: \"Conversion\",\n    value: \"42.1 M\"\n  },\n  {\n    target: \"11% of target\",\n    title: \"Sales\",\n    value: \"35.8 M\",\n    chart: image\n  },\n  {\n    button: \"save\",\n    title: \"Users\",\n    value: \"45.5 M\"\n  },\n  {\n    target: \"+56.6% of target\",\n    title: \"Avg session\",\n    value: \"4:53 H\"\n  },\n  {\n    title: \"Sessions\",\n    value: \"23.242\"\n  },\n  {\n    title: \"Bounce rate\",\n    value: \"12%\"\n  }\n];\n\nexport default memo(function DarkMode() {\n  const dispatch = useRootDispatch();\n  const themes = Object.values(ColorTheme);\n  const color = useColor();\n  const nav = useNav();\n  const currentTheme = useRootSelector(state => state.theme.currentColor);\n  const themePress = (theme: ColorTheme) => () => dispatch(changeTheme(theme));\n  const [elevation, setElevation] = useState(2);\n  const handleSlider = (value: number) => setElevation(value);\n  const landscape = useRootSelector(getLandscapeOrientation);\n  const columns = landscape ? 5 : 3;\n\n  return (\n    <Screen onLeftPress={nav.to(\"debug\")} title=\"Dark mode\">\n      <View style={{ padding: Theme.padding.p04 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\"\n          }}\n        >\n          <Text title=\"theme: \" />\n          {themes.map(item => \n            <Button\n              key={item}\n              title={item}\n              onPress={themePress(item)}\n              primary\n              contained={currentTheme === item}\n            />\n          )}\n        </View>\n        <Text title={`elevation: ${elevation}`} />\n        <Slider\n          minimumTrackTintColor={color.primary}\n          value={elevation}\n          onValueChange={handleSlider}\n          step={1}\n          maximumValue={10}\n          minimumValue={0}\n        />\n      </View>\n      <Text title=\"Weekly Stats\" h2 center />\n      <Masonry\n        data={cards}\n        numColumns={columns}\n        renderItem={({ item, index }: { item: Card; index: number }) => \n          <Card\n            elevation={elevation}\n            onPress={() => undefined}\n            touchable\n            key={index}\n          >\n            <Text title={item.title} overline />\n            <Text\n              title={item.value}\n              h3\n              style={{ marginTop: Theme.padding.p02 }}\n            />\n            {item.target && \n              <Text\n                title={item.target}\n                body2\n                style={{ marginTop: Theme.padding.p02 }}\n              />\n            }\n            {item.chart && \n              <Image\n                source={item.chart}\n                style={{\n                  height: 80,\n                  marginTop: Theme.padding.p02,\n                  resizeMode: \"cover\",\n                  width: \"100%\"\n                }}\n              />\n            }\n            {item.button && \n              <Button\n                contained\n                title={item.button}\n                buttonStyle={{ marginTop: Theme.padding.p02 }}\n              />\n            }\n          </Card>\n        }\n      />\n    </Screen>\n  );\n});\n"],"sourceRoot":""}