{"version":3,"sources":["apps/Complete/utils/configs.tsx","apps/Complete/utils/useKeyboardHeight.tsx","apps/Complete/utils/userFactory.ts","apps/Complete/components/TextInputWithIcons.tsx","apps/Complete/components/AddButton.tsx","apps/Complete/components/AddItem.tsx","apps/Complete/components/Card.tsx","apps/Complete/components/ListHeader.tsx","apps/Complete/components/ListItem.tsx","apps/Complete/components/ListItems.tsx","apps/Complete/components/List.tsx","apps/Complete/components/Board.tsx","apps/Complete/components/DeleteModal.tsx","apps/Complete/components/ItemDetailHeader.tsx","apps/Complete/components/ItemContext.tsx","apps/Complete/components/ItemEdit.tsx","apps/Complete/screens/Account/index.tsx","apps/Complete/screens/Capture/index.tsx","apps/Complete/screens/ItemDetail/index.tsx","apps/Complete/screens/Landing/index.tsx","apps/Complete/screens/Project/index.tsx","apps/Complete/screens/Projects/index.tsx","apps/Complete/screens/Reflect/Graph.tsx","apps/Complete/screens/Reflect/index.tsx","apps/Complete/index.tsx"],"names":["completeConfig","borderRadius","config","padding","alert","width","height","useKeyboardHeight","isFocused","useIsFocused","keyboardHeight","useRootSelector","s","device","dItem","u","date","Date","now","id","v4","title","userId","description","active","createdAt","updatedAt","tags","editable","children","type","dKanban","TextInputWithIcons","memo","value","multiline","iconHeight","placeholder","backgroundColor","pointerEvents","icons","onSubmit","blurOnSubmit","onFocus","numberOfLines","onBlur","onRef","color","useColor","bgColor","background","useState","text","setText","showControls","setShowControls","onTextChange","useCallback","change","onFocusInternal","onSubmitInternal","result","trim","onBlurInternal","onIconPressInternal","callback","onIconParentPress","e","preventDefault","useEffect","View","style","flex","flexDirection","alignItems","onChangeText","onSubmitEditing","returnKeyType","onPress","map","icon","hidden","focus","disabled","required","length","name","padded","size","AddButton","noSubmitFocus","textInputRef","useRef","showInput","setShowInput","onAddItemPress","p","onItemTitleClose","onItemTitleSubmit","current","blur","primary","justifyContent","center","AddItem","parentItemId","dispatch","useRootDispatch","completeUser","Error","Keyboard","dismiss","itemId","item","createItem","addItemToItem","Card","onLayout","margin","marginRight","marginBottom","ListHeader","navigate","useNavigation","completeItem","items","onSave","updateItem","onDetail","navItemDetails","ListItem","index","parentChildrenCount","onItemNav","navItemProject","projectItemId","onItemDetails","onItemLongPress","onItemPress","onItemUp","console","log","swapItemOrderInItem","i","j","onItemDown","onLongPress","surface","ListItems","list","cardsRef","cardsLength","onKeyExtractor","onCardSizeChange","scrollToEnd","onRenderItem","FlatList","data","keyExtractor","keyboardShouldPersistTaps","onContentSizeChange","ref","renderItem","showsVerticalScrollIndicator","List","orientation","listWidth","maxHeight","footer","horizontal","Board","listMaxHeight","listSize","board","getItemId","getItemLayout","_","offset","renderAddList","renderList","ListFooterComponent","contentContainerStyle","decelerationRate","showsHorizontalScrollIndicator","snapToAlignment","snapToInterval","DeleteModal","onCancel","onDelete","onBackgroundPress","showOverlay","widthPercent","paddingBottom","ItemDetailHeader","emphasis","ItemContext","ItemEdit","onClose","Account","goBack","navBack","onLogin","inboxItems","homeTodoItems","homeItems","townItems","workItems","gymItems","appItems","meetItems","bookItems","giftItems","checkItems","codeItems","projectItems","userItems","user","getDefaultUserTemplate","createUser","onLogout","removeUser","onSetActive","setActiveUser","onNavToAdmin","initialState","container","button","Capture","containerRefs","containerHeight","setContainerHeight","getInbox","noItemChildren","onOrganize","key","event","nativeEvent","layout","dimensions","navToAccount","onRightPress","rightIcon","disable","ItemDetail","nav","deleteModal","setDeleteModal","onItemDelete","removeItem","removeItemFromItem","onItemSubmit","onDeletePress","onDeleteClose","Landing","navPortfolioLogin","slides","info","warning","success","brand","Project","screenWidth","getSmallestDimension","projectItemType","projectItemTitle","setContainer","typePadding","keyboardPadding","onLeftPress","Projects","setDimensions","getProjects","getDomain","domain","Math","min","max","Graph","scaleX","scaleTime","d","range","scaleY","scaleLinear","strokeWidth","shape","x","y","curve","StyleSheet","absoluteFill","x1","x2","y1","y2","stopColor","fill","stroke","Title","getTime","Reflect","Dimensions","get","noHeader","headerShown","RootTab","createBottomTabNavigator","RootStack","createStackNavigator","ProjectsStack","tabIcons","plan","focused","unFocused","implement","reflect","Implement","Navigator","screenOptions","Screen","component","Tabs","tabBarOptions","keyboardHidesTabBar","activeTintColor","inactiveTintColor","secondary","showLabel","route","tabBarIcon","iconColor","Main","mode","rootMode","rootScreenOptions","Notification","Modal"],"mappings":"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","file":"static/js/12.56e94922.chunk.js","sourcesContent":["import {config} from '../../../utils';\n\nexport const completeConfig = {\n  borderRadius: config.padding(2),\n  padding: config.padding(4),\n  alert: {\n    width: 0.8,\n    height: 0.6,\n  },\n};\n","import {useIsFocused} from '@react-navigation/native';\nimport {useRootSelector} from '../../../utils';\n\nexport const useKeyboardHeight = (): number => {\n  const isFocused = useIsFocused();\n  const keyboardHeight = useRootSelector((s) => s.device.keyboardHeight);\n  return isFocused && keyboardHeight ? keyboardHeight : 0;\n};\n","import {v4} from 'uuid';\nimport {Item, User} from '../models';\n\ntype GetDefaultUserTemplate = {\n  user: User;\n  items: Item[];\n};\n\nconst dItem = (u: string): Item => {\n  const date = Date.now();\n  return {\n    id: v4(),\n    title: '',\n    userId: u,\n    description: '',\n    active: true,\n    createdAt: date,\n    updatedAt: date,\n    tags: [],\n    editable: true,\n    children: [],\n    type: 'note',\n  };\n};\n\nconst dKanban = (u: string): Item[] => {\n  const items: Item[] = [\n    {...dItem(u), title: 'Backlog', type: 'list'},\n    {...dItem(u), title: 'Todo', type: 'list'},\n    {...dItem(u), title: 'In Progress', type: 'list'},\n    {...dItem(u), title: 'Done', type: 'list'},\n  ];\n  return items;\n};\n\nexport const getDefaultUserTemplate = (): GetDefaultUserTemplate => {\n  // user\n  const date = Date.now();\n  const u = v4();\n\n  // inbox\n  const inboxItems: Item[] = [\n    {...dItem(u), title: 'do dishes'},\n    {...dItem(u), title: 'schedule meeting with Jim'},\n    {...dItem(u), title: 'run 4 miles'},\n    {...dItem(u), title: 'change oil'},\n    {...dItem(u), title: 'what is the best mediation'},\n    {...dItem(u), title: 'record Kelly birthday on Sep 22'},\n    {...dItem(u), title: 'drink water'},\n    {...dItem(u), title: 'intensity + focus = deep work'},\n    {...dItem(u), title: 'put $20 in phone'},\n    {...dItem(u), title: 'clear emails'},\n  ];\n\n  // projects\n  const homeTodoItems: Item[] = [\n    {...dItem(u), title: 'clean desk'},\n    {...dItem(u), title: 'clean room'},\n    {...dItem(u), title: 'walk dog'},\n    {...dItem(u), title: 'brush teeth'},\n    {...dItem(u), title: 'do laundry'},\n    {...dItem(u), title: 'fix sink'},\n  ];\n  const homeItems: Item[] = dKanban(u);\n  homeItems[0].children = homeTodoItems.map((i) => i.id);\n  const townItems: Item[] = dKanban(u);\n  const workItems: Item[] = dKanban(u);\n  const gymItems: Item[] = dKanban(u);\n  const appItems: Item[] = dKanban(u);\n  const meetItems: Item[] = [\n    {...dItem(u), title: 'one one one'},\n    {...dItem(u), title: 'q1 planning'},\n  ];\n  const bookItems: Item[] = [\n    {...dItem(u), title: 'eat that frog'},\n    {...dItem(u), title: 'deep work'},\n    {...dItem(u), title: 'the one thing'},\n  ];\n  const giftItems: Item[] = [\n    {...dItem(u), title: 'girlfriend'},\n    {...dItem(u), title: 'sister'},\n    {...dItem(u), title: 'parents'},\n  ];\n  const checkItems: Item[] = [\n    {...dItem(u), title: 'after bathroom'},\n    {...dItem(u), title: 'before car'},\n    {...dItem(u), title: 'before sleep'},\n  ];\n  const codeItems: Item[] = [\n    {...dItem(u), title: 'php'},\n    {...dItem(u), title: 'javascript'},\n    {...dItem(u), title: 'swift'},\n  ];\n  const projectItems: Item[] = [\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at home',\n      children: homeItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at town',\n      children: townItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at work',\n      children: workItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at gym',\n      children: gymItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'app release',\n      children: appItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'meeting notes',\n      children: meetItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'book notes',\n      children: bookItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'gift ideas',\n      children: giftItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'checklists',\n      children: checkItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'coding',\n      children: codeItems.map((i) => i.id),\n    },\n  ];\n\n  // user\n  const userItems: Item[] = [\n    {\n      ...dItem(u),\n      title: 'Inbox',\n      type: 'list',\n      children: inboxItems.map((i) => i.id),\n      editable: false,\n    },\n    {\n      ...dItem(u),\n      title: 'Projects',\n      type: 'list',\n      children: projectItems.map((i) => i.id),\n      editable: false,\n    },\n  ];\n  const user: User = {\n    id: u,\n    active: true,\n    createdAt: date,\n    updatedAt: date,\n    name: 'Bob Smith',\n    items: userItems.map((i) => i.id),\n  };\n\n  return {\n    user,\n    items: [\n      ...inboxItems,\n      ...homeTodoItems,\n      ...homeItems,\n      ...townItems,\n      ...workItems,\n      ...gymItems,\n      ...appItems,\n      ...meetItems,\n      ...bookItems,\n      ...giftItems,\n      ...checkItems,\n      ...codeItems,\n      ...projectItems,\n      ...userItems,\n    ],\n  };\n};\n","import React, {\n  memo,\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport {TextInput as Original, View} from 'react-native';\nimport {Icon, TextInput} from '../../../components';\nimport {PointerEvents} from '../../../components/TextInput/types';\nimport {TouchableWithoutFeedback} from '../../../conversions';\nimport {useColor} from '../../../hooks';\nimport {config, FontType} from '../../../utils';\n\ntype Icon = {\n  name: string;\n  onPress: (text: string) => void;\n  hidden?: boolean;\n  color?: string;\n  focus?: boolean;\n  required?: boolean;\n};\n\ntype TextInputWithIconsProps = {\n  value: string;\n  placeholder: string;\n  icons: Icon[];\n  onRef?: MutableRefObject<Original | null>;\n  onSubmit: (text: string) => void;\n  backgroundColor?: string;\n  pointerEvents?: PointerEvents;\n  type?: FontType;\n  onBlur?: () => void;\n  onFocus?: () => void;\n  blurOnSubmit?: boolean;\n  multiline?: boolean;\n  iconHeight?: number;\n  editable?: boolean;\n  numberOfLines?: number;\n};\n\nexport const TextInputWithIcons = memo(function TextInputWithIcons({\n  value,\n  multiline,\n  iconHeight = config.padding(6),\n  placeholder,\n  backgroundColor,\n  editable,\n  pointerEvents,\n  icons,\n  type,\n  onSubmit,\n  blurOnSubmit,\n  onFocus,\n  numberOfLines,\n  onBlur,\n  onRef,\n}: TextInputWithIconsProps) {\n  const color = useColor();\n  const bgColor = backgroundColor || color.background;\n  const [text, setText] = useState(value);\n  const [showControls, setShowControls] = useState(false);\n\n  const onTextChange = useCallback((change) => {\n    setText(change);\n  }, []);\n\n  const onFocusInternal = useCallback(() => {\n    setShowControls(true);\n    if (onFocus) onFocus();\n  }, [onFocus]);\n\n  const onSubmitInternal = useCallback(() => {\n    const result = text.trim();\n    onSubmit(result);\n    if (value === '') setText('');\n  }, [onSubmit, text, value]);\n\n  const onBlurInternal = useCallback(() => {\n    setText(value);\n    setShowControls(false);\n    if (onBlur) onBlur();\n  }, [onBlur, value]);\n\n  const onIconPressInternal = useCallback(\n    (callback) => () => {\n      callback(text);\n      if (value === '') setText('');\n    },\n    [text, value],\n  );\n\n  const onIconParentPress = useCallback((e) => e.preventDefault(), []);\n\n  useEffect(() => {\n    setText(value);\n  }, [value]);\n\n  return (\n    <View style={{flex: 1, flexDirection: 'row', alignItems: 'center'}}>\n      <TextInput\n        backgroundColor={bgColor}\n        blurOnSubmit={blurOnSubmit}\n        editable={editable}\n        flex\n        multiline={multiline}\n        numberOfLines={numberOfLines}\n        onBlur={onBlurInternal}\n        onChangeText={onTextChange}\n        onFocus={onFocusInternal}\n        onRef={onRef}\n        onSubmitEditing={onSubmitInternal}\n        placeholder={placeholder}\n        pointerEvents={pointerEvents}\n        returnKeyType=\"done\"\n        type={type}\n        value={text}\n      />\n      <TouchableWithoutFeedback\n        onPress={onIconParentPress}\n        style={{flexDirection: 'row'}}>\n        {icons.map((icon) =>\n          icon.hidden ||\n          (showControls && !icon.focus) ||\n          (!showControls && icon.focus) ? null : (\n            <Icon\n              color={icon.color}\n              disabled={icon.required && text.trim().length === 0}\n              key={`${icon.name}-focus`}\n              name={icon.name}\n              onPress={onIconPressInternal(icon.onPress)}\n              padded\n              size={iconHeight}\n            />\n          ),\n        )}\n      </TouchableWithoutFeedback>\n    </View>\n  );\n});\n","import React, {memo, useCallback, useEffect, useRef, useState} from 'react';\nimport {TextInput as OriginalTextInput, View} from 'react-native';\nimport {Button} from '../../../components';\nimport {useColor} from '../../../hooks';\nimport {config} from '../../../utils';\nimport {completeConfig} from '../utils';\nimport {TextInputWithIcons} from './TextInputWithIcons';\n\ntype AddButtonProps = {\n  width?: number;\n  placeholder: string;\n  title: string;\n  onSubmit: (value: string) => void;\n  noSubmitFocus?: boolean;\n};\n\nexport const AddButton = memo(function AddButton({\n  width,\n  placeholder,\n  title,\n  noSubmitFocus,\n  onSubmit,\n}: AddButtonProps) {\n  const color = useColor();\n  const textInputRef = useRef<OriginalTextInput | null>(null);\n  const [showInput, setShowInput] = useState(false);\n  const onAddItemPress = useCallback(() => {\n    setShowInput((p) => !p);\n  }, []);\n\n  const onItemTitleClose = useCallback(() => {\n    setShowInput(false);\n  }, []);\n\n  const onItemTitleSubmit = useCallback(\n    (text) => {\n      onSubmit(text);\n      if (noSubmitFocus) textInputRef.current?.blur();\n    },\n    [noSubmitFocus, onSubmit],\n  );\n\n  const onBlur = useCallback(() => {\n    setShowInput(false);\n  }, []);\n\n  const icons = [\n    {name: 'close', onPress: onItemTitleClose, focus: true},\n    {\n      name: 'send',\n      onPress: onItemTitleSubmit,\n      color: color.primary,\n      focus: true,\n      required: true,\n    },\n  ];\n\n  useEffect(() => {\n    if (showInput) textInputRef.current?.focus();\n  }, [showInput]);\n\n  return (\n    <View\n      style={{\n        width,\n        height: config.padding(12),\n        borderRadius: completeConfig.borderRadius,\n        backgroundColor: color.background,\n        justifyContent: 'center',\n      }}>\n      {showInput ? (\n        <TextInputWithIcons\n          blurOnSubmit={false}\n          icons={icons}\n          onBlur={onBlur}\n          onRef={textInputRef}\n          onSubmit={onItemTitleSubmit}\n          placeholder={placeholder}\n          value=\"\"\n        />\n      ) : (\n        <Button center color=\"primary\" onPress={onAddItemPress} title={title} />\n      )}\n    </View>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {Keyboard} from 'react-native';\nimport {v4} from 'uuid';\nimport {useRootDispatch, useRootSelector} from '../../../utils';\nimport {addItemToItem, createItem, Item} from '../models';\nimport {AddButton} from './AddButton';\n\ntype AddItemProps = {\n  parentItemId: string | null;\n  placeholder: string;\n  title: string;\n  width?: number;\n};\n\nexport const AddItem = memo(function AddItem({\n  placeholder,\n  title,\n  parentItemId,\n  width,\n}: AddItemProps) {\n  const dispatch = useRootDispatch();\n  const userId = useRootSelector((s) => s.completeUser?.id);\n  if (!userId) throw new Error('missing userId on add item');\n  if (!parentItemId) throw new Error('missing parentItemId on add item');\n  const onSubmit = useCallback(\n    (value: string) => {\n      if (!value) return Keyboard.dismiss();\n      const itemId = v4();\n      const date = Date.now();\n      const item: Item = {\n        id: itemId,\n        userId,\n        active: true,\n        title: value,\n        createdAt: date,\n        updatedAt: date,\n        children: [],\n        tags: [],\n        description: '',\n        editable: true,\n        type: 'note',\n      };\n      dispatch(createItem(item));\n      dispatch(addItemToItem({parentItemId, itemId}));\n    },\n    [dispatch, parentItemId, userId],\n  );\n\n  return (\n    <AddButton\n      onSubmit={onSubmit}\n      placeholder={placeholder}\n      title={title}\n      width={width}\n    />\n  );\n});\n","import React, {memo, ReactElement} from 'react';\nimport {LayoutChangeEvent, View} from 'react-native';\nimport {useColor} from '../../../hooks';\nimport {completeConfig} from '../utils';\n\n// TODO: combine card components with global card\n\ntype CardProps = {\n  onLayout?: (event: LayoutChangeEvent) => void;\n  children: ReactElement | ReactElement[];\n  margin?: 'bottom' | 'right' | 'none';\n  width?: number;\n  flex?: boolean;\n};\n\nexport const Card = memo(function Card({\n  children,\n  onLayout,\n  margin = 'none',\n  width,\n  flex,\n}: CardProps) {\n  const color = useColor();\n  return (\n    <View\n      onLayout={onLayout}\n      style={{\n        flex: flex ? 1 : 0,\n        width,\n        borderRadius: completeConfig.borderRadius,\n        backgroundColor: color.background,\n        padding: completeConfig.padding / 2,\n        marginRight: margin === 'right' ? completeConfig.padding : 0,\n        marginBottom: margin === 'bottom' ? completeConfig.padding : 0,\n      }}>\n      {children}\n    </View>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback} from 'react';\nimport {Keyboard, View} from 'react-native';\nimport {useColor} from '../../../hooks';\nimport {useRootDispatch, useRootSelector} from '../../../utils';\nimport {navItemDetails, updateItem} from '../models';\nimport {TextInputWithIcons} from './TextInputWithIcons';\n\ntype ListHeaderProps = {\n  itemId: string;\n  parentItemId: string | null;\n};\n\nexport const ListHeader = memo(function ListHeader({\n  itemId,\n  parentItemId,\n}: ListHeaderProps) {\n  const dispatch = useRootDispatch();\n  const {navigate} = useNavigation();\n  const color = useColor();\n  const item = useRootSelector((s) => s.completeItem.items[itemId]);\n\n  const onSave = useCallback(\n    (title) => {\n      dispatch(updateItem({...item, title}));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onDetail = useCallback(() => {\n    dispatch(navItemDetails({parentItemId, itemId}));\n    navigate('item-detail');\n  }, [dispatch, itemId, navigate, parentItemId]);\n\n  const onClose = useCallback(() => Keyboard.dismiss(), []);\n\n  const icons = [\n    {name: 'close', onPress: onClose, focus: true},\n    {\n      name: 'send',\n      onPress: onSave,\n      color: color.primary,\n      focus: true,\n      required: true,\n    },\n    {name: 'dots-horizontal', onPress: onDetail},\n  ];\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n      }}>\n      <TextInputWithIcons\n        editable={item.editable}\n        icons={icons}\n        onSubmit={onSave}\n        placeholder=\"List title...\"\n        type=\"h4\"\n        value={item.title}\n      />\n    </View>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useRef} from 'react';\nimport {Keyboard, TextInput as OriginalTextInput} from 'react-native';\nimport {TouchableWithoutFeedback} from '../../../conversions';\nimport {useColor} from '../../../hooks';\nimport {useRootDispatch, useRootSelector} from '../../../utils';\nimport {\n  navItemDetails,\n  navItemProject,\n  swapItemOrderInItem,\n  updateItem,\n} from '../models';\nimport {completeConfig} from '../utils';\nimport {TextInputWithIcons} from './TextInputWithIcons';\n\ntype ListItemProps = {\n  index: number;\n  itemId: string;\n  parentItemId: string;\n};\n\nexport const ListItem = memo(function ListItem({\n  index,\n  itemId,\n  parentItemId,\n}: ListItemProps) {\n  const item = useRootSelector((s) => s.completeItem.items[itemId]);\n  const parentChildrenCount = useRootSelector(\n    (s) => s.completeItem.items[parentItemId].children.length,\n  );\n  const textInputRef = useRef<OriginalTextInput | null>(null);\n  const dispatch = useRootDispatch();\n  const {navigate} = useNavigation();\n  const color = useColor();\n\n  const onItemTitleClose = useCallback(() => {\n    Keyboard.dismiss();\n  }, []);\n\n  const onItemTitleSubmit = useCallback(\n    (title: string) => {\n      dispatch(updateItem({...item, title}));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onItemNav = useCallback(() => {\n    dispatch(navItemProject({projectItemId: itemId}));\n    navigate('project');\n  }, [dispatch, itemId, navigate]);\n\n  const onItemDetails = useCallback(() => {\n    dispatch(navItemDetails({parentItemId, itemId}));\n    navigate('item-detail');\n  }, [dispatch, itemId, navigate, parentItemId]);\n\n  const onItemLongPress = useCallback(() => undefined, []);\n\n  const onItemPress = useCallback(() => {\n    textInputRef.current?.focus();\n  }, []);\n\n  const onItemUp = useCallback(() => {\n    console.log('up', index);\n    if (index === 0) return;\n    dispatch(swapItemOrderInItem({parentItemId, i: index, j: index - 1}));\n  }, [dispatch, index, parentItemId]);\n\n  const onItemDown = useCallback(() => {\n    console.log('down', index, parentChildrenCount);\n    if (index >= parentChildrenCount - 1) return;\n    dispatch(swapItemOrderInItem({parentItemId, i: index, j: index + 1}));\n  }, [dispatch, index, parentChildrenCount, parentItemId]);\n\n  const icons = [\n    {name: 'close', onPress: onItemTitleClose, focus: true},\n    {\n      name: 'send',\n      onPress: onItemTitleSubmit,\n      color: color.primary,\n      focus: true,\n      required: true,\n    },\n    {name: 'chevron-up', onPress: onItemUp, hidden: true},\n    {name: 'chevron-down', onPress: onItemDown, hidden: true},\n    {name: 'dots-horizontal', onPress: onItemDetails},\n    {\n      name: 'chevron-right',\n      onPress: onItemNav,\n      hidden: !item.children.length,\n    },\n  ];\n\n  return (\n    <TouchableWithoutFeedback\n      key={item.id}\n      onLongPress={onItemLongPress}\n      onPress={onItemPress}\n      style={{\n        flex: 1,\n        borderRadius: completeConfig.borderRadius,\n        margin: completeConfig.padding / 2,\n        backgroundColor: color.surface,\n        flexDirection: 'row',\n      }}>\n      <TextInputWithIcons\n        backgroundColor={color.surface}\n        icons={icons}\n        onRef={textInputRef}\n        onSubmit={onItemTitleSubmit}\n        placeholder=\"Item name...\"\n        pointerEvents=\"none\"\n        value={item.title}\n      />\n    </TouchableWithoutFeedback>\n  );\n});\n","import React, {memo, useCallback, useRef} from 'react';\nimport {FlatList, ListRenderItem} from 'react-native';\nimport {useRootSelector} from '../../../utils';\nimport {ListItem} from './ListItem';\n\ntype ListItemsProps = {\n  parentItemId: string;\n};\n\nexport const ListItems = memo(function ListItems({\n  parentItemId,\n}: ListItemsProps) {\n  const list = useRootSelector(\n    (s) => s.completeItem.items[parentItemId].children,\n  );\n  const cardsRef = useRef<FlatList | null>(null);\n  const cardsLength = useRef(list.length);\n\n  const onKeyExtractor = useCallback((item) => item, []);\n\n  const onCardSizeChange = useCallback(() => {\n    if (list.length > cardsLength.current) {\n      cardsRef.current?.scrollToEnd();\n      cardsLength.current = list.length;\n    }\n  }, [list.length]);\n\n  const onRenderItem: ListRenderItem<string> = useCallback(\n    ({item, index}) => {\n      return (\n        <ListItem\n          index={index}\n          itemId={item}\n          key={item}\n          parentItemId={parentItemId}\n        />\n      );\n    },\n    [parentItemId],\n  );\n\n  return (\n    <FlatList\n      data={list}\n      keyExtractor={onKeyExtractor}\n      keyboardShouldPersistTaps=\"handled\"\n      onContentSizeChange={onCardSizeChange}\n      ref={cardsRef}\n      renderItem={onRenderItem}\n      showsVerticalScrollIndicator={false}\n    />\n  );\n});\n","import React, {memo, ReactElement} from 'react';\nimport {View} from 'react-native';\nimport {completeConfig} from '../utils';\nimport {AddItem} from './AddItem';\nimport {Card} from './Card';\nimport {ListHeader} from './ListHeader';\nimport {ListItems} from './ListItems';\n\ntype ListProps = {\n  listWidth?: number;\n  itemId: string;\n  parentItemId: string | null;\n  orientation?: 'vertical' | 'horizontal';\n  footer?: ReactElement;\n  maxHeight: number;\n};\n\nexport const List = memo(function List({\n  itemId,\n  parentItemId,\n  orientation = 'vertical',\n  listWidth,\n  maxHeight,\n  footer,\n}: ListProps) {\n  const horizontal = orientation === 'horizontal';\n  const padding = horizontal ? 0 : completeConfig.padding;\n  const margin = horizontal ? 'right' : 'bottom';\n  return (\n    <View style={{padding, maxHeight}}>\n      <Card margin={margin} width={listWidth}>\n        <ListHeader itemId={itemId} parentItemId={parentItemId} />\n        <ListItems parentItemId={itemId} />\n        <AddItem\n          parentItemId={itemId}\n          placeholder=\"Item title...\"\n          title=\"Add item\"\n        />\n      </Card>\n      {footer ? footer : null}\n    </View>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {View} from 'react-native';\nimport {FlatList} from '../../../conversions';\nimport {useRootSelector} from '../../../utils';\nimport {completeConfig} from '../utils';\nimport {AddItem} from './AddItem';\nimport {List} from './List';\n\ntype BoardProps = {\n  projectItemId: string;\n  listMaxHeight: number;\n  listWidth: number;\n};\n\nexport const Board = memo(function Board({\n  projectItemId,\n  listMaxHeight,\n  listWidth,\n}: BoardProps) {\n  const listSize = listWidth + completeConfig.padding;\n  const board = useRootSelector((s) => s.completeItem.items[projectItemId]);\n  const getItemId = useCallback((item) => item, []);\n  const getItemLayout = useCallback(\n    (_, index) => ({length: listSize, offset: listSize * index, index}),\n    [listSize],\n  );\n\n  const renderAddList = useCallback(() => {\n    return (\n      <AddItem\n        parentItemId={board.id}\n        placeholder=\"List title...\"\n        title=\"Add list\"\n        width={listWidth}\n      />\n    );\n  }, [board.id, listWidth]);\n\n  const renderList = useCallback(\n    ({item}) => {\n      return (\n        <List\n          itemId={item}\n          key={item}\n          listWidth={listWidth}\n          maxHeight={listMaxHeight}\n          orientation=\"horizontal\"\n          parentItemId={board.id}\n        />\n      );\n    },\n    [board.id, listMaxHeight, listWidth],\n  );\n\n  return (\n    <View>\n      {board.type === 'list' ? (\n        <List\n          itemId={board.id}\n          maxHeight={listMaxHeight}\n          parentItemId={board.id}\n        />\n      ) : (\n        <FlatList\n          ListFooterComponent={renderAddList}\n          contentContainerStyle={{padding: completeConfig.padding}}\n          data={board.children}\n          decelerationRate=\"fast\"\n          getItemLayout={getItemLayout}\n          horizontal\n          keyExtractor={getItemId}\n          keyboardShouldPersistTaps=\"handled\"\n          renderItem={renderList}\n          showsHorizontalScrollIndicator={false}\n          snapToAlignment=\"center\"\n          snapToInterval={listSize}\n          style={{height: '100%'}}\n        />\n      )}\n    </View>\n  );\n});\n","import React, {memo} from 'react';\nimport {View} from 'react-native';\nimport {Button, Modal, Text} from '../../../components';\nimport {config} from '../../../utils';\n\ntype DeleteModalProps = {\n  onDelete: () => void;\n  onCancel: () => void;\n};\n\nexport const DeleteModal = memo(function DeleteModal({\n  onCancel,\n  onDelete,\n}: DeleteModalProps) {\n  return (\n    <Modal onBackgroundPress={onCancel} showOverlay widthPercent={0.5}>\n      <View style={{alignItems: 'center'}}>\n        <Text\n          style={{paddingBottom: config.padding(2)}}\n          title=\"Are you sure?\"\n          type=\"h5\"\n        />\n        <View style={{flexDirection: 'row', justifyContent: 'center'}}>\n          <Button onPress={onCancel} title=\"close\" />\n          <Button color=\"danger\" onPress={onDelete} title=\"delete\" />\n        </View>\n      </View>\n    </Modal>\n  );\n});\n","import React, {memo} from 'react';\nimport {Text} from '../../../components';\nimport {config} from '../../../utils';\n\ntype ItemDetailHeaderProps = {\n  title: string;\n};\n\nexport const ItemDetailHeader = memo(function ItemDetailHeader({\n  title,\n}: ItemDetailHeaderProps) {\n  return (\n    <Text\n      emphasis=\"medium\"\n      style={{padding: config.padding(2)}}\n      title={title}\n      type=\"overline\"\n    />\n  );\n});\n","import React, {memo} from 'react';\nimport {View} from 'react-native';\nimport {RelativeDate, Text} from '../../../components';\nimport {config} from '../../../utils';\nimport {Card} from './Card';\nimport {ItemDetailHeader} from './ItemDetailHeader';\n\ntype ItemContextProps = {\n  userId: string;\n  createdAt: number;\n  updatedAt: number;\n  type: string;\n};\n\nexport const ItemContext = memo(function ItemContext({\n  type,\n  userId,\n  createdAt,\n  updatedAt,\n}: ItemContextProps) {\n  return (\n    <View>\n      <Card margin=\"bottom\">\n        <ItemDetailHeader title=\"Type\" />\n        <Text style={{padding: config.padding(2)}} title={type} />\n        <ItemDetailHeader title=\"Creator\" />\n        <Text style={{padding: config.padding(2)}} title={userId} />\n        <ItemDetailHeader title=\"Created\" />\n        <RelativeDate date={createdAt} style={{padding: config.padding(2)}} />\n        <ItemDetailHeader title=\"Updated\" />\n        <RelativeDate date={updatedAt} style={{padding: config.padding(2)}} />\n      </Card>\n    </View>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {Keyboard, View} from 'react-native';\nimport {useColor} from '../../../hooks';\nimport {Card} from './Card';\nimport {ItemDetailHeader} from './ItemDetailHeader';\nimport {TextInputWithIcons} from './TextInputWithIcons';\n\ntype ItemEditProps = {\n  title: string;\n  description?: string;\n  placeholder: string;\n  onSubmit: (type: string) => (text: string) => void;\n};\n\nexport const ItemEdit = memo(function ItemEdit({\n  title,\n  description = '',\n  placeholder,\n  onSubmit,\n}: ItemEditProps) {\n  const color = useColor();\n  const onClose = useCallback(() => Keyboard.dismiss(), []);\n\n  const icons = useCallback(\n    (type: string) => [\n      {name: 'close', onPress: onClose, focus: true},\n      {\n        name: 'send',\n        onPress: onSubmit(type),\n        color: color.primary,\n        focus: true,\n        required: true,\n      },\n    ],\n    [color.primary, onClose, onSubmit],\n  );\n\n  return (\n    <View>\n      <Card margin=\"bottom\">\n        <ItemDetailHeader title=\"Title\" />\n        <TextInputWithIcons\n          icons={icons('title')}\n          onSubmit={onSubmit('title')}\n          placeholder={`${placeholder} title...`}\n          value={title}\n        />\n        <ItemDetailHeader title=\"Details\" />\n        <TextInputWithIcons\n          icons={icons('description')}\n          multiline\n          onSubmit={onSubmit('description')}\n          placeholder={`${placeholder} details...`}\n          value={description || ''}\n        />\n      </Card>\n    </View>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback} from 'react';\nimport {Button, Modal, Text} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {config, useRootDispatch} from '../../../../utils';\nimport {Card} from '../../components';\nimport {createItem, createUser, removeUser, setActiveUser} from '../../models';\nimport {getDefaultUserTemplate} from '../../utils/';\n\n// TODO: figure out a place for this\n// TODO: add reminders\n// TODO: add profile information\n// TODO: add payment\n\nexport const Account = memo(function Account() {\n  const color = useColor();\n  const dispatch = useRootDispatch();\n  const {goBack, navigate} = useNavigation();\n  const navBack = useCallback(() => goBack(), [goBack]);\n\n  const onLogin = useCallback(() => {\n    const {user, items} = getDefaultUserTemplate();\n    items.map((item) => dispatch(createItem(item)));\n    dispatch(createUser(user));\n    navigate('main');\n  }, [dispatch, navigate]);\n  const onLogout = useCallback(() => {\n    dispatch(removeUser());\n    navigate('main');\n  }, [dispatch, navigate]);\n  const onSetActive = useCallback(() => {\n    dispatch(setActiveUser(true));\n  }, [dispatch]);\n\n  const onNavToAdmin = useCallback(() => navigate('admin'), [navigate]);\n\n  return (\n    <Modal backgroundColor={color.surface} onBackgroundPress={navBack}>\n      <Card margin=\"bottom\">\n        <Text\n          emphasis=\"low\"\n          style={{paddingBottom: config.padding(4)}}\n          title=\"Profile\"\n          type=\"h5\"\n        />\n        <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n      </Card>\n      <Card margin=\"bottom\">\n        <Text\n          emphasis=\"low\"\n          style={{paddingBottom: config.padding(4)}}\n          title=\"Reminders\"\n          type=\"h5\"\n        />\n        <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n      </Card>\n      <Card margin=\"bottom\">\n        <Text\n          emphasis=\"low\"\n          style={{paddingBottom: config.padding(4)}}\n          title=\"Payment\"\n          type=\"h5\"\n        />\n        <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n      </Card>\n      <Card margin=\"bottom\">\n        <Text\n          emphasis=\"low\"\n          style={{paddingBottom: config.padding(4)}}\n          title=\"Feedback\"\n          type=\"h5\"\n        />\n        <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n      </Card>\n      <Button onPress={onLogin} title=\"login\" />\n      <Button onPress={onLogout} title=\"logout\" />\n      <Button onPress={onSetActive} title=\"set active\" />\n      <Button onPress={onNavToAdmin} title=\"go to admin\" />\n    </Modal>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useRef, useState} from 'react';\nimport {LayoutChangeEvent} from 'react-native';\nimport {Button, KeyboardHandler, Screen} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {config, useRootSelector} from '../../../../utils';\nimport {Card, List} from '../../components';\nimport {getInbox} from '../../models';\nimport {useKeyboardHeight} from '../../utils/useKeyboardHeight';\n\nconst initialState = {container: 0, button: 0, size: 0};\nexport const Capture = memo(function Capture() {\n  const color = useColor();\n  const {navigate} = useNavigation();\n  const containerRefs = useRef(initialState);\n  const keyboardHeight = useKeyboardHeight();\n  const [containerHeight, setContainerHeight] = useState(0);\n  const keyboardPadding = config.padding(keyboardHeight ? 11 : 48);\n  const maxHeight = containerHeight - keyboardHeight - keyboardPadding;\n\n  const itemId = useRootSelector(getInbox);\n  if (!itemId) throw new Error('missing item id');\n  const noItemChildren = useRootSelector(\n    (s) => s.completeItem.items[itemId].children.length === 0,\n  );\n\n  const onOrganize = useCallback(() => undefined, []);\n\n  const onLayout = useCallback(\n    (key: keyof typeof initialState) => (event: LayoutChangeEvent) => {\n      const {height} = event.nativeEvent.layout;\n      if (!containerRefs.current[key]) containerRefs.current[key] = height;\n      const {container, button, size} = containerRefs.current;\n      if (container > 0 && button > 0 && !size) {\n        const dimensions = container - button;\n        setContainerHeight(dimensions);\n        containerRefs.current.size = dimensions;\n      }\n    },\n    [],\n  );\n\n  const navToAccount = useCallback(() => navigate('account'), [navigate]);\n\n  return (\n    <Screen onRightPress={navToAccount} rightIcon=\"account\" title=\"Plan\">\n      <KeyboardHandler\n        backgroundColor={color.surface}\n        onLayout={onLayout('container')}>\n        <List\n          footer={\n            <Card onLayout={onLayout('button')}>\n              <Button\n                center\n                color=\"primary\"\n                disable={noItemChildren}\n                onPress={onOrganize}\n                title=\"Organize\"\n              />\n            </Card>\n          }\n          itemId={itemId}\n          maxHeight={maxHeight}\n          parentItemId={null}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useState} from 'react';\nimport {Keyboard, View} from 'react-native';\nimport {Button, Modal, Text} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {config, useRootDispatch, useRootSelector} from '../../../../utils';\nimport {Card, DeleteModal, ItemContext, ItemEdit} from '../../components';\nimport {removeItem, removeItemFromItem, updateItem} from '../../models';\n\nexport const ItemDetail = memo(function ItemDetail() {\n  const dispatch = useRootDispatch();\n  const {goBack} = useNavigation();\n  const color = useColor();\n  const navBack = useCallback(() => goBack(), [goBack]);\n  const {itemId, parentItemId} = useRootSelector((s) => s.completeItem.nav);\n  const item = useRootSelector((s) => s.completeItem.items[itemId || '']);\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  const onItemDelete = useCallback(() => {\n    if (!itemId || !parentItemId)\n      throw new Error('missing listId or itemId on item detail screen');\n    dispatch(removeItem(itemId));\n    dispatch(removeItemFromItem({parentItemId, itemId}));\n    setDeleteModal(false);\n    goBack();\n  }, [dispatch, goBack, itemId, parentItemId]);\n\n  const onItemSubmit = useCallback(\n    (type: string) => (text: string) => {\n      dispatch(updateItem({...item, [type]: text}));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onDeletePress = useCallback(() => setDeleteModal(true), []);\n  const onDeleteClose = useCallback(() => setDeleteModal(false), []);\n\n  return !item ? null : (\n    <>\n      <Modal backgroundColor={color.surface} onBackgroundPress={navBack}>\n        {!item ? (\n          <Text title=\"missing item\" />\n        ) : (\n          <View>\n            <ItemEdit\n              description={item.description}\n              onSubmit={onItemSubmit}\n              placeholder=\"Item\"\n              title={item.title}\n            />\n            <Card margin=\"bottom\">\n              <Text title=\"Reminders\" />\n            </Card>\n            <Card margin=\"bottom\">\n              <Text title=\"Tags\" />\n            </Card>\n            <Card margin=\"bottom\">\n              <Text title=\"Comments\" />\n            </Card>\n            <ItemContext\n              createdAt={item.createdAt}\n              type={item.type}\n              updatedAt={item.updatedAt}\n              userId={item.userId}\n            />\n            {!item.editable ? (\n              <Card flex>\n                <Button center onPress={navBack} title=\"close\" />\n              </Card>\n            ) : (\n              <View\n                style={{\n                  flexDirection: 'row',\n                  flex: 1,\n                  justifyContent: 'space-between',\n                }}>\n                <Card flex>\n                  <Button center onPress={navBack} title=\"close\" />\n                </Card>\n                <View style={{padding: config.padding(2)}} />\n                <Card flex>\n                  <Button\n                    center\n                    color=\"danger\"\n                    onPress={onDeletePress}\n                    title=\"delete\"\n                  />\n                </Card>\n              </View>\n            )}\n          </View>\n        )}\n      </Modal>\n      {!deleteModal ? null : (\n        <DeleteModal onCancel={onDeleteClose} onDelete={onItemDelete} />\n      )}\n    </>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback} from 'react';\nimport {Button, Carousel, Screen} from '../../../../components';\nimport {Slide} from '../../../../components/Carousel/types';\nimport {useColor} from '../../../../hooks';\n\nexport const Landing = memo(function Landing() {\n  const {navigate} = useNavigation();\n  const color = useColor();\n  const navPortfolioLogin = useCallback(() => navigate('account'), [navigate]);\n\n  const slides: Slide[] = [\n    {id: '1', text: 'hello', color: color.info},\n    {id: '2', text: 'bob', color: color.warning},\n    {id: '3', text: 'steve', color: color.success},\n    {id: '4', text: 'jill', color: color.brand},\n  ];\n\n  return (\n    <Screen title=\"Landing\">\n      <Carousel slides={slides} />\n      <Button center onPress={navPortfolioLogin} title=\"Login\" />\n    </Screen>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useState} from 'react';\nimport {LayoutChangeEvent} from 'react-native';\nimport {KeyboardHandler, Screen} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {getSmallestDimension} from '../../../../models';\nimport {config, useRootSelector} from '../../../../utils';\nimport {Board} from '../../components';\nimport {useKeyboardHeight} from '../../utils/useKeyboardHeight';\n\n// TODO: figure out centering of list\n\nexport const Project = memo(function Project() {\n  const {goBack} = useNavigation();\n  const color = useColor();\n  const screenWidth = useRootSelector(getSmallestDimension);\n  const {projectItemId} = useRootSelector((s) => s.completeItem.nav);\n  if (!projectItemId) throw new Error('missing projectItemId on board screen');\n  const projectItemType = useRootSelector(\n    (s) => s.completeItem.items[projectItemId].type,\n  );\n  const projectItemTitle = useRootSelector(\n    (s) => s.completeItem.items[projectItemId].title,\n  );\n  if (!projectItemType)\n    throw new Error('missing projectItemType on board screen');\n  const listWidth = screenWidth * 0.7;\n  const [container, setContainer] = useState(0);\n  const keyboardHeight = useKeyboardHeight();\n  const typePadding = config.padding(projectItemType === 'list' ? 12 : 0);\n  const keyboardPadding = config.padding(keyboardHeight ? 28 : 48);\n  const listMaxHeight =\n    container - keyboardHeight - keyboardPadding + typePadding;\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      if (container > 0) return;\n      setContainer(event.nativeEvent.layout.height);\n    },\n    [container],\n  );\n\n  const navBack = useCallback(() => {\n    goBack();\n  }, [goBack]);\n\n  return (\n    <Screen onLeftPress={navBack} title={projectItemTitle}>\n      <KeyboardHandler backgroundColor={color.surface} onLayout={onLayout}>\n        <Board\n          listMaxHeight={listMaxHeight}\n          listWidth={listWidth}\n          projectItemId={projectItemId}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useState} from 'react';\nimport {LayoutChangeEvent} from 'react-native';\nimport {KeyboardHandler, Screen} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {config, useRootSelector} from '../../../../utils';\nimport {List} from '../../components';\nimport {getProjects} from '../../models';\nimport {useKeyboardHeight} from '../../utils/useKeyboardHeight';\n\n// TODO: add journal\n// TODO: add historical data\n// TODO: add purpose\n// TODO: add goals\n\n// TODO: render as <Board />\n\nexport const Projects = memo(function Projects() {\n  const color = useColor();\n  const {navigate} = useNavigation();\n  const [dimensions, setDimensions] = useState(0);\n  const keyboardHeight = useKeyboardHeight();\n  const itemId = useRootSelector(getProjects);\n  if (!itemId) throw new Error('missing item id');\n  const keyboardPadding = config.padding(keyboardHeight ? 16 : 35);\n  const maxHeight = dimensions - keyboardHeight - keyboardPadding;\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      if (dimensions > 0) return;\n      setDimensions(event.nativeEvent.layout.height);\n    },\n    [dimensions],\n  );\n\n  const navToAccount = useCallback(() => navigate('account'), [navigate]);\n\n  return (\n    <Screen onRightPress={navToAccount} rightIcon=\"account\" title=\"Implement\">\n      <KeyboardHandler backgroundColor={color.surface} onLayout={onLayout}>\n        <List\n          itemId={itemId}\n          key={itemId}\n          maxHeight={maxHeight}\n          parentItemId={null}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import {scaleLinear, scaleTime} from 'd3-scale';\nimport * as shape from 'd3-shape';\nimport * as React from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport Svg, {Defs, LinearGradient, Path, Stop} from 'react-native-svg';\n\ninterface DataPoint {\n  date: number;\n  value: number;\n}\n\ninterface GraphProps {\n  data: DataPoint[];\n  width: number;\n  height: number;\n}\n\nconst strokeWidth = 4;\nconst padding = strokeWidth / 2;\nconst getDomain = (domain: number[]) => [\n  Math.min(...domain),\n  Math.max(...domain),\n];\n\nexport const Graph = ({\n  data,\n  width,\n  height,\n}: GraphProps): React.ReactElement => {\n  const scaleX = scaleTime()\n    .domain(getDomain(data.map((d) => d.date)))\n    .range([0, width]);\n  const scaleY = scaleLinear()\n    .domain(getDomain(data.map((d) => d.value)))\n    .range([height - padding, padding]);\n  const d = shape\n    .line<DataPoint>()\n    .x((p) => scaleX(p.date))\n    .y((p) => scaleY(p.value))\n    .curve(shape.curveBasis)(data) as string;\n  return (\n    <View style={{width, height}}>\n      <Svg style={StyleSheet.absoluteFill}>\n        <Defs>\n          <LinearGradient id=\"gradient\" x1=\"50%\" x2=\"50%\" y1=\"0%\" y2=\"100%\">\n            <Stop offset=\"0%\" stopColor=\"#cee3f9\" />\n            <Stop offset=\"80%\" stopColor=\"#ddedfa\" />\n            <Stop offset=\"100%\" stopColor=\"#feffff\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d={`${d}L ${width} ${height} L 0 ${height}`}\n          fill=\"url(#gradient)\"\n        />\n        <Path fill=\"transparent\" stroke=\"#3977e3\" {...{d, strokeWidth}} />\n      </Svg>\n    </View>\n  );\n};\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback} from 'react';\nimport {Dimensions, View} from 'react-native';\nimport {Calendar, Screen, Text} from '../../../../components';\nimport {ScrollView} from '../../../../conversions';\nimport {useColor} from '../../../../hooks';\nimport {config} from '../../../../utils';\nimport {Card} from '../../components/Card';\nimport {completeConfig} from '../../utils';\nimport {Graph} from './Graph';\n\n// TODO: add journal\n// TODO: add historical data\n// TODO: add purpose\n// TODO: add goals\n\ntype TitleProps = {name: string};\n\nconst Title = ({name}: TitleProps) => {\n  return (\n    <Text\n      emphasis=\"high\"\n      style={{paddingBottom: completeConfig.padding}}\n      title={name}\n      type=\"h4\"\n    />\n  );\n};\n\nconst data = [\n  {date: new Date(2018, 9, 1).getTime(), value: 0},\n  {date: new Date(2018, 9, 16).getTime(), value: 0},\n  {date: new Date(2018, 9, 17).getTime(), value: 200},\n  {date: new Date(2018, 10, 1).getTime(), value: 200},\n  {date: new Date(2018, 10, 2).getTime(), value: 300},\n  {date: new Date(2018, 10, 5).getTime(), value: 300},\n];\n\nexport const Reflect = memo(function Reflect() {\n  const color = useColor();\n  const {navigate} = useNavigation();\n  const navToAccount = useCallback(() => navigate('account'), [navigate]);\n\n  return (\n    <Screen onRightPress={navToAccount} rightIcon=\"account\" title=\"Reflect\">\n      <ScrollView\n        contentContainerStyle={{\n          padding: config.padding(4),\n          backgroundColor: color.surface,\n        }}\n        style={{backgroundColor: color.surface}}>\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Purpose\" />\n            <Text title=\"Make a significant positive difference in global productivity\" />\n          </View>\n        </Card>\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Goals\" />\n            <Text title=\"Top 3\" />\n            <Text title=\"Deep Focus\" />\n            <Text title=\"Smile\" />\n            <Text title=\"1 More Rep\" />\n          </View>\n        </Card>\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Review (Progress)\" />\n            <View\n              style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n              <Graph\n                data={data}\n                height={200}\n                width={\n                  Dimensions.get('window').width - completeConfig.padding * 4\n                }\n              />\n            </View>\n          </View>\n        </Card>\n        <Card>\n          <View>\n            <Title name=\"Reflect (Journal)\" />\n            <Calendar />\n          </View>\n        </Card>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import {\n  BottomTabBarOptions,\n  createBottomTabNavigator,\n} from '@react-navigation/bottom-tabs';\nimport {Route} from '@react-navigation/native';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport React, {memo, useCallback} from 'react';\nimport {Icon, Modal, Notification} from '../../components';\nimport {useColor} from '../../hooks';\nimport {rootMode, rootScreenOptions} from '../../providers/Navigation/configs';\nimport {useRootSelector} from '../../utils';\nimport {\n  Account,\n  Capture,\n  ItemDetail,\n  Landing,\n  Project,\n  Projects,\n  Reflect,\n} from './screens';\n\nconst noHeader: StackNavigationOptions = {headerShown: false};\nconst RootTab = createBottomTabNavigator();\nconst RootStack = createStackNavigator();\nconst ProjectsStack = createStackNavigator();\n\ntype Tabs = 'plan' | 'implement' | 'reflect';\ntype TabIcons = {\n  [key in Tabs]: {focused: string; unFocused: string};\n};\n\nconst tabIcons: TabIcons = {\n  plan: {\n    focused: 'pencil-plus-outline',\n    unFocused: 'pencil-plus-outline',\n  },\n  implement: {\n    focused: 'checkbox-multiple-marked-outline',\n    unFocused: 'checkbox-multiple-marked-outline',\n  },\n  reflect: {focused: 'finance', unFocused: 'finance'},\n};\n\ntype ScreenOptionsProps = {\n  route: Route<string, Record<string, unknown> | undefined>;\n};\n\ntype TabBarIconProps = {\n  focused: boolean;\n  size: number;\n};\n\nconst Implement = () => {\n  return (\n    <ProjectsStack.Navigator screenOptions={noHeader}>\n      <ProjectsStack.Screen component={Projects} name=\"projects\" />\n      <ProjectsStack.Screen component={Project} name=\"project\" />\n    </ProjectsStack.Navigator>\n  );\n};\n\nconst Tabs = () => {\n  const color = useColor();\n  const tabBarOptions: BottomTabBarOptions = {\n    keyboardHidesTabBar: true,\n    activeTintColor: color.text,\n    inactiveTintColor: color.secondary,\n    showLabel: false,\n  };\n  const screenOptions = useCallback(\n    ({route}: ScreenOptionsProps) => ({\n      tabBarIcon: function tabBarIcon({focused, size}: TabBarIconProps) {\n        const key = focused ? 'focused' : 'unFocused';\n        const iconColor = focused ? color.text : color.secondary;\n        const name = (tabIcons as any)[route.name][key];\n        return <Icon color={iconColor} name={name} size={size} />;\n      },\n    }),\n    [color],\n  );\n\n  return (\n    <RootTab.Navigator\n      screenOptions={screenOptions as any}\n      tabBarOptions={tabBarOptions}>\n      <RootTab.Screen component={Capture} name=\"plan\" />\n      <RootTab.Screen component={Implement} name=\"implement\" />\n      <RootTab.Screen component={Reflect} name=\"reflect\" />\n    </RootTab.Navigator>\n  );\n};\n\nexport default memo(function Complete() {\n  const user = useRootSelector((s) => s.completeUser);\n  const Main = user ? Tabs : Landing;\n  return (\n    <RootStack.Navigator mode={rootMode} screenOptions={rootScreenOptions}>\n      <RootStack.Screen component={Main} name=\"main\" />\n      <RootStack.Screen component={Account} name=\"account\" />\n      <RootStack.Screen component={Notification} name=\"notification\" />\n      <RootStack.Screen component={Modal} name=\"alert\" />\n      <RootStack.Screen component={ItemDetail} name=\"item-detail\" />\n    </RootStack.Navigator>\n  );\n});\n\n/*\n\n# Data\n\n- user\n-> collections [projects, lists]\n-> boards [home, work, town] | [meeting notes, book summaries, checklists]\n-> lists [backlog, todo, in progress, done] | [draft, final]\n-> item [find comb, clear emails, daily standup]\n\n# Screens\n\n## Plan\n\n### Inbox (list -> item -> details)\n- \"add grey list\" -> @app\n- \"find comb\" -> @home\n- \"clear emails\" -> @work\n- \"put $20 in phone\" -> @town\n- \"drink water\" -> @after-waking-up\n- \"intensity + implement = deep work\" -> book summaries\n\n## Organize\n\n### Projects (item -> lists -> item -> details )\n- @home -> (backlog, todo, in progress, done xx, done xx)\n- @town\n- @work\n- @gym\n- @app\n\n### Lists (item -> list -> item -> detail)\n- meeting notes\n - one-on-one\n - daily standup\n- book summaries\n - the one thing\n - getting things done\n - eat that frog\n- gift ideas\n - mom\n - dad\n - girlfriend\n- checklists\n - after waking up\n - after entering bathroom\n\n## Reflect\n\n### Purpose\n\n### Goals\n\n### Review (Progress)\n\n### Reflect (Journal)\n\n## Account\n\n### Profile\n\n### Notifications\n\n### Payment\n*/\n"],"sourceRoot":""}