{"version":3,"sources":["../node_modules/d3-shape/src/constant.js","../node_modules/d3-shape/src/descending.js","../node_modules/d3-shape/src/identity.js","../node_modules/d3-shape/src/math.js","../node_modules/d3-shape/src/pie.js","../node_modules/d3-path/src/path.js","../node_modules/d3-shape/src/arc.js","apps/Playground/FortuneWheel/utils.tsx","apps/Playground/FortuneWheel/Wheel.tsx","apps/Playground/FortuneWheel/index.tsx"],"names":["x","a","b","NaN","d","abs","Math","atan2","cos","max","min","sin","sqrt","pi","PI","halfPi","tau","acos","asin","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","x20","y20","l21_2","l20_2","l21","l01","l","tan","t01","t21","arc","a0","a1","ccw","dx","dy","cw","da","rect","w","h","toString","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","intersect","x3","y3","x10","y10","x32","y32","t","cornerTangents","r1","rc","lo","ox","oy","x11","y11","x00","y00","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","getNewLocation","minSpin","maxSpin","numOfSegments","location","floor","random","getRandomRange","Wheel","memo","size","Dimensions","get","width","backgroundColor","textColor","fontSize","segments","noBounce","spinSpeed","bounceSpeed","onComplete","color","useColor","dropShadow","useDropShadow","background","text","radius","knobSize","knobOffset","length","angleOfSegment","angleOffset","spinning","useRef","angle","Animated","Value","yPosition","arcs","value","identity","sortValues","descending","sort","constant","pie","data","i","j","k","v","n","sum","index","Array","apply","arguments","p","pa","d3","map","instance","cornerRadius","padRadius","context","buffer","r0","t0","t1","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","ax","ay","bx","by","kc","lc","centroid","segment","onSpinComplete","useCallback","current","winnerIndex","deg","getWinnerIndex","spin","newLocation","timing","toValue","duration","easing","Easing","inOut","useNativeDriver","start","onPress","bounce","config","useEffect","TouchableOpacity","View","style","transform","translateY","interpolate","inputRange","outputRange","height","borderRadius","alignItems","marginTop","position","fill","light","points","stroke","secondary","strokeWidth","rotate","key","String","origin","rotation","textAnchor","display","useMemo","primary","info","danger","brand","warning","success","useSegments","nav","useNav","useState","winner","setWinner","navBack","onLeftPress","title","center"],"mappings":"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","file":"static/js/39.24366a59.chunk.js","sourcesContent":["export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import constant from \"./constant.js\";\nimport descending from \"./descending.js\";\nimport identity from \"./identity.js\";\nimport {tau} from \"./math.js\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","type GetRandomRange = {\n  min: number;\n  max: number;\n};\n\nconst getRandomRange = ({min, max}: GetRandomRange) => {\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\ntype GetNewLocation = {\n  minSpin: number;\n  maxSpin: number;\n  numOfSegments: number;\n  location: number;\n};\n\nexport const getNewLocation = ({\n  minSpin,\n  maxSpin,\n  numOfSegments,\n  location,\n}: GetNewLocation): number => {\n  const spins = getRandomRange({min: minSpin, max: maxSpin}) * 360;\n  const winner = Math.floor(Math.random() * numOfSegments);\n  const winnerSection = (winner * 360) / numOfSegments;\n  const newLocation = location + spins + winnerSection;\n  return newLocation;\n};\n\ntype GetWinnerIndex = {\n  location: number;\n  numOfSegments: number;\n  angleOfSegment: number;\n};\n\nexport const getWinnerIndex = ({\n  location,\n  numOfSegments,\n  angleOfSegment,\n}: GetWinnerIndex): number => {\n  const deg = 360 - Math.floor(location % 360);\n  const index = Math.floor(deg / angleOfSegment);\n  return index >= numOfSegments ? 0 : index;\n};\n","import React, {memo, useCallback, useEffect, useRef} from 'react';\nimport {Animated, Dimensions, Easing, TouchableOpacity} from 'react-native';\nimport * as d3 from 'd3-shape';\nimport Svg, {G, Path, Polygon, Text} from 'react-native-svg';\nimport {useColor, useDropShadow} from '../../../hooks';\nimport {getNewLocation, getWinnerIndex} from './utils';\n\ntype Segment = {\n  value: string;\n  display: string;\n  color: string;\n};\n\ntype Props = {\n  size?: number;\n  padAngle?: number;\n  backgroundColor?: string;\n  borderColor?: string;\n  textColor?: string;\n  borderWidth?: number;\n  fontSize?: number;\n  innerRadius?: number;\n  segments: Segment[];\n  spinSpeed?: number;\n  noBounce?: boolean;\n  bounceSpeed?: number;\n  minSpin?: number;\n  maxSpin?: number;\n  onComplete: (segment: Segment) => void;\n};\n\nexport const Wheel = memo(\n  ({\n    size = Dimensions.get('screen').width,\n    backgroundColor,\n    textColor,\n    fontSize = 24,\n    segments,\n    noBounce,\n    padAngle = 0.02,\n    innerRadius = 60,\n    spinSpeed = 1000,\n    bounceSpeed = 5000,\n    minSpin = 3,\n    maxSpin = 7,\n    onComplete,\n  }: Props) => {\n    const color = useColor();\n    const dropShadow = useDropShadow();\n    const background = backgroundColor || color.background;\n    const text = textColor || color.text;\n    const radius = size / 2;\n    const knobSize = size / 8;\n    const knobOffset = knobSize * 0.6;\n    const numOfSegments = segments.length;\n    const angleOfSegment = 360 / numOfSegments;\n    const angleOffset = angleOfSegment / 2;\n    const spinning = useRef(false);\n    const location = useRef(0);\n    const angle = new Animated.Value(0);\n    const yPosition = new Animated.Value(-1);\n    const arcs = d3\n      .pie()(segments.map(() => 1))\n      .map((arc: any, index) => {\n        const instance = d3\n          .arc()\n          .padAngle(padAngle)\n          .outerRadius(radius)\n          .innerRadius(innerRadius);\n        return {\n          path: instance(arc),\n          centroid: instance.centroid(arc),\n          segment: segments[index],\n        };\n      });\n\n    const onSpinComplete = useCallback(() => {\n      spinning.current = false;\n      const winnerIndex = getWinnerIndex({\n        location: location.current,\n        numOfSegments,\n        angleOfSegment,\n      });\n      onComplete(segments[winnerIndex]);\n    }, [angleOfSegment, numOfSegments, onComplete, segments]);\n\n    const spin = useCallback(() => {\n      const newLocation = getNewLocation({\n        minSpin,\n        maxSpin,\n        numOfSegments,\n        location: location.current,\n      });\n      location.current = newLocation;\n      spinning.current = true;\n      Animated.timing(angle, {\n        toValue: newLocation,\n        duration: spinSpeed,\n        easing: Easing.inOut(Easing.sin),\n        useNativeDriver: true,\n      }).start(onSpinComplete);\n    }, [angle, maxSpin, minSpin, numOfSegments, onSpinComplete, spinSpeed]);\n\n    const onPress = useCallback(() => {\n      if (spinning.current) {\n        return;\n      }\n      spin();\n    }, [spin]);\n\n    const bounce = useCallback(\n      (toValue: number) => {\n        const config = {toValue, duration: bounceSpeed, useNativeDriver: true};\n        Animated.timing(yPosition, config).start(() =>\n          bounce(toValue === 1 ? -1 : 1),\n        );\n      },\n      [bounceSpeed, yPosition],\n    );\n\n    useEffect(() => {\n      if (noBounce) {\n        return;\n      }\n      bounce(1);\n    }, [bounce, noBounce]);\n\n    return (\n      <TouchableOpacity onPress={onPress}>\n        <Animated.View\n          style={{\n            transform: [\n              {\n                translateY: yPosition.interpolate({\n                  inputRange: [-1, 0, 1],\n                  outputRange: [-10, 0, -10],\n                }),\n              },\n            ],\n            backgroundColor: background,\n            width: size,\n            height: size,\n            borderRadius: size,\n            alignItems: 'center',\n            marginTop: knobOffset,\n            ...dropShadow(3),\n          }}>\n          <Svg\n            style={{\n              marginTop: -knobOffset,\n              position: 'absolute',\n              width: knobSize,\n              height: knobSize,\n              ...dropShadow(6),\n            }}>\n            <Polygon\n              fill={color.light}\n              points={`${knobSize / 2},0 ${knobSize * 0.85},${knobSize / 3} ${\n                knobSize / 2\n              },${knobSize} ${knobSize * 0.15},${knobSize / 3},`}\n              stroke={color.secondary}\n              strokeWidth={0.2}\n            />\n          </Svg>\n          <Animated.View\n            style={{\n              width: size,\n              height: size,\n              transform: [\n                {\n                  rotate: angle.interpolate({\n                    inputRange: [-360, 0, 360],\n                    outputRange: ['-360deg', '0deg', '360deg'],\n                  }),\n                },\n              ],\n            }}>\n            <Svg\n              style={{\n                transform: [{rotate: `-${angleOffset}deg`}],\n              }}>\n              <G x={radius} y={radius}>\n                {arcs.map((arc, i) => (\n                  <G key={`arc-${i}`}>\n                    <Path d={String(arc.path)} fill={arc.segment.color} />\n                    <G\n                      origin={`${arc.centroid}`}\n                      rotation={(i * 360) / segments.length + angleOffset}>\n                      <Text\n                        fill={text}\n                        fontSize={fontSize}\n                        textAnchor=\"middle\"\n                        x={arc.centroid[0]}\n                        y={arc.centroid[1] - knobOffset / 2}>\n                        {arc.segment.display}\n                      </Text>\n                    </G>\n                  </G>\n                ))}\n              </G>\n            </Svg>\n          </Animated.View>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  },\n);\n","import React, {memo, useCallback, useMemo, useState} from 'react';\nimport {Screen, Text} from '../../../components';\nimport {useColor, useNav} from '../../../hooks';\nimport {Wheel} from './Wheel';\n\nconst useSegments = () => {\n  const color = useColor();\n  return useMemo(\n    () => [\n      {display: '1', value: '1', color: color.primary},\n      {display: '2', value: '2', color: color.info},\n      {display: '3', value: '3', color: color.danger},\n      {display: '4', value: '4', color: color.brand},\n      {display: '5', value: '5', color: color.warning},\n      {display: '6', value: '6', color: color.success},\n      {display: '7', value: '7', color: color.secondary},\n    ],\n    [\n      color.brand,\n      color.danger,\n      color.info,\n      color.primary,\n      color.secondary,\n      color.success,\n      color.warning,\n    ],\n  );\n};\n\nexport default memo(function PlaygroundFortuneWheel() {\n  const segments = useSegments();\n  const nav = useNav();\n  const [winner, setWinner] = useState(null);\n\n  const onComplete = useCallback((a) => {\n    setWinner(a.display);\n  }, []);\n\n  const navBack = useCallback(nav('playground'), [nav]);\n\n  // TODO: fix text on android\n  // TODO: increase duration based on spin\n\n  return (\n    <Screen onLeftPress={navBack} title=\"FortuneWheel\">\n      <Wheel onComplete={onComplete} segments={segments} />\n      <Text center title={String(winner)} />\n    </Screen>\n  );\n});\n"],"sourceRoot":""}