{"version":3,"sources":["components/Content/index.tsx","apps/Playground/screens/Article/data.ts","apps/Playground/screens/Article/index.tsx"],"names":["ParagraphType","Content","memo","body","color","useColor","styles","StyleSheet","create","content","paddingHorizontal","Theme","padding","p04","link","primary","paragraph","paddingBottom","p02","section","title","ScrollView","contentContainerStyle","sections","map","sectionIndex","View","style","key","type","titleType","paragraphs","paragraphIndex","sentences","sentence","Link","onPress","data","Phrase","nav","useNav","onLeftPress","to"],"mappings":"gHAgCYA,E,yFAAAA,O,mBAAAA,I,gBAAAA,M,KAUL,IAAMC,EAAUC,gBAAK,YAAoB,IAAlBC,EAAiB,EAAjBA,KACtBC,EAAQC,cACRC,EAASC,IAAWC,OAAO,CAC/BC,QAAS,CACPC,kBAAmBC,IAAMC,QAAQC,KAEnCC,KAAM,CACJV,MAAOA,EAAMW,SAEfC,UAAW,CACTC,cAAeN,IAAMC,QAAQM,KAE/BC,QAAS,CACPF,cAAeN,IAAMC,QAAQC,KAE/BO,MAAO,CACLH,cAAeN,IAAMC,QAAQM,OAIjC,OACE,kBAACG,EAAA,EAAD,CAAYC,sBAAuBhB,EAAOG,SACvCN,EAAKoB,SAASC,KAAI,SAACL,EAASM,GAAV,OACjB,kBAACC,EAAA,EAAD,CAAMC,MAAOrB,EAAOa,QAASS,IAAG,YAAOH,IACpCN,EAAQC,OACP,kBAAC,IAAD,CACEQ,IAAKT,EAAQC,MACbA,MAAOD,EAAQC,MACfO,MAAOrB,EAAOc,MACdS,KAAMV,EAAQW,YAGjBX,EAAQY,WAAWP,KAAI,SAACR,EAAWgB,GAAZ,OACtB,kBAAC,IAAD,CAAUL,MAAOrB,EAAOU,UAAWY,IAAG,YAAOI,IAC1ChB,EAAUiB,UAAUT,KAAI,SAACU,GAAD,OACvBA,EAASL,OAAS7B,EAAcmC,KAC9B,kBAAC,IAAD,CACEP,IAAKM,EAASzB,QACdW,MAAK,UAAKc,EAASzB,QAAd,KACL2B,QAASF,EAASE,QAClBT,MAAOrB,EAAOQ,OAGhB,kBAAC,IAAD,CAAMc,IAAKM,EAASzB,QAASW,MAAK,UAAKc,EAASzB,QAAd,sBCnFvC4B,EAAoB,CAC/Bd,SAAU,CACR,CACEQ,WAAY,CACV,CACEE,UAAW,CACT,CACExB,QAAS,qCACToB,KAAM7B,EAAcsC,WAK5BlB,MAAO,UACPU,UAAW,MAEb,CACEC,WAAY,CACV,CACEE,UAAW,CACT,CACExB,QAAS,kBACToB,KAAM7B,EAAcsC,QAEtB,CACE7B,QAAS,WACT2B,QAAS,aACTP,KAAM7B,EAAcmC,MAEtB,CACE1B,QAAS,kCACToB,KAAM7B,EAAcsC,UAI1B,CACEL,UAAW,CACT,CACExB,QAAS,mBACToB,KAAM7B,EAAcsC,QAEtB,CACE7B,QAAS,WACT2B,QAAS,aACTP,KAAM7B,EAAcmC,MAEtB,CACE1B,QACE,uIACFoB,KAAM7B,EAAcsC,WAK5BlB,MAAO,WACPU,UAAW,MAEb,CACEC,WAAY,CACV,CACEE,UAAW,CACT,CACExB,QAAS,kBACToB,KAAM7B,EAAcsC,QAEtB,CACE7B,QAAS,WACT2B,QAAS,aACTP,KAAM7B,EAAcmC,MAEtB,CACE1B,QAAS,kCACToB,KAAM7B,EAAcsC,UAI1B,CACEL,UAAW,CACT,CACExB,QAAS,mBACToB,KAAM7B,EAAcsC,QAEtB,CACE7B,QAAS,WACT2B,QAAS,aACTP,KAAM7B,EAAcmC,MAEtB,CACE1B,QACE,uIACFoB,KAAM7B,EAAcsC,UAI1B,CACEL,UAAW,CACT,CACExB,QAAS,kBACToB,KAAM7B,EAAcsC,QAEtB,CACE7B,QAAS,WACT2B,QAAS,aACTP,KAAM7B,EAAcmC,MAEtB,CACE1B,QACE,uIACFoB,KAAM7B,EAAcsC,WAK5BlB,MAAO,aACPU,UAAW,MAEb,CACEC,WAAY,CACV,CACEE,UAAW,CACT,CACExB,QAAS,kBACToB,KAAM7B,EAAcsC,QAEtB,CACE7B,QAAS,WACT2B,QAAS,aACTP,KAAM7B,EAAcmC,MAEtB,CACE1B,QAAS,kCACToB,KAAM7B,EAAcsC,UAI1B,CACEL,UAAW,CACT,CACExB,QAAS,mBACToB,KAAM7B,EAAcsC,QAEtB,CACE7B,QAAS,cACT2B,QAAS,aACTP,KAAM7B,EAAcmC,MAEtB,CACE1B,QACE,uIACFoB,KAAM7B,EAAcsC,UAI1B,CACEL,UAAW,CACT,CACExB,QAAS,kBACToB,KAAM7B,EAAcsC,QAEtB,CACE7B,QAAS,WACT2B,QAAS,aACTP,KAAM7B,EAAcmC,MAEtB,CACE1B,QACE,uIACFoB,KAAM7B,EAAcsC,WAK5BlB,MAAO,aACPU,UAAW,QCzKF5B,0BAAK,WAClB,IAAMqC,EAAMC,cAEZ,OACE,kBAAC,IAAD,CAAQC,YAAaF,EAAIG,GAAG,cAAetB,MAAM,WAC/C,kBAACnB,EAAD,CAASE,KAAMkC","file":"static/js/29.ddf85c0e.chunk.js","sourcesContent":["import React, {memo} from 'react';\nimport {Text as Original, ScrollView, StyleSheet, View} from 'react-native';\nimport {Theme} from '../../utils';\nimport {Text} from '../Text';\nimport {useColor} from '../../hooks';\nimport {FontType} from '../Text/utils';\n\nexport interface ContentBody {\n  sections: Sections;\n}\ntype Sections = Section[];\ninterface Section {\n  title: string;\n  titleType: FontType;\n  paragraphs: Paragraphs;\n}\ntype Paragraphs = Paragraph[];\ninterface Paragraph {\n  sentences: Sentences;\n}\ntype Sentences = Sentence[];\ntype Sentence = Phrase | Link;\ninterface Phrase {\n  content: string;\n  type: ParagraphType.Phrase;\n}\ninterface Link {\n  content: string;\n  type: ParagraphType.Link;\n  onPress(): void;\n}\n\nexport enum ParagraphType {\n  Phrase,\n  Link,\n}\n\ninterface Props {\n  body: ContentBody;\n}\n\n// TODO: use Sentence component\nexport const Content = memo(({body}: Props) => {\n  const color = useColor();\n  const styles = StyleSheet.create({\n    content: {\n      paddingHorizontal: Theme.padding.p04,\n    },\n    link: {\n      color: color.primary,\n    },\n    paragraph: {\n      paddingBottom: Theme.padding.p02,\n    },\n    section: {\n      paddingBottom: Theme.padding.p04,\n    },\n    title: {\n      paddingBottom: Theme.padding.p02,\n    },\n  });\n\n  return (\n    <ScrollView contentContainerStyle={styles.content}>\n      {body.sections.map((section, sectionIndex) => (\n        <View style={styles.section} key={`s-${sectionIndex}`}>\n          {section.title && (\n            <Text\n              key={section.title}\n              title={section.title}\n              style={styles.title}\n              type={section.titleType}\n            />\n          )}\n          {section.paragraphs.map((paragraph, paragraphIndex) => (\n            <Original style={styles.paragraph} key={`p-${paragraphIndex}`}>\n              {paragraph.sentences.map((sentence) =>\n                sentence.type === ParagraphType.Link ? (\n                  <Text\n                    key={sentence.content}\n                    title={`${sentence.content} `}\n                    onPress={sentence.onPress}\n                    style={styles.link}\n                  />\n                ) : (\n                  <Text key={sentence.content} title={`${sentence.content} `} />\n                ),\n              )}\n            </Original>\n          ))}\n        </View>\n      ))}\n    </ScrollView>\n  );\n});\n","import {ContentBody, ParagraphType} from '../../../../components/Content';\n\nexport const data: ContentBody = {\n  sections: [\n    {\n      paragraphs: [\n        {\n          sentences: [\n            {\n              content: 'best way to get your life together',\n              type: ParagraphType.Phrase,\n            },\n          ],\n        },\n      ],\n      title: 'Do This',\n      titleType: 'h1',\n    },\n    {\n      paragraphs: [\n        {\n          sentences: [\n            {\n              content: 'first paragraph',\n              type: ParagraphType.Phrase,\n            },\n            {\n              content: 'nav here',\n              onPress: () => undefined,\n              type: ParagraphType.Link,\n            },\n            {\n              content: 'blah bldah blah. blah blah blah',\n              type: ParagraphType.Phrase,\n            },\n          ],\n        },\n        {\n          sentences: [\n            {\n              content: 'second paragraph',\n              type: ParagraphType.Phrase,\n            },\n            {\n              content: 'nav here',\n              onPress: () => undefined,\n              type: ParagraphType.Link,\n            },\n            {\n              content:\n                'blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah',\n              type: ParagraphType.Phrase,\n            },\n          ],\n        },\n      ],\n      title: 'h2 title',\n      titleType: 'h2',\n    },\n    {\n      paragraphs: [\n        {\n          sentences: [\n            {\n              content: 'first paragraph',\n              type: ParagraphType.Phrase,\n            },\n            {\n              content: 'nav here',\n              onPress: () => undefined,\n              type: ParagraphType.Link,\n            },\n            {\n              content: 'blah bldah blah. blah blah blah',\n              type: ParagraphType.Phrase,\n            },\n          ],\n        },\n        {\n          sentences: [\n            {\n              content: 'second paragraph',\n              type: ParagraphType.Phrase,\n            },\n            {\n              content: 'nav here',\n              onPress: () => undefined,\n              type: ParagraphType.Link,\n            },\n            {\n              content:\n                'blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah',\n              type: ParagraphType.Phrase,\n            },\n          ],\n        },\n        {\n          sentences: [\n            {\n              content: 'third paragraph',\n              type: ParagraphType.Phrase,\n            },\n            {\n              content: 'nav here',\n              onPress: () => undefined,\n              type: ParagraphType.Link,\n            },\n            {\n              content:\n                'blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah',\n              type: ParagraphType.Phrase,\n            },\n          ],\n        },\n      ],\n      title: 'h3 content',\n      titleType: 'h3',\n    },\n    {\n      paragraphs: [\n        {\n          sentences: [\n            {\n              content: 'first paragraph',\n              type: ParagraphType.Phrase,\n            },\n            {\n              content: 'nav here',\n              onPress: () => undefined,\n              type: ParagraphType.Link,\n            },\n            {\n              content: 'blah bldah blah. blah blah blah',\n              type: ParagraphType.Phrase,\n            },\n          ],\n        },\n        {\n          sentences: [\n            {\n              content: 'second paragraph',\n              type: ParagraphType.Phrase,\n            },\n            {\n              content: 'nav herhere',\n              onPress: () => undefined,\n              type: ParagraphType.Link,\n            },\n            {\n              content:\n                'blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah',\n              type: ParagraphType.Phrase,\n            },\n          ],\n        },\n        {\n          sentences: [\n            {\n              content: 'third paragraph',\n              type: ParagraphType.Phrase,\n            },\n            {\n              content: 'nav here',\n              onPress: () => undefined,\n              type: ParagraphType.Link,\n            },\n            {\n              content:\n                'blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah',\n              type: ParagraphType.Phrase,\n            },\n          ],\n        },\n      ],\n      title: 'h4 content',\n      titleType: 'h4',\n    },\n  ],\n};\n","import React, {memo} from 'react';\nimport {Screen} from '../../../../components';\nimport {Content} from '../../../../components/Content';\nimport {useNav} from '../../../../hooks';\nimport {data} from './data';\n\nexport default memo(function PlaygroundArticle() {\n  const nav = useNav();\n\n  return (\n    <Screen onLeftPress={nav.to('playground')} title=\"Article\">\n      <Content body={data} />\n    </Screen>\n  );\n});\n"],"sourceRoot":""}