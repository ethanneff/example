{"version":3,"sources":["apps/Checklists/screens/ListCreate/index.tsx"],"names":["initialState","name","description","memo","nav","useNav","dispatch","useRootDispatch","useState","form","setForm","isInvalidForm","trim","length","handleNameChange","useCallback","state","handleDescriptionChange","gutter","onLeftPress","to","title","onChangeText","value","onPress","now","Date","createList","id","v4","active","userId","createdAt","updatedAt","navigate"],"mappings":"iMASMA,G,OAAe,CAACC,KAAM,GAAIC,YAAa,KAE9BC,0BAAK,WAClB,IAAMC,EAAMC,cACNC,EAAWC,cAF4B,EAGrBC,mBAASR,GAHY,mBAGtCS,EAHsC,KAGhCC,EAHgC,KAIvCC,EAA4C,IAA5BF,EAAKR,KAAKW,OAAOC,OAqBjCC,EAAmBC,uBACvB,SAACd,GAAD,OAAkBS,GAAQ,SAACM,GAAD,sBAAgBA,EAAhB,CAAuBf,cACjD,IAEIgB,EAA0BF,uBAC9B,SAACb,GAAD,OAAyBQ,GAAQ,SAACM,GAAD,sBAAgBA,EAAhB,CAAuBd,qBACxD,IAGF,OACE,kBAAC,IAAD,CAAQgB,QAAM,EAACC,YAAaf,EAAIgB,GAAG,cAAeC,MAAM,oBACtD,kBAAC,IAAD,CACEC,aAAcR,EACdO,MAAM,OACNE,MAAOd,EAAKR,OAEd,kBAAC,IAAD,CACEqB,aAAcL,EACdI,MAAM,cACNE,MAAOd,EAAKP,cAEd,kBAAC,IAAD,CAAQsB,QAxCS,WAAO,IACnBvB,EAAqBQ,EAArBR,KAAMC,EAAeO,EAAfP,YACb,IAAIS,EAAJ,CAGA,IAAMc,EAAMC,KAAKD,MACjBnB,EACEqB,YAAW,CACTC,GAAIC,cACJ5B,OACA6B,QAAQ,EACRC,OAAQ,IACR7B,cACA8B,UAAWP,EACXQ,UAAWR,KAGfnB,EAAS4B,YAAS,iBAuBeb,MAAM","file":"static/js/26.0a4becac.chunk.js","sourcesContent":["import React, {memo, useCallback, useState} from 'react';\nimport {v4} from 'uuid';\nimport {Button, Screen, TextInput} from '../../../../components';\nimport {navigate} from '../../../../models';\nimport {useRootDispatch} from '../../../../utils';\nimport {useNav} from '../../../../hooks';\nimport {createList} from '../../models';\nimport 'react-native-get-random-values';\n\nconst initialState = {name: '', description: ''};\n\nexport default memo(function ChecklistCreate() {\n  const nav = useNav();\n  const dispatch = useRootDispatch();\n  const [form, setForm] = useState(initialState);\n  const isInvalidForm = form.name.trim().length === 0;\n\n  const handleSubmit = () => {\n    const {name, description} = form;\n    if (isInvalidForm) {\n      return;\n    }\n    const now = Date.now();\n    dispatch(\n      createList({\n        id: v4(),\n        name,\n        active: true,\n        userId: '1',\n        description,\n        createdAt: now,\n        updatedAt: now,\n      }),\n    );\n    dispatch(navigate('checklists'));\n  };\n  const handleNameChange = useCallback(\n    (name: string) => setForm((state) => ({...state, name})),\n    [],\n  );\n  const handleDescriptionChange = useCallback(\n    (description: string) => setForm((state) => ({...state, description})),\n    [],\n  );\n\n  return (\n    <Screen gutter onLeftPress={nav.to('checklists')} title=\"Create Checklist\">\n      <TextInput\n        onChangeText={handleNameChange}\n        title=\"name\"\n        value={form.name}\n      />\n      <TextInput\n        onChangeText={handleDescriptionChange}\n        title=\"description\"\n        value={form.description}\n      />\n      <Button onPress={handleSubmit} title=\"create\" />\n    </Screen>\n  );\n});\n"],"sourceRoot":""}