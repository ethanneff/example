{"version":3,"sources":["assets/placeholder.png","../node_modules/react-native-web/dist/exports/Slider/index.js","apps/Debug/screens/DarkMode/index.tsx"],"names":["module","exports","cards","title","value","target","chart","require","button","memo","dispatch","useRootDispatch","themes","Object","values","ColorTheme","color","useColor","nav","useNav","currentTheme","useRootSelector","state","theme","currentColor","useState","elevation","setElevation","onLeftPress","to","gutter","View","style","flexDirection","alignItems","justifyContent","FlatList","horizontal","keyExtractor","item","data","renderItem","key","onPress","changeTheme","contained","secondary","Slider","minimumTrackTintColor","primary","onValueChange","step","maximumValue","minimumValue","h2","center","numColumns","extraData","flex","overline","h3","paddingVertical","Theme","padding","p02","body2","Image","source","height","marginTop","resizeMode","width"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,yC,sFCC5B,E,MAAiB,E,yCCsB1BC,EAAgB,CACpB,CACEC,MAAO,YACPC,MAAO,WAET,CACEC,OAAQ,iBACRF,MAAO,aACPC,MAAO,OAET,CACEE,MAZUC,EAAQ,KAalBF,OAAQ,kBACRF,MAAO,aACPC,MAAO,WAET,CACEC,OAAQ,gBACRF,MAAO,QACPC,MAAO,WAET,CACEI,OAAQ,OACRL,MAAO,QACPC,MAAO,UAET,CACEC,OAAQ,mBACRF,MAAO,cACPC,MAAO,UAET,CACED,MAAO,WACPC,MAAO,UAET,CACED,MAAO,cACPC,MAAO,QAIIK,yBAAK,WAClB,IAAMC,EAAWC,cACXC,EAASC,OAAOC,OAAOC,KACvBC,EAAQC,cACRC,EAAMC,cACNC,EAAeC,YAAgB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,eALpB,EAOJC,mBAAS,GAPL,mBAO/BC,EAP+B,KAOpBC,EAPoB,KAUtC,OACE,kBAAC,IAAD,CAAQC,YAAaV,EAAIW,GAAG,SAAU1B,MAAM,YAAY2B,QAAM,GAC5D,kBAACC,EAAA,EAAD,CACEC,MAAO,CACLC,cAAe,MACfC,WAAY,SACZC,eAAgB,kBAGlB,kBAAC,IAAD,CAAMhC,MAAM,YACZ,kBAACiC,EAAA,EAAD,CACEC,YAAU,EACVC,aAAc,SAAAC,GAAI,OAAIA,GACtBC,KAAM5B,EACN6B,WAAY,gBAlBAlB,EAkBGgB,EAAH,EAAGA,KAAH,OACV,kBAAC,IAAD,CACEG,IAAKH,EACLpC,MAAOoC,EACPI,SAtBQpB,EAsBYgB,EAtBU,kBAAM7B,EAASkC,YAAYrB,MAuBzDsB,UAAWzB,IAAiBmB,EAC5BO,UAAW1B,IAAiBmB,QAKpC,kBAAC,IAAD,CAAMpC,MAAK,qBAAgBuB,KAC3B,kBAACqB,EAAD,CACEC,sBAAuBhC,EAAMiC,QAC7B7C,MAAOsB,EACPwB,cA/Be,SAAC9C,GAAD,OAAmBuB,EAAavB,IAgC/C+C,KAAM,EACNC,aAAc,GACdC,aAAc,IAEhB,kBAAC,IAAD,CAAMlD,MAAM,eAAemD,IAAE,EAACC,QAAM,IACpC,kBAACnB,EAAA,EAAD,CACEoB,WAAY,EACZC,UAAW/B,EACXY,aAAc,SAAAC,GAAI,OAAIA,EAAKpC,OAC3BqC,KAAMtC,EACNuC,WAAY,gBAAGF,EAAH,EAAGA,KAAH,OACV,kBAAC,IAAD,CAAMb,UAAWA,EAAWiB,QAAS,aAAiBe,MAAI,GACxD,kBAAC,IAAD,CAAMvD,MAAOoC,EAAKpC,MAAOwD,UAAQ,IACjC,kBAAC,IAAD,CACExD,MAAOoC,EAAKnC,MACZwD,IAAE,EACF5B,MAAO,CAAE6B,gBAAiBC,IAAMC,QAAQC,OAE1C,kBAAC,IAAD,CAAM7D,MAAOoC,EAAKlC,OAAQ4D,OAAK,IAC9B1B,EAAKjC,OACJ,kBAAC4D,EAAA,EAAD,CACEC,OAAQ5B,EAAKjC,MACb0B,MAAO,CACLoC,OAAQ,GACRC,UAAWP,IAAMC,QAAQC,IACzBM,WAAY,QACZC,MAAO","file":"static/js/10.ba414ea7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder.d1d6991d.png\";","import UnimplementedView from '../../modules/UnimplementedView';\nexport default UnimplementedView;","// TODO: slider on web\nimport React, { memo, useState } from \"react\";\nimport {\n  FlatList,\n  Image,\n  ImageSourcePropType,\n  Slider,\n  View\n} from \"react-native\";\nimport { Button, Card, Screen, Text } from \"../../../../components\";\nimport { ColorTheme, changeTheme } from \"../../../../models\";\nimport { Theme, useRootDispatch, useRootSelector } from \"../../../../utils\";\nimport { useColor, useNav } from \"../../../../hooks\";\n\ninterface Card {\n  title: string;\n  value: string;\n  target?: string;\n  chart?: ImageSourcePropType;\n  button?: string;\n}\n\nconst image = require(\"../../../../assets/placeholder.png\");\nconst cards: Card[] = [\n  {\n    title: \"Marketing\",\n    value: \"123.4 M\"\n  },\n  {\n    target: \"+22% of target\",\n    title: \"Conversion\",\n    value: \"537\"\n  },\n  {\n    chart: image,\n    target: \"+12.3 of target\",\n    title: \"Conversion\",\n    value: \"432.1 M\"\n  },\n  {\n    target: \"11% of target\",\n    title: \"Sales\",\n    value: \"345.8 M\"\n  },\n  {\n    button: \"save\",\n    title: \"Users\",\n    value: \"45.5 M\"\n  },\n  {\n    target: \"+56.6% of target\",\n    title: \"Avg session\",\n    value: \"4:53 H\"\n  },\n  {\n    title: \"Sessions\",\n    value: \"23.242\"\n  },\n  {\n    title: \"Bounce rate\",\n    value: \"13%\"\n  }\n];\n\nexport default memo(function DarkMode() {\n  const dispatch = useRootDispatch();\n  const themes = Object.values(ColorTheme);\n  const color = useColor();\n  const nav = useNav();\n  const currentTheme = useRootSelector(state => state.theme.currentColor);\n  const themePress = (theme: ColorTheme) => () => dispatch(changeTheme(theme));\n  const [elevation, setElevation] = useState(0);\n  const handleSlider = (value: number) => setElevation(value);\n\n  return (\n    <Screen onLeftPress={nav.to(\"debug\")} title=\"Dark mode\" gutter>\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\"\n        }}\n      >\n        <Text title=\"theme: \" />\n        <FlatList\n          horizontal\n          keyExtractor={item => item}\n          data={themes}\n          renderItem={({ item }) => \n            <Button\n              key={item}\n              title={item}\n              onPress={themePress(item)}\n              contained={currentTheme === item}\n              secondary={currentTheme !== item}\n            />\n          }\n        />\n      </View>\n      <Text title={`elevation: ${elevation}`} />\n      <Slider\n        minimumTrackTintColor={color.primary}\n        value={elevation}\n        onValueChange={handleSlider}\n        step={1}\n        maximumValue={10}\n        minimumValue={0}\n      />\n      <Text title=\"Weekly Stats\" h2 center />\n      <FlatList\n        numColumns={2}\n        extraData={elevation}\n        keyExtractor={item => item.title}\n        data={cards}\n        renderItem={({ item }) => \n          <Card elevation={elevation} onPress={() => undefined} flex>\n            <Text title={item.title} overline />\n            <Text\n              title={item.value}\n              h3\n              style={{ paddingVertical: Theme.padding.p02 }}\n            />\n            <Text title={item.target} body2 />\n            {item.chart && \n              <Image\n                source={item.chart}\n                style={{\n                  height: 80,\n                  marginTop: Theme.padding.p02,\n                  resizeMode: \"cover\",\n                  width: \"100%\"\n                }}\n              />\n            }\n          </Card>\n        }\n      />\n    </Screen>\n  );\n});\n"],"sourceRoot":""}