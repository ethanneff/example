{"version":3,"sources":["screens/Debug/screens/Checklists/models/Item/index.tsx","screens/Debug/screens/Checklists/models/List/index.tsx","models/App/index.tsx","utils/Font/index.tsx","models/Device/index.tsx","models/index.tsx","utils/Config/index.tsx","utils/Theme/index.tsx","utils/Mock/index.tsx","components/TextInput/index.tsx","components/Link/index.web.tsx","models/User/index.tsx","components/Router/Auth.tsx","components/Router/index.web.tsx","components/Text/index.tsx","components/Button/index.tsx","components/Card/index.tsx","components/CardSection/index.tsx","components/Markdown/index.tsx","components/Swipe/index.tsx","components/Screen/KeyboardAvoid.web.tsx","components/Screen/NavButton.tsx","components/Screen/NavBar.tsx","components/Screen/index.tsx","components/Icon/Badge.tsx","components/Icon/IconSource.web.tsx","components/Icon/index.tsx","components/TextInput/Clear.tsx","components/TextInput/Error.tsx","components/TextInput/Title.tsx","screens/App/index.web.tsx","screens/Debug/screens/Ball/index.tsx","screens/Debug/screens/Cards/index.tsx","screens/Debug/screens/Fonts/index.tsx","screens/Debug/screens/Drag/index.tsx","screens/Debug/screens/Buttons/index.tsx","screens/Debug/screens/PinchSpread/logic.tsx","screens/Debug/screens/PinchSpread/index.tsx","screens/Debug/screens/SearchBar/index.tsx","screens/Debug/screens/OKRs/index.tsx","screens/Debug/screens/Input/index.tsx","screens/Debug/screens/Questionnaire/index.tsx","screens/Debug/screens/Checklists/screens/ItemCreate/index.tsx","screens/Debug/screens/Checklists/screens/ItemUpdate/index.tsx","screens/Debug/screens/Checklists/screens/ListUpdate/index.tsx","screens/Debug/screens/Checklists/screens/ListCreate/index.tsx","screens/Debug/screens/Checklists/screens/Lists/index.tsx","screens/Debug/screens/Checklists/screens/List/index.tsx","screens/Debug/screens/Checklists/index.tsx","screens/Debug/screens/ImageCollection/AsyncImage.tsx","screens/Debug/screens/ImageCollection/index.tsx","screens/Debug/index.tsx","screens/Landing/index.web.tsx","screens/Login/index.tsx","screens/Main/index.tsx","screens/NotFound/index.tsx","index.tsx"],"names":["createItem","createStandardAction","updateItem","removeItem","toggleActiveItem","getItems","state","items","getItemsByCreatedAt","createSelector","Object","values","filter","item","active","sort","a","b","createdAt","initialState","selectLists","lists","onAppLoad","onAppStatusChange","onKeyboardChange","appInitialState","app","status","keyboardVisible","FontWeight","onBatteryChange","onFingerprintChange","onDeviceLoad","onNetworkChange","onDimensionChange","windowDimensions","Dimensions","get","deviceInitialState","screenDimensions","getWidth","device","width","getHeight","height","reducers","combineReducers","arguments","length","undefined","action","type","getType","objectSpread","payload","batteryLevel","isPinOrFingerprintSet","networkEffectiveType","effectiveType","networkType","screen","window","id","v4","timestamp","Date","now","defineProperty","order","updatedAt","userId","middlewares","thunk","enhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","apply","offline","offlineConfig","store","createStore","Config","name","os","android","ios","web","root","Theme","color","background","brand","danger","dark","info","light","primary","secondary","success","text","warning","padding","p00","p01","p02","p03","p04","p05","p06","p07","p08","p09","p10","p11","p12","p13","p14","p15","p16","p17","p18","p19","p20","colorWithOpacity","opacity","boundedOpacity","startsWith","substr","substring","concat","React","KeyboardType","ReturnKeyType","FontSize","body1","fontSize","fontWeight","Regular","letterSpacing","body2","button","Medium","caption","h1","Light","h2","h3","h4","h5","h6","overline","subtitle1","subtitle2","styles","link","textDecoration","Link","_React$PureComponent","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","_this$props","props","to","title","buttonStyle","textStyle","react","TouchableOpacity","style","react_router_dom","Text_Text","center","User","isAuthenticated","authenticate","cb","setTimeout","signout","Auth","_getPrototypeOf2","_this","_len","args","Array","_key","call","fallback","_this2","Component","component","Original","original","Redirect","redirect","rest","objectWithoutProperties","assign","render","auth","path","pathname","from","location","Route","_ref","Auth_Auth","Router","children","StyleSheet","create","bold","textAlign","Text","_this$props2","hidden","toUpperCase","getFont","exports_Text","alignSelf","containedBody","backgroundColor","containedText","container","alignItems","borderColor","borderRadius","borderWidth","flexDirection","justifyContent","paddingHorizontal","disableBody","disableText","fab","half","icon","paddingRight","label","margin","neutral","nonFlex","outlined","right","Button","onPress","disable","contained","wrap","iconColor","lowercase","activeOpacity","buttonStyleGroup","getShape","textStyleGroup","iconStyleGroup","disabled","Icon_Icon","size","containerStyle","elevation","position","shadowColor","shadowOffset","shadowOpacity","shadowRadius","zIndex","Card","touchOpacity","borderBottomWidth","paddingVertical","KeyboardAvoid","View","flex","buttonRight","NavButton","isRight","NavBar","_this$props$title","onLeftPress","onRightPress","_this$props$leftIcon","leftIcon","_this$props$rightIcon","rightIcon","NavButton_NavButton","Screen","disableScroll","SafeAreaView","NavBar_NavBar","KeyboardAvoid_web_KeyboardAvoid","scrollEnabled","badgeContainer","top","badgeText","Badge","badgeLimit","maxBadgeNumber","badge","num","String","IconSource","Icon","_this$props$badge","clear","_this$props$size","_this$props$color","colored","IconSource_web_IconSource","Badge_Badge","Clear","Button_Button","Error","error","message","optional","textTransform","Title","optionalText","stylesOptional","borderError","borderFocus","row","textInput","marginTop","TextInput","focus","updateFocus","setState","focusOnInput","textClear","onChangeText","_this$props$editable","editable","autoCorrect","secureTextEntry","keyboardType","returnKeyType","_this$props$blurOnSub","blurOnSubmit","placeholder","_this$props$disableFu","disableFullscreenUI","textInputStyle","noValue","Title_Title","exports_TextInput","ref","input","selectionColor","onFocus","onBlur","placeholderTextColor","underlineColorAndroid","Clear_Clear","Error_Error","change","onAppStateChange","enableListeners","disableListeners","index_web_Router","index_web_Route","exact","Landing","Login","Debug","Main","NotFound","NetInfo","addEventListener","AppState","removeEventListener","App","connect","ball","marginLeft","ballPosition","Animated","ValueXY","x","y","history","Screen_Screen","goBack","getLayout","animate","Math","random","dx","dy","spring","toValue","start","Ball","cards","price","Cards","Value","absoluteFill","map","card","i","inputRange","outputRange","push","translateY","interpolate","extrapolateRight","transform","ScrollView","scrollEventThrottle","contentContainerStyle","content","showsVerticalScrollIndicator","onScroll","event","nativeEvent","contentOffset","Fonts","panGesture","PanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","_","gestureState","moveX","moveY","panHandlers","Drag","Buttons","GestureHandler","_ref$minTouches","minTouches","finish","touches","touch","recordFinish","recordStart","outcome","determineOutcome","isStartAlreadyRecorded","identifier","locationX","locationY","startXDistance","abs","startYDistance","finishXDistance","finishYDistance","points","numRecordedTouched","keys","point","pinch","spread","determineCenter","isPinch","isSpread","pinchCount","spreadCount","gestureHandler","onPanResponderRelease","_this$state","_this$state2","PinchSpread","header","borderBottomColor","textContainer","DATA","SearchBar","iconSearch","animation","iconName","iconBack","textInputPlaceHolder","animationDuration","translateIcon","fadeContainer","iconChangeTimeout","keyboardDidShowListener","keyboardDidHideListener","keyboardWillShowListener","keyboardWillHideListener","keyboardWillShow","Platform","OS","onSearchBarFocus","keyboardWillHide","onSearchBarUnFocus","keyboardDidShow","keyboardDidHide","Keyboard","addListener","remove","clearTimeout","translateX","TextInput_TextInput","FlatList","keyExtractor","toString","data","renderItem","changeIcon","timing","duration","_this3","OKRs","Card_Card","Input","email","password","val","Email","Questionnaire","choices","selected","next","output","tableView","currentIndex","onViewableItemsChanged","viewableItems","index","onProgress","direction","onFinish","scrollToIndex","animated","onSelection","choice","removeClippedSubviews","showsHorizontalScrollIndicator","viewabilityConfig","itemVisiblePercentThreshold","horizontal","pagingEnabled","_ref2","description","setName","setDescription","createList","ListCreate","match","Lists","toggle","List","Checklists","AsyncImage","indicatorOverlay","imageAnimated","indicatorAnimated","onImageLoad","parallel","useNativeDriver","uri","imageStyle","indicatorStyle","Image","source","onLoad","ActivityIndicator","ImageCollection","numColumns","infiniteScrollThreshold","columnWidth","imageUrl","fetchMore","renderImage","AsyncImage_AsyncImage","onEndReached","onEndReachedThreshold","screens","generateRoutes","toLowerCase","navBack","showHomeScreen","index_web_Link","footer","Footer","Header","_React$PureComponent3","index_web_Header","index_web_Footer","fakeAuth","YellowBox","ignoreWarnings","Launcher","es","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.cd2cdbac.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\nimport { ActionType, createStandardAction, getType } from \"typesafe-actions\";\nimport { DeepReadonly } from \"utility-types\";\nimport { v4 } from \"uuid\";\nimport { RootAction, RootState } from \"../../../../../../models\";\n\n// interfaces\nexport type Item = DeepReadonly<{\n  id: string;\n  name: string;\n  description?: string;\n  active: boolean;\n  userId: string;\n  sources?: string[];\n  order?: number;\n  createdAt: number;\n  updatedAt: number;\n}>;\nexport type Items = DeepReadonly<{ [key: string]: Item }>;\nexport type ItemsArray = DeepReadonly<Item[]>;\nexport type ItemActions = ActionType<\n  | typeof createItem\n  | typeof removeItem\n  | typeof updateItem\n  | typeof toggleActiveItem\n>;\ninterface CreateItem {\n  name: string;\n  description?: string;\n  active?: boolean;\n}\ntype UpdateItem = CreateItem & { id: string };\n\n// actions\nexport const createItem = createStandardAction(\"ITEM/CREATE\")<CreateItem>();\nexport const updateItem = createStandardAction(\"ITEM/UPDATE\")<UpdateItem>();\nexport const removeItem = createStandardAction(\"ITEM/REMOVE\")<string>();\nexport const toggleActiveItem = createStandardAction(\"ITEM/TOGGLE_ACTIVE\")<\n  string\n>();\n\n// indexes\nexport const indexItemsByCreatedAt = (rows: Items): Items =>\n  Object.values(rows).reduce(\n    (index: any, row) => ((index[row.createdAt] = row.id), index),\n    {}\n  );\nexport const indexItemsByUserId = (rows: Items): Items =>\n  Object.values(rows).reduce(\n    (index: any, row) => (\n      (index[row.userId] = row.hasOwnProperty(\"userId\")\n        ? [...index[row.userId], row.id]\n        : [row.id]),\n      index\n    ),\n    {}\n  );\n\n// selectors\nexport const getItems = (state: RootState): Items => state.items;\nexport const getItemsFilterByActive = createSelector(\n  [getItems],\n  items => Object.values(items).filter(item => item.active)\n);\nexport const getItemsByCreatedAt = createSelector(\n  [getItems],\n  items => Object.values(items).sort((a, b) => a.createdAt - b.createdAt)\n);\n\n// reducer\nconst initialState = {};\nexport const itemReducer = (\n  state: Items = initialState,\n  action: RootAction\n): Items => {\n  switch (action.type) {\n    case getType(createItem):\n      const id = v4();\n      const timestamp = Date.now();\n      return {\n        ...state,\n        [id]: {\n          ...action.payload,\n          active: true,\n          createdAt: timestamp,\n          id,\n          order: timestamp,\n          updatedAt: timestamp,\n          userId: \"1\"\n        }\n      };\n    case getType(updateItem):\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          ...action.payload,\n          updatedAt: Date.now()\n        }\n      };\n    case getType(removeItem):\n      return {\n        ...state,\n        [action.payload]: {\n          ...state[action.payload],\n          active: false,\n          updatedAt: Date.now()\n        }\n      };\n    case getType(toggleActiveItem):\n      return {\n        ...state,\n        [action.payload]: {\n          ...state[action.payload],\n          active: !state[action.payload].active,\n          updatedAt: Date.now()\n        }\n      };\n    default:\n      return state;\n  }\n};\n","import { createSelector } from \"reselect\";\nimport { ActionType, createStandardAction } from \"typesafe-actions\";\nimport { DeepReadonly } from \"utility-types\";\nimport { RootAction, RootState } from \"../../../../../../models\";\n\n// Interfaces\nexport type List = DeepReadonly<{\n  id: string;\n  name: string;\n  description?: string;\n  active: boolean;\n  frequency: string[];\n  visibility: string[];\n  createdAt: number;\n  updatedAt: number;\n  userId: string;\n  item: string[];\n  history: string[];\n  viewed: string[];\n  liked: string[];\n  copied: string[];\n  modified: string[];\n}>;\nexport type Lists = DeepReadonly<{ [key: string]: List }>;\nexport type ListActions = ActionType<\n  | typeof createList\n  | typeof removeList\n  | typeof updateList\n  | typeof toggleActiveList\n>;\ninterface CreateList {\n  name: string;\n  description?: string;\n  active?: boolean;\n}\ntype UpdateList = CreateList & { id: string };\n\n// Actions\nexport const createList = createStandardAction(\"LIST/CREATE\")<CreateList>();\nexport const updateList = createStandardAction(\"LIST/UPDATE\")<UpdateList>();\nexport const removeList = createStandardAction(\"LIST/REMOVE\")<string>();\nexport const toggleActiveList = createStandardAction(\"LIST/TOGGLE_ACTIVE\")<\n  string\n>();\n\n// Indexes\nexport const indexListsByCreatedAt = (rows: Lists) =>\n  Object.values(rows).reduce(\n    (index: any, row) => ((index[row.createdAt] = row.id), index),\n    {}\n  );\nexport const indexListsByUserId = (rows: Lists) =>\n  Object.values(rows).reduce(\n    (index: any, row) => (\n      (index[row.userId] = row.hasOwnProperty(\"userId\")\n        ? [...index[row.userId], row.id]\n        : [row.id]),\n      index\n    ),\n    {}\n  );\n\n// Selectors\nexport const selectLists = (state: RootState): Lists => state.lists;\nexport const selectListsFilterByActive = createSelector(\n  [selectLists],\n  items => Object.values(items).filter(item => item.active)\n);\nexport const selectListsByCreatedAt = createSelector(\n  [selectLists],\n  items => Object.values(items).sort((a, b) => a.createdAt - b.createdAt)\n);\n\n// Reducer\nexport const listReducer = (state: Lists = {}, action: RootAction): Lists => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n","import { AppStateStatus } from \"react-native\";\nimport { createSelector } from \"reselect\";\nimport { ActionType, createStandardAction, getType } from \"typesafe-actions\";\nimport { RootAction, RootState } from \"../../models\";\n\n// interfaces\nexport interface AppState {\n  appVersion?: string;\n  buildVersion?: string;\n  bundleIdentifier?: string;\n  applicationName?: string;\n  buildNumber?: string;\n  version?: string;\n  readableVersion?: string;\n  status: AppStateStatus;\n  keyboardVisible: boolean;\n}\nexport type AppActions = ActionType<\n  typeof onAppLoad | typeof onAppStatusChange | typeof onKeyboardChange\n>;\n\n// actions\nexport const onAppLoad = createStandardAction(\"APP/LOAD\")<AppState>();\nexport const onAppStatusChange = createStandardAction(\"APP/UPDATE_STATUS\")<\n  AppStateStatus\n>();\nexport const onKeyboardChange = createStandardAction(\n  \"APP/UPDATE_KEYBOARD_VISIBILITY\"\n)<boolean>();\n\n// selectors\nexport const getAppStatus = (state: RootState): AppStateStatus =>\n  state.app.status;\nexport const getKeyboardVisible = (state: RootState): boolean =>\n  state.app.keyboardVisible;\nexport const getAppStatusForeground = createSelector(\n  getAppStatus,\n  (status: AppStateStatus): boolean => status === \"active\"\n);\n\n// reducers\nexport const appInitialState: AppState = {\n  keyboardVisible: false,\n  status: \"inactive\"\n};\n\nexport function appReducer(\n  state: AppState = appInitialState,\n  action: RootAction\n): AppState {\n  switch (action.type) {\n    case getType(onAppLoad):\n      return {\n        ...state,\n        ...action.payload\n      };\n    case getType(onAppStatusChange):\n      return {\n        ...state,\n        status: action.payload\n      };\n    case getType(onKeyboardChange):\n      return {\n        ...state,\n        keyboardVisible: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","export enum FontWeight {\n  Light = \"100\",\n  Regular = \"300\",\n  Medium = \"600\"\n}\n\n// sizing: https://material.io/design/typography/the-type-system.html#applying-the-type-scale\nexport const FontSize = {\n  body1: {\n    fontSize: 16,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0.5\n  },\n  body2: {\n    fontSize: 14,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0.25\n  },\n  button: {\n    fontSize: 14,\n    fontWeight: FontWeight.Medium,\n    letterSpacing: 0.75\n  },\n  caption: {\n    fontSize: 12,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0.4\n  },\n  h1: {\n    fontSize: 96,\n    fontWeight: FontWeight.Light,\n    letterSpacing: -1.5\n  },\n  h2: {\n    fontSize: 60,\n    fontWeight: FontWeight.Light,\n    letterSpacing: -0.5\n  },\n  h3: {\n    fontSize: 48,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0\n  },\n  h4: {\n    fontSize: 34,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0.25\n  },\n  h5: {\n    fontSize: 24,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0\n  },\n  h6: {\n    fontSize: 20,\n    fontWeight: FontWeight.Medium,\n    letterSpacing: 0.15\n  },\n  overline: {\n    fontSize: 10,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 1.5\n  },\n  subtitle1: {\n    fontSize: 16,\n    fontWeight: FontWeight.Regular,\n    letterSpacing: 0.15\n  },\n  subtitle2: {\n    fontSize: 14,\n    fontWeight: FontWeight.Medium,\n    letterSpacing: 0.1\n  }\n};\n","import {\n  ConnectionInfo,\n  ConnectionType,\n  Dimensions,\n  EffectiveConnectionType,\n  ScaledSize\n} from \"react-native\";\nimport { ActionType, createStandardAction, getType } from \"typesafe-actions\";\nimport { RootAction, RootState } from \"../../models\";\n\n// interfaces\nexport interface DimensionsProps {\n  window: ScaledSize;\n  screen: ScaledSize;\n}\nexport interface DeviceState {\n  uniqueId?: string;\n  manufacturer?: string;\n  brand?: string;\n  model?: string;\n  deviceId?: string;\n  systemName?: string;\n  systemVersion?: string;\n  deviceName?: string;\n  userAgent?: string;\n  deviceLocale?: string;\n  deviceCountry?: string;\n  timezone?: string;\n  instanceId?: string;\n  installReferrer?: string;\n  isEmulator?: boolean;\n  isTablet?: boolean;\n  fontScale?: number;\n  is24Hour?: boolean;\n  isPinOrFingerprintSet?: boolean;\n  firstInstallTime?: number;\n  lastUpdateTime?: number;\n  serialNumber?: string;\n  phoneNumber?: string;\n  apiLevel?: number;\n  carrier?: string;\n  totalMemory?: number;\n  maxMemory?: number;\n  totalDiskCapacity?: number;\n  freeDiskStorage?: number;\n  batteryLevel?: number;\n  networkType?: ConnectionType;\n  networkEffectiveType?: EffectiveConnectionType;\n  windowDimensions: ScaledSize;\n  screenDimensions: ScaledSize;\n}\nexport type DeviceActions = ActionType<\n  | typeof onBatteryChange\n  | typeof onFingerprintChange\n  | typeof onDeviceLoad\n  | typeof onNetworkChange\n  | typeof onDimensionChange\n>;\n\n// actions\nexport const onBatteryChange = createStandardAction(\"DEVICE/UPDATE_BATTERY\")<\n  number\n>();\nexport const onFingerprintChange = createStandardAction(\n  \"DEVICE/UPDATE_FINGERPRINT\"\n)<boolean>();\nexport const onDeviceLoad = createStandardAction(\"DEVICE/LOAD\")<DeviceState>();\nexport const onNetworkChange = createStandardAction(\"DEVICE/UPDATE_NETWORK\")<\n  ConnectionInfo\n>();\nexport const onDimensionChange = createStandardAction(\n  \"DEVICE/UPDATE_DIMENSION\"\n)<DimensionsProps>();\n\nconst windowDimensions = Dimensions.get(\"window\");\nconst screenDimensions = Dimensions.get(\"screen\");\nexport const deviceInitialState: DeviceState = {\n  screenDimensions,\n  windowDimensions\n};\n\n// selectors\nexport const getLandscapeOrientation = (state: RootState): boolean =>\n  state.device.windowDimensions.height < state.device.windowDimensions.width;\nexport const getSmallestDimension = (state: RootState): number =>\n  state.device.windowDimensions.height > state.device.windowDimensions.width\n    ? state.device.windowDimensions.width\n    : state.device.windowDimensions.height;\nexport const getLargestDimension = (state: RootState): number =>\n  state.device.windowDimensions.height > state.device.windowDimensions.width\n    ? state.device.windowDimensions.height\n    : state.device.windowDimensions.width;\nexport const getWidth = (state: RootState): number =>\n  state.device.windowDimensions.width;\nexport const getHeight = (state: RootState): number =>\n  state.device.windowDimensions.height;\n\n// reducers\nexport const deviceReducer = (\n  state: DeviceState = deviceInitialState,\n  action: RootAction\n): DeviceState => {\n  switch (action.type) {\n    case getType(onBatteryChange):\n      return {\n        ...state,\n        batteryLevel: action.payload\n      };\n    case getType(onFingerprintChange):\n      return {\n        ...state,\n        isPinOrFingerprintSet: action.payload\n      };\n    case getType(onNetworkChange):\n      return {\n        ...state,\n        networkEffectiveType: action.payload.effectiveType,\n        networkType: action.payload.type\n      };\n    case getType(onDimensionChange):\n      return {\n        ...state,\n        screenDimensions: action.payload.screen,\n        windowDimensions: action.payload.window\n      };\n    case getType(onDeviceLoad):\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { offline } from \"@redux-offline/redux-offline\";\nimport offlineConfig from \"@redux-offline/redux-offline/lib/defaults\";\nimport {\n  applyMiddleware,\n  combineReducers,\n  compose,\n  createStore,\n  Middleware\n} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { DeepReadonly } from \"utility-types\";\nimport {\n  ItemActions,\n  itemReducer,\n  Items,\n  ListActions,\n  listReducer,\n  Lists\n} from \"../screens/Debug/screens/Checklists/models\";\nimport { AppActions, appReducer, AppState } from \"./App\";\nimport { DeviceActions, deviceReducer, DeviceState } from \"./Device\";\n\n// models\nexport * from \"./App\";\nexport * from \"./Device\";\n\n// interfaces\nexport type RootState = DeepReadonly<{\n  app: AppState;\n  device: DeviceState;\n  items: Items;\n  lists: Lists;\n}>;\n\n// reducers\nconst reducers = combineReducers<RootState>({\n  app: appReducer,\n  device: deviceReducer,\n  items: itemReducer,\n  lists: listReducer\n});\n\n// actions\nexport type RootAction = AppActions | DeviceActions | ListActions | ItemActions;\n\n// constants\nconst middlewares: Middleware[] = [thunk];\nconst composers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancers = composers(\n  applyMiddleware(...middlewares),\n  offline(offlineConfig)\n);\n\n// store\nexport const store = createStore(reducers, enhancers);\n","export const Config = {\n  app: {\n    name: \"example\"\n  },\n  os: {\n    android: \"android\",\n    ios: \"ios\",\n    web: \"web\"\n  },\n  web: {\n    root: \"root\"\n  }\n};\n","export const Theme = {\n  color: {\n    background: \"hsl(0, 100%, 100%)\",\n    brand: \"hsl(264, 34%, 36%)\",\n    danger: \"hsl(354, 70%, 54%)\",\n    dark: \"hsl(210, 10%, 23%)\",\n    info: \"hsl(188, 78%, 41%)\",\n    light: \"hsl(210, 17%, 98%)\",\n    primary: \"hsl(211, 100%, 50%)\",\n    secondary: \"hsl(208, 7%, 46%)\",\n    success: \"hsl(134, 61%, 41%)\",\n    text: \"hsl(0, 0%, 0%)\",\n    warning: \"hsl(45, 100%, 51%)\"\n  },\n  padding: {\n    p00: 0,\n    p01: 4,\n    p02: 8,\n    p03: 12,\n    p04: 16,\n    p05: 20,\n    p06: 24,\n    p07: 28,\n    p08: 32,\n    p09: 36,\n    p10: 40,\n    p11: 44,\n    p12: 48,\n    p13: 52,\n    p14: 56,\n    p15: 60,\n    p16: 64,\n    p17: 68,\n    p18: 72,\n    p19: 76,\n    p20: 80\n  }\n};\n\nexport const colorWithOpacity = (color: string, opacity = 0.5) => {\n  const boundedOpacity = opacity < 0 ? 0 : opacity > 1 ? 1 : opacity;\n  const leading = 4;\n  if (!color.startsWith(\"hsl\")) {\n    return color;\n  }\n  const substr = color.substring(leading, color.length - 1);\n  return `hsla(${substr}, ${boundedOpacity})`;\n};\n","import * as React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { Router } from \"../../components\";\nimport { store } from \"../../models\";\n\ninterface Props {\n  Component: any;\n}\n\nexport class MockProviderAndRouter extends React.PureComponent<Props> {\n  private mock = jest.fn();\n  private history = {\n    push: this.mock\n  };\n  public render() {\n    const { Component } = this.props;\n    return (\n      <Provider store={store}>\n        <Router>\n          <Component\n            match={this.mock}\n            location={this.mock}\n            history={this.history}\n          />\n        </Router>\n      </Provider>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  StyleSheet,\n  TextInput as Original,\n  TextStyle,\n  View\n} from \"react-native\";\nimport { FontSize, Theme } from \"../../utils\";\nimport { Clear } from \"./Clear\";\nimport { Error } from \"./Error\";\nimport { Title } from \"./Title\";\n\n// styling https://uxdesign.cc/design-better-forms-96fadca0f49c\nconst styles = StyleSheet.create({\n  borderError: {\n    borderColor: Theme.color.danger\n  },\n  borderFocus: {\n    borderColor: Theme.color.primary\n  },\n  row: {\n    flexDirection: \"row\"\n  },\n  textInput: {\n    backgroundColor: Theme.color.background,\n    borderColor: Theme.color.secondary,\n    borderRadius: Theme.padding.p01,\n    borderWidth: 2,\n    flex: 1,\n    marginTop: Theme.padding.p01,\n    padding: Theme.padding.p02,\n    paddingRight: Theme.padding.p08\n  }\n});\n\ninterface Props {\n  title?: string;\n  optional?: boolean;\n  error?: string;\n  style?: TextStyle | {};\n  placeholder?: string;\n  value: string;\n  disableFullscreenUI?: boolean;\n  editable?: boolean;\n  autoCorrect?: boolean;\n  blurOnSubmit?: boolean;\n  secureTextEntry?: boolean;\n  keyboardType?: KeyboardType;\n  returnKeyType?: ReturnKeyType;\n  onChangeText(text: string): void;\n}\n\ninterface State {\n  focus: boolean;\n}\n\nexport enum KeyboardType {\n  Default = \"default\",\n  Number = \"number-pad\",\n  Decimal = \"decimal-pad\",\n  Numeric = \"numeric\",\n  Email = \"email-address\",\n  Phone = \"phone-pad\"\n}\n\nexport enum ReturnKeyType {\n  Done = \"done\",\n  Go = \"go\",\n  Next = \"next\",\n  Search = \"search\",\n  Send = \"send\"\n}\n\nexport class TextInput extends React.PureComponent<Props, State> {\n  public state = {\n    focus: false\n  };\n  private textInput?: Original;\n\n  public render() {\n    const {\n      title,\n      optional,\n      error,\n      editable = true,\n      autoCorrect,\n      secureTextEntry,\n      keyboardType,\n      returnKeyType,\n      blurOnSubmit = true,\n      placeholder,\n      onChangeText,\n      value,\n      disableFullscreenUI = true,\n      style\n    } = this.props;\n    const { focus } = this.state;\n    const textInputStyle = [\n      styles.textInput,\n      error && styles.borderError,\n      focus && styles.borderFocus,\n      FontSize.body2,\n      style\n    ];\n    const noValue = value.length === 0;\n    return (\n      <>\n        <Title title={title} optional={optional} onPress={this.focusOnInput} />\n        <View style={styles.row}>\n          <Original\n            ref={input => {\n              if (!input) {\n                return;\n              }\n              this.textInput = input;\n            }}\n            autoCorrect={autoCorrect}\n            selectionColor={Theme.color.primary}\n            disableFullscreenUI={disableFullscreenUI}\n            onFocus={() => this.updateFocus(true)}\n            onBlur={() => this.updateFocus(false)}\n            editable={editable}\n            placeholderTextColor={Theme.color.secondary}\n            blurOnSubmit={blurOnSubmit}\n            secureTextEntry={secureTextEntry}\n            returnKeyType={returnKeyType}\n            keyboardType={keyboardType}\n            underlineColorAndroid=\"transparent\"\n            style={textInputStyle}\n            placeholder={placeholder}\n            onChangeText={onChangeText}\n            value={value}\n          />\n          <Clear hidden={noValue} onPress={this.textClear} />\n        </View>\n        <Error error={error} onPress={this.focusOnInput} />\n      </>\n    );\n  }\n\n  private updateFocus = (focus: boolean) => {\n    this.setState({ focus });\n  };\n\n  private focusOnInput = () => {\n    if (!this.textInput) {\n      return;\n    }\n    this.textInput.focus();\n  };\n\n  private textClear = () => {\n    const { onChangeText } = this.props;\n    if (!this.textInput) {\n      return;\n    }\n    this.textInput.clear();\n    onChangeText(\"\");\n  };\n}\n","import * as React from \"react\";\nimport { TextStyle, TouchableOpacity, ViewStyle } from \"react-native\";\nimport { Link as Original } from \"react-router-dom\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = {\n  link: {\n    color: Theme.color.dark,\n    textDecoration: \"none\"\n  }\n};\n\ninterface Props {\n  to: string;\n  title: string;\n  buttonStyle?: ViewStyle | {};\n  textStyle?: TextStyle | {};\n}\n\nexport class Link extends React.PureComponent<Props> {\n  public render() {\n    const { to, title, buttonStyle, textStyle } = this.props;\n    return (\n      <TouchableOpacity style={buttonStyle}>\n        <Original to={to} style={styles.link}>\n          <Text button center title={title} style={textStyle} />\n        </Original>\n      </TouchableOpacity>\n    );\n  }\n}\n","type ICallback = () => any;\n\nexport default {\n  isAuthenticated: false,\n  authenticate(cb: ICallback) {\n    this.isAuthenticated = true;\n    setTimeout(cb, 1000);\n  },\n  signout(cb: ICallback) {\n    this.isAuthenticated = false;\n    setTimeout(cb, 1000);\n  }\n};\n","import * as React from \"react\";\nimport User from \"../../models/User\"; // TODO: make models export not export default\n\nexport class Auth extends React.PureComponent<any> {\n  private fallback = \"/login\";\n  public render() {\n    const {\n      component: Component,\n      original: Original,\n      redirect: Redirect,\n      ...rest\n    } = this.props;\n    return (\n      <Original\n        {...rest}\n        render={(props: any) =>\n          !rest.auth ||\n          rest.path === this.fallback ||\n          (rest.auth && User.isAuthenticated) ? (\n            <Component {...props} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: this.fallback,\n                state: { from: props.location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  BrowserRouter,\n  Redirect,\n  Route as Original,\n  Switch\n} from \"react-router-dom\";\nimport { Auth } from \"./Auth\";\n\nconst Route = ({ component, ...rest }: any) => (\n  <Auth\n    original={Original}\n    redirect={Redirect}\n    component={component}\n    {...rest}\n  />\n);\n\nclass Router extends React.PureComponent {\n  public render() {\n    const { children } = this.props;\n    return <BrowserRouter>{children}</BrowserRouter>;\n  }\n}\n\nexport { Route, Router, Redirect, Switch };\n","import * as React from \"react\";\nimport { StyleSheet, Text as Original, ViewStyle } from \"react-native\";\nimport { FontSize } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  bold: {\n    fontWeight: \"600\" // TODO: figure out why I cannot import FontWeight.Medium with tests\n  },\n  center: {\n    textAlign: \"center\"\n  }\n});\n\ninterface Props {\n  title?: string;\n  style?: ViewStyle | {};\n\n  center?: boolean;\n  bold?: boolean;\n  hidden?: boolean;\n\n  h1?: boolean;\n  h2?: boolean;\n  h3?: boolean;\n  h4?: boolean;\n  h5?: boolean;\n  h6?: boolean;\n  subtitle1?: boolean;\n  subtitle2?: boolean;\n  body1?: boolean;\n  body2?: boolean;\n  button?: boolean;\n  caption?: boolean;\n  overline?: boolean;\n}\n\nexport class Text extends React.PureComponent<Props> {\n  public getFont() {\n    const {\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6,\n      subtitle1,\n      subtitle2,\n      body1,\n      body2,\n      button,\n      caption,\n      overline\n    } = this.props;\n    if (h1) {\n      return FontSize.h1;\n    }\n    if (h2) {\n      return FontSize.h2;\n    }\n    if (h3) {\n      return FontSize.h3;\n    }\n    if (h4) {\n      return FontSize.h4;\n    }\n    if (h5) {\n      return FontSize.h5;\n    }\n    if (h6) {\n      return FontSize.h6;\n    }\n    if (subtitle1) {\n      return FontSize.subtitle1;\n    }\n    if (subtitle2) {\n      return FontSize.subtitle2;\n    }\n    if (body1) {\n      return FontSize.body1;\n    }\n    if (body2) {\n      return FontSize.body2;\n    }\n    if (button) {\n      return FontSize.button;\n    }\n    if (caption) {\n      return FontSize.caption;\n    }\n    if (overline) {\n      return FontSize.overline;\n    }\n    return FontSize.body2;\n  }\n\n  public render() {\n    const { title, style, button, bold, overline, center, hidden } = this.props;\n    const text = button || overline ? (title || \"\").toUpperCase() : title;\n    const textStyle = [\n      this.getFont(),\n      center && styles.center,\n      bold && styles.bold,\n      style\n    ];\n    if (title === undefined || title.length === 0 || hidden) {\n      return null;\n    }\n    return <Original style={textStyle}>{text}</Original>;\n  }\n}\n","import * as React from \"react\";\nimport {\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  ViewStyle\n} from \"react-native\";\nimport { Icon, Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  center: {\n    alignSelf: \"center\"\n  },\n  containedBody: {\n    backgroundColor: Theme.color.primary\n  },\n  containedText: {\n    color: Theme.color.background\n  },\n  container: {\n    alignItems: \"center\",\n    borderColor: \"transparent\", // TODO: add border to be same size as outlined\n    borderRadius: Theme.padding.p01,\n    borderWidth: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    paddingHorizontal: Theme.padding.p04\n  },\n  danger: {\n    color: Theme.color.danger\n  },\n  disableBody: {\n    backgroundColor: Theme.color.light\n  },\n  disableText: {\n    color: Theme.color.secondary\n  },\n  fab: {\n    alignSelf: \"flex-start\",\n    borderRadius: Theme.padding.p08,\n    padding: Theme.padding.p04\n  },\n  half: {\n    width: \"50%\"\n  },\n  height: {\n    height: Theme.padding.p09\n  },\n  icon: {\n    paddingRight: 2\n  },\n  label: {\n    height: Theme.padding.p05,\n    justifyContent: \"flex-start\",\n    margin: Theme.padding.p01,\n    paddingHorizontal: 0\n  },\n  neutral: {\n    color: Theme.color.text\n  },\n  nonFlex: {\n    alignSelf: \"flex-start\"\n  },\n  outlined: {\n    borderColor: Theme.color.secondary\n  },\n  right: {\n    alignSelf: \"flex-end\"\n  },\n  secondary: {\n    color: Theme.color.secondary\n  },\n  text: {\n    backgroundColor: \"transparent\",\n    color: Theme.color.primary\n  }\n});\n\n// styling: https://material.io/design/components/buttons.html#usage\ninterface Props {\n  // content\n  title?: string;\n  icon?: string;\n  // styling\n  buttonStyle?: ViewStyle | {};\n  textStyle?: TextStyle | {};\n  iconColor?: string;\n  // state\n  active?: boolean;\n  hidden?: boolean;\n  disable?: boolean;\n  activeOpacity?: number;\n  // shape\n  text?: boolean; // low emphasis\n  outlined?: boolean; // mid emphasis\n  contained?: boolean; // high emphasis\n  fab?: boolean;\n  toggle?: boolean;\n  label?: boolean;\n  // color\n  neutral?: boolean;\n  secondary?: boolean;\n  danger?: boolean;\n  // size\n  wrap?: boolean;\n  half?: boolean;\n  full?: boolean;\n  center?: boolean;\n  right?: boolean;\n  lowercase?: boolean;\n  // event\n  onPress(): void;\n}\n\nexport class Button extends React.PureComponent<Props> {\n  public render() {\n    const {\n      title,\n      onPress,\n      disable,\n      buttonStyle,\n      textStyle,\n      contained,\n      outlined,\n      wrap,\n      fab,\n      hidden,\n      neutral,\n      half,\n      center,\n      right,\n      icon,\n      iconColor,\n      secondary,\n      danger,\n      label,\n      lowercase,\n      activeOpacity\n    } = this.props;\n    const buttonStyleGroup = [\n      styles.container,\n      !fab && styles.height,\n      this.getShape(),\n      disable && (contained || outlined) && styles.disableBody,\n      fab && styles.fab,\n      wrap && styles.nonFlex,\n      half && styles.half,\n      center && styles.center,\n      right && styles.right,\n      label && styles.label,\n      buttonStyle\n    ];\n    const textStyleGroup = [\n      styles.text,\n      neutral && styles.neutral,\n      secondary && styles.secondary,\n      danger && styles.danger,\n      contained && styles.containedText,\n      disable && styles.disableText,\n      textStyle\n    ];\n    const iconStyleGroup = [title && styles.icon, !iconColor && textStyleGroup];\n    if (hidden) {\n      return null;\n    }\n    return (\n      <TouchableOpacity\n        activeOpacity={activeOpacity}\n        style={buttonStyleGroup}\n        onPress={onPress}\n        disabled={disable}\n      >\n        <Icon\n          color={iconColor}\n          name={icon}\n          size={Theme.padding.p04}\n          style={iconStyleGroup}\n        />\n        <Text center button={!lowercase} title={title} style={textStyleGroup} />\n      </TouchableOpacity>\n    );\n  }\n  private getShape() {\n    const { contained, outlined, fab, text } = this.props;\n    if (contained) {\n      return styles.containedBody;\n    }\n    if (outlined) {\n      return styles.outlined;\n    }\n    if (fab) {\n      return styles.fab;\n    }\n    if (text) {\n      return styles.text;\n    }\n    return styles.text;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    backgroundColor: Theme.color.background,\n    elevation: 1,\n    margin: Theme.padding.p02,\n    padding: Theme.padding.p04,\n    position: \"relative\",\n    shadowColor: Theme.color.dark,\n    shadowOffset: {\n      height: 4,\n      width: 0\n    },\n    shadowOpacity: 0.6,\n    shadowRadius: 6,\n    zIndex: 1\n  }\n});\n\ninterface Props {\n  style?: ViewStyle;\n  onPress?(): void;\n}\n\nexport class Card extends React.PureComponent<Props> {\n  private touchOpacity = 0.3;\n  public render() {\n    const { style, children, onPress } = this.props;\n    return (\n      <TouchableOpacity\n        style={[styles.containerStyle, style]}\n        onPress={onPress && onPress}\n        activeOpacity={onPress ? this.touchOpacity : 1}\n      >\n        {children}\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TextStyle, View } from \"react-native\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    backgroundColor: Theme.color.background,\n    borderBottomWidth: 0.5,\n    borderColor: Theme.color.dark,\n    flexDirection: \"row\",\n    paddingHorizontal: 20,\n    paddingVertical: 10\n  }\n});\n\ninterface Props {\n  style?: TextStyle;\n}\n\nexport class CardSection extends React.PureComponent<Props> {\n  public render() {\n    const { style, children } = this.props;\n    return <View style={[styles.containerStyle, style]}>{children}</View>;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TextStyle, View } from \"react-native\";\nimport { Text } from \"..\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\"\n  }\n});\n\ninterface Props {\n  title: string;\n  style?: TextStyle;\n}\n\nexport class Markdown extends React.PureComponent<Props> {\n  private boldSyntax = \"*\";\n  private withoutSyntaxIndex = 2;\n\n  public render() {\n    const { title, style } = this.props;\n    const words = title.split(\" \");\n    return (\n      <View style={styles.container}>\n        {words.map((word: string, index: number) => (\n          <Text\n            style={style}\n            key={index}\n            bold={this.isWordBold(word)}\n            title={this.formattedWord(words, word, index)}\n          />\n        ))}\n      </View>\n    );\n  }\n\n  private isWordBold(word: string) {\n    return (\n      word.length > this.withoutSyntaxIndex &&\n      word[0] === this.boldSyntax &&\n      word[word.length - 1] === this.boldSyntax\n    );\n  }\n\n  private formattedWord(words: string[], word: string, index: number) {\n    const space = words.length - 1 === index ? \"\" : \" \";\n    const trimmed = this.isWordBold(word)\n      ? word.substring(1, word.length - 1)\n      : word;\n    return trimmed + space;\n  }\n}\n","// import * as React from \"react\";\n// import {\n//   View,\n//   Animated,\n//   PanResponder,\n//   Dimensions,\n//   LayoutAnimation,\n//   UIManager,\n//   Platform\n// } from \"react-native\";\n\n// const SCREEN_WIDTH = Dimensions.get(\"window\").width;\n// const SWIPE_THRESHOLD = 0.25 * SCREEN_WIDTH;\n// const SWIPE_OUT_DURATION = 250;\n\n// interface Props {}\n// interface State {\n//   panResponder: number;\n//   position: number;\n//   index: number;\n// }\n\n// class Swipe extends React.PureComponent<Props, State> {\n//   static defaultProps = {\n//     onSwipeRight: () => {},\n//     onSwipeLeft: () => {},\n//     keyProp: \"id\"\n//   };\n\n//   constructor(props: Props) {\n//     super(props);\n\n//     const position = new Animated.ValueXY();\n//     const panResponder = PanResponder.create({\n//       onStartShouldSetPanResponder: () => true,\n//       onPanResponderMove: (_, gesture) => {\n//         position.setValue({ x: gesture.dx, y: gesture.dy });\n//       },\n//       onPanResponderRelease: (_, gesture) => {\n//         if (gesture.dx > SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"right\");\n//         } else if (gesture.dx < -SWIPE_THRESHOLD) {\n//           this.forceSwipe(\"left\");\n//         } else {\n//           this.resetPosition();\n//         }\n//       }\n//     });\n\n//     this.state = { panResponder, position, index: 0 };\n//   }\n\n//   componentWillReceiveProps(nextProps: Props) {\n//     if (nextProps.data !== this.props.data) {\n//       this.setState({ index: 0 });\n//     }\n//   }\n\n//   componentWillUpdate() {\n//     UIManager.setLayoutAnimationEnabledExperimental &&\n//       UIManager.setLayoutAnimationEnabledExperimental(true);\n//     LayoutAnimation.spring();\n//   }\n\n//   forceSwipe(direction) {\n//     const x = direction === \"right\" ? SCREEN_WIDTH : -SCREEN_WIDTH;\n//     Animated.timing(this.state.position, {\n//       toValue: { x, y: 0 },\n//       duration: SWIPE_OUT_DURATION\n//     }).start(() => this.onSwipeComplete(direction));\n//   }\n\n//   onSwipeComplete(direction) {\n//     const { onSwipeLeft, onSwipeRight, data } = this.props;\n//     const item = data[this.state.index];\n\n//     direction === \"right\" ? onSwipeRight(item) : onSwipeLeft(item);\n//     this.state.position.setValue({ x: 0, y: 0 });\n//     this.setState({ index: this.state.index + 1 });\n//   }\n\n//   resetPosition() {\n//     Animated.spring(this.state.position, {\n//       toValue: { x: 0, y: 0 }\n//     }).start();\n//   }\n\n//   getCardStyle() {\n//     const { position } = this.state;\n//     const rotate = position.x.interpolate({\n//       inputRange: [-SCREEN_WIDTH * 1.5, 0, SCREEN_WIDTH * 1.5],\n//       outputRange: [\"-120deg\", \"0deg\", \"120deg\"]\n//     });\n\n//     return {\n//       ...position.getLayout(),\n//       transform: [{ rotate }]\n//     };\n//   }\n\n//   renderCards() {\n//     if (this.state.index >= this.props.data.length) {\n//       return this.props.renderNoMoreCards();\n//     }\n\n//     const deck = this.props.data.map((item, i) => {\n//       if (i < this.state.index) {\n//         return null;\n//       }\n\n//       if (i === this.state.index) {\n//         return (\n//           <Animated.View\n//             key={item[this.props.keyProp]}\n//             style={[this.getCardStyle(), styles.cardStyle, { zIndex: 99 }]}\n//             {...this.state.panResponder.panHandlers}\n//           >\n//             {this.props.renderCard(item)}\n//           </Animated.View>\n//         );\n//       }\n\n//       return (\n//         <Animated.View\n//           key={item[this.props.keyProp]}\n//           style={[\n//             styles.cardStyle,\n//             { top: 10 * (i - this.state.index), zIndex: -i }\n//           ]}\n//         >\n//           {this.props.renderCard(item)}\n//         </Animated.View>\n//       );\n//     });\n\n//     return Platform.OS === \"android\" ? deck : deck.reverse();\n//   }\n\n//   render() {\n//     return <View>{this.renderCards()}</View>;\n//   }\n// }\n\n// const styles = {\n//   cardStyle: {\n//     position: \"absolute\",\n//     width: SCREEN_WIDTH\n//   }\n// };\n\n// export default Swipe;\n\nimport * as React from \"react\";\nimport { View } from \"react-native\";\n\nexport class Swipe extends React.PureComponent {\n  public render() {\n    return <View />;\n  }\n}\n","import * as React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\ninterface Props {\n  style: ViewStyle | {};\n}\n\nexport class KeyboardAvoid extends React.PureComponent<Props> {\n  public render() {\n    const { style, children } = this.props;\n    return <View style={style}>{children}</View>;\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Icon } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  button: {\n    flex: 1,\n    padding: Theme.padding.p03\n  },\n  buttonRight: {\n    alignSelf: \"flex-end\"\n  }\n});\n\ninterface Props {\n  icon: string;\n  isRight?: boolean;\n  onPress?(): void;\n}\n\nexport class NavButton extends React.PureComponent<Props> {\n  public render() {\n    const { onPress, icon, isRight } = this.props;\n    if (!onPress) { return null; }\n    return (\n      <TouchableOpacity style={styles.button} onPress={onPress}>\n        <Icon\n          color={Theme.color.dark}\n          style={isRight && styles.buttonRight}\n          name={icon}\n        />\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\nimport { NavButton } from \"./NavButton\";\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    backgroundColor: Theme.color.background,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  title: {\n    flex: 1,\n    fontSize: Theme.padding.p05,\n    textAlign: \"center\"\n  }\n});\n\ninterface Props {\n  title?: string;\n  leftIcon?: string;\n  rightIcon?: string;\n  onLeftPress?(): void;\n  onRightPress?(): void;\n}\n\nexport class NavBar extends React.PureComponent<Props> {\n  public render() {\n    const {\n      title = \"\",\n      onLeftPress,\n      onRightPress,\n      leftIcon = \"arrow-left\",\n      rightIcon = \"close\"\n    } = this.props;\n    const isEnabled = title.length > 0 || onLeftPress || onRightPress;\n    if (!isEnabled) { return null; }\n    return (\n      <View style={styles.container}>\n        <NavButton icon={leftIcon} onPress={onLeftPress} />\n        <Text hidden={title.length === 0} style={styles.title} title={title} />\n        <NavButton icon={rightIcon} isRight onPress={onRightPress} />\n      </View>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { SafeAreaView, StyleSheet, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\nimport { KeyboardAvoid } from \"./KeyboardAvoid\";\nimport { NavBar } from \"./NavBar\";\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Theme.color.background,\n    flex: 1\n  }\n});\n\ninterface OwnProps {\n  style?: ViewStyle | {};\n  title?: string;\n  leftIcon?: string;\n  rightIcon?: string;\n  disableScroll?: boolean;\n  onLeftPress?(): void;\n  onRightPress?(): void;\n}\n\ntype Props = OwnProps;\n\nexport class Screen extends React.PureComponent<Props> {\n  public render() {\n    const {\n      title,\n      style,\n      onLeftPress,\n      onRightPress,\n      children,\n      disableScroll,\n      leftIcon,\n      rightIcon\n    } = this.props;\n    return (\n      <SafeAreaView style={[styles.container, style]}>\n        <NavBar\n          title={title}\n          leftIcon={leftIcon}\n          rightIcon={rightIcon}\n          onLeftPress={onLeftPress}\n          onRightPress={onRightPress}\n        />\n        <KeyboardAvoid\n          scrollEnabled={!disableScroll}\n          style={[styles.container, style]}\n        >\n          {children}\n        </KeyboardAvoid>\n      </SafeAreaView>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  badgeContainer: {\n    alignItems: \"center\",\n    backgroundColor: Theme.color.primary,\n    borderRadius: 20,\n    height: 20,\n    justifyContent: \"center\",\n    position: \"absolute\",\n    right: -10,\n    top: -10,\n    width: 20\n  },\n  badgeText: {\n    color: Theme.color.background,\n    fontSize: Theme.padding.p02\n  }\n});\n\ninterface Props {\n  badge: number;\n}\n\nexport class Badge extends React.PureComponent<Props> {\n  private badgeLimit = \"!\";\n  private maxBadgeNumber = 99;\n  public render() {\n    const { badge } = this.props;\n    const num = badge > this.maxBadgeNumber ? this.badgeLimit : String(badge);\n    if (badge <= 0) {\n      return null;\n    }\n    return (\n      <View style={styles.badgeContainer}>\n        <Text center style={styles.badgeText} title={num} />\n      </View>\n    );\n  }\n}\n","// TODO: icons for web\n\nimport * as React from \"react\";\nimport { Text } from \"..\";\n\ninterface Props {\n  name: string;\n  size: number;\n  color: string;\n}\n\nexport class IconSource extends React.PureComponent<Props> {\n  public render() {\n    const { name } = this.props;\n    return <Text title={name} />;\n  }\n}\n","// usage: <Icon name='check' />\n// source: https://materialdesignicons.com/\n\nimport * as React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\nimport { Theme } from \"../../utils\";\nimport { Badge } from \"./Badge\";\nimport { IconSource } from \"./IconSource\";\n\ninterface Props {\n  badge?: number;\n  style?: ViewStyle | {};\n  clear?: boolean;\n  hidden?: boolean;\n  size?: number;\n  color?: string;\n  name?: string;\n}\n\nexport class Icon extends React.PureComponent<Props> {\n  public render() {\n    const {\n      name,\n      style,\n      badge = 0,\n      clear,\n      size = Theme.padding.p06,\n      color = Theme.color.dark,\n      hidden\n    } = this.props;\n    const colored = clear ? Theme.color.background : color;\n    if (name === undefined || name.length === 0 || hidden) {\n      return null;\n    }\n    return (\n      <View style={style}>\n        <IconSource name={name} size={size} color={colored} style={style} />\n        <Badge badge={badge} />\n      </View>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { Button } from \"..\";\n\nconst styles = StyleSheet.create({\n  clear: {\n    position: \"absolute\",\n    right: -6,\n    top: 6\n  }\n});\n\ninterface Props {\n  hidden: boolean;\n  onPress(): void;\n}\n\nexport class Clear extends React.PureComponent<Props> {\n  private icon = \"close-circle\";\n  public render() {\n    const { hidden, onPress } = this.props;\n    return (\n      <Button\n        secondary\n        hidden={hidden}\n        icon={this.icon}\n        buttonStyle={styles.clear}\n        onPress={onPress}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Button } from \"..\";\n\ninterface Props {\n  error?: string;\n  onPress(): void;\n}\n\nexport class Error extends React.PureComponent<Props> {\n  private icon = \"alert-circle\";\n  public render() {\n    const { error, onPress } = this.props;\n    const icon = error && this.icon;\n    const message = error || \" \";\n    return (\n      <Button\n        label\n        wrap\n        lowercase\n        activeOpacity={1}\n        icon={icon}\n        title={message}\n        danger\n        onPress={onPress}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Text } from \"..\";\nimport { Theme } from \"../../utils\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\"\n  },\n  optional: {\n    color: Theme.color.secondary\n  },\n  title: {\n    textTransform: \"capitalize\"\n  }\n});\n\ninterface Props {\n  title?: string;\n  optional?: boolean;\n  onPress(): void;\n}\n\nexport class Title extends React.PureComponent<Props> {\n  private optionalText = \" - Optional\";\n  public render() {\n    const { title, optional, onPress } = this.props;\n    const stylesOptional = [styles.title, styles.optional];\n    if (title === undefined || title.length === 0) {\n      return null;\n    }\n    return (\n      // TODO: remove touchableopacity and move to button component\n      <TouchableOpacity\n        activeOpacity={1}\n        style={styles.container}\n        onPress={onPress}\n      >\n        <Text title={title} style={styles.title} />\n        <Text\n          hidden={!optional}\n          title={this.optionalText}\n          style={stylesOptional}\n        />\n      </TouchableOpacity>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  AppState,\n  AppStateStatus,\n  ConnectionInfo,\n  ConnectionType,\n  Dimensions,\n  NetInfo\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { Route, Router, Switch } from \"../../components\";\nimport {\n  DimensionsProps,\n  onAppStatusChange,\n  onDimensionChange,\n  onNetworkChange\n} from \"../../models\";\nimport { Debug, Landing, Login, Main, NotFound } from \"../../screens\";\n\ninterface DispatchProps {\n  onAppStatusChange: typeof onAppStatusChange;\n  onNetworkChange: typeof onNetworkChange;\n  onDimensionChange: typeof onDimensionChange;\n}\n\ntype Props = DispatchProps;\n\nclass Component extends React.PureComponent<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.enableListeners();\n  }\n\n  public componentWillUnmount() {\n    this.disableListeners();\n  }\n\n  public render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Landing} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/debug\" component={Debug} />\n          <Route auth path=\"/app\" component={Main} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    );\n  }\n\n  private enableListeners() {\n    NetInfo.addEventListener(\"connectionChange\", this.onNetworkChange);\n    Dimensions.addEventListener(\"change\", this.onDimensionChange);\n    AppState.addEventListener(\"change\", this.onAppStateChange);\n  }\n\n  private disableListeners() {\n    NetInfo.removeEventListener(\"connectionChange\", this.onNetworkChange);\n    Dimensions.removeEventListener(\"change\", this.onDimensionChange);\n    AppState.removeEventListener(\"change\", this.onAppStateChange);\n  }\n\n  private onNetworkChange = (change: ConnectionType | ConnectionInfo) => {\n    if (typeof change === \"string\") {\n      return;\n    }\n    this.props.onNetworkChange(change);\n  };\n\n  private onDimensionChange = (change: DimensionsProps) => {\n    this.props.onDimensionChange(change);\n  };\n\n  private onAppStateChange = (change: AppStateStatus) => {\n    this.props.onAppStatusChange(change);\n  };\n}\n\nexport const App = connect(\n  null,\n  {\n    onAppStatusChange,\n    onDimensionChange,\n    onNetworkChange\n  }\n)(Component);\n","import * as React from \"react\";\nimport { Animated, StyleSheet, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen } from \"../../../../components\";\nimport { getHeight, getWidth, RootState } from \"../../../../models\";\n\nconst styles = StyleSheet.create({\n  ball: {\n    borderColor: \"black\",\n    borderRadius: 30,\n    borderWidth: 30,\n    height: 60,\n    marginLeft: -30,\n    marginTop: -30,\n    width: 60\n  },\n  button: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  private ballPosition: Animated.ValueXY;\n\n  constructor(props: Props) {\n    super(props);\n    const { width, height } = this.props;\n    this.ballPosition = new Animated.ValueXY({ x: width / 2, y: height / 2 });\n  }\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <Animated.View style={[this.ballPosition.getLayout(), styles.ball]} />\n        <View style={styles.button}>\n          <Button title=\"initial\" onPress={() => this.animate(0.5, 0.5)} />\n          <Button\n            title=\"random\"\n            onPress={() => this.animate(Math.random(), Math.random())}\n          />\n        </View>\n      </Screen>\n    );\n  }\n\n  private animate(dx: number, dy: number) {\n    const { width, height } = this.props;\n    Animated.spring(this.ballPosition, {\n      toValue: { x: width * dx, y: height * dy }\n    }).start();\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  height: getHeight(state),\n  width: getWidth(state)\n});\n\nexport const Ball = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport { Animated, Dimensions, StyleSheet, View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen } from \"../../../../components\";\n\nconst cardHeight = 250;\nconst cardTitle = 45;\nconst cardPadding = 10;\n\nconst { height } = Dimensions.get(\"window\");\nconst cards = [\n  {\n    color: \"#a9d0b6\",\n    name: \"Shot\",\n    price: \"30 CHF\"\n  },\n  {\n    color: \"#e9bbd1\",\n    name: \"Juice\",\n    price: \"64 CHF\"\n  },\n  {\n    color: \"#eba65c\",\n    name: \"Mighty Juice\",\n    price: \"80 CHF\"\n  },\n  {\n    color: \"#95c3e4\",\n    name: \"Sandwich\",\n    price: \"85 CHF\"\n  },\n  {\n    color: \"#1c1c1c\",\n    name: \"Combi\",\n    price: \"145 CHF\"\n  },\n  {\n    color: \"#a390bc\",\n    name: \"Signature\",\n    price: \"92 CHF\"\n  },\n  {\n    color: \"#fef2a0\",\n    name: \"Coffee\",\n    price: \"47 CHF\"\n  }\n];\n\ntype Props = RouteComponentProps;\n\nexport class Cards extends React.PureComponent<Props> {\n  public state = {\n    y: new Animated.Value(0)\n  };\n\n  public render() {\n    const { y } = this.state;\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <View style={styles.container}>\n          <View style={StyleSheet.absoluteFill}>\n            {cards.map((card, i) => {\n              const inputRange = [-cardHeight, 0];\n              const outputRange = [\n                cardHeight * i,\n                (cardHeight - cardTitle) * -i\n              ];\n              if (i > 0) {\n                inputRange.push(cardPadding * i);\n                outputRange.push((cardHeight - cardPadding) * -i);\n              }\n              const translateY = y.interpolate({\n                extrapolateRight: \"clamp\",\n                inputRange,\n                outputRange\n              });\n              return (\n                <Animated.View\n                  key={card.name}\n                  style={{ transform: [{ translateY }] }}\n                >\n                  <View\n                    style={[styles.card, { backgroundColor: card.color }]}\n                  />\n                </Animated.View>\n              );\n            })}\n          </View>\n          <Animated.ScrollView\n            scrollEventThrottle={16}\n            contentContainerStyle={styles.content}\n            showsVerticalScrollIndicator={false}\n            onScroll={Animated.event([\n              {\n                nativeEvent: {\n                  contentOffset: { y }\n                }\n              }\n            ])}\n          />\n        </View>\n      </Screen>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    borderRadius: 10,\n    height: cardHeight\n  },\n  container: {\n    flex: 1\n  },\n  content: {\n    height: height * 2\n  },\n  root: {\n    flex: 1,\n    margin: 16\n  }\n});\n","import * as React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\n\ntype Props = RouteComponentProps;\n\nexport class Fonts extends React.PureComponent<Props> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <ScrollView>\n          <Text h1 title=\"H1: The quick brown fox jumps over the lazy dog.\" />\n          <Text h2 title=\"H2: The quick brown fox jumps over the lazy dog.\" />\n          <Text h3 title=\"H3: The quick brown fox jumps over the lazy dog.\" />\n          <Text h4 title=\"H4: The quick brown fox jumps over the lazy dog.\" />\n          <Text h5 title=\"H5: The quick brown fox jumps over the lazy dog.\" />\n          <Text h6 title=\"H6: The quick brown fox jumps over the lazy dog.\" />\n          <Text\n            subtitle1\n            title=\"SUBTITLE1: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            subtitle2\n            title=\"SUBTITLE2: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            body1\n            title=\"BODY1: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            body2\n            title=\"BODY2: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            overline\n            title=\"OVERLINE: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            caption\n            title=\"CAPTION: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text\n            button\n            title=\"BUTTON: The quick brown fox jumps over the lazy dog.\"\n          />\n          <Text title=\"NOTHING: The quick brown fox jumps over the lazy dog.\" />\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  Animated,\n  PanResponder,\n  PanResponderInstance,\n  StyleSheet\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\nimport { getHeight, getWidth } from \"../../../../models\";\nimport { RootState } from \"../../../../models\";\n\nconst styles = StyleSheet.create({\n  ball: {\n    borderColor: \"black\",\n    borderRadius: 30,\n    borderWidth: 30,\n    height: 60,\n    marginLeft: -30,\n    marginTop: -30,\n    width: 60\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  private ballPosition: Animated.ValueXY;\n  private panGesture: PanResponderInstance;\n\n  constructor(props: Props) {\n    super(props);\n    const { width, height } = this.props;\n    this.ballPosition = new Animated.ValueXY({ x: width / 2, y: height / 2 });\n    this.panGesture = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: (_, gestureState) => {\n        Animated.spring(this.ballPosition, {\n          toValue: { x: gestureState.moveX, y: gestureState.moveY }\n        }).start();\n      }\n    });\n  }\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <Text center title=\"drag the circle\" />\n        <Animated.View\n          style={[this.ballPosition.getLayout(), styles.ball]}\n          {...this.panGesture.panHandlers}\n        />\n      </Screen>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  height: getHeight(state),\n  width: getWidth(state)\n});\n\nexport const Drag = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen } from \"../../../../components\";\n\ntype Props = RouteComponentProps;\n\nexport class Buttons extends React.PureComponent<Props> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <ScrollView>\n          <Button title=\"nothing\" onPress={() => undefined} />\n          <Button neutral title=\"neutral\" onPress={() => undefined} />\n          <Button text title=\"text\" onPress={() => undefined} />\n          <Button outlined title=\"outlined\" onPress={() => undefined} />\n          <Button contained title=\"contained\" onPress={() => undefined} />\n\n          <Button wrap title=\"nothing\" onPress={() => undefined} />\n          <Button wrap neutral title=\"neutral\" onPress={() => undefined} />\n          <Button wrap text title=\"text\" onPress={() => undefined} />\n          <Button wrap outlined title=\"outlined\" onPress={() => undefined} />\n          <Button wrap contained title=\"contained\" onPress={() => undefined} />\n\n          <Button half title=\"nothing\" onPress={() => undefined} />\n          <Button half neutral title=\"neutral\" onPress={() => undefined} />\n          <Button half text title=\"text\" onPress={() => undefined} />\n          <Button half outlined title=\"outlined\" onPress={() => undefined} />\n          <Button half contained title=\"contained\" onPress={() => undefined} />\n\n          <Button half center title=\"nothing\" onPress={() => undefined} />\n          <Button\n            half\n            center\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button half center text title=\"text\" onPress={() => undefined} />\n          <Button\n            half\n            center\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            center\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button right title=\"nothing\" onPress={() => undefined} />\n          <Button right neutral title=\"neutral\" onPress={() => undefined} />\n          <Button right text title=\"text\" onPress={() => undefined} />\n          <Button right outlined title=\"outlined\" onPress={() => undefined} />\n          <Button right contained title=\"contained\" onPress={() => undefined} />\n\n          <Button disable wrap title=\"nothing\" onPress={() => undefined} />\n          <Button\n            disable\n            wrap\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button disable wrap text title=\"text\" onPress={() => undefined} />\n          <Button\n            disable\n            wrap\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            disable\n            wrap\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button half icon=\"check\" title=\"nothing\" onPress={() => undefined} />\n          <Button\n            half\n            icon=\"check\"\n            neutral\n            title=\"neutral\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            text\n            title=\"text\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            outlined\n            title=\"outlined\"\n            onPress={() => undefined}\n          />\n          <Button\n            half\n            icon=\"check\"\n            contained\n            title=\"contained\"\n            onPress={() => undefined}\n          />\n\n          <Button wrap icon=\"check\" onPress={() => undefined} />\n          <Button wrap icon=\"check\" neutral onPress={() => undefined} />\n          <Button wrap icon=\"check\" text onPress={() => undefined} />\n          <Button wrap icon=\"check\" outlined onPress={() => undefined} />\n          <Button wrap icon=\"check\" contained onPress={() => undefined} />\n\n          <Button fab icon=\"check\" onPress={() => undefined} />\n          <Button fab icon=\"check\" iconColor=\"red\" onPress={() => undefined} />\n          <Button fab icon=\"check\" neutral onPress={() => undefined} />\n          <Button fab icon=\"check\" text onPress={() => undefined} />\n          <Button fab icon=\"check\" outlined onPress={() => undefined} />\n          <Button fab icon=\"check\" contained onPress={() => undefined} />\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import { NativeTouchEvent, PointPropType } from \"react-native\";\n\ninterface Touches {\n  [key: string]: PointPropType;\n}\n\ninterface Outcome {\n  spread: boolean;\n  pinch: boolean;\n}\n\nexport class GestureHandler {\n  private minTouches: number;\n  private finish: Touches = {};\n  private start: Touches = {};\n\n  constructor({ minTouches = 4 } = {}) {\n    this.minTouches = minTouches;\n  }\n\n  public onPanResponderMove(event: any) {\n    const touches: NativeTouchEvent[] = event.nativeEvent.touches;\n    touches.map((touch: NativeTouchEvent) => {\n      this.recordFinish(touch);\n      this.recordStart(touch);\n    });\n  }\n\n  public onPanResponderRelease(): Outcome {\n    const outcome = this.determineOutcome();\n    this.start = {};\n    this.finish = {};\n    return outcome;\n  }\n\n  private recordStart(touch: NativeTouchEvent) {\n    if (this.isStartAlreadyRecorded(touch)) {\n      return;\n    }\n    this.start[String(touch.identifier)] = {\n      x: touch.locationX,\n      y: touch.locationY\n    };\n  }\n\n  private isStartAlreadyRecorded(touch: NativeTouchEvent) {\n    return this.start[String(touch.identifier)];\n  }\n\n  private recordFinish(touch: NativeTouchEvent) {\n    this.finish[String(touch.identifier)] = {\n      x: touch.locationX,\n      y: touch.locationY\n    };\n  }\n\n  private isSpread(\n    start: PointPropType,\n    finish: PointPropType,\n    center: PointPropType\n  ) {\n    const startXDistance = Math.abs(start.x - center.x);\n    const startYDistance = Math.abs(start.y - center.y);\n    const finishXDistance = Math.abs(finish.x - center.x);\n    const finishYDistance = Math.abs(finish.y - center.y);\n    return (\n      startXDistance <= finishXDistance && startYDistance <= finishYDistance\n    );\n  }\n\n  private determineCenter(points: Touches) {\n    const numRecordedTouched = Object.keys(points).length;\n    let x = 0;\n    let y = 0;\n    for (let i = 1; i <= numRecordedTouched; i++) {\n      const point = points[i];\n      x += point.x;\n      y += point.x;\n    }\n    return { x: x / numRecordedTouched, y: y / numRecordedTouched };\n  }\n\n  private determineOutcome(): Outcome {\n    const numRecordedTouched = Object.keys(this.start).length;\n    const outcome = {\n      pinch: false,\n      spread: false\n    };\n    if (numRecordedTouched < this.minTouches) {\n      return outcome;\n    }\n    let spread = false;\n    let pinch = false;\n    const center = this.determineCenter(this.start);\n    for (let i = 1; i <= numRecordedTouched; i++) {\n      const start = this.start[i];\n      const finish = this.finish[i];\n      const isPinch = !this.isSpread(start, finish, center);\n      const isSpread = this.isSpread(start, finish, center);\n      if (isPinch && isSpread) {\n        return outcome;\n      }\n      if (!isPinch && !isSpread) {\n        return outcome;\n      }\n      if (isPinch && spread) {\n        return outcome;\n      }\n      if (isSpread && pinch) {\n        return outcome;\n      }\n      pinch = isPinch;\n      spread = isSpread;\n    }\n    return { spread, pinch };\n  }\n}\n","import * as React from \"react\";\nimport {\n  Animated,\n  PanResponder,\n  PanResponderInstance,\n  StyleSheet\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen, Text } from \"../../../../components\";\nimport { getHeight, getWidth } from \"../../../../models\";\nimport { RootState } from \"../../../../models\";\nimport { GestureHandler } from \"./logic\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\n\ninterface StateProps {\n  height: number;\n  width: number;\n}\n\ntype Props = StateProps & RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  public state = {\n    pinchCount: 0,\n    spreadCount: 0\n  };\n  private panGesture: PanResponderInstance;\n  private gestureHandler: GestureHandler;\n  private minTouches = 3;\n  private title = `pinch or spread the screen with ${\n    this.minTouches\n  } fingers minimum`;\n\n  constructor(props: Props) {\n    super(props);\n    this.gestureHandler = new GestureHandler({ minTouches: this.minTouches });\n    this.panGesture = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: event => {\n        this.gestureHandler.onPanResponderMove(event);\n      },\n      onPanResponderRelease: () => {\n        const { spreadCount, pinchCount } = this.state;\n        const outcome = this.gestureHandler.onPanResponderRelease();\n        if (outcome.spread) {\n          this.setState({ spreadCount: spreadCount + 1 });\n        }\n        if (outcome.pinch) {\n          this.setState({ pinchCount: pinchCount + 1 });\n        }\n      }\n    });\n  }\n\n  public render() {\n    const { history } = this.props;\n    const { spreadCount, pinchCount } = this.state;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <Text center title={this.title} />\n        <Text center title={`spread: ${spreadCount}`} />\n        <Text center title={`pinch: ${pinchCount}`} />\n        <Animated.View\n          style={styles.container}\n          {...this.panGesture.panHandlers}\n        />\n      </Screen>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  height: getHeight(state),\n  width: getWidth(state)\n});\n\nexport const PinchSpread = connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport {\n  Animated,\n  EmitterSubscription,\n  FlatList,\n  Keyboard,\n  Platform,\n  StyleSheet,\n  View\n} from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Icon, Screen, Text, TextInput } from \"../../../../components\";\nimport { colorWithOpacity, Config, Theme } from \"../../../../utils\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    backgroundColor: Theme.color.light,\n    height: Theme.padding.p20,\n    justifyContent: \"center\",\n    padding: Theme.padding.p02\n  },\n  item: {\n    borderBottomColor: Theme.color.light,\n    borderWidth: 0.2,\n    padding: Theme.padding.p06\n  },\n  text: {\n    fontSize: Theme.padding.p06\n  },\n  textContainer: {\n    alignItems: \"center\",\n    backgroundColor: Theme.color.background,\n    flexDirection: \"row\",\n    height: \"100%\",\n    padding: Theme.padding.p02\n  },\n  textInput: {\n    flex: 1,\n    marginLeft: Theme.padding.p02\n  }\n});\n\nconst DATA = [\n  { id: 1, name: \"1\" },\n  { id: 2, name: \"2\" },\n  { id: 3, name: \"3\" },\n  { id: 4, name: \"4\" },\n  { id: 5, name: \"5\" },\n  { id: 6, name: \"6\" },\n  { id: 7, name: \"7\" },\n  { id: 8, name: \"8\" },\n  { id: 9, name: \"9\" },\n  { id: 10, name: \"10\" },\n  { id: 11, name: \"11\" },\n  { id: 12, name: \"12\" },\n  { id: 13, name: \"13\" },\n  { id: 14, name: \"14\" },\n  { id: 15, name: \"15\" },\n  { id: 16, name: \"16\" },\n  { id: 17, name: \"17\" },\n  { id: 18, name: \"18\" },\n  { id: 19, name: \"19\" }\n];\n\ninterface State {\n  input: string;\n  iconName: string;\n  animation: Animated.Value;\n}\n\ntype Props = RouteComponentProps;\n\nexport class SearchBar extends React.PureComponent<Props, State> {\n  public iconSearch = \"magnify\";\n  public state: State = {\n    animation: new Animated.Value(0),\n    iconName: this.iconSearch,\n    input: \"\"\n  };\n  private iconBack = \"arrow-left\";\n  private textInputPlaceHolder = \"Search\";\n  private animationDuration = 400;\n  private translateIcon = this.state.animation.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [1, -60, 1]\n  });\n  private fadeContainer = this.state.animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\n      Theme.color.background,\n      colorWithOpacity(Theme.color.secondary)\n    ]\n  });\n  private iconChangeTimeout?: number;\n  private keyboardDidShowListener: EmitterSubscription;\n  private keyboardDidHideListener: EmitterSubscription;\n  private keyboardWillShowListener: EmitterSubscription;\n  private keyboardWillHideListener: EmitterSubscription;\n\n  constructor(props: Props) {\n    super(props);\n    this.keyboardDidShowListener = Keyboard.addListener(\n      \"keyboardDidShow\",\n      this.keyboardDidShow\n    );\n    this.keyboardDidHideListener = Keyboard.addListener(\n      \"keyboardDidHide\",\n      this.keyboardDidHide\n    );\n    this.keyboardWillShowListener = Keyboard.addListener(\n      \"keyboardWillShow\",\n      this.keyboardWillShow\n    );\n    this.keyboardWillHideListener = Keyboard.addListener(\n      \"keyboardWillHide\",\n      this.keyboardWillHide\n    );\n  }\n\n  public componentWillUnmount() {\n    this.keyboardDidShowListener.remove();\n    this.keyboardDidHideListener.remove();\n    this.keyboardWillShowListener.remove();\n    this.keyboardWillHideListener.remove();\n    clearTimeout(this.iconChangeTimeout);\n  }\n\n  public render() {\n    const { history } = this.props;\n    const { iconName, input } = this.state;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <View style={styles.header}>\n          <View style={styles.textContainer}>\n            <Animated.View\n              style={{\n                transform: [{ translateX: this.translateIcon }]\n              }}\n            >\n              <Icon name={iconName} style={styles.text} />\n            </Animated.View>\n            <TextInput\n              value={input}\n              onChangeText={(value: string) => this.setState({ input: value })}\n              placeholder={this.textInputPlaceHolder}\n              style={[styles.textInput, styles.text]}\n            />\n          </View>\n        </View>\n        <Animated.View style={{ flex: 1, backgroundColor: this.fadeContainer }}>\n          <FlatList\n            keyExtractor={item => item.id.toString()}\n            data={DATA}\n            renderItem={({ item }) => (\n              <Text subtitle2 style={styles.item} title={item.name} />\n            )}\n          />\n        </Animated.View>\n      </Screen>\n    );\n  }\n\n  private onSearchBarFocus() {\n    this.animate(1);\n    this.changeIcon(this.iconBack);\n  }\n\n  private animate(value: number) {\n    Animated.timing(this.state.animation, {\n      duration: this.animationDuration,\n      toValue: value\n    }).start();\n  }\n\n  private changeIcon(iconName: string) {\n    this.iconChangeTimeout = setTimeout(() => {\n      clearTimeout(this.iconChangeTimeout);\n      this.setState({ iconName });\n    }, this.animationDuration / 2);\n  }\n\n  private onSearchBarUnFocus() {\n    this.animate(0);\n    this.changeIcon(this.iconSearch);\n  }\n\n  private keyboardWillShow = () => {\n    if (Platform.OS !== Config.os.ios) {\n      return;\n    }\n    this.onSearchBarFocus();\n  };\n\n  private keyboardWillHide = () => {\n    if (Platform.OS !== Config.os.ios) {\n      return;\n    }\n    this.onSearchBarUnFocus();\n  };\n\n  private keyboardDidShow = () => {\n    if (Platform.OS !== Config.os.android) {\n      return;\n    }\n    this.onSearchBarFocus();\n  };\n\n  private keyboardDidHide = () => {\n    if (Platform.OS !== Config.os.android) {\n      return;\n    }\n    this.onSearchBarUnFocus();\n  };\n}\n","import * as React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Card, Screen, Text } from \"../../../../components\";\nimport { Theme } from \"../../../../utils\";\n\ntype Props = RouteComponentProps;\n\n// TODO: why need scrollview for screen?\nexport class OKRs extends React.PureComponent<Props> {\n  public state = {\n    value: 0\n  };\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <ScrollView\n          contentContainerStyle={{ paddingHorizontal: Theme.padding.p05 }}\n        >\n          <Card>\n            <Text h6 title=\"Company\" />\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Mission\" />\n              <Text\n                title=\"We strive to offer our customers the lowest possible prices\n        the best available selection and the utmost convenience.\"\n              />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Vision\" />\n              <Text title=\"To be Earth’s most customer-centric company where customers can find and discover anything they might want to buy online.\" />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Values\" />\n              <Text title=\"Customer Obsession\" />\n              <Text title=\"Ownership\" />\n              <Text title=\"Invent and Simplify\" />\n              <Text title=\"Are Right a Lot\" />\n              <Text title=\"Learn and Be Curious\" />\n              <Text title=\"Hire and Develop the Best\" />\n              <Text title=\"Insist on the Highest Standards\" />\n              <Text title=\"Think Big\" />\n              <Text title=\"Bias for Action\" />\n              <Text title=\"Frugality\" />\n              <Text title=\"Earn Trust\" />\n              <Text title=\"Dive Deep\" />\n              <Text title=\"Have Backbone; Disagree and Commit\" />\n              <Text title=\"Deliver Results\" />\n            </Card>\n          </Card>\n          <Card>\n            <Text h6 title=\"Product\" />\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Vision\" />\n              <Text title=\"Jim, owner\" />\n            </Card>\n\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"KPIs\" />\n              <Text title=\"Customer Lifetime Value\" />\n              <Text title=\"Average Revenue Per user\" />\n              <Text title=\"Customer Aquisition Cost\" />\n              <Text title=\"Monthly Recurring Revenue\" />\n              <Text title=\"Churn\" />\n              <Text title=\"Cost of Sales\" />\n              <Text title=\"Contributing Margins\" />\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Team\" />\n              <Text title=\"Jim, owner\" />\n              <Text title=\"Bob, designer\" />\n              <Text title=\"Steve, engineer\" />\n              <Text title=\"Greg, engineer\" />\n            </Card>\n\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Objective\" />\n              <Text title=\"Jim, owner\" />\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n              <Card onPress={() => undefined}>\n                <Text h6 title=\"KeyResult\" />\n                <Text title=\"Jim, owner\" />\n              </Card>\n            </Card>\n            <Card onPress={() => undefined}>\n              <Text h6 title=\"Objective\" />\n              <Text title=\"Jim, owner\" />\n            </Card>\n          </Card>\n        </ScrollView>\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport {\n  Button,\n  KeyboardType,\n  Screen,\n  TextInput\n} from \"../../../../components\";\nimport { Theme } from \"../../../../utils\";\n\ntype Props = RouteComponentProps;\n\nexport class Input extends React.PureComponent<Props> {\n  public state = {\n    email: \"\",\n    error: \"\",\n    name: \"\",\n    password: \"\"\n  };\n  public render() {\n    const { email, password, name, error } = this.state;\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <View\n          style={{ flex: 1, backgroundColor: Theme.color.light, padding: 20 }}\n        >\n          <TextInput\n            title=\"Name\"\n            placeholder=\"jane doe\"\n            optional\n            value={name}\n            onChangeText={val => this.setState({ name: val })}\n            error={error}\n          />\n          <TextInput\n            title=\"EMAIL\"\n            value={email}\n            onChangeText={val => this.setState({ email: val })}\n            keyboardType={KeyboardType.Email}\n            placeholder=\"example@gmail.com\"\n            error={error}\n          />\n          <TextInput\n            value={password}\n            onChangeText={val => this.setState({ password: val })}\n            title=\"Password\"\n            placeholder=\"•••••••\"\n            secureTextEntry\n          />\n          <Button\n            contained\n            title=\"complete form\"\n            onPress={() => this.setState({ error: \"Invalid Email\" })}\n          />\n        </View>\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Dimensions, FlatList, View } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text } from \"../../../../components\";\n\ninterface OwnProps {\n  title: string;\n}\n\ntype Props = OwnProps & RouteComponentProps;\n\nexport class Questionnaire extends React.PureComponent<Props> {\n  public data = [\n    {\n      choices: [\n        {\n          key: \"1\",\n          selected: false,\n          title: \"individual\"\n        },\n        {\n          key: \"2\",\n          selected: false,\n          title: \"couple\"\n        },\n        {\n          key: \"3\",\n          selected: false,\n          title: \"teen\"\n        }\n      ],\n      key: \"1\",\n      next: \"2\",\n      title: \"What type of counseling are you looking for\",\n      type: \"radio\"\n    },\n    { key: \"2\", title: \"2\" },\n    { key: \"3\", title: \"3\" },\n    { key: \"4\", title: \"4\" },\n    { key: \"5\", title: \"5\" }\n  ];\n  public output: any = {};\n  public width = Dimensions.get(\"window\").width;\n  public tableView: any;\n  public currentIndex = 0;\n\n  public onViewableItemsChanged = ({ viewableItems }: any) => {\n    this.currentIndex = viewableItems[0].index || 0;\n  };\n\n  public onProgress = (direction = 1) => {\n    const index = this.currentIndex + direction;\n    if (index < 0) {\n      return;\n    }\n    if (index >= this.data.length) {\n      this.onFinish();\n      return;\n    }\n    this.tableView.scrollToIndex({\n      animated: true,\n      index\n    });\n  };\n\n  public onSelection = (item: any, choice: any) => {\n    this.output = {\n      ...this.output,\n      [item.key]: {\n        ...this.output[item.key],\n        [choice.key]: true\n      }\n    };\n\n    // this.onProgress();\n  };\n\n  public onFinish = () => undefined;\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <FlatList\n          scrollEnabled={false}\n          ref={(ref: any) => (this.tableView = ref)}\n          removeClippedSubviews\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          onViewableItemsChanged={this.onViewableItemsChanged}\n          viewabilityConfig={{\n            itemVisiblePercentThreshold: 50\n          }}\n          horizontal\n          pagingEnabled\n          data={this.data}\n          renderItem={({ item }) => {\n            let items: any = <View style={{ flex: 1 }} />;\n\n            if (item.choices) {\n              items = (\n                <View style={{ flex: 1 }}>\n                  {item.choices.map(choice => {\n                    return (\n                      <Button\n                        key={choice.title}\n                        title={choice.title}\n                        onPress={() => {\n                          this.onSelection(item, choice);\n                        }}\n                      />\n                    );\n                  })}\n                </View>\n              );\n            }\n\n            return (\n              <View style={{ width: this.width }}>\n                <Text title={item.title} />\n                {items}\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-around\"\n                  }}\n                >\n                  <Button title=\"prev\" onPress={() => this.onProgress(-1)} />\n                  <Button title=\"next\" onPress={() => this.onProgress(1)} />\n                  <Button title=\"next2\" onPress={() => this.onProgress(2)} />\n                </View>\n              </View>\n            );\n          }}\n        />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, TextInput } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\nimport { createItem } from \"../../models/Item\";\n\ninterface DispatchProps {\n  createItem: typeof createItem;\n}\ntype Props = RouteComponentProps & DispatchProps;\ninterface State {\n  name: string;\n  description: string;\n}\n\nclass Component extends React.PureComponent<Props, State> {\n  public state = {\n    description: \"\",\n    name: \"\"\n  };\n  public render() {\n    const { name, description } = this.state;\n    const { history } = this.props;\n\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <TextInput title=\"name\" value={name} onChangeText={this.setName} />\n        <TextInput\n          title=\"description\"\n          value={description}\n          onChangeText={this.setDescription}\n        />\n        <Button title=\"create\" onPress={this.createItem} />\n      </Screen>\n    );\n  }\n\n  private setName = (name: string) => {\n    this.setState({ name });\n  };\n  private setDescription = (description: string) => {\n    this.setState({ description });\n  };\n  private createItem = () => {\n    const { createItem: create, history } = this.props;\n    const { name, description } = this.state;\n    create({ name, description });\n    history.goBack();\n  };\n}\n\nexport const ItemCreate = connect(\n  (state: RootState) => ({\n    state\n  }),\n  { createItem }\n)(Component);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, TextInput } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\nimport { createItem } from \"../../models/Item\";\n\ninterface DispatchProps {\n  createItem: typeof createItem;\n}\ntype Props = RouteComponentProps & DispatchProps;\ninterface State {\n  name: string;\n  description: string;\n}\n\nclass Component extends React.PureComponent<Props, State> {\n  public state = {\n    description: \"\",\n    name: \"\"\n  };\n  public render() {\n    const { name, description } = this.state;\n    const { history } = this.props;\n\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <TextInput title=\"name\" value={name} onChangeText={this.setName} />\n        <TextInput\n          title=\"description\"\n          value={description}\n          onChangeText={this.setDescription}\n        />\n        <Button title=\"create\" onPress={this.createItem} />\n      </Screen>\n    );\n  }\n\n  private setName = (name: string) => {\n    this.setState({ name });\n  };\n  private setDescription = (description: string) => {\n    this.setState({ description });\n  };\n  private createItem = () => {\n    const { createItem: create, history } = this.props;\n    const { name, description } = this.state;\n    create({ name, description });\n    history.goBack();\n  };\n}\n\nexport const ItemUpdate = connect(\n  (state: RootState) => ({\n    state\n  }),\n  { createItem }\n)(Component);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, TextInput } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\nimport { createItem } from \"../../models/Item\";\n\ninterface DispatchProps {\n  createItem: typeof createItem;\n}\ntype Props = RouteComponentProps & DispatchProps;\ninterface State {\n  name: string;\n  description: string;\n}\n\nclass Component extends React.PureComponent<Props, State> {\n  public state = {\n    description: \"\",\n    name: \"\"\n  };\n  public render() {\n    const { name, description } = this.state;\n    const { history } = this.props;\n\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <TextInput title=\"name\" value={name} onChangeText={this.setName} />\n        <TextInput\n          title=\"description\"\n          value={description}\n          onChangeText={this.setDescription}\n        />\n        <Button title=\"create\" onPress={this.createItem} />\n      </Screen>\n    );\n  }\n\n  private setName = (name: string) => {\n    this.setState({ name });\n  };\n  private setDescription = (description: string) => {\n    this.setState({ description });\n  };\n  private createItem = () => {\n    const { createItem: create, history } = this.props;\n    const { name, description } = this.state;\n    create({ name, description });\n    history.goBack();\n  };\n}\n\nexport const ListUpdate = connect(\n  (state: RootState) => ({\n    state\n  }),\n  { createItem }\n)(Component);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, TextInput } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\nimport { createItem } from \"../../models/Item\";\n\ninterface DispatchProps {\n  createItem: typeof createItem;\n}\ntype Props = RouteComponentProps & DispatchProps;\ninterface State {\n  name: string;\n  description: string;\n}\n\nclass Component extends React.PureComponent<Props, State> {\n  public state = {\n    description: \"\",\n    name: \"\"\n  };\n  public render() {\n    const { name, description } = this.state;\n    const { history } = this.props;\n\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <TextInput title=\"name\" value={name} onChangeText={this.setName} />\n        <TextInput\n          title=\"description\"\n          value={description}\n          onChangeText={this.setDescription}\n        />\n        <Button title=\"create\" onPress={this.createList} />\n      </Screen>\n    );\n  }\n\n  private setName = (name: string) => {\n    this.setState({ name });\n  };\n  private setDescription = (description: string) => {\n    this.setState({ description });\n  };\n  private createList = () => {\n    const { createItem: create, history } = this.props;\n    const { name, description } = this.state;\n    create({ name, description });\n    history.goBack();\n  };\n}\n\nexport const ListCreate = connect(\n  (state: RootState) => ({\n    state\n  }),\n  { createItem }\n)(Component);\n","import * as React from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\n\ntype Props = RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  private items = [\n    {\n      id: \"1\",\n      title: \"bob\"\n    },\n    {\n      id: \"2\",\n      title: \"steve\"\n    },\n    {\n      id: \"3\",\n      title: \"jill\"\n    }\n  ];\n  public render() {\n    const { history, match } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <Text title=\"checklists\" />\n        <FlatList\n          keyExtractor={item => item.id}\n          data={this.items}\n          renderItem={({ item }) => (\n            <View style={{ flexDirection: \"row\" }}>\n              <Button\n                contained\n                title={item.id}\n                onPress={() => history.push(`${match.path}/${item.id}`)}\n              />\n            </View>\n          )}\n        />\n        <Button\n          right\n          contained\n          fab\n          icon=\"plus\"\n          onPress={() => history.push(`${match.path}/create`)}\n        />\n      </Screen>\n    );\n  }\n}\n\nexport const Lists = connect(\n  (state: RootState) => ({\n    state\n  }),\n  {}\n)(Component);\n","import * as React from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen } from \"../../../../../../components\";\nimport { RootState } from \"../../../../../../models\";\nimport { Theme } from \"../../../../../../utils\";\nimport {\n  getItemsByCreatedAt,\n  ItemsArray,\n  removeItem,\n  toggleActiveItem,\n  updateItem\n} from \"../../models/Item\";\n\ninterface StateProps {\n  items: ItemsArray;\n}\n\ninterface DispatchProps {\n  updateItem: typeof updateItem;\n  removeItem: typeof removeItem;\n  toggleActiveItem: typeof toggleActiveItem;\n}\n\ntype Props = RouteComponentProps & StateProps & DispatchProps;\n\nclass Component extends React.PureComponent<Props> {\n  public render() {\n    const {\n      history,\n      items,\n      removeItem: remove,\n      toggleActiveItem: toggle\n    } = this.props;\n    return (\n      <Screen disableScroll onLeftPress={() => history.goBack()}>\n        <FlatList\n          keyExtractor={item => item.id}\n          data={items}\n          renderItem={({ item }) => (\n            <View style={{ flexDirection: \"row\" }}>\n              <Button\n                label\n                icon=\"checkbox-marked-circle\"\n                iconColor={Theme.color.success}\n                onPress={() => undefined}\n              />\n              <Button\n                label\n                icon=\"close-circle\"\n                iconColor={Theme.color.danger}\n                onPress={() => remove(item.id)}\n              />\n              <Button\n                label\n                iconColor={Theme.color.warning}\n                icon=\"clock\"\n                onPress={() => toggle(item.id)}\n              />\n              <Button\n                label\n                neutral={item.active}\n                lowercase\n                title={item.name}\n                onPress={() => undefined}\n              />\n            </View>\n          )}\n        />\n        <Button\n          fab\n          contained\n          icon=\"plus\"\n          onPress={() => history.push(\"create\")}\n        />\n      </Screen>\n    );\n  }\n}\n\nexport const List = connect(\n  (state: RootState) => ({\n    items: getItemsByCreatedAt(state)\n  }),\n  {\n    removeItem,\n    toggleActiveItem,\n    updateItem\n  }\n)(Component);\n","// @ts-ignore-file\n/* tslint:disable */\n\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Route, Switch } from \"../../../../components\";\nimport { List, ListCreate, Lists } from \"./screens\";\n\ntype Props = RouteComponentProps;\n\nclass Component extends React.PureComponent<Props> {\n  public render() {\n    const { match } = this.props;\n    return (\n      <Switch>\n        <Route exact path={`${match.path}`} component={Lists} />\n        <Route path={`${match.path}/create`} component={ListCreate} />\n        <Route path={`${match.path}/:id`} component={List} />\n      </Switch>\n    );\n  }\n}\n\nexport const Checklists = connect(\n  null,\n  null\n)(Component);\n","import * as React from \"react\";\nimport { ActivityIndicator, Animated, StyleSheet, View } from \"react-native\";\n\ninterface Props {\n  uri: string;\n  height: number;\n  width: number;\n  color?: string;\n  size?: number | \"small\" | \"large\";\n}\n\nexport class AsyncImage extends React.PureComponent<Props> {\n  private styles = StyleSheet.create({\n    indicatorOverlay: {\n      justifyContent: \"center\",\n      position: \"absolute\"\n    }\n  });\n  private imageAnimated = new Animated.Value(0);\n  private indicatorAnimated = new Animated.Value(1);\n\n  public render() {\n    const { uri, height, width, color = \"black\", size = \"small\" } = this.props;\n    const containerStyle = { width, height };\n    const imageStyle = [containerStyle, { opacity: this.imageAnimated }];\n    const indicatorStyle = [\n      containerStyle,\n      { opacity: this.indicatorAnimated },\n      this.styles.indicatorOverlay\n    ];\n    return (\n      <View style={containerStyle}>\n        <Animated.Image\n          source={{ uri }}\n          style={imageStyle}\n          onLoad={this.onImageLoad}\n        />\n        <Animated.View style={indicatorStyle}>\n          <ActivityIndicator size={size} color={color} />\n        </Animated.View>\n      </View>\n    );\n  }\n\n  private onImageLoad = () => {\n    Animated.parallel([\n      Animated.timing(this.indicatorAnimated, {\n        toValue: 0,\n        useNativeDriver: true\n      }),\n      Animated.timing(this.imageAnimated, {\n        toValue: 1,\n        useNativeDriver: true\n      })\n    ]).start();\n  };\n}\n","import * as React from \"react\";\nimport { Dimensions, FlatList } from \"react-native\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Screen } from \"../../../../components\";\nimport { AsyncImage } from \"./AsyncImage\";\n\ntype Props = RouteComponentProps;\n\nexport class ImageCollection extends React.PureComponent<Props> {\n  private data: number[] = [\n    Math.random(),\n    Math.random(),\n    Math.random(),\n    Math.random(),\n    Math.random(),\n    Math.random(),\n    Math.random(),\n    Math.random()\n  ];\n  private numColumns = 3;\n  private infiniteScrollThreshold = 0.3;\n  private columnWidth = Dimensions.get(\"window\").width / this.numColumns;\n  private imageUrl = `http://lorempixel.com/${this.columnWidth}/${\n    this.columnWidth\n  }`;\n\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen onLeftPress={() => history.goBack()}>\n        <FlatList\n          keyExtractor={data => data.toString()}\n          data={this.data}\n          onEndReached={this.fetchMore}\n          onEndReachedThreshold={this.infiniteScrollThreshold}\n          numColumns={this.numColumns}\n          renderItem={this.renderImage}\n        />\n      </Screen>\n    );\n  }\n\n  private fetchMore = () => {\n    this.data.push(Math.random());\n    this.data.push(Math.random());\n    this.data.push(Math.random());\n    this.data.push(Math.random());\n    this.data.push(Math.random());\n  };\n\n  private renderImage = () => (\n    <AsyncImage\n      uri={this.imageUrl}\n      width={this.columnWidth}\n      height={this.columnWidth}\n    />\n  );\n}\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Link, Route, Screen, Switch } from \"../../components\";\nimport {\n  Ball,\n  Buttons,\n  Cards,\n  Checklists,\n  Drag,\n  Fonts,\n  ImageCollection,\n  Input,\n  OKRs,\n  PinchSpread,\n  Questionnaire,\n  SearchBar\n} from \"./screens\";\n\ntype Props = RouteComponentProps;\n\nexport class Debug extends React.PureComponent<Props> {\n  private screens: any = {\n    Ball,\n    Buttons,\n    Cards,\n    Checklists,\n    Drag,\n    Fonts,\n    ImageCollection,\n    Input,\n    OKRs,\n    PinchSpread,\n    Questionnaire,\n    SearchBar\n  };\n\n  public render() {\n    return (\n      <Switch>\n        {this.generateRoutes()}\n        <Route component={this.showHomeScreen} />\n      </Switch>\n    );\n  }\n\n  private generateRoutes = () =>\n    Object.keys(this.screens).map((screen: string) => (\n      <Route\n        key={screen}\n        path={`${this.props.match.path}/${screen.toLowerCase()}`}\n        component={this.screens[screen]}\n      />\n    ));\n\n  private navBack = () => this.props.history.goBack();\n\n  private showHomeScreen = () => (\n    <Screen onLeftPress={this.navBack}>\n      {Object.keys(this.screens).map((screen: string) => (\n        <Link\n          key={screen}\n          to={`${this.props.match.path}/${screen}`}\n          title={screen}\n        />\n      ))}\n    </Screen>\n  );\n}\n","/* tslint:disable */\n// @ts-ignore\n\n// TODO: https://telegram.com, https://anydo.com, https://lyft.com, http://www.shegy.nazwa.pl/materialupmarket/mdlp/index_light.html\n\nimport * as React from \"react\";\nimport { Dimensions, StyleSheet, View } from \"react-native\";\nimport { Text, Button } from \"../../components\";\nimport { RouteComponentProps } from \"react-router\";\n\nconst window = Dimensions.get(\"window\");\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: window.height,\n    alignItems: \"center\"\n  },\n  footer: {\n    alignItems: \"flex-end\",\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  }\n});\n\ninterface Props {\n  history: any;\n}\n\nclass Footer extends React.PureComponent<Props> {\n  render() {\n    const { history } = this.props;\n    return (\n      <View style={styles.footer}>\n        <Button title=\"Sign up\" onPress={() => history.push(\"/login\")} />\n        <Button title=\"Log in\" onPress={() => history.push(\"/login\")} />\n        <Button title=\"Debug\" onPress={() => history.push(\"/debug\")} />\n      </View>\n    );\n  }\n}\n\nclass Header extends React.PureComponent {\n  render() {\n    return <View />;\n  }\n}\n\nexport class Landing extends React.PureComponent<RouteComponentProps> {\n  public componentDidMount() {\n    const { history } = this.props;\n    history.push(\"/debug/checklists\");\n  }\n  public render() {\n    const { history } = this.props;\n    return (\n      <View style={styles.container}>\n        <Header />\n        <Text title={String(window.height)} />\n        <Footer history={history} />\n      </View>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text, TextInput } from \"../../components\";\nimport fakeAuth from \"../../models/User\";\n\ninterface State {\n  email: string;\n  password: string;\n}\n\nexport class Login extends React.PureComponent<RouteComponentProps, State> {\n  public state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  public render() {\n    const { location, history } = this.props;\n    const { from } = location.state || { from: { pathname: \"/app\" } };\n    return (\n      <Screen>\n        <Text title=\"Login\" />\n        <TextInput\n          title=\"email\"\n          placeholder=\"example@gmail.com\"\n          onChangeText={text => this.setState({ email: text })}\n          value={this.state.email}\n        />\n        <TextInput\n          title=\"password\"\n          placeholder=\"•••••••\"\n          onChangeText={text => this.setState({ password: text })}\n          value={this.state.password}\n        />\n        <Button title=\"Continue with Google\" onPress={() => undefined} />\n        <Button title=\"Continue with Facebook\" onPress={() => undefined} />\n        <Button\n          title=\"Signup\"\n          onPress={() => fakeAuth.authenticate(() => history.push(from))}\n        />\n        <Button title=\"Forgot\" onPress={() => history.push(\"/nowhere\")} />\n        <Button title=\"Landing\" onPress={() => history.push(\"/\")} />\n        <Button title=\"App\" onPress={() => history.push(\"/app\")} />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Button, Screen, Text } from \"../../components\";\nimport fakeAuth from \"../../models/User\";\n\nexport class Main extends React.PureComponent<RouteComponentProps> {\n  public render() {\n    const { history } = this.props;\n    return (\n      <Screen>\n        <Text title=\"Main\" />\n        <Button\n          title=\"logout\"\n          onPress={() => {\n            fakeAuth.signout(() => history.push(\"/\"));\n          }}\n        />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Link, Screen, Text } from \"../../components\";\n\nexport class NotFound extends React.PureComponent {\n  public render() {\n    return (\n      <Screen>\n        <Text title=\"404 :(\" />\n        <Link to=\"/app\" title=\"go to App\" />\n      </Screen>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { AppRegistry, Platform, YellowBox } from \"react-native\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./models\";\nimport { App } from \"./screens\";\nimport { Config } from \"./utils\";\n\n// TODO: remove\nYellowBox.ignoreWarnings([\"NetInfo\"]);\n\nexport class Launcher extends React.PureComponent {\n  public render() {\n    return (\n      <Provider store={store}>\n        <App />\n      </Provider>\n    );\n  }\n}\n\nAppRegistry.registerComponent(Config.app.name, () => Launcher);\nif (Platform.OS === Config.os.web) {\n  AppRegistry.runApplication(Config.app.name, {\n    rootTag: document.getElementById(Config.web.root)\n  });\n}\n"],"sourceRoot":""}