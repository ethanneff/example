{"version":3,"sources":["apps/Arcade/PapiJump/index.tsx","apps/Arcade/Archero/index.tsx","apps/Arcade/Landing/index.tsx","apps/Arcade/Snake/index.web.tsx","apps/Arcade/FlappyBird/index.tsx","apps/Arcade/index.tsx"],"names":["Papi","memo","size","color","dropShadow","useDropShadow","useNativeDriver","useDriver","location","useRef","Animated","ValueXY","x","y","current","useEffect","timing","toValue","duration","easing","Easing","bounce","start","View","style","getLayout","height","width","borderRadius","backgroundColor","PapiJump","useColor","goBack","useNavigation","styles","StyleSheet","create","container","surface","flex","navBack","useCallback","onLeftPress","title","primary","charSize","getLimit","value","limit","getBounds","Archero","timer","interval","gesture","x0","y0","dx","dy","window","useRootSelector","state","dimension","useState","dimensions","setDimensions","joystickSize","joystickCenter","thumbSize","initialJoystickLoc","initialCharLoc","initialThumbLoc","characterValueXY","joystick","thumb","character","addListener","panGesture","PanResponder","onStartShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderStart","_","g","onUpdate","onPanResponderMove","onPanResponderRelease","setInterval","clearInterval","spring","offset","offset2","moveJoystick","vx","vy","moveCharacter","angle","Math","atan2","dz","sqrt","pow","z","sin","cos","moveThumb","onLayout","event","layout","nativeEvent","success","panHandlers","brand","justifyContent","alignItems","overlay","colorWithOpacity","screens","Landing","navigate","onPress","screen","map","Button","Snake","Bird","warning","Pillar","direction","onTouchStart","FlappyBird","noHeader","headerShown","Stack","createStackNavigator","Navigator","screenOptions","Screen","component","name"],"mappings":"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","file":"static/js/9.39f24de1.chunk.js","sourcesContent":["import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useEffect, useRef} from 'react';\nimport {Animated, Easing, StyleSheet, View} from 'react-native';\nimport {Screen} from '../../../components';\nimport {useColor, useDriver, useDropShadow} from '../../../hooks';\n\ntype PapiProps = {size: number; color: string};\n\nconst Papi = memo(function PapiMemo({size, color}: PapiProps) {\n  const dropShadow = useDropShadow();\n  const useNativeDriver = useDriver();\n  const location = useRef(new Animated.ValueXY({x: 0, y: 0})).current;\n\n  useEffect(() => {\n    const toValue = {x: 300, y: 600};\n    Animated.timing(location, {\n      toValue,\n      duration: 3000,\n      easing: Easing.bounce,\n      useNativeDriver,\n    }).start();\n  }, [location, useNativeDriver]);\n\n  return (\n    <Animated.View\n      style={[\n        location.getLayout(),\n        {\n          height: size,\n          width: size,\n          borderRadius: size,\n          backgroundColor: color,\n          ...dropShadow(10),\n        },\n      ]}\n    />\n  );\n});\n\nexport const PapiJump = memo(function PapiJump() {\n  const color = useColor();\n  const {goBack} = useNavigation();\n  const styles = StyleSheet.create({\n    container: {\n      backgroundColor: color.surface,\n      flex: 1,\n    },\n  });\n  const navBack = useCallback(() => goBack(), [goBack]);\n  return (\n    <Screen onLeftPress={navBack} title=\"Papi Jump\">\n      <View style={styles.container}>\n        <Papi color={color.primary} size={50} />\n      </View>\n    </Screen>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useRef, useState} from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  PanResponder,\n  PanResponderInstance,\n  View,\n} from 'react-native';\nimport {Screen} from '../../../components';\nimport {useColor, useDriver} from '../../../hooks';\nimport {colorWithOpacity, useRootSelector} from '../../../utils';\n\nconst charSize = 50;\nconst charSpeed = 40;\nconst fps = 1000 / 60;\n\nconst getLimit = (value: number, limit: number) =>\n  value > limit ? limit : value < -limit ? -limit : value;\nconst getBounds = (value: number, limit: number, size: number) =>\n  value > limit - size ? limit - size : value < 0 ? 0 : value;\n\nexport const Archero = memo(function Archero() {\n  const color = useColor();\n  const {goBack} = useNavigation();\n  const useNativeDriver = useDriver();\n  const timer = useRef(false);\n  const interval = useRef<NodeJS.Timeout | null>(null);\n  const gesture = useRef({x0: 0, y0: 0, dx: 0, dy: 0});\n  const window = useRootSelector((state) => state.dimension.window);\n  const [dimensions, setDimensions] = useState({width: 1000, height: 1000});\n  const {width, height} = dimensions;\n  const smallest = width > height ? height : width;\n  const joystickSize = smallest / 3;\n  const joystickCenter = joystickSize / 2;\n  const thumbSize = joystickSize / 3;\n  const initialJoystickLoc = {\n    x: width / 2 - joystickCenter,\n    y: height - joystickSize - 75,\n  };\n  const initialCharLoc = {\n    x: width / 2 - charSize / 2,\n    y: height / 2 - charSize / 2,\n  };\n  const initialThumbLoc = {x: 0, y: 0};\n  let characterValueXY = initialCharLoc;\n  const joystick: Animated.ValueXY = new Animated.ValueXY(initialJoystickLoc);\n  const thumb: Animated.ValueXY = new Animated.ValueXY(initialThumbLoc);\n  const character: Animated.ValueXY = new Animated.ValueXY(initialCharLoc);\n  character.addListener(({x, y}) => {\n    characterValueXY = {x, y};\n  });\n\n  const moveCharacter = () => {\n    const {dx, dy} = gesture.current;\n    const vx = getLimit(dx, charSpeed);\n    const vy = getLimit(dy, charSpeed);\n    const x = getBounds(characterValueXY.x + vx, width, charSize);\n    const y = getBounds(characterValueXY.y + vy, height, charSize);\n    Animated.spring(character, {\n      toValue: {x, y},\n      useNativeDriver,\n    }).start();\n  };\n\n  const moveThumb = () => {\n    const {dx, dy} = gesture.current;\n    const angle = Math.atan2(dx, dy);\n    const dz = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n    const z = getLimit(dz, thumbSize);\n    const x = z * Math.sin(angle);\n    const y = z * Math.cos(angle);\n    Animated.spring(thumb, {\n      toValue: {x, y},\n      useNativeDriver,\n    }).start();\n  };\n\n  const moveJoystick = () => {\n    const {x0, y0} = gesture.current;\n    const offset = window.height - dimensions.height;\n    const offset2 = window.width - dimensions.width;\n    // TODO: handle joystick location better in landscape\n    const toValue = {\n      x: x0 - joystickCenter - offset2 / 2,\n      y: y0 - joystickCenter - offset / 2 - joystickSize / 1.5,\n    };\n    Animated.spring(joystick, {toValue, useNativeDriver}).start();\n  };\n\n  const resetJoystick = () => {\n    Animated.spring(joystick, {\n      toValue: initialJoystickLoc,\n      useNativeDriver,\n    }).start();\n    Animated.spring(thumb, {\n      toValue: initialThumbLoc,\n      useNativeDriver,\n    }).start();\n  };\n\n  const panGesture: PanResponderInstance = PanResponder.create({\n    onStartShouldSetPanResponder: () => true,\n    onMoveShouldSetPanResponderCapture: () => true,\n    onPanResponderStart: (_, g) => {\n      timer.current = true;\n      gesture.current = {x0: g.x0, y0: g.y0, dx: g.dx, dy: g.dy};\n      onUpdate();\n    },\n    onPanResponderMove: (_, g) => {\n      gesture.current = {x0: g.x0, y0: g.y0, dx: g.dx, dy: g.dy};\n    },\n    onPanResponderRelease: () => {\n      timer.current = false;\n    },\n  });\n\n  const onUpdate = () => {\n    interval.current = setInterval(() => {\n      if (!timer.current) {\n        if (interval.current) {\n          clearInterval(interval.current);\n        }\n        resetJoystick();\n        return;\n      }\n      moveJoystick();\n      moveCharacter();\n      moveThumb();\n    }, fps);\n  };\n\n  const onLayout = useCallback((event: LayoutChangeEvent) => {\n    const layout = event.nativeEvent.layout;\n    setDimensions({width: layout.width, height: layout.height});\n  }, []);\n\n  const navBack = useCallback(() => goBack(), [goBack]);\n\n  return (\n    <Screen onLeftPress={navBack} title=\"Archero\">\n      <View\n        onLayout={onLayout}\n        style={{flex: 1, backgroundColor: color.success}}\n        {...panGesture.panHandlers}>\n        <Animated.View\n          style={[\n            character.getLayout(),\n            {\n              width: charSize,\n              height: charSize,\n              backgroundColor: color.brand,\n            },\n          ]}\n        />\n        <Animated.View\n          style={[\n            joystick.getLayout(),\n            {\n              justifyContent: 'center',\n              alignItems: 'center',\n              borderRadius: 500,\n              width: joystickSize,\n              height: joystickSize,\n              backgroundColor: color.overlay,\n            },\n          ]}>\n          <View\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              borderRadius: 500,\n              width: thumbSize,\n              height: thumbSize,\n              backgroundColor: color.overlay,\n            }}>\n            <Animated.View\n              style={[\n                thumb.getLayout(),\n                {\n                  borderRadius: 500,\n                  width: thumbSize,\n                  height: thumbSize,\n                  backgroundColor: colorWithOpacity(color.brand, 0.8),\n                },\n              ]}\n            />\n          </View>\n        </Animated.View>\n      </View>\n    </Screen>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {Button} from 'react-native';\nimport {useNavigation} from '@react-navigation/native';\nimport {Screen} from '../../../components';\n\nconst screens = ['archero', 'flappyBird', 'papiJump', 'snake'];\n\nexport const Landing = memo(function Landing() {\n  const {goBack, navigate} = useNavigation();\n  const navBack = useCallback(() => goBack(), [goBack]);\n  const onPress = useCallback((screen: string) => () => navigate(screen), [\n    navigate,\n  ]);\n  return (\n    <Screen onLeftPress={navBack} title=\"Arcade\">\n      {screens.map((screen) => (\n        <Button key={screen} onPress={onPress(screen)} title={screen} />\n      ))}\n    </Screen>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {useNavigation} from '@react-navigation/native';\nimport {Screen} from '../../../components';\n\nexport const Snake = memo(function Snake() {\n  const {goBack} = useNavigation();\n  const navBack = useCallback(() => goBack(), [goBack]);\n\n  return <Screen onLeftPress={navBack} title=\"Snake\" />;\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useEffect, useRef} from 'react';\nimport {Animated, View} from 'react-native';\nimport {Screen} from '../../../components';\nimport {useColor, useDriver} from '../../../hooks';\n\nconst Bird = () => {\n  const color = useColor();\n  return (\n    <Animated.View\n      style={{backgroundColor: color.warning, width: 50, height: 50}}\n    />\n  );\n};\n\nconst Pillar = () => {\n  const color = useColor();\n  const useNativeDriver = useDriver();\n  const location = useRef(new Animated.ValueXY({x: 0, y: 0}));\n  const state = useRef({x: 0, y: 0, direction: 1});\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const {y, direction} = state.current;\n      state.current.y = y + 1 * direction;\n      Animated.spring(location.current, {\n        toValue: state.current,\n        useNativeDriver,\n      }).start();\n    }, 20);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [useNativeDriver, location]);\n\n  const onPress = useCallback(() => {\n    state.current.direction = -1;\n  }, []);\n\n  return (\n    <Animated.View\n      onTouchStart={onPress}\n      style={[\n        location.current.getLayout(),\n        {backgroundColor: color.success, width: 50, height: 50},\n      ]}\n    />\n  );\n};\n\nexport const FlappyBird = memo(function FlappyBird() {\n  const color = useColor();\n  const {goBack} = useNavigation();\n  const navBack = useCallback(() => goBack(), [goBack]);\n\n  return (\n    <Screen onLeftPress={navBack} title=\"Flappy Bird\">\n      <View style={{flex: 1, backgroundColor: color.surface}}>\n        <Bird />\n        <Pillar />\n      </View>\n    </Screen>\n  );\n});\n","import React, {memo} from 'react';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport {PapiJump} from './PapiJump';\nimport {Archero} from './Archero';\nimport {Landing} from './Landing';\nimport {Snake} from './Snake';\nimport {FlappyBird} from './FlappyBird';\n\nconst noHeader = {headerShown: false};\nconst Stack = createStackNavigator();\n\nexport default memo(function Games() {\n  return (\n    <Stack.Navigator screenOptions={noHeader}>\n      <Stack.Screen component={Landing} name=\"landing\" />\n      <Stack.Screen component={FlappyBird} name=\"flappyBird\" />\n      <Stack.Screen component={Snake} name=\"snake\" />\n      <Stack.Screen component={PapiJump} name=\"papiJump\" />\n      <Stack.Screen component={Archero} name=\"archero\" />\n    </Stack.Navigator>\n  );\n});\n"],"sourceRoot":""}