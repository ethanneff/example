{"version":3,"sources":["components/Content/index.tsx","apps/Debug/screens/Article/data.ts","apps/Debug/screens/Article/index.tsx"],"names":["ParagraphType","TitleType","Content","memo","body","color","useColor","styles","StyleSheet","create","content","paddingHorizontal","Theme","padding","p04","link","primary","paragraph","paddingBottom","p02","section","title","renderSentence","sentence","type","Link","key","onPress","style","renderParagraph","Math","random","sentences","map","ScrollView","sections","View","h1","titleType","H1","h2","H2","h3","H3","paragraphs","data","Phrase","nav","useNav","container","backgroundColor","background","onLeftPress","to"],"mappings":"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","file":"static/js/18.a102bf8f.chunk.js","sourcesContent":["import React, { memo } from \"react\";\nimport { Text as Original, ScrollView } from \"react-native\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Theme } from \"../../utils\";\nimport { Text } from \"../Text\";\nimport { useColor } from \"../../hooks\";\n\nexport interface ContentBody {\n  sections: Sections;\n}\ntype Sections = Section[];\ninterface Section {\n  title: string;\n  titleType: TitleType;\n  paragraphs: Paragraphs;\n}\ntype Paragraphs = Paragraph[];\ninterface Paragraph {\n  sentences: Sentences;\n}\ntype Sentences = Sentence[];\ntype Sentence = Phrase | Link;\ninterface Phrase {\n  content: string;\n  type: ParagraphType.Phrase;\n}\ninterface Link {\n  content: string;\n  type: ParagraphType.Link;\n  onPress(): void;\n}\n\nexport enum ParagraphType {\n  Phrase,\n  Link\n}\n\nexport enum TitleType {\n  H1,\n  H2,\n  H3\n}\n\ninterface Props {\n  body: ContentBody;\n}\n\nexport const Content: React.FC<Props> = memo(({ body }) => {\n  const color = useColor();\n  const styles = StyleSheet.create({\n    content: {\n      paddingHorizontal: Theme.padding.p04\n    },\n    link: {\n      color: color.primary\n    },\n    paragraph: {\n      paddingBottom: Theme.padding.p02\n    },\n    section: {\n      paddingBottom: Theme.padding.p04\n    },\n    title: {\n      paddingBottom: Theme.padding.p02\n    }\n  });\n\n  const renderSentence = (sentence: Sentence) =>\n    sentence.type === ParagraphType.Link ? \n      <Text\n        key={sentence.content}\n        title={`${sentence.content} `}\n        onPress={sentence.onPress}\n        style={styles.link}\n      />\n     : \n      <Text key={sentence.content} title={`${sentence.content} `} />\n    ;\n\n  const renderParagraph = (paragraph: Paragraph) => \n    <Original style={styles.paragraph} key={Math.random()}>\n      {paragraph.sentences.map(renderSentence)}\n    </Original>\n  ;\n\n  const renderSection = (section: Section) => \n    <View style={styles.section} key={Math.random()}>\n      {section.title && \n        <Text\n          key={section.title}\n          title={section.title}\n          style={styles.title}\n          h1={section.titleType === TitleType.H1}\n          h2={section.titleType === TitleType.H2}\n          h3={section.titleType === TitleType.H3}\n        />\n      }\n      {section.paragraphs.map(renderParagraph)}\n    </View>\n  ;\n\n  return (\n    <ScrollView style={styles.content}>\n      {body.sections.map(renderSection)}\n    </ScrollView>\n  );\n});\n","import {\n  ContentBody,\n  ParagraphType,\n  TitleType\n} from \"../../../../components/Content/index\";\n\nexport const data: ContentBody = {\n  sections: [\n    {\n      paragraphs: [\n        {\n          sentences: [\n            {\n              content: \"best way to get your life together\",\n              type: ParagraphType.Phrase\n            }\n          ]\n        }\n      ],\n      title: \"Do This\",\n      titleType: TitleType.H1\n    },\n    {\n      paragraphs: [\n        {\n          sentences: [\n            {\n              content: \"first paragraph\",\n              type: ParagraphType.Phrase\n            },\n            {\n              content: \"nav here\",\n              onPress: () => undefined,\n              type: ParagraphType.Link\n            },\n            {\n              content: \"blah bldah blah. blah blah blah\",\n              type: ParagraphType.Phrase\n            }\n          ]\n        },\n        {\n          sentences: [\n            {\n              content: \"second paragraph\",\n              type: ParagraphType.Phrase\n            },\n            {\n              content: \"nav here\",\n              onPress: () => undefined,\n              type: ParagraphType.Link\n            },\n            {\n              content:\n                \"blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah\",\n              type: ParagraphType.Phrase\n            }\n          ]\n        }\n      ],\n      title: \"H2 title\",\n      titleType: TitleType.H3\n    },\n    {\n      paragraphs: [\n        {\n          sentences: [\n            {\n              content: \"first paragraph\",\n              type: ParagraphType.Phrase\n            },\n            {\n              content: \"nav here\",\n              onPress: () => undefined,\n              type: ParagraphType.Link\n            },\n            {\n              content: \"blah bldah blah. blah blah blah\",\n              type: ParagraphType.Phrase\n            }\n          ]\n        },\n        {\n          sentences: [\n            {\n              content: \"second paragraph\",\n              type: ParagraphType.Phrase\n            },\n            {\n              content: \"nav here\",\n              onPress: () => undefined,\n              type: ParagraphType.Link\n            },\n            {\n              content:\n                \"blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah\",\n              type: ParagraphType.Phrase\n            }\n          ]\n        },\n        {\n          sentences: [\n            {\n              content: \"third paragraph\",\n              type: ParagraphType.Phrase\n            },\n            {\n              content: \"nav here\",\n              onPress: () => undefined,\n              type: ParagraphType.Link\n            },\n            {\n              content:\n                \"blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah\",\n              type: ParagraphType.Phrase\n            }\n          ]\n        }\n      ],\n      title: \"H3 content \",\n      titleType: TitleType.H3\n    },\n    {\n      paragraphs: [\n        {\n          sentences: [\n            {\n              content: \"first paragraph\",\n              type: ParagraphType.Phrase\n            },\n            {\n              content: \"nav here\",\n              onPress: () => undefined,\n              type: ParagraphType.Link\n            },\n            {\n              content: \"blah bldah blah. blah blah blah\",\n              type: ParagraphType.Phrase\n            }\n          ]\n        },\n        {\n          sentences: [\n            {\n              content: \"second paragraph\",\n              type: ParagraphType.Phrase\n            },\n            {\n              content: \"nav herhere\",\n              onPress: () => undefined,\n              type: ParagraphType.Link\n            },\n            {\n              content:\n                \"blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah\",\n              type: ParagraphType.Phrase\n            }\n          ]\n        },\n        {\n          sentences: [\n            {\n              content: \"third paragraph\",\n              type: ParagraphType.Phrase\n            },\n            {\n              content: \"nav here\",\n              onPress: () => undefined,\n              type: ParagraphType.Link\n            },\n            {\n              content:\n                \"blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah\",\n              type: ParagraphType.Phrase\n            }\n          ]\n        }\n      ],\n      title: \"H3 content \",\n      titleType: TitleType.H3\n    }\n  ]\n};\n","import React, { memo } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Screen } from \"../../../../components\";\nimport { Content } from \"../../../../components/Content\";\nimport { data } from \"./data\";\nimport { useColor, useNav } from \"../../../../hooks\";\n\nexport default memo(function DebugArticle() {\n  const nav = useNav();\n  const color = useColor();\n  const styles = StyleSheet.create({\n    container: {\n      backgroundColor: color.background\n    }\n  });\n  return (\n    <Screen onLeftPress={nav.to(\"debug\")}>\n      <View style={styles.container}>\n        <Content body={data} />\n      </View>\n    </Screen>\n  );\n});\n"],"sourceRoot":""}