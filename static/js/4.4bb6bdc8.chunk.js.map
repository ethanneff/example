{"version":3,"sources":["assets/placeholder.png","apps/Playground/SwipeFeed/placeholder.png","apps/Playground/AppleMask/one.png","apps/Playground/AppleMask/two.gif","apps/Playground/AppleMask/three.gif","apps/Playground/AppleMask/four.gif","components/Content/index.tsx","apps/Playground/Article/data.ts","apps/Playground/Article/index.tsx","apps/Playground/Ball/index.tsx","apps/Playground/Chat/Item.tsx","apps/Playground/Chat/Items.tsx","apps/Playground/Chat/TextField.tsx","apps/Playground/Chat/index.tsx","apps/Playground/Drag/index.tsx","apps/Playground/Fonts/index.tsx","apps/Playground/ImageCollection/AsyncImage.tsx","apps/Playground/ImageCollection/index.tsx","apps/Playground/Input/index.tsx","apps/Playground/OKRs/index.tsx","apps/Playground/PinchSpread/logic.tsx","apps/Playground/PinchSpread/index.tsx","apps/Playground/Questionnaire/screens/Questionnaires.tsx","apps/Playground/Questionnaire/index.tsx","apps/Playground/SearchBar/index.tsx","apps/Playground/Startup/Section.tsx","apps/Playground/Startup/index.tsx","apps/Playground/Stopwatch/Timer.tsx","apps/Playground/Stopwatch/ButtonRound.tsx","apps/Playground/Stopwatch/Lap.tsx","apps/Playground/Stopwatch/LapsTable.tsx","apps/Playground/Stopwatch/ButtonsRow.tsx","apps/Playground/Stopwatch/index.tsx","apps/Playground/DarkMode/index.tsx","apps/Playground/Colors/index.tsx","apps/Playground/SwipeFeed/index.tsx","apps/Playground/GameOfLife/utils.ts","apps/Playground/GameOfLife/Cell.tsx","apps/Playground/GameOfLife/index.tsx","apps/Playground/Reminder/Reminders.tsx","apps/Playground/Reminder/Item.tsx","apps/Playground/Reminder/OneTime.tsx","apps/Playground/Reminder/Radio.tsx","apps/Playground/Reminder/Location.tsx","apps/Playground/Reminder/Repeat.tsx","apps/Playground/Reminder/CreateReminderModal.tsx","apps/Playground/Reminder/index.tsx","apps/Playground/Tinder/index.tsx","apps/Playground/Drift/index.web.tsx","apps/Playground/AppleMask/index.tsx","apps/Playground/BouncingBalls/Canvas.tsx","apps/Playground/BouncingBalls/utils.tsx","apps/Playground/BouncingBalls/Balls.tsx","apps/Playground/BouncingBalls/index.tsx","apps/Playground/Bejeweled/index.tsx","apps/Playground/SlotMachine/index.web.tsx","apps/Playground/FortuneWheel/utils.tsx","apps/Playground/FortuneWheel/Wheel.tsx","apps/Playground/FortuneWheel/index.tsx","apps/Playground/AppleFit/index.web.tsx","apps/Playground/navParams.ts","apps/Playground/Landing/index.tsx","apps/Playground/index.tsx"],"names":["module","exports","Content","memo","body","color","useColor","styles","StyleSheet","create","content","paddingHorizontal","Theme","padding","p04","link","primary","paragraph","paddingBottom","p02","section","title","ScrollView","contentContainerStyle","sections","map","sectionIndex","View","key","style","type","titleType","paragraphs","paragraphIndex","sentences","onPress","data","Article","nav","useNav","navBack","useCallback","onLeftPress","Ball","height","useRootSelector","getHeight","width","getWidth","ballPosition","Animated","ValueXY","x","y","useDriver","useNativeDriver","size","p08","ball","borderColor","text","borderRadius","borderWidth","marginLeft","marginTop","button","flexDirection","justifyContent","animate","dx","dy","spring","toValue","start","onInitialPress","onRandomPress","Math","random","testID","getLayout","dayjs","extend","relativeTime","Item","item","image","require","id","p01","marginBottom","p06","backgroundColor","light","Image","source","alignSelf","paddingTop","resizeMode","flex","bold","paddingRight","userId","date","createdAt","message","Items","itemsRef","useRef","messages","getActiveChatMessagesOrderByCreatedAt","renderItem","keyExtractor","useEffect","current","scrollToItem","FlatList","inverted","ref","TextField","dispatch","useRootDispatch","textField","state","chatMessage","onMessageChange","typeChatMessage","onSubmit","trim","length","Date","now","active","v4","updatedAt","conversationId","Keyboard","dismiss","createChatMessage","onChangeText","onSubmitEditing","removeError","value","name","paddingLeft","Chat","gutter","Drag","dropShadow","useDropShadow","useState","canvas","setCanvas","initialPosition","background","surface","panGesture","PanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","_","gestureState","maxY","minY","maxX","minX","getPosition","onPanResponderEnd","handleCanvas","event","nativeEvent","layout","center","onLayout","panHandlers","Fonts","AsyncImage","uri","nativeDriver","imageAnimated","Value","indicatorAnimated","indicatorOverlay","position","containerStyle","imageStyle","opacity","indicatorStyle","onLoad","parallel","timing","ActivityIndicator","columnWidth","Dimensions","get","imageUrl","ImageCollection","renderImage","d","toString","numColumns","onEndReached","push","onEndReachedThreshold","Input","email","error","password","form","setForm","handleChange","val","prev","handleSubmit","optional","placeholder","keyboardType","textContentType","secureTextEntry","OKRs","p05","GestureHandler","minTouches","finish","this","touches","forEach","touch","recordFinish","recordStart","outcome","determineOutcome","isStartAlreadyRecorded","String","identifier","locationX","locationY","startXDistance","abs","startYDistance","finishXDistance","finishYDistance","points","numRecordedTouched","Object","keys","i","point","pinch","spread","determineCenter","isPinch","isSpread","PinchSpread","pinchCount","spreadCount","setState","container","gestureHandler","onPanResponderRelease","Questionnaires","questionnaires","getQuestionnaireArray","selected","actionSheet","setActionSheet","handleLongPress","removeQuestionnaire","handleItemPress","selectQuestionnaire","handleActionSheetClose","handleCreate","createQuestionnaire","handleItemMenu","questions","subtitle","onLongPress","extraData","fab","margin","bottom","right","onBackgroundPress","choices","next","viewabilityConfig","itemVisiblePercentThreshold","Questionnaire","output","currentIndex","tableViewRef","onProgress","direction","index","onFinish","scrollToIndex","animated","updateSelection","choice","onSelection","updateProgress","horizontal","onViewableItemsChanged","viewableItems","pagingEnabled","removeClippedSubviews","items","scrollEnabled","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","SearchBar","animation","iconName","input","translateIcon","interpolate","inputRange","outputRange","fadeContainer","colorWithOpacity","secondary","header","p20","borderBottomColor","textContainer","alignItems","textInput","duration","changeIcon","iconChangeTimeout","setTimeout","clearTimeout","animationDuration","onSearchBarFocus","onSearchBarUnFocus","keyboardWillShow","Platform","OS","keyboardWillHide","keyboardDidShow","keyboardDidHide","process","JEST_WORKER_ID","keyboardDidShowListener","addListener","keyboardDidHideListener","keyboardWillShowListener","keyboardWillHideListener","remove","transform","translateX","Section","row","children","p03","borderTopWidth","initialState","launched","launchWeeks","usersTalkedTo","usersLearnedFrom","topGoals","primaryMetric","biggestObstacle","morale","targetCustomer","Startup","launchSubText","parseInt","updateForm","handleLaunchChange","handleUserChange","handleMoraleChange","handleObstacleChange","handleLearnChange","handleMetricChange","handleGoalChange","handleWeeksToLaunchChange","borderBottomWidth","format","Switch","onValueChange","hidden","Timer","interval","pad","n","minutes","floor","seconds","milliseconds","timerContainer","substr","ButtonRound","disabled","buttonBorder","buttonTitle","fontSize","handlePress","activeOpacity","Lap","num","fastest","slowest","success","lap","paddingVertical","lapText","fontFamily","danger","lapStyle","undefined","LapsTable","laps","timer","finishedLaps","slice","min","Number","MAX_SAFE_INTEGER","max","MIN_SAFE_INTEGER","scrollView","ButtonsRow","buttonsRow","StopWatch","elapsed","reduce","total","curr","fontWeight","timestamp","getTime","firstLap","other","stop","clearInterval","reset","run","setInterval","resume","cards","target","chart","DarkMode","currentTheme","theme","currentColor","elevation","setElevation","handleSlider","columns","getLandscapeOrientation","buttonStyle","emphasis","colorThemes","changeTheme","maximumValue","minimumTrackTintColor","minimumValue","step","Colors","disable","formatRelativeDate","years","diff","weeks","days","hours","SwipeCard","icon","onSwipeComplete","onSwipePercentChange","cardWidth","imageHeight","swipeThreshold","setCardWidth","panResponder","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","gesture","setValue","left","brand","ellipsizeMode","numberOfLines","toUpperCase","initialItems","subtract","Badge","count","percent","badgeSize","zIndex","adjustsFontSizeToFit","SwipeCards","feed","setFeed","filter","ImagePlaceholder","noPadding","SwipeFeed","operations","generateBoard","board","j","Cell","onItemPress","GameOfLife","delay","loading","setLoading","setBoard","runRef","delayRef","timeoutRef","getSmallestDimension","onClear","rows","swapBoardItem","onRandom","loop","neighbors","newI","newK","determineBoardItem","onStart","onCountSlide","onDelaySlide","onSlidingComplete","Reminders","reminders","description","p13","daysOfWeek","OneTime","buttons","laterToday","add","set","evening","tomorrow","nextWeek","nextMonth","yesterday","visible","day","generateButtons","valueOf","Radio","onChange","Location","locations","location","Repeat","setActive","reminderTypes","CreateReminderModal","onOneTimePress","submit","handleReminderTypePress","ReminderExample","modals","customDate","createReminder","handleOneTimeReminder","isBefore","handleCustomDateClose","handleCreateReminder","handleCreateReminderClose","handleLocation","handleLocationClose","showRate","setShowRate","handleRate","onComplete","onLocationPress","Tinder","Drift","imageRatio","leftWidth","p12","imageWidth","AppleMask","Canvas","rotate","angle","cos","sin","resolveItemCollision","particle","otherParticle","maxSpeed","xVelocityDiff","yVelocityDiff","atan2","m1","mass","m2","u1","u2","v1","v2","vFinal1","vFinal2","getOverlap","aX","aY","aRadius","bX","bY","bRadius","radius","sqrt","getRandomNumber","resolveBoundCollision","Balls","minSize","maxSize","minSpeed","minMass","maxMass","mitosis","getItems","setItems","draw","a","b","copy","BouncingBalls","initialSelected","Bejeweled","dimension","gems","info","warning","cols","col","getInitialState","matches","mid","up","down","vertical","getMatches","setSelected","sum","temp","gem","SlotMachine","getNewLocation","minSpin","maxSpin","numOfSegments","getRandomRange","Wheel","textColor","segments","noBounce","padAngle","innerRadius","spinSpeed","bounceSpeed","knobSize","knobOffset","angleOfSegment","angleOffset","spinning","yPosition","arcs","d3","arc","instance","outerRadius","path","centroid","segment","onSpinComplete","winnerIndex","deg","getWinnerIndex","spin","newLocation","easing","Easing","inOut","bounce","config","TouchableOpacity","translateY","fill","stroke","strokeWidth","origin","rotation","textAnchor","display","FortuneWheel","useMemo","useSegments","winner","setWinner","AppleFit","stackParams","landing","article","chat","drag","fonts","imageCollection","oKRs","pinchSpread","questionnaire","searchBar","startup","stopWatch","darkMode","colors","swipeFeed","gameOfLife","reminder","tinder","drift","appleMask","bouncingBalls","bejeweled","slotMachine","fortuneWheel","appleFit","screens","Landing","useNavigation","goBack","navigate","navToItem","noHeader","headerShown","Stack","createStackNavigator","Navigator","screenOptions","Screen","component"],"mappings":"uFAAAA,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,qICsC9BC,EAAUC,gBAAK,YAAoB,IAAlBC,EAAiB,EAAjBA,KACtBC,EAAQC,cACRC,EAASC,IAAWC,OAAO,CAC/BC,QAAS,CACPC,kBAAmBC,IAAMC,QAAQC,KAEnCC,KAAM,CACJV,MAAOA,EAAMW,SAEfC,UAAW,CACTC,cAAeN,IAAMC,QAAQM,KAE/BC,QAAS,CACPF,cAAeN,IAAMC,QAAQC,KAE/BO,MAAO,CACLH,cAAeN,IAAMC,QAAQM,OAIjC,OACE,kBAACG,EAAA,EAAD,CAAYC,sBAAuBhB,EAAOG,SACvCN,EAAKoB,SAASC,KAAI,SAACL,EAASM,GAAV,OACjB,kBAACC,EAAA,EAAD,CAAMC,IAAG,YAAOF,GAAgBG,MAAOtB,EAAOa,SAC3CA,EAAQC,OACP,kBAAC,IAAD,CACEO,IAAKR,EAAQC,MACbQ,MAAOtB,EAAOc,MACdA,MAAOD,EAAQC,MACfS,KAAMV,EAAQW,YAGjBX,EAAQY,WAAWP,KAAI,SAACR,EAAWgB,GAAZ,OACtB,kBAAC,IAAD,CAAUL,IAAG,YAAOK,GAAkBJ,MAAOtB,EAAOU,WACjDA,EAAUiB,UAAUT,KAAI,gBAAEU,EAAF,EAAEA,QAASzB,EAAX,EAAWA,QAAX,MACd,SADc,EAAoBoB,KAEzC,kBAAC,IAAD,CACEF,IAAKlB,EACLyB,QAASA,EACTN,MAAOtB,EAAOQ,KACdM,MAAK,UAAKX,EAAL,OAGP,kBAAC,IAAD,CAAMkB,IAAKlB,EAASW,MAAK,UAAKX,EAAL,sBC/E9B0B,EAAoB,CAC/BZ,SAAU,CACR,CACEQ,WAAY,CACV,CACEE,UAAW,CACT,CACExB,QAAS,qCACToB,KAAM,aAKdT,MAAO,UACPU,UAAW,MAEb,CACEC,WAAY,CACV,CACEE,UAAW,CACT,CACExB,QAAS,kBACToB,KAAM,UAER,CACEpB,QAAS,WACTyB,QAAS,aACTL,KAAM,QAER,CACEpB,QAAS,kCACToB,KAAM,YAIZ,CACEI,UAAW,CACT,CACExB,QAAS,mBACToB,KAAM,UAER,CACEpB,QAAS,WACTyB,QAAS,aACTL,KAAM,QAER,CACEpB,QACE,uIACFoB,KAAM,aAKdT,MAAO,WACPU,UAAW,MAEb,CACEC,WAAY,CACV,CACEE,UAAW,CACT,CACExB,QAAS,kBACToB,KAAM,UAER,CACEpB,QAAS,WACTyB,QAAS,aACTL,KAAM,QAER,CACEpB,QAAS,kCACToB,KAAM,YAIZ,CACEI,UAAW,CACT,CACExB,QAAS,mBACToB,KAAM,UAER,CACEpB,QAAS,WACTyB,QAAS,aACTL,KAAM,QAER,CACEpB,QACE,uIACFoB,KAAM,YAIZ,CACEI,UAAW,CACT,CACExB,QAAS,kBACToB,KAAM,UAER,CACEpB,QAAS,WACTyB,QAAS,aACTL,KAAM,QAER,CACEpB,QACE,uIACFoB,KAAM,aAKdT,MAAO,aACPU,UAAW,MAEb,CACEC,WAAY,CACV,CACEE,UAAW,CACT,CACExB,QAAS,kBACToB,KAAM,UAER,CACEpB,QAAS,WACTyB,QAAS,aACTL,KAAM,QAER,CACEpB,QAAS,kCACToB,KAAM,YAIZ,CACEI,UAAW,CACT,CACExB,QAAS,mBACToB,KAAM,UAER,CACEpB,QAAS,cACTyB,QAAS,aACTL,KAAM,QAER,CACEpB,QACE,uIACFoB,KAAM,YAIZ,CACEI,UAAW,CACT,CACExB,QAAS,kBACToB,KAAM,UAER,CACEpB,QAAS,WACTyB,QAAS,aACTL,KAAM,QAER,CACEpB,QACE,uIACFoB,KAAM,aAKdT,MAAO,aACPU,UAAW,QCzKJM,EAAUlC,gBAAK,WAC1B,IAAMmC,EAAMC,cACNC,EAAUC,sBAAYH,EAAI,WAAY,CAACA,IAC7C,OACE,kBAAC,IAAD,CAAQI,YAAaF,EAASnB,MAAM,WAClC,kBAACnB,EAAD,CAASE,KAAMgC,Q,iBCJRO,EAAOxC,gBAAK,WACvB,IAAMyC,EAASC,YAAgBC,KACzBC,EAAQF,YAAgBG,KACxBV,EAAMC,cACNU,EAAe,IAAIC,IA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","file":"static/js/4.4bb6bdc8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder.d1d6991d.png\";","module.exports = __webpack_public_path__ + \"static/media/placeholder.a6e14803.png\";","module.exports = __webpack_public_path__ + \"static/media/one.f397a30d.png\";","module.exports = __webpack_public_path__ + \"static/media/two.421eb2e3.gif\";","module.exports = __webpack_public_path__ + \"static/media/three.db70fe71.gif\";","module.exports = __webpack_public_path__ + \"static/media/four.870ef2d7.gif\";","import React, {memo} from 'react';\nimport {Text as Original, ScrollView, StyleSheet, View} from 'react-native';\nimport {Theme} from '../../utils';\nimport {Text} from '../Text';\nimport {useColor} from '../../hooks';\nimport {FontType} from '../Text/utils';\n\nexport interface ContentBody {\n  sections: Sections;\n}\ntype Sections = Section[];\ninterface Section {\n  title: string;\n  titleType: FontType;\n  paragraphs: Paragraphs;\n}\ntype Paragraphs = Paragraph[];\ninterface Paragraph {\n  sentences: Sentences;\n}\ntype Sentences = Sentence[];\ntype Sentence = Phrase | Link;\ninterface Phrase {\n  content: string;\n  type: 'phrase';\n  onPress?(): void;\n}\ninterface Link {\n  content: string;\n  type: 'link';\n  onPress(): void;\n}\n\ninterface Props {\n  body: ContentBody;\n}\n\n// TODO: use Sentence component\nexport const Content = memo(({body}: Props) => {\n  const color = useColor();\n  const styles = StyleSheet.create({\n    content: {\n      paddingHorizontal: Theme.padding.p04,\n    },\n    link: {\n      color: color.primary,\n    },\n    paragraph: {\n      paddingBottom: Theme.padding.p02,\n    },\n    section: {\n      paddingBottom: Theme.padding.p04,\n    },\n    title: {\n      paddingBottom: Theme.padding.p02,\n    },\n  });\n\n  return (\n    <ScrollView contentContainerStyle={styles.content}>\n      {body.sections.map((section, sectionIndex) => (\n        <View key={`s-${sectionIndex}`} style={styles.section}>\n          {section.title && (\n            <Text\n              key={section.title}\n              style={styles.title}\n              title={section.title}\n              type={section.titleType}\n            />\n          )}\n          {section.paragraphs.map((paragraph, paragraphIndex) => (\n            <Original key={`p-${paragraphIndex}`} style={styles.paragraph}>\n              {paragraph.sentences.map(({onPress, content, type}) =>\n                type === 'link' ? (\n                  <Text\n                    key={content}\n                    onPress={onPress}\n                    style={styles.link}\n                    title={`${content} `}\n                  />\n                ) : (\n                  <Text key={content} title={`${content} `} />\n                ),\n              )}\n            </Original>\n          ))}\n        </View>\n      ))}\n    </ScrollView>\n  );\n});\n","import {ContentBody} from '../../../components/Content';\n\nexport const data: ContentBody = {\n  sections: [\n    {\n      paragraphs: [\n        {\n          sentences: [\n            {\n              content: 'best way to get your life together',\n              type: 'phrase',\n            },\n          ],\n        },\n      ],\n      title: 'Do This',\n      titleType: 'h1',\n    },\n    {\n      paragraphs: [\n        {\n          sentences: [\n            {\n              content: 'first paragraph',\n              type: 'phrase',\n            },\n            {\n              content: 'nav here',\n              onPress: (): void => undefined,\n              type: 'link',\n            },\n            {\n              content: 'blah bldah blah. blah blah blah',\n              type: 'phrase',\n            },\n          ],\n        },\n        {\n          sentences: [\n            {\n              content: 'second paragraph',\n              type: 'phrase',\n            },\n            {\n              content: 'nav here',\n              onPress: (): void => undefined,\n              type: 'link',\n            },\n            {\n              content:\n                'blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah',\n              type: 'phrase',\n            },\n          ],\n        },\n      ],\n      title: 'h2 title',\n      titleType: 'h2',\n    },\n    {\n      paragraphs: [\n        {\n          sentences: [\n            {\n              content: 'first paragraph',\n              type: 'phrase',\n            },\n            {\n              content: 'nav here',\n              onPress: (): void => undefined,\n              type: 'link',\n            },\n            {\n              content: 'blah bldah blah. blah blah blah',\n              type: 'phrase',\n            },\n          ],\n        },\n        {\n          sentences: [\n            {\n              content: 'second paragraph',\n              type: 'phrase',\n            },\n            {\n              content: 'nav here',\n              onPress: (): void => undefined,\n              type: 'link',\n            },\n            {\n              content:\n                'blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah',\n              type: 'phrase',\n            },\n          ],\n        },\n        {\n          sentences: [\n            {\n              content: 'third paragraph',\n              type: 'phrase',\n            },\n            {\n              content: 'nav here',\n              onPress: (): void => undefined,\n              type: 'link',\n            },\n            {\n              content:\n                'blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah',\n              type: 'phrase',\n            },\n          ],\n        },\n      ],\n      title: 'h3 content',\n      titleType: 'h3',\n    },\n    {\n      paragraphs: [\n        {\n          sentences: [\n            {\n              content: 'first paragraph',\n              type: 'phrase',\n            },\n            {\n              content: 'nav here',\n              onPress: (): void => undefined,\n              type: 'link',\n            },\n            {\n              content: 'blah bldah blah. blah blah blah',\n              type: 'phrase',\n            },\n          ],\n        },\n        {\n          sentences: [\n            {\n              content: 'second paragraph',\n              type: 'phrase',\n            },\n            {\n              content: 'nav herhere',\n              onPress: (): void => undefined,\n              type: 'link',\n            },\n            {\n              content:\n                'blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah',\n              type: 'phrase',\n            },\n          ],\n        },\n        {\n          sentences: [\n            {\n              content: 'third paragraph',\n              type: 'phrase',\n            },\n            {\n              content: 'nav here',\n              onPress: (): void => undefined,\n              type: 'link',\n            },\n            {\n              content:\n                'blah blah da donas odinasod nasn dioaondlah. blah bl asdoi asnd oasnd oansod naosdn oasnodi nasoidn oias as dasoidn asoidn oaah blah',\n              type: 'phrase',\n            },\n          ],\n        },\n      ],\n      title: 'h4 content',\n      titleType: 'h4',\n    },\n  ],\n};\n","import React, {memo, useCallback} from 'react';\nimport {Screen} from '../../../components';\nimport {Content} from '../../../components/Content';\nimport {useNav} from '../../../hooks';\nimport {data} from './data';\n\nexport const Article = memo(function PlaygroundArticle() {\n  const nav = useNav();\n  const navBack = useCallback(nav('landing'), [nav]);\n  return (\n    <Screen onLeftPress={navBack} title=\"Article\">\n      <Content body={data} />\n    </Screen>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {Animated, StyleSheet, View} from 'react-native';\nimport {Button, Screen} from '../../../components';\nimport {getHeight, getWidth} from '../../../models';\nimport {useColor, useNativeDriver, useNav} from '../../../hooks';\nimport {Theme, useRootSelector} from '../../../utils';\n\nexport const Ball = memo(function PlaygroundBall() {\n  const height = useRootSelector(getHeight);\n  const width = useRootSelector(getWidth);\n  const nav = useNav();\n  const ballPosition = new Animated.ValueXY({x: width / 2, y: height / 2});\n  const useDriver = useNativeDriver();\n  const color = useColor();\n  const size = Theme.padding.p08;\n  const styles = StyleSheet.create({\n    ball: {\n      borderColor: color.text,\n      borderRadius: size,\n      borderWidth: size,\n      height: size * 2,\n      marginLeft: -size,\n      marginTop: -size,\n      width: size * 2,\n    },\n    button: {\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n    },\n  });\n  const animate = useCallback(\n    (dx: number, dy: number) => {\n      Animated.spring(ballPosition, {\n        toValue: {x: width * dx, y: height * dy},\n        useNativeDriver: useDriver,\n      }).start();\n    },\n    [ballPosition, height, useDriver, width],\n  );\n  const onInitialPress = useCallback(() => animate(0.5, 0.5), [animate]);\n  const onRandomPress = useCallback(\n    () => animate(Math.random(), Math.random()),\n    [animate],\n  );\n  const navBack = useCallback(nav('landing'), [nav]);\n\n  return (\n    <Screen onLeftPress={navBack} testID=\"ballScreen\" title=\"Ball\">\n      <Animated.View\n        style={[ballPosition.getLayout(), styles.ball]}\n        testID=\"ball\"\n      />\n      <View style={styles.button}>\n        <Button\n          onPress={onInitialPress}\n          testID=\"initialButton\"\n          title=\"initial\"\n        />\n        <Button onPress={onRandomPress} testID=\"randomButton\" title=\"random\" />\n      </View>\n    </Screen>\n  );\n});\n","import React, {memo} from 'react';\nimport {Image, View} from 'react-native';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport dayjs from 'dayjs';\nimport {RelativeDate, Text} from '../../../components';\nimport {Theme} from '../../../utils';\nimport {useColor} from '../../../hooks';\nimport {Message} from './Messages';\ndayjs.extend(relativeTime);\n\ninterface Props {\n  item: Message;\n}\n\nexport const Item = memo(function ChatMessage({item}: Props) {\n  const color = useColor();\n  const image = require('../../../assets/line-chart.png');\n\n  return (\n    <View\n      key={item.id}\n      style={{\n        padding: Theme.padding.p01,\n        borderRadius: Theme.padding.p04,\n        flexDirection: 'row',\n        marginBottom: Theme.padding.p06,\n        backgroundColor: color.light,\n      }}>\n      <View style={{width: 40}}>\n        <Image\n          source={image}\n          style={{\n            alignSelf: 'center',\n            height: 20,\n            paddingTop: Theme.padding.p04,\n            resizeMode: 'contain',\n            width: 20,\n          }}\n        />\n      </View>\n      <View style={{flex: 1}}>\n        <View style={{flexDirection: 'row'}}>\n          <Text\n            bold\n            style={{paddingRight: Theme.padding.p02}}\n            title={item.userId}\n          />\n          <RelativeDate date={item.createdAt} />\n        </View>\n        <Text style={{paddingTop: 5}} title={item.message} type=\"body1\" />\n      </View>\n    </View>\n  );\n});\n","import React, {memo, useCallback, useEffect, useRef} from 'react';\nimport {FlatList} from 'react-native';\nimport {useRootSelector} from '../../../utils';\nimport {Item} from './Item';\nimport {Message, getActiveChatMessagesOrderByCreatedAt} from './Messages';\n\nexport const Items = memo(function ChatMessageItems() {\n  const itemsRef = useRef<FlatList | null>(null);\n  const messages = useRootSelector(getActiveChatMessagesOrderByCreatedAt);\n  const renderItem = useCallback(\n    ({item}: {item: Message}) => <Item item={item} />,\n    [],\n  );\n  const keyExtractor = useCallback((item: Message) => item.id, []);\n\n  useEffect(() => {\n    itemsRef.current?.scrollToItem({item: messages[0]});\n  }, [messages]);\n\n  return (\n    <FlatList\n      data={messages}\n      inverted\n      keyExtractor={keyExtractor}\n      ref={itemsRef}\n      renderItem={renderItem}\n    />\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {Keyboard, View} from 'react-native';\nimport {v4} from 'uuid';\nimport {Icon, TextInput} from '../../../components';\nimport {Theme, useRootDispatch, useRootSelector} from '../../../utils';\nimport {Message, createChatMessage, typeChatMessage} from './Messages';\n\nexport const TextField = memo(function TextField() {\n  const dispatch = useRootDispatch();\n  const textField = useRootSelector((state) => state.chatMessage.textField);\n  const onMessageChange = useCallback(\n    (message: string) => dispatch(typeChatMessage(message)),\n    [dispatch],\n  );\n\n  const onSubmit = useCallback(() => {\n    if (textField.trim().length === 0) {\n      return;\n    }\n    const date = Date.now();\n    const message: Message = {\n      active: true,\n      createdAt: date,\n      userId: 'User bob',\n      id: v4(),\n      message: textField.trim(),\n      updatedAt: date,\n      conversationId: '1',\n    };\n    Keyboard.dismiss();\n    dispatch(createChatMessage(message));\n  }, [dispatch, textField]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}>\n      <TextInput\n        flex\n        onChangeText={onMessageChange}\n        onSubmitEditing={onSubmit}\n        removeError\n        value={textField}\n      />\n      <Icon\n        name=\"send\"\n        onPress={onSubmit}\n        size={20}\n        style={{\n          paddingLeft: Theme.padding.p02,\n          justifyContent: 'center',\n        }}\n      />\n    </View>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {useNav} from '../../../hooks';\nimport {Screen} from '../../../components';\nimport {Items} from './Items';\nimport {TextField} from './TextField';\n\nexport const Chat = memo(function PlaygroundChat() {\n  const nav = useNav();\n  const navBack = useCallback(nav('landing'), [nav]);\n\n  return (\n    <Screen gutter onLeftPress={navBack} title=\"Chat\">\n      <Items />\n      <TextField />\n    </Screen>\n  );\n});\n","import React, {memo, useCallback, useState} from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  PanResponder,\n  PanResponderGestureState,\n  PanResponderInstance,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {Screen, Text} from '../../../components';\nimport {useColor, useDropShadow, useNativeDriver, useNav} from '../../../hooks';\n\nconst getPosition = (\n  gestureState: PanResponderGestureState,\n  initialPosition: {x: number; y: number},\n  size: number,\n) => {\n  const maxY = gestureState.dy - initialPosition.y + size;\n  const minY = gestureState.dy + initialPosition.y - size;\n  const maxX = gestureState.dx - initialPosition.x + size;\n  const minX = gestureState.dx + initialPosition.x - size;\n  const y =\n    minY <= 0\n      ? size\n      : maxY >= 0\n      ? initialPosition.y * 2 - size\n      : initialPosition.y + gestureState.dy;\n  const x =\n    minX <= 0\n      ? size\n      : maxX >= 0\n      ? initialPosition.x * 2 - size\n      : initialPosition.x + gestureState.dx;\n  return {x, y};\n};\n\nexport const Drag = memo(function PlaygroundDrag() {\n  const nav = useNav();\n  const color = useColor();\n  const dropShadow = useDropShadow();\n  const useDriver = useNativeDriver();\n  const [canvas, setCanvas] = useState({x: 0, y: 0, height: 0, width: 0});\n  const initialPosition = {x: canvas.width / 2, y: canvas.height / 2};\n  const size = 30;\n  const styles = StyleSheet.create({\n    ball: {\n      borderColor: color.background,\n      borderRadius: size,\n      borderWidth: size,\n      height: size,\n      marginLeft: -size,\n      marginTop: -size,\n      width: size,\n      ...dropShadow(10),\n    },\n    canvas: {\n      backgroundColor: color.surface,\n      flex: 1,\n    },\n  });\n  const ballPosition: Animated.ValueXY = new Animated.ValueXY(initialPosition);\n  const panGesture: PanResponderInstance = PanResponder.create({\n    onMoveShouldSetPanResponderCapture: () => true,\n    onPanResponderMove: (_, gestureState) => {\n      const toValue = getPosition(gestureState, initialPosition, size);\n      Animated.spring(ballPosition, {\n        toValue,\n        useNativeDriver: useDriver,\n      }).start();\n    },\n    onPanResponderEnd: () => {\n      Animated.spring(ballPosition, {\n        toValue: initialPosition,\n        useNativeDriver: useDriver,\n      }).start();\n    },\n  });\n\n  const handleCanvas = useCallback((event: LayoutChangeEvent) => {\n    const {x, y, height, width} = event.nativeEvent.layout;\n    setCanvas({x, y, height, width});\n  }, []);\n  const navBack = useCallback(nav('landing'), [nav]);\n\n  return (\n    <Screen onLeftPress={navBack} title=\"Drag\">\n      <Text center title=\"drag the circle\" type=\"overline\" />\n      <View onLayout={handleCanvas} style={styles.canvas}>\n        <Animated.View\n          style={[ballPosition.getLayout(), styles.ball]}\n          {...panGesture.panHandlers}\n        />\n      </View>\n    </Screen>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {Screen, Text} from '../../../components';\nimport {useNav} from '../../../hooks';\n\nexport const Fonts = memo(function PlaygroundFonts() {\n  const nav = useNav();\n  const navBack = useCallback(nav('landing'), [nav]);\n\n  return (\n    <Screen onLeftPress={navBack} title=\"Fonts\">\n      <Text\n        title=\"H1: The quick brown fox jumps over the lazy dog.\"\n        type=\"h1\"\n      />\n      <Text title=\"h2 The quick brown fox jumps over the lazy dog.\" type=\"h2\" />\n      <Text\n        title=\"H3: The quick brown fox jumps over the lazy dog.\"\n        type=\"h3\"\n      />\n      <Text\n        title=\"H4: The quick brown fox jumps over the lazy dog.\"\n        type=\"h4\"\n      />\n      <Text\n        title=\"H5: The quick brown fox jumps over the lazy dog.\"\n        type=\"h5\"\n      />\n      <Text\n        title=\"H6: The quick brown fox jumps over the lazy dog.\"\n        type=\"h6\"\n      />\n      <Text\n        title=\"SUBTITLE1: The quick brown fox jumps over the lazy dog.\"\n        type=\"subtitle1\"\n      />\n      <Text\n        title=\"SUBTITLE2: The quick brown fox jumps over the lazy dog.\"\n        type=\"subtitle2\"\n      />\n      <Text\n        title=\"BODY1: The quick brown fox jumps over the lazy dog.\"\n        type=\"body1\"\n      />\n      <Text\n        title=\"BODY2: The quick brown fox jumps over the lazy dog.\"\n        type=\"body2\"\n      />\n      <Text\n        title=\"OVERLINE: The quick brown fox jumps over the lazy dog.\"\n        type=\"overline\"\n      />\n      <Text\n        title=\"CAPTION: The quick brown fox jumps over the lazy dog.\"\n        type=\"caption\"\n      />\n      <Text\n        title=\"BUTTON: The quick brown fox jumps over the lazy dog.\"\n        type=\"button\"\n      />\n      <Text title=\"NOTHING: The quick brown fox jumps over the lazy dog.\" />\n    </Screen>\n  );\n});\n","import React from 'react';\nimport {ActivityIndicator, Animated, StyleSheet, View} from 'react-native';\nimport {useNativeDriver} from '../../../hooks';\ninterface Props {\n  uri: string;\n  height: number;\n  width: number;\n  color?: string;\n  size?: number | 'small' | 'large';\n}\n\nexport const AsyncImage = ({\n  uri,\n  height,\n  width,\n  color = 'black',\n  size = 'small',\n}: Props): JSX.Element => {\n  const nativeDriver = useNativeDriver();\n  const imageAnimated = new Animated.Value(0);\n  const indicatorAnimated = new Animated.Value(1);\n  const styles = StyleSheet.create({\n    indicatorOverlay: {justifyContent: 'center', position: 'absolute'},\n  });\n  const onImageLoad = () => {\n    Animated.parallel([\n      Animated.timing(indicatorAnimated, {\n        toValue: 0,\n        useNativeDriver: nativeDriver,\n      }),\n      Animated.timing(imageAnimated, {\n        toValue: 1,\n        useNativeDriver: nativeDriver,\n      }),\n    ]).start();\n  };\n\n  const containerStyle = {width, height};\n  const imageStyle = [containerStyle, {opacity: imageAnimated}];\n  const indicatorStyle = [\n    containerStyle,\n    {opacity: indicatorAnimated},\n    styles.indicatorOverlay,\n  ];\n  return (\n    <View style={containerStyle}>\n      <Animated.Image onLoad={onImageLoad} source={{uri}} style={imageStyle} />\n      <Animated.View style={indicatorStyle}>\n        <ActivityIndicator color={color} size={size} />\n      </Animated.View>\n    </View>\n  );\n};\n","import React, {memo, useCallback} from 'react';\nimport {Dimensions, FlatList} from 'react-native';\nimport {Screen} from '../../../components';\nimport {useNav} from '../../../hooks';\nimport {AsyncImage} from './AsyncImage';\n\nconst numColumns = 3;\nconst handleInfiniteScrollThreshold = 0.3;\nconst columnWidth = Dimensions.get('window').width / numColumns;\nconst imageUrl = `http://lorempixel.com/${columnWidth}/${columnWidth}`;\nconst data: number[] = [\n  Math.random(),\n  Math.random(),\n  Math.random(),\n  Math.random(),\n  Math.random(),\n  Math.random(),\n  Math.random(),\n  Math.random(),\n];\nexport const ImageCollection = memo(function ImageCollection() {\n  const nav = useNav();\n  const keyExtractor = (d: number) => d.toString();\n  const handleFetchMore = () => {\n    data.push(Math.random());\n    data.push(Math.random());\n    data.push(Math.random());\n    data.push(Math.random());\n    data.push(Math.random());\n  };\n  const renderImage = useCallback(\n    () => (\n      <AsyncImage height={columnWidth} uri={imageUrl} width={columnWidth} />\n    ),\n    [],\n  );\n\n  return (\n    <Screen onLeftPress={nav('landing')} title=\"Image Collection\">\n      <FlatList\n        data={data}\n        keyExtractor={keyExtractor}\n        numColumns={numColumns}\n        onEndReached={handleFetchMore}\n        onEndReachedThreshold={handleInfiniteScrollThreshold}\n        renderItem={renderImage}\n      />\n    </Screen>\n  );\n});\n","import React, {memo, useCallback, useState} from 'react';\nimport {Button, Screen, TextInput} from '../../../components';\nimport {useNav} from '../../../hooks';\n\nexport const Input = memo(function PlaygroundInput() {\n  const nav = useNav();\n\n  const [form, setForm] = useState({\n    email: '',\n    error: '',\n    name: '',\n    password: '',\n  });\n\n  const handleChange = useCallback(\n    (key: string) => (val: string) => {\n      setForm((prev) => ({...prev, [key]: val}));\n    },\n    [],\n  );\n\n  const handleSubmit = useCallback(() => {\n    setForm((prev) => ({...prev, error: 'Invalid Email'}));\n  }, []);\n  const navBack = useCallback(nav('landing'), [nav]);\n\n  return (\n    <Screen gutter onLeftPress={navBack} title=\"Template\">\n      <TextInput\n        error={form.error}\n        onChangeText={handleChange('name')}\n        optional\n        placeholder=\"jane doe\"\n        title=\"Name\"\n        value={form.name}\n      />\n      <TextInput\n        error={form.error}\n        keyboardType=\"email-address\"\n        onChangeText={handleChange('email')}\n        placeholder=\"example@gmail.com\"\n        textContentType=\"username\"\n        title=\"Email\"\n        value={form.email}\n      />\n      <TextInput\n        onChangeText={handleChange('password')}\n        placeholder=\"•••••••\"\n        secureTextEntry\n        textContentType=\"password\"\n        title=\"Password\"\n        value={form.password}\n      />\n      <Button onPress={handleSubmit} title=\"complete form\" />\n    </Screen>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {ScrollView} from 'react-native';\nimport {Card, Screen, Text} from '../../../components';\nimport {useNav} from '../../../hooks';\nimport {Theme} from '../../../utils';\n\nexport const OKRs = memo(function PlaygroundOKRs() {\n  const nav = useNav();\n  const navBack = useCallback(nav('landing'), [nav]);\n  return (\n    <Screen onLeftPress={navBack} title=\"OKRs\">\n      <ScrollView\n        contentContainerStyle={{paddingHorizontal: Theme.padding.p05}}>\n        <Card>\n          <Text title=\"Company\" type=\"h6\" />\n          <Card>\n            <Text title=\"Mission\" type=\"h6\" />\n            <Text\n              title=\"We strive to offer our customers the lowest possible prices\n        the best available selection and the utmost convenience.\"\n            />\n          </Card>\n          <Card>\n            <Text title=\"Vision\" type=\"h6\" />\n            <Text title=\"To be Earth’s most customer-centric company where customers can find and discover anything they might want to buy online.\" />\n          </Card>\n          <Card>\n            <Text title=\"Values\" type=\"h6\" />\n            <Text title=\"Customer Obsession\" />\n            <Text title=\"Ownership\" />\n            <Text title=\"Invent and Simplify\" />\n            <Text title=\"Are Right a Lot\" />\n            <Text title=\"Learn and Be Curious\" />\n            <Text title=\"Hire and Develop the Best\" />\n            <Text title=\"Insist on the Highest Standards\" />\n            <Text title=\"Think Big\" />\n            <Text title=\"Bias for Action\" />\n            <Text title=\"Frugality\" />\n            <Text title=\"Earn Trust\" />\n            <Text title=\"Dive Deep\" />\n            <Text title=\"Have Backbone; Disagree and Commit\" />\n            <Text title=\"Deliver Results\" />\n          </Card>\n        </Card>\n        <Card>\n          <Text title=\"Product\" type=\"h6\" />\n          <Card>\n            <Text title=\"Vision\" type=\"h6\" />\n            <Text title=\"Jim, owner\" />\n          </Card>\n\n          <Card>\n            <Text title=\"KPIs\" type=\"h6\" />\n            <Text title=\"Customer Lifetime Value\" />\n            <Text title=\"Average Revenue Per user\" />\n            <Text title=\"Customer Aquisition Cost\" />\n            <Text title=\"Monthly Recurring Revenue\" />\n            <Text title=\"Churn\" />\n            <Text title=\"Cost of Sales\" />\n            <Text title=\"Contributing Margins\" />\n          </Card>\n          <Card>\n            <Text title=\"Team\" type=\"h6\" />\n            <Text title=\"Jim, owner\" />\n            <Text title=\"Bob, designer\" />\n            <Text title=\"Steve, engineer\" />\n            <Text title=\"Greg, engineer\" />\n          </Card>\n\n          <Card>\n            <Text title=\"Objective\" type=\"h6\" />\n            <Text title=\"Jim, owner\" />\n            <Card>\n              <Text title=\"KeyResult\" type=\"h6\" />\n              <Text title=\"Jim, owner\" />\n            </Card>\n            <Card>\n              <Text title=\"KeyResult\" type=\"h6\" />\n              <Text title=\"Jim, owner\" />\n            </Card>\n            <Card>\n              <Text title=\"KeyResult\" type=\"h6\" />\n              <Text title=\"Jim, owner\" />\n            </Card>\n          </Card>\n          <Card>\n            <Text title=\"Objective\" type=\"h6\" />\n            <Text title=\"Jim, owner\" />\n          </Card>\n        </Card>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import {\n  GestureResponderEvent,\n  NativeTouchEvent,\n  PointPropType,\n} from 'react-native';\n\ninterface Touches {\n  [key: string]: PointPropType;\n}\n\ninterface Outcome {\n  spread: boolean;\n  pinch: boolean;\n}\n\nexport class GestureHandler {\n  minTouches: number;\n  finish: Touches = {};\n  start: Touches = {};\n\n  constructor({minTouches = 2} = {}) {\n    this.minTouches = minTouches;\n  }\n\n  onPanResponderMove(event: GestureResponderEvent): void {\n    const touches: NativeTouchEvent[] = event.nativeEvent.touches;\n    touches.forEach((touch: NativeTouchEvent) => {\n      this.recordFinish(touch);\n      this.recordStart(touch);\n    });\n  }\n\n  onPanResponderRelease(): Outcome {\n    const outcome = this.determineOutcome();\n    this.start = {};\n    this.finish = {};\n    return outcome;\n  }\n\n  recordStart(touch: NativeTouchEvent): void {\n    if (this.isStartAlreadyRecorded(touch)) {\n      return;\n    }\n    this.start[String(touch.identifier)] = {\n      x: touch.locationX,\n      y: touch.locationY,\n    };\n  }\n\n  isStartAlreadyRecorded(touch: NativeTouchEvent): PointPropType {\n    return this.start[String(touch.identifier)];\n  }\n\n  recordFinish(touch: NativeTouchEvent): void {\n    this.finish[String(touch.identifier)] = {\n      x: touch.locationX,\n      y: touch.locationY,\n    };\n  }\n\n  isSpread(\n    start: PointPropType,\n    finish: PointPropType,\n    center: PointPropType,\n  ): boolean {\n    const startXDistance = Math.abs(start.x - center.x);\n    const startYDistance = Math.abs(start.y - center.y);\n    const finishXDistance = Math.abs(finish.x - center.x);\n    const finishYDistance = Math.abs(finish.y - center.y);\n    return (\n      startXDistance <= finishXDistance && startYDistance <= finishYDistance\n    );\n  }\n\n  determineCenter(points: Touches): {x: number; y: number} {\n    const numRecordedTouched = Object.keys(points).length;\n    let x = 0;\n    let y = 0;\n    for (let i = 1; i <= numRecordedTouched; i++) {\n      const point = points[i];\n      x += point.x;\n      y += point.x;\n    }\n    return {x: x / numRecordedTouched, y: y / numRecordedTouched};\n  }\n\n  determineOutcome(): Outcome {\n    const numRecordedTouched = Object.keys(this.start).length;\n    const outcome = {\n      pinch: false,\n      spread: false,\n    };\n    if (numRecordedTouched < this.minTouches) {\n      return outcome;\n    }\n    let spread = false;\n    let pinch = false;\n    const center = this.determineCenter(this.start);\n    for (let i = 1; i <= numRecordedTouched; i++) {\n      const start = this.start[i];\n      const finish = this.finish[i];\n      const isPinch = !this.isSpread(start, finish, center);\n      const isSpread = this.isSpread(start, finish, center);\n      if (isPinch && isSpread) {\n        return outcome;\n      }\n      if (!isPinch && !isSpread) {\n        return outcome;\n      }\n      if (isPinch && spread) {\n        return outcome;\n      }\n      if (isSpread && pinch) {\n        return outcome;\n      }\n      pinch = isPinch;\n      spread = isSpread;\n    }\n    return {spread, pinch};\n  }\n}\n","import React, {memo, useCallback, useState} from 'react';\nimport {Animated, PanResponder, StyleSheet} from 'react-native';\nimport {Screen, Text} from '../../../components';\nimport {useColor, useNav} from '../../../hooks';\nimport {GestureHandler} from './logic';\n\nconst minTouches = 2;\nconst title = `pinch or spread the screen with ${minTouches} fingers minimum`;\n\nexport const PinchSpread = memo(function PinchSpread() {\n  const [state, setState] = useState({pinchCount: 0, spreadCount: 0});\n  const color = useColor();\n  const nav = useNav();\n  const styles = StyleSheet.create({\n    container: {backgroundColor: color.light, flex: 1},\n  });\n  const gestureHandler = new GestureHandler({minTouches});\n  const panGesture = PanResponder.create({\n    onMoveShouldSetPanResponderCapture: () => true,\n    onPanResponderMove: (event) => gestureHandler.onPanResponderMove(event),\n    onPanResponderRelease: () => {\n      const outcome = gestureHandler.onPanResponderRelease();\n      if (outcome.spread) {\n        setState((prev) => ({...prev, spreadCount: prev.spreadCount++}));\n      }\n      if (outcome.pinch) {\n        setState((prev) => ({...prev, pinchCount: prev.pinchCount++}));\n      }\n    },\n  });\n  const navBack = useCallback(nav('landing'), [nav]);\n\n  return (\n    <Screen onLeftPress={navBack} title=\"Pinch Spread\">\n      <Text center title={title} />\n      <Text center title={`spread: ${state.spreadCount}`} />\n      <Text center title={`pinch: ${state.pinchCount}`} />\n      <Animated.View style={styles.container} {...panGesture.panHandlers} />\n    </Screen>\n  );\n});\n","import React, {useCallback, useState} from 'react';\nimport {FlatList, View} from 'react-native';\nimport {Card, Dialog, Icon, Text} from '../../../../components';\nimport {\n  Questionnaire,\n  createQuestionnaire,\n  getQuestionnaireArray,\n  removeQuestionnaire,\n  selectQuestionnaire,\n} from '../models';\nimport {useColor} from '../../../../hooks';\nimport {useRootDispatch, useRootSelector} from '../../../../utils';\n\nexport const Questionnaires = (): JSX.Element => {\n  const questionnaires = useRootSelector(getQuestionnaireArray);\n  const selected = useRootSelector((state) => state.questionnaires.selected);\n  const [actionSheet, setActionSheet] = useState(false);\n  const dispatch = useRootDispatch();\n  const color = useColor();\n  const handleLongPress = useCallback(\n    (id: string) => () => dispatch(removeQuestionnaire(id)),\n    [dispatch],\n  );\n  const handleItemPress = useCallback(\n    (id: string) => () => dispatch(selectQuestionnaire(id)),\n    [dispatch],\n  );\n  const handleActionSheetClose = useCallback(() => setActionSheet(false), []);\n  const handleCreate = useCallback(\n    () => dispatch(createQuestionnaire(String(Date.now()))),\n    [dispatch],\n  );\n  const handleItemMenu = useCallback(() => {\n    setActionSheet((state) => !state);\n  }, []);\n  const renderItem = useCallback(\n    ({item}) => {\n      const length = item.questions.length;\n      const subtitle = `${length} question${length === 1 ? '' : 's'}`;\n      return (\n        <Card\n          onLongPress={handleLongPress(item.id)}\n          onPress={handleItemPress(item.id)}\n          selected={selected === item.id}>\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n            }}>\n            <View style={{flex: 0.9}}>\n              <Text title={item.title} type=\"h3\" />\n              <Text title={subtitle} type=\"caption\" />\n            </View>\n            <Icon name=\"dots-horizontal\" onPress={handleItemMenu} />\n          </View>\n        </Card>\n      );\n    },\n    [handleItemMenu, handleItemPress, handleLongPress, selected],\n  );\n\n  const keyExtractor = useCallback((item: Questionnaire) => item.id, []);\n\n  return (\n    <>\n      <FlatList\n        data={questionnaires}\n        extraData={selected}\n        keyExtractor={keyExtractor}\n        renderItem={renderItem}\n      />\n      <Icon\n        color={color.background}\n        fab\n        name=\"plus\"\n        onPress={handleCreate}\n        style={{\n          margin: 10,\n          position: 'absolute',\n          bottom: 0,\n          right: 0,\n        }}\n      />\n      {actionSheet && (\n        <Dialog onBackgroundPress={handleActionSheetClose} title=\"hello\" />\n      )}\n    </>\n  );\n};\n","import React, {memo, useRef} from 'react';\nimport {Dimensions, FlatList, View} from 'react-native';\nimport {Button, Screen, Text} from '../../../components';\nimport {useNav} from '../../../hooks';\nimport {Questionnaires} from './screens/Questionnaires';\n\nconst data = [\n  {\n    choices: [\n      {\n        key: '1',\n        selected: false,\n        title: 'individual',\n      },\n      {\n        key: '2',\n        selected: false,\n        title: 'couple',\n      },\n      {\n        key: '3',\n        selected: false,\n        title: 'teen',\n      },\n    ],\n    key: '1',\n    next: '2',\n    title: 'What type of counseling are you looking for',\n    type: 'radio',\n  },\n  {key: '2', title: '2'},\n  {key: '3', title: '3'},\n  {key: '4', title: '4'},\n  {key: '5', title: '5'},\n];\nconst width = Dimensions.get('window').width;\nconst viewabilityConfig = {itemVisiblePercentThreshold: 50};\n\nexport const Questionnaire = memo(function Questionnaire() {\n  let output: any = {};\n  let currentIndex = 0;\n  const nav = useNav();\n  const tableViewRef = useRef<FlatList | null>(null);\n  const handleViewableItemsChanged = ({viewableItems}: any) => {\n    currentIndex = viewableItems[0].index || 0;\n  };\n\n  const onProgress = (direction = 1) => {\n    const index = currentIndex + direction;\n    if (index < 0 || !tableViewRef.current) {\n      return;\n    }\n    if (index >= data.length) {\n      onFinish();\n      return;\n    }\n    tableViewRef.current.scrollToIndex({\n      animated: true,\n      index,\n    });\n  };\n\n  const onSelection = (item: any, choice: any) => {\n    output = {\n      ...output,\n      [item.key]: {\n        ...output[item.key],\n        [choice.key]: true,\n      },\n    };\n    onProgress();\n  };\n\n  const onFinish = () => undefined;\n\n  const updateSelection = (item: any, choice: any) => () =>\n    onSelection(item, choice);\n\n  const updateProgress = (value: number) => () => onProgress(value);\n\n  const renderItem = ({item}: {item: any}) => {\n    let items: any = <View style={{flex: 1}} />;\n\n    if (item.choices) {\n      items = (\n        <View style={{flex: 1}}>\n          {item.choices.map((choice: any) => {\n            return (\n              <Button\n                key={choice.title}\n                onPress={updateSelection(item, choice)}\n                title={choice.title}\n              />\n            );\n          })}\n        </View>\n      );\n    }\n\n    return (\n      <View style={{width: width}}>\n        <Text title={item.title} />\n        {items}\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-around',\n          }}>\n          <Button onPress={updateProgress(-1)} title=\"prev\" />\n          <Button onPress={updateProgress(1)} title=\"next\" />\n          <Button onPress={updateProgress(2)} title=\"next2\" />\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <Screen onLeftPress={nav('landing')} title=\"Questionnaire\">\n      <FlatList\n        data={data}\n        horizontal\n        onViewableItemsChanged={handleViewableItemsChanged}\n        pagingEnabled\n        ref={tableViewRef}\n        removeClippedSubviews\n        renderItem={renderItem}\n        scrollEnabled={false}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n        viewabilityConfig={viewabilityConfig}\n      />\n      <Questionnaires />\n    </Screen>\n  );\n});\n","import React, {memo, useCallback, useEffect, useState} from 'react';\nimport {\n  Animated,\n  FlatList,\n  Keyboard,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {Icon, Screen, Text, TextInput} from '../../../components';\nimport {Theme, colorWithOpacity} from '../../../utils';\nimport {useColor, useNativeDriver, useNav} from '../../../hooks';\n\nconst data = [\n  {id: 1, name: '1'},\n  {id: 2, name: '2'},\n  {id: 3, name: '3'},\n  {id: 4, name: '4'},\n  {id: 5, name: '5'},\n  {id: 6, name: '6'},\n  {id: 7, name: '7'},\n  {id: 8, name: '8'},\n  {id: 9, name: '9'},\n  {id: 10, name: '10'},\n  {id: 11, name: '11'},\n  {id: 12, name: '12'},\n  {id: 13, name: '13'},\n  {id: 14, name: '14'},\n  {id: 15, name: '15'},\n  {id: 16, name: '16'},\n  {id: 17, name: '17'},\n  {id: 18, name: '18'},\n  {id: 19, name: '19'},\n];\n\ninterface State {\n  input: string;\n  iconName: string;\n  animation: Animated.Value;\n}\n\nconst iconSearch = 'magnify';\nconst iconBack = 'arrow-left';\nconst textInputPlaceHolder = 'Search';\nconst animationDuration = 400;\n\nexport const SearchBar = memo(function PlaygroundSearchbar() {\n  const nav = useNav();\n  const color = useColor();\n  const [state, setState] = useState<State>({\n    animation: new Animated.Value(0),\n    iconName: iconSearch,\n    input: '',\n  });\n  const useDriver = useNativeDriver();\n  const translateIcon = state.animation.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [1, -60, 1],\n  });\n  const fadeContainer = state.animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [color.background, colorWithOpacity(color.secondary)],\n  });\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n    },\n    header: {\n      backgroundColor: color.light,\n      height: Theme.padding.p20,\n      justifyContent: 'center',\n      padding: Theme.padding.p02,\n    },\n    item: {\n      borderBottomColor: color.light,\n      borderWidth: 0.2,\n      padding: Theme.padding.p06,\n    },\n    textContainer: {\n      alignItems: 'center',\n      backgroundColor: color.background,\n      flexDirection: 'row',\n      height: '100%',\n      padding: Theme.padding.p02,\n    },\n    textInput: {\n      flex: 1,\n      marginLeft: Theme.padding.p02,\n    },\n  });\n\n  const animate = useCallback(\n    (value: number) => {\n      Animated.timing(state.animation, {\n        duration: animationDuration,\n        toValue: value,\n        useNativeDriver: useDriver,\n      }).start();\n    },\n    [state.animation, useDriver],\n  );\n\n  const changeIcon = useCallback(\n    (iconName: string) => {\n      const iconChangeTimeout = setTimeout(() => {\n        clearTimeout(iconChangeTimeout);\n        setState({...state, iconName});\n      }, animationDuration / 2);\n    },\n    [state],\n  );\n\n  const onSearchBarFocus = useCallback(() => {\n    animate(1);\n    changeIcon(iconBack);\n  }, [animate, changeIcon]);\n\n  const onSearchBarUnFocus = useCallback(() => {\n    animate(0);\n    changeIcon(iconSearch);\n  }, [animate, changeIcon]);\n\n  const keyboardWillShow = useCallback(() => {\n    if (Platform.OS !== 'ios') {\n      return;\n    }\n    onSearchBarFocus();\n  }, [onSearchBarFocus]);\n\n  const keyboardWillHide = useCallback(() => {\n    if (Platform.OS !== 'ios') {\n      return;\n    }\n    onSearchBarUnFocus();\n  }, [onSearchBarUnFocus]);\n\n  const keyboardDidShow = useCallback(() => {\n    if (Platform.OS !== 'android') {\n      return;\n    }\n    onSearchBarFocus();\n  }, [onSearchBarFocus]);\n\n  const keyboardDidHide = useCallback(() => {\n    if (Platform.OS !== 'android') {\n      return;\n    }\n    onSearchBarUnFocus();\n  }, [onSearchBarUnFocus]);\n\n  useEffect(() => {\n    if (process.env.JEST_WORKER_ID) {\n      return undefined;\n    }\n    const keyboardDidShowListener = Keyboard.addListener(\n      'keyboardDidShow',\n      keyboardDidShow,\n    );\n    const keyboardDidHideListener = Keyboard.addListener(\n      'keyboardDidHide',\n      keyboardDidHide,\n    );\n    const keyboardWillShowListener = Keyboard.addListener(\n      'keyboardWillShow',\n      keyboardWillShow,\n    );\n    const keyboardWillHideListener = Keyboard.addListener(\n      'keyboardWillHide',\n      keyboardWillHide,\n    );\n    return () => {\n      keyboardDidShowListener.remove();\n      keyboardDidHideListener.remove();\n      keyboardWillShowListener.remove();\n      keyboardWillHideListener.remove();\n    };\n  }, [keyboardDidHide, keyboardDidShow, keyboardWillHide, keyboardWillShow]);\n\n  const renderItem = useCallback(\n    ({item}) => <Text style={styles.item} title={item.name} type=\"subtitle2\" />,\n    [styles.item],\n  );\n\n  const keyExtractor = useCallback((item) => item.id.toString(), []);\n\n  const onChangeText = useCallback(\n    (value: string) => setState((prev) => ({...prev, input: value})),\n    [],\n  );\n  const navBack = useCallback(nav('landing'), [nav]);\n\n  return (\n    <Screen onLeftPress={navBack}>\n      <View style={styles.header}>\n        <View style={styles.textContainer}>\n          <Animated.View\n            style={{\n              transform: [{translateX: translateIcon}],\n            }}>\n            <Icon name={state.iconName} />\n          </Animated.View>\n          <TextInput\n            containerStyle={styles.textInput}\n            onChangeText={onChangeText}\n            placeholder={textInputPlaceHolder}\n            removeError\n            value={state.input}\n          />\n        </View>\n      </View>\n      <Animated.View style={{flex: 1, backgroundColor: fadeContainer}}>\n        <FlatList\n          data={data}\n          keyExtractor={keyExtractor}\n          renderItem={renderItem}\n        />\n      </Animated.View>\n    </Screen>\n  );\n});\n","import React, {ReactNode} from 'react';\nimport {View} from 'react-native';\nimport {useColor} from '../../../hooks';\nimport {Text} from '../../../components';\nimport {Theme} from '../../../utils';\n\ntype Props = {\n  row?: boolean;\n  title: string;\n  children: ReactNode;\n};\n\nexport const Section = ({title, row, children}: Props): JSX.Element => {\n  const color = useColor();\n  return (\n    <View\n      style={{\n        flexDirection: row ? 'row' : 'column',\n        marginBottom: Theme.padding.p04,\n      }}>\n      <Text\n        style={{\n          color: color.background, // TODO: add prop to text for inverse\n          backgroundColor: color.secondary,\n          padding: Theme.padding.p02,\n          borderColor: color.secondary,\n          borderWidth: 2,\n        }}\n        title={title}\n        type=\"h3\"\n      />\n      <View\n        style={{\n          backgroundColor: color.background,\n          padding: Theme.padding.p03,\n          borderColor: color.secondary,\n          borderWidth: 2,\n          borderTopWidth: 0,\n        }}>\n        {children}\n      </View>\n    </View>\n  );\n};\n","import React, {memo, useCallback, useState} from 'react';\nimport {ScrollView, Switch, View} from 'react-native';\nimport dayjs from 'dayjs';\nimport {Button, Screen, Text, TextInput} from '../../../components';\nimport {useColor, useNav} from '../../../hooks';\nimport {Theme} from '../../../utils';\nimport {Section} from './Section';\n\n// https://www.startupschool.org/updates/250717/edit\n\ntype Form = {\n  launched: boolean;\n  launchWeeks: string;\n  usersTalkedTo: string;\n  usersLearnedFrom: string;\n  topGoals: string;\n  primaryMetric: string;\n  biggestObstacle: string;\n  morale: string;\n  targetCustomer: string;\n};\n\nconst initialState: Form = {\n  launched: false,\n  launchWeeks: '',\n  usersTalkedTo: '',\n  usersLearnedFrom: '',\n  topGoals: '',\n  primaryMetric: '',\n  biggestObstacle: '',\n  morale: '',\n  targetCustomer: '',\n};\n\nexport const Startup = memo(function PlaygroundStartup() {\n  const color = useColor();\n  const nav = useNav();\n  const [form, setForm] = useState<Form>(initialState);\n  const launchWeeks = parseInt(form.launchWeeks, 10);\n  const launchSubText =\n    launchWeeks >= 5\n      ? \"That's a long way out! Think hard: is there an MVP you could launch earlier?\"\n      : 'Almost there, looking forward to your launch!';\n\n  const updateForm = useCallback(\n    (key: keyof Form, value: string | boolean) =>\n      setForm((state) => ({...state, [key]: value})),\n    [],\n  );\n  const handleLaunchChange = useCallback(\n    (value: boolean) => updateForm('launched', value),\n    [updateForm],\n  );\n  const handleUserChange = useCallback(\n    (value: string) => updateForm('usersTalkedTo', value),\n    [updateForm],\n  );\n  const handleMoraleChange = useCallback(\n    (value: string) => updateForm('morale', value),\n    [updateForm],\n  );\n  const handleObstacleChange = useCallback(\n    (value: string) => updateForm('biggestObstacle', value),\n    [updateForm],\n  );\n  const handleLearnChange = useCallback(\n    (value: string) => updateForm('usersLearnedFrom', value),\n    [updateForm],\n  );\n  const handleMetricChange = useCallback(\n    (value: string) => updateForm('primaryMetric', value),\n    [updateForm],\n  );\n  const handleGoalChange = useCallback(\n    (value: string) => updateForm('topGoals', value),\n    [updateForm],\n  );\n  const handleWeeksToLaunchChange = useCallback(\n    (value: string) => updateForm('launchWeeks', value),\n    [updateForm],\n  );\n\n  const handleSubmit = useCallback(() => undefined, []);\n  const navBack = useCallback(nav('landing'), [nav]);\n\n  return (\n    <Screen onLeftPress={navBack} title=\"Weekly Update\">\n      <View\n        style={{\n          paddingBottom: Theme.padding.p04,\n          borderBottomColor: color.secondary,\n          borderBottomWidth: 2,\n        }}>\n        <Text center title={dayjs().format('MMM DD, YYYY')} type=\"h4\" />\n      </View>\n      <ScrollView\n        contentContainerStyle={{\n          backgroundColor: color.light,\n          padding: Theme.padding.p04,\n        }}>\n        <Section title=\"Launch\">\n          <Text title=\"Are you launched?\" />\n          <Switch onValueChange={handleLaunchChange} value={form.launched} />\n          <TextInput\n            keyboardType=\"numeric\"\n            onChangeText={handleWeeksToLaunchChange}\n            title=\"Weeks to launch?\"\n            value={form.launchWeeks}\n          />\n          <Text hidden={launchSubText.length === 0} title={launchSubText} />\n        </Section>\n        <Section title=\"Users\">\n          <TextInput\n            onChangeText={handleUserChange}\n            title=\"Users/prospective users talked to this week?\"\n            value={form.usersTalkedTo}\n          />\n          <TextInput\n            onChangeText={handleLearnChange}\n            title=\"What have you learned from them?\"\n            value={form.usersLearnedFrom}\n          />\n        </Section>\n        <Section title=\"Goals\">\n          <TextInput\n            onChangeText={handleGoalChange}\n            title=\"What are your top 1-3 goals for the next week?\"\n            value={form.topGoals}\n          />\n          <TextInput\n            onChangeText={handleMetricChange}\n            title=\"What most improved your primary metric?\"\n            value={form.primaryMetric}\n          />\n          <TextInput\n            onChangeText={handleObstacleChange}\n            title=\"Biggest obstacle?\"\n            value={form.biggestObstacle}\n          />\n        </Section>\n        <Section title=\"Morale\">\n          <TextInput\n            keyboardType=\"numeric\"\n            onChangeText={handleMoraleChange}\n            title=\"On a scale of 1-10, what is your morale?\"\n            value={form.morale} // 1 (we are totally burned out) to  10 (we couldn't be more excited and optimistic!)\n          />\n        </Section>\n        <Button color=\"primary\" onPress={handleSubmit} title=\"submit\" />\n      </ScrollView>\n    </Screen>\n  );\n});\n","import React, {memo} from 'react';\nimport {StyleProp, StyleSheet, TextStyle, View} from 'react-native';\nimport {Text} from '../../../components';\n\ninterface TimerProps {\n  interval: number;\n  style: StyleProp<TextStyle>;\n}\n\nexport const Timer = memo(function Timer({interval, style}: TimerProps) {\n  const pad = (n: number): string =>\n    (n < 10 ? '0' + n.toString() : n).toString();\n  const minutes = Math.floor(interval / 60000);\n  const seconds = Math.floor((interval % 60000) / 1000);\n  const milliseconds = Math.floor((interval % 60000) % 1000);\n  const styles = StyleSheet.create({\n    timerContainer: {\n      flexDirection: 'row',\n    },\n  });\n  return (\n    <View style={styles.timerContainer}>\n      <Text style={style} title={`${pad(minutes)}:`} />\n      <Text style={style} title={`${pad(seconds)}.`} />\n      <Text style={style} title={pad(milliseconds).substr(0, 2)} />\n    </View>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {Text, TouchableOpacity} from '../../../components';\n\ninterface RoundButtonProps {\n  title: string;\n  color: string;\n  background: string;\n  disabled?: boolean;\n  onPress(): void;\n}\n\nexport const ButtonRound = memo(function ButtonRound({\n  title,\n  color,\n  background,\n  onPress,\n  disabled = false,\n}: RoundButtonProps) {\n  const styles = StyleSheet.create({\n    button: {\n      alignItems: 'center',\n      borderRadius: 40,\n      height: 80,\n      justifyContent: 'center',\n      width: 80,\n    },\n    buttonBorder: {\n      alignItems: 'center',\n      borderRadius: 38,\n      borderWidth: 1,\n      height: 76,\n      justifyContent: 'center',\n      width: 76,\n    },\n    buttonTitle: {\n      fontSize: 18,\n    },\n  });\n\n  const handlePress = useCallback(() => !disabled && onPress(), [\n    onPress,\n    disabled,\n  ]);\n\n  return (\n    <TouchableOpacity\n      activeOpacity={disabled ? 1.0 : 0.7}\n      onPress={handlePress}\n      style={[styles.button, {backgroundColor: background}]}>\n      <View style={styles.buttonBorder}>\n        <Text style={[styles.buttonTitle, {color}]} title={title} />\n      </View>\n    </TouchableOpacity>\n  );\n});\n","import React, {memo} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {useColor} from '../../../hooks';\nimport {Text} from '../../../components';\nimport {Timer} from './Timer';\n\ninterface LapProps {\n  num: number;\n  interval: number;\n  fastest: boolean;\n  slowest: boolean;\n}\n\nexport const Lap = memo(function Lap({\n  num,\n  interval,\n  fastest,\n  slowest,\n}: LapProps) {\n  const color = useColor();\n  const styles = StyleSheet.create({\n    fastest: {\n      color: color.success,\n    },\n    lap: {\n      borderColor: color.secondary,\n      borderTopWidth: 1,\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      paddingVertical: 10,\n    },\n    lapText: {\n      color: color.background,\n      fontFamily: 'Courier',\n      fontSize: 18,\n    },\n    slowest: {\n      color: color.danger,\n    },\n  });\n  const lapStyle = [\n    styles.lapText,\n    fastest ? styles.fastest : undefined,\n    slowest ? styles.slowest : undefined,\n  ];\n\n  return (\n    <View style={styles.lap}>\n      <Text style={lapStyle} title={`Lap ${num}`} />\n      <Timer interval={interval} style={lapStyle} />\n    </View>\n  );\n});\n","import React, {memo} from 'react';\nimport {ScrollView, StyleSheet} from 'react-native';\nimport {Lap} from './Lap';\n\ninterface LapTableProps {\n  laps: number[];\n  timer: number;\n}\n\nexport const LapsTable = memo(function LapsTable({laps, timer}: LapTableProps) {\n  const finishedLaps = laps.slice(1);\n  let min = Number.MAX_SAFE_INTEGER;\n  let max = Number.MIN_SAFE_INTEGER;\n  if (finishedLaps.length >= 2) {\n    finishedLaps.forEach((lap) => {\n      if (lap < min) {\n        min = lap;\n      }\n      if (lap > max) {\n        max = lap;\n      }\n    });\n  }\n  const styles = StyleSheet.create({\n    scrollView: {\n      alignSelf: 'stretch',\n    },\n  });\n  return (\n    <ScrollView style={styles.scrollView}>\n      {laps.map((lap, index) => (\n        <Lap\n          fastest={lap === min}\n          interval={index === 0 ? timer + lap : lap}\n          key={laps.length - index}\n          num={laps.length - index}\n          slowest={lap === max}\n        />\n      ))}\n    </ScrollView>\n  );\n});\n","import React, {ReactNode, memo} from 'react';\nimport {StyleSheet, View} from 'react-native';\n\ninterface ButtonRowProps {\n  children: ReactNode | ReactNode[];\n}\n\nexport const ButtonsRow = memo(function ButtonsRow({children}: ButtonRowProps) {\n  const styles = StyleSheet.create({\n    buttonsRow: {\n      alignSelf: 'stretch',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginBottom: 30,\n      marginTop: 80,\n    },\n  });\n  return <View style={styles.buttonsRow}>{children}</View>;\n});\n","import React, {memo, useCallback, useEffect, useRef, useState} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {Screen} from '../../../components';\nimport {useColor, useNav} from '../../../hooks';\nimport {Timer} from './Timer';\nimport {ButtonRound} from './ButtonRound';\nimport {LapsTable} from './LapsTable';\nimport {ButtonsRow} from './ButtonsRow';\n\ninterface State {\n  laps: number[];\n  now: number;\n  start: number;\n}\n\nexport const StopWatch = memo(function PlaygroundStopWatch() {\n  const nav = useNav();\n  const [state, setState] = useState<State>({\n    laps: [],\n    now: 0,\n    start: 0,\n  });\n  const timer = useRef<NodeJS.Timeout | null>(null);\n  const elapsed = state.now - state.start;\n  const interval =\n    state.laps.reduce((total, curr) => total + curr, 0) + elapsed;\n  const color = useColor();\n\n  const styles = StyleSheet.create({\n    container: {\n      alignItems: 'center',\n      backgroundColor: color.text,\n      flex: 1,\n      paddingHorizontal: 20,\n      paddingTop: 130,\n    },\n    timer: {\n      color: color.background,\n      fontFamily: 'Courier',\n      fontSize: 54,\n      fontWeight: '200',\n    },\n  });\n\n  useEffect(() => {\n    return () => {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n    };\n  }, [timer]);\n\n  const lap = () => {\n    const timestamp = new Date().getTime();\n    const {laps, now, start} = state;\n    const [firstLap, ...other] = laps;\n    setState({\n      laps: [0, firstLap + now - start, ...other],\n      now: timestamp,\n      start: timestamp,\n    });\n  };\n\n  const stop = useCallback(() => {\n    if (timer.current) {\n      clearInterval(timer.current);\n    }\n    const {laps, now, start} = state;\n    const [firstLap, ...other] = laps;\n    setState({laps: [firstLap + now - start, ...other], now: 0, start: 0});\n  }, [timer, state]);\n\n  const reset = useCallback(() => {\n    setState({laps: [], now: 0, start: 0});\n  }, []);\n\n  const run = useCallback(() => {\n    timer.current = setInterval(() => {\n      setState((prev) => ({...prev, now: new Date().getTime()}));\n    }, 100);\n  }, []);\n\n  const start = useCallback(() => {\n    const now = new Date().getTime();\n    setState({laps: [0], now, start: now});\n    run();\n  }, [run]);\n\n  const resume = useCallback(() => {\n    const now = new Date().getTime();\n    setState((prev) => ({\n      ...prev,\n      now,\n      start: now,\n    }));\n    run();\n  }, [run]);\n\n  const navBack = useCallback(nav('landing'), [nav]);\n  return (\n    <Screen onLeftPress={navBack}>\n      <View style={styles.container}>\n        <Timer interval={interval} style={styles.timer} />\n        {state.laps.length === 0 && (\n          <ButtonsRow>\n            <ButtonRound\n              background=\"#151515\"\n              color=\"#8B8B90\"\n              disabled\n              onPress={lap}\n              title=\"Lap\"\n            />\n            <ButtonRound\n              background=\"#1B361F\"\n              color=\"#50D167\"\n              onPress={start}\n              title=\"Start\"\n            />\n          </ButtonsRow>\n        )}\n        {state.start > 0 && (\n          <ButtonsRow>\n            <ButtonRound\n              background=\"#3D3D3D\"\n              color=\"#FFFFFF\"\n              onPress={lap}\n              title=\"Lap\"\n            />\n            <ButtonRound\n              background=\"#3C1715\"\n              color=\"#E33935\"\n              onPress={stop}\n              title=\"Stop\"\n            />\n          </ButtonsRow>\n        )}\n        {state.laps.length > 0 && state.start === 0 && (\n          <ButtonsRow>\n            <ButtonRound\n              background=\"#3D3D3D\"\n              color=\"#FFFFFF\"\n              onPress={reset}\n              title=\"Reset\"\n            />\n            <ButtonRound\n              background=\"#1B361F\"\n              color=\"#50D167\"\n              onPress={resume}\n              title=\"Start\"\n            />\n          </ButtonsRow>\n        )}\n        <LapsTable laps={state.laps} timer={elapsed} />\n      </View>\n    </Screen>\n  );\n});\n","// TODO: slider on web\nimport React, {memo, useCallback, useState} from 'react';\nimport {Image, ImageSourcePropType, View} from 'react-native';\nimport {Button, Card, Masonry, Screen, Slider, Text} from '../../../components';\nimport {\n  ColorTheme,\n  changeTheme,\n  colorThemes,\n  getLandscapeOrientation,\n} from '../../../models';\nimport {Theme, useRootDispatch, useRootSelector} from '../../../utils';\nimport {useColor, useNav} from '../../../hooks';\n\ninterface Card {\n  title: string;\n  value: string;\n  target?: string;\n  chart?: ImageSourcePropType;\n  button?: string;\n}\n\nconst image = require('../../../assets/placeholder.png');\nconst cards: Card[] = [\n  {\n    title: 'Marketing',\n    value: '12.4 M',\n  },\n  {\n    target: '+22% of target',\n    title: 'Conversion',\n    value: '537',\n  },\n  {\n    chart: image,\n    target: '+12.3 of target',\n    title: 'Conversion',\n    value: '42.1 M',\n  },\n  {\n    target: '11% of target',\n    title: 'Sales',\n    value: '35.8 M',\n    chart: image,\n  },\n  {\n    button: 'save',\n    title: 'Users',\n    value: '45.5 M',\n  },\n  {\n    target: '+56.6% of target',\n    title: 'Avg session',\n    value: '4:53 H',\n  },\n  {\n    title: 'Sessions',\n    value: '23.242',\n  },\n  {\n    title: 'Bounce rate',\n    value: '12%',\n  },\n];\n\nexport const DarkMode = memo(function DarkMode() {\n  const dispatch = useRootDispatch();\n  const color = useColor();\n  const nav = useNav();\n  const currentTheme = useRootSelector((state) => state.theme.currentColor);\n  const themePress = (theme: ColorTheme) => () => dispatch(changeTheme(theme));\n  const [elevation, setElevation] = useState(2);\n  const handleSlider = useCallback((value: number) => setElevation(value), []);\n  const landscape = useRootSelector(getLandscapeOrientation);\n  const columns = landscape ? 5 : 3;\n  const onPress = useCallback(() => undefined, []);\n\n  const renderItem = useCallback(\n    ({item, index}) => (\n      <Card elevation={elevation} key={index} onPress={onPress}>\n        <Text title={item.title} type=\"overline\" />\n        <Text\n          style={{marginTop: Theme.padding.p02}}\n          title={item.value}\n          type=\"h3\"\n        />\n        {item.target && (\n          <Text\n            style={{marginTop: Theme.padding.p02}}\n            title={item.target}\n            type=\"body2\"\n          />\n        )}\n        {item.chart && (\n          <Image\n            source={item.chart}\n            style={{\n              height: 80,\n              marginTop: Theme.padding.p02,\n              resizeMode: 'cover',\n              width: '100%',\n            }}\n          />\n        )}\n        {item.button && (\n          <Button\n            buttonStyle={{marginTop: Theme.padding.p02}}\n            color=\"primary\"\n            emphasis=\"high\"\n            title={item.button}\n          />\n        )}\n      </Card>\n    ),\n    [elevation, onPress],\n  );\n\n  const navBack = useCallback(nav('landing'), [nav]);\n  return (\n    <Screen onLeftPress={navBack} title=\"Dark mode\">\n      <View style={{padding: Theme.padding.p04}}>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'center',\n          }}>\n          <Text title=\"theme: \" />\n          {colorThemes.map((item) => (\n            <Button\n              color={currentTheme === item ? 'primary' : 'text'}\n              emphasis=\"high\"\n              key={item}\n              onPress={themePress(item)}\n              title={item}\n            />\n          ))}\n        </View>\n        <Text title={`elevation: ${elevation}`} />\n        <Slider\n          maximumValue={10}\n          minimumTrackTintColor={color.primary}\n          minimumValue={0}\n          onValueChange={handleSlider}\n          step={1}\n          value={elevation}\n        />\n      </View>\n      <Text center title=\"Weekly Stats\" type=\"h2\" />\n      <Masonry data={cards} numColumns={columns} renderItem={renderItem} />\n    </Screen>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {ScrollView, View} from 'react-native';\nimport {Button, Screen, Text} from '../../../components';\nimport {useNav} from '../../../hooks';\nimport {ColorTheme, changeTheme, colorThemes} from '../../../models';\nimport {Theme, useRootDispatch, useRootSelector} from '../../../utils';\n\nexport const Colors = memo(function DebugColors() {\n  const nav = useNav();\n  const navBack = useCallback(nav('landing'), [nav]);\n  const dispatch = useRootDispatch();\n  const currentTheme = useRootSelector((state) => state.theme.currentColor);\n  const themePress = (theme: ColorTheme) => () => dispatch(changeTheme(theme));\n  // text: high 87% medium 60% disabled 38%\n  // icon: active 100% inactive 60% disabled 38%\n\n  return (\n    <Screen gutter onLeftPress={navBack} title=\"Colors\">\n      <Text\n        center\n        style={{paddingBottom: Theme.padding.p08}}\n        title=\"Theme\"\n        type=\"h4\"\n      />\n      <View\n        style={{\n          justifyContent: 'center',\n          flexDirection: 'row',\n        }}>\n        {colorThemes.map((item) => (\n          <Button\n            color={currentTheme === item ? 'success' : 'text'}\n            key={item}\n            onPress={themePress(item)}\n            title={item}\n          />\n        ))}\n      </View>\n      <ScrollView>\n        <Text\n          center\n          style={{padding: Theme.padding.p08}}\n          title=\"Buttons\"\n          type=\"h4\"\n        />\n        <View style={{flexDirection: 'row'}}>\n          <View style={{flex: 1}}>\n            <Button color=\"primary\" emphasis=\"high\" title=\"primary\" />\n            <Button color=\"secondary\" emphasis=\"high\" title=\"secondary\" />\n            <Button color=\"success\" emphasis=\"high\" title=\"success\" />\n            <Button color=\"danger\" emphasis=\"high\" title=\"danger\" />\n            <Button color=\"warning\" emphasis=\"high\" title=\"warning\" />\n            <Button color=\"info\" emphasis=\"high\" title=\"info\" />\n            <Button color=\"light\" emphasis=\"high\" title=\"light\" />\n            <Button color=\"dark\" emphasis=\"high\" title=\"dark\" />\n            <Button color=\"text\" emphasis=\"high\" title=\"text\" />\n            <Button emphasis=\"high\" title=\"default\" />\n            <Button disable emphasis=\"high\" title=\"disable\" />\n            <Button\n              dropShadow\n              elevation={10}\n              emphasis=\"high\"\n              title=\"drop shadow\"\n            />\n          </View>\n          <View style={{flex: 1}}>\n            <Button color=\"primary\" emphasis=\"medium\" title=\"primary\" />\n            <Button color=\"secondary\" emphasis=\"medium\" title=\"secondary\" />\n            <Button color=\"success\" emphasis=\"medium\" title=\"success\" />\n            <Button color=\"danger\" emphasis=\"medium\" title=\"danger\" />\n            <Button color=\"warning\" emphasis=\"medium\" title=\"warning\" />\n            <Button color=\"info\" emphasis=\"medium\" title=\"info\" />\n            <Button color=\"light\" emphasis=\"medium\" title=\"light\" />\n            <Button color=\"dark\" emphasis=\"medium\" title=\"dark\" />\n            <Button color=\"text\" emphasis=\"medium\" title=\"text\" />\n            <Button emphasis=\"medium\" title=\"default\" />\n            <Button disable emphasis=\"medium\" title=\"disable\" />\n            <Button\n              dropShadow\n              elevation={10}\n              emphasis=\"medium\"\n              title=\"drop shadow\"\n            />\n          </View>\n          <View style={{flex: 1}}>\n            <Button color=\"primary\" emphasis=\"low\" title=\"primary\" />\n            <Button color=\"secondary\" emphasis=\"low\" title=\"secondary\" />\n            <Button color=\"success\" emphasis=\"low\" title=\"success\" />\n            <Button color=\"danger\" emphasis=\"low\" title=\"danger\" />\n            <Button color=\"warning\" emphasis=\"low\" title=\"warning\" />\n            <Button color=\"info\" emphasis=\"low\" title=\"info\" />\n            <Button color=\"light\" emphasis=\"low\" title=\"light\" />\n            <Button color=\"dark\" emphasis=\"low\" title=\"dark\" />\n            <Button color=\"text\" emphasis=\"low\" title=\"text\" />\n            <Button emphasis=\"low\" title=\"default\" />\n            <Button disable emphasis=\"low\" title=\"disable\" />\n            <Button\n              dropShadow\n              elevation={10}\n              emphasis=\"low\"\n              title=\"drop shadow\"\n            />\n          </View>\n        </View>\n\n        <Text\n          center\n          style={{padding: Theme.padding.p08}}\n          title=\"Fonts\"\n          type=\"h4\"\n        />\n\n        <View style={{flexDirection: 'row'}}>\n          <View style={{flex: 1}}>\n            <Text center title=\"normal\" />\n            <Text title=\"h1\" type=\"h1\" />\n            <Text title=\"h2\" type=\"h2\" />\n            <Text title=\"h3\" type=\"h3\" />\n            <Text title=\"h4\" type=\"h4\" />\n            <Text title=\"h5\" type=\"h5\" />\n            <Text title=\"h6\" type=\"h6\" />\n            <Text title=\"subtitle1\" type=\"subtitle1\" />\n            <Text title=\"subtitle2\" type=\"subtitle2\" />\n            <Text title=\"body1\" type=\"body1\" />\n            <Text title=\"body2\" type=\"body2\" />\n            <Text title=\"overline\" type=\"overline\" />\n            <Text title=\"caption\" type=\"caption\" />\n            <Text title=\"button\" type=\"button\" />\n            <Text title=\"default\" />\n          </View>\n          <View style={{flex: 1}}>\n            <Text center title=\"high\" />\n            <Text emphasis=\"high\" title=\"h1\" type=\"h1\" />\n            <Text emphasis=\"high\" title=\"h2\" type=\"h2\" />\n            <Text emphasis=\"high\" title=\"h3\" type=\"h3\" />\n            <Text emphasis=\"high\" title=\"h4\" type=\"h4\" />\n            <Text emphasis=\"high\" title=\"h5\" type=\"h5\" />\n            <Text emphasis=\"high\" title=\"h6\" type=\"h6\" />\n            <Text emphasis=\"high\" title=\"subtitle1\" type=\"subtitle1\" />\n            <Text emphasis=\"high\" title=\"subtitle2\" type=\"subtitle2\" />\n            <Text emphasis=\"high\" title=\"body1\" type=\"body1\" />\n            <Text emphasis=\"high\" title=\"body2\" type=\"body2\" />\n            <Text emphasis=\"high\" title=\"overline\" type=\"overline\" />\n            <Text emphasis=\"high\" title=\"caption\" type=\"caption\" />\n            <Text emphasis=\"high\" title=\"button\" type=\"button\" />\n            <Text emphasis=\"high\" title=\"default\" />\n          </View>\n          <View style={{flex: 1}}>\n            <Text center title=\"medium\" />\n            <Text emphasis=\"medium\" title=\"h1\" type=\"h1\" />\n            <Text emphasis=\"medium\" title=\"h2\" type=\"h2\" />\n            <Text emphasis=\"medium\" title=\"h3\" type=\"h3\" />\n            <Text emphasis=\"medium\" title=\"h4\" type=\"h4\" />\n            <Text emphasis=\"medium\" title=\"h5\" type=\"h5\" />\n            <Text emphasis=\"medium\" title=\"h6\" type=\"h6\" />\n            <Text emphasis=\"medium\" title=\"subtitle1\" type=\"subtitle1\" />\n            <Text emphasis=\"medium\" title=\"subtitle2\" type=\"subtitle2\" />\n            <Text emphasis=\"medium\" title=\"body1\" type=\"body1\" />\n            <Text emphasis=\"medium\" title=\"body2\" type=\"body2\" />\n            <Text emphasis=\"medium\" title=\"overline\" type=\"overline\" />\n            <Text emphasis=\"medium\" title=\"caption\" type=\"caption\" />\n            <Text emphasis=\"medium\" title=\"button\" type=\"button\" />\n            <Text emphasis=\"medium\" title=\"default\" />\n          </View>\n          <View style={{flex: 1}}>\n            <Text center title=\"low\" />\n            <Text emphasis=\"low\" title=\"h1\" type=\"h1\" />\n            <Text emphasis=\"low\" title=\"h2\" type=\"h2\" />\n            <Text emphasis=\"low\" title=\"h3\" type=\"h3\" />\n            <Text emphasis=\"low\" title=\"h4\" type=\"h4\" />\n            <Text emphasis=\"low\" title=\"h5\" type=\"h5\" />\n            <Text emphasis=\"low\" title=\"h6\" type=\"h6\" />\n            <Text emphasis=\"low\" title=\"subtitle1\" type=\"subtitle1\" />\n            <Text emphasis=\"low\" title=\"subtitle2\" type=\"subtitle2\" />\n            <Text emphasis=\"low\" title=\"body1\" type=\"body1\" />\n            <Text emphasis=\"low\" title=\"body2\" type=\"body2\" />\n            <Text emphasis=\"low\" title=\"overline\" type=\"overline\" />\n            <Text emphasis=\"low\" title=\"caption\" type=\"caption\" />\n            <Text emphasis=\"low\" title=\"button\" type=\"button\" />\n            <Text emphasis=\"low\" title=\"default\" />\n          </View>\n        </View>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import React, {memo, useCallback, useRef, useState} from 'react';\nimport {\n  Animated,\n  Image,\n  ImageSourcePropType,\n  PanResponder,\n  View,\n} from 'react-native';\nimport dayjs, {Dayjs} from 'dayjs';\nimport {v4} from 'uuid';\nimport {Card, Icon, Screen, Text, TouchableOpacity} from '../../../components';\nimport {useColor, useDropShadow, useNativeDriver, useNav} from '../../../hooks';\nimport {getWidth} from '../../../models';\nimport {Theme, useRootSelector} from '../../../utils';\n\ninterface SwipeCardProps extends SwipeItem {\n  index: number;\n  height: number;\n  onSwipeComplete(): void;\n  onSwipePercentChange(percent: number): void;\n}\n\nexport const formatRelativeDate = (date: Dayjs): string => {\n  const now = dayjs();\n  const years = now.diff(date, 'year');\n  const weeks = now.diff(date, 'week');\n  const days = now.diff(date, 'day');\n  const hours = now.diff(date, 'hour');\n  const minutes = now.diff(date, 'minute');\n  return years\n    ? `${years}y`\n    : weeks\n    ? `${weeks}w`\n    : days\n    ? `${days}d`\n    : hours\n    ? `${hours}h`\n    : minutes\n    ? `${minutes}m`\n    : '';\n};\n\nconst SwipeCard = memo(function SwipeCard({\n  image,\n  height,\n  icon,\n  title,\n  date,\n  body,\n  button,\n  onSwipeComplete,\n  onSwipePercentChange,\n}: SwipeCardProps) {\n  const cardWidth = useRef(0);\n  const color = useColor();\n  const useDriver = useNativeDriver();\n  const width = useRootSelector(getWidth);\n  const dropShadow = useDropShadow();\n  const imageHeight = height / 1.5;\n  const swipeThreshold = width / 3;\n  const touchThreshold = 50;\n  const position = new Animated.ValueXY();\n\n  const onLayout = useCallback(\n    (event) => {\n      cardWidth.current = event.nativeEvent.layout.width;\n    },\n    [cardWidth],\n  );\n\n  const setCardWidth = useCallback(\n    (dx: number) => {\n      onSwipePercentChange(1 - dx / cardWidth.current);\n    },\n    [cardWidth, onSwipePercentChange],\n  );\n\n  const panResponder = PanResponder.create({\n    onStartShouldSetPanResponder: () => true,\n    onMoveShouldSetPanResponder: (_, gesture) =>\n      Math.abs(gesture.dx) > touchThreshold ||\n      Math.abs(gesture.dy) > touchThreshold,\n    onPanResponderMove: (_, gesture) => {\n      setCardWidth(gesture.dx);\n      position.setValue({x: gesture.dx, y: gesture.dy});\n    },\n    onPanResponderRelease: (_, gesture) => {\n      const x =\n        gesture.dx > swipeThreshold\n          ? width\n          : gesture.dx < -swipeThreshold\n          ? -width\n          : 0;\n      Animated.spring(position, {\n        toValue: {x, y: 0},\n        useNativeDriver: useDriver,\n      }).start();\n    },\n  });\n\n  return (\n    <Animated.View\n      onLayout={onLayout}\n      {...panResponder.panHandlers}\n      style={{\n        position: 'absolute',\n        width: '100%',\n        left: position.x,\n        height: height,\n        backgroundColor: color.background,\n        borderRadius: Theme.padding.p01,\n        borderColor: color.brand,\n        ...dropShadow(4),\n      }}>\n      <TouchableOpacity onPress={onSwipeComplete} style={{flex: 1}}>\n        <View style={{flex: 1, flexDirection: 'row'}}>\n          {image && (\n            <Image\n              source={image}\n              style={{\n                height: imageHeight,\n                width: imageHeight,\n                alignSelf: 'center',\n              }}\n            />\n          )}\n          <View style={{flex: 1, padding: Theme.padding.p02}}>\n            <View\n              style={{\n                flexDirection: 'row',\n                alignItems: 'center',\n              }}>\n              <Icon name={icon} size={15} />\n              <Text\n                bold\n                style={{paddingHorizontal: Theme.padding.p01}}\n                title={title}\n                type=\"overline\"\n              />\n              <Text title={formatRelativeDate(date)} />\n            </View>\n            <Text\n              ellipsizeMode=\"tail\"\n              numberOfLines={2}\n              style={{flex: 1, paddingTop: Theme.padding.p02}}\n              title={body}\n            />\n            <Text style={{color: color.primary}} title={button.toUpperCase()} />\n          </View>\n        </View>\n      </TouchableOpacity>\n    </Animated.View>\n  );\n});\n\ninterface SwipeItem {\n  id: string;\n  image: ImageSourcePropType | null;\n  title: string;\n  icon: string;\n  date: Dayjs;\n  body: string;\n  button: string;\n  onPress(): void;\n}\n\nconst initialItems: SwipeItem[] = [\n  {\n    id: v4(),\n    image: null,\n    title: 'Price Movement',\n    icon: 'arrow-bottom-right',\n    date: dayjs().subtract(5, 'minute'),\n    body: 'BABA is down 4.41% to $204.433.',\n    button: 'View BABA',\n    onPress: () => undefined,\n  },\n  {\n    id: v4(),\n    image: null,\n    title: 'Marketwatch',\n    icon: 'file-document-box-outline',\n    date: dayjs().subtract(11, 'hour'),\n    body:\n      'Disney heiress Abigail Disney and other superrich American demand the 1% pay higher taxes than other Americans.',\n    button: 'View Article',\n    onPress: () => undefined,\n  },\n  {\n    id: v4(),\n    image: null,\n    title: 'Reuters',\n    icon: 'book',\n    date: dayjs().subtract(1, 'day'),\n    body:\n      \"Amazon files motion to halt Microsoft's work on Pentagon's JEDI contract\",\n    button: 'View Article',\n    onPress: () => undefined,\n  },\n  {\n    id: v4(),\n    image: require('./placeholder.png'),\n    title: 'Congratulations',\n    icon: 'star-outline',\n    date: dayjs(),\n    body: \"You're invited! Start trading Bitcoin & Ethereum\",\n    button: 'Get Started',\n    onPress: () => undefined,\n  },\n  {\n    id: v4(),\n    image: require('./placeholder.png'),\n    title: 'Enjoying robinhood?',\n    icon: 'star-outline',\n    date: dayjs(),\n    body:\n      \"Invite your friends! When they sign up, you'll both get a free stock\",\n    button: 'Invite friends',\n    onPress: () => undefined,\n  },\n  {\n    id: v4(),\n    image: null,\n    title: 'Introducing cards',\n    icon: 'lightbulb-outline',\n    date: dayjs(),\n    body:\n      'Swipe through cards to see your personalized notifications and news stories.',\n    button: 'Swipe to dismiss',\n    onPress: () => undefined, // complete\n  },\n];\n\ninterface BadgeProps {\n  count: number;\n  percent: number;\n}\n\nconst Badge = memo(function Badge({count, percent}: BadgeProps) {\n  const size = Theme.padding.p06;\n  const badgeSize = size * percent;\n  const color = useColor();\n  return (\n    <View\n      style={{\n        position: 'absolute',\n        right: 0,\n        width: size,\n        height: size,\n        margin: Theme.padding.p01,\n        zIndex: count * 10,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}>\n      <View\n        style={{\n          width: badgeSize,\n          height: badgeSize,\n          borderRadius: size,\n          backgroundColor: color.danger,\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}>\n        <Text\n          adjustsFontSizeToFit\n          style={{color: color.background}}\n          title={`${count}`}\n        />\n      </View>\n    </View>\n  );\n});\n\ninterface SwipeCardsProps {\n  height?: number;\n  items: SwipeItem[];\n}\n\nconst SwipeCards = memo(function SwipeCardList({\n  height = 100,\n  items,\n}: SwipeCardsProps) {\n  const [feed, setFeed] = useState({\n    items,\n    percent: 1,\n  });\n\n  const onSwipeComplete = useCallback(() => {\n    setFeed((state) => ({\n      ...state,\n      percent: 1,\n      items: state.items.filter((_, i) => i !== state.items.length - 1),\n    }));\n  }, []);\n\n  const onSwipePercentChange = useCallback((percent: number) => {\n    setFeed((state) => ({\n      ...state,\n      percent,\n    }));\n  }, []);\n\n  return !feed.items.length ? null : (\n    <View style={{height}}>\n      {feed.items.map((item, index) => (\n        <SwipeCard\n          {...item}\n          height={height}\n          index={index}\n          key={item.id}\n          onSwipeComplete={onSwipeComplete}\n          onSwipePercentChange={onSwipePercentChange}\n        />\n      ))}\n      <Badge count={feed.items.length} percent={feed.percent} />\n    </View>\n  );\n});\n\nconst ImagePlaceholder = memo(function ImagePlaceholder() {\n  return (\n    <Card noPadding>\n      <Image\n        source={require('./placeholder.png')}\n        style={{width: '100%', height: 100, borderRadius: 4}}\n      />\n    </Card>\n  );\n});\n\nexport const SwipeFeed = memo(function SwipeFeed() {\n  const nav = useNav();\n  const navBack = useCallback(nav('landing'), [nav]);\n  return (\n    <Screen onLeftPress={navBack} title=\"Swipe Feed\">\n      <View style={{padding: Theme.padding.p04}}>\n        <ImagePlaceholder />\n        <ImagePlaceholder />\n        <SwipeCards items={initialItems} />\n        <ImagePlaceholder />\n        <ImagePlaceholder />\n        <ImagePlaceholder />\n        <ImagePlaceholder />\n        <ImagePlaceholder />\n        <ImagePlaceholder />\n      </View>\n    </Screen>\n  );\n});\n","const operations = [\n  [0, 1],\n  [0, -1],\n  [1, -1],\n  [-1, 1],\n  [1, 1],\n  [-1, -1],\n  [1, 0],\n  [-1, 0],\n];\n\ntype BoardItem = 0 | 1;\n\nexport type Board = Array<Array<BoardItem>>;\n\nexport const generateBoard = (size: number, random = 0): Board => {\n  const board: Board = [];\n  for (let i = 0; i < size; i++) {\n    board[i] = [];\n    for (let j = 0; j < size; j++) {\n      board[i][j] = Math.random() > random ? 0 : 1;\n    }\n  }\n  return board;\n};\n\n// TODO: memoize\nexport const determineBoardItem = (\n  board: Board,\n  i: number,\n  j: number,\n): BoardItem => {\n  let neighbors = 0;\n  const item = board[i][j];\n  const length = board.length;\n  operations.forEach(([x, y]) => {\n    const newI = i + x;\n    const newK = j + y;\n    if (newI >= 0 && newI < length && newK >= 0 && newK < length) {\n      neighbors += board[newI][newK];\n    }\n  });\n\n  return neighbors < 2 || neighbors > 3\n    ? 0\n    : item === 0 && neighbors === 3\n    ? 1\n    : item;\n};\n\nexport const swapBoardItem = (\n  item: BoardItem,\n  x: number,\n  y: number,\n  i: number,\n  j: number,\n): BoardItem => {\n  return i === x && y === j ? (item ? 0 : 1) : item;\n};\n","import React, {memo} from 'react';\nimport {useColor} from '../../../hooks';\nimport {TouchableOpacity} from '../../../components';\n\ninterface CellProps {\n  x: number;\n  y: number;\n  row: number;\n  size: number;\n  onItemPress(x: number, y: number): () => void;\n}\n\nexport const Cell = memo(function Cell({\n  x,\n  y,\n  row,\n  size,\n  onItemPress,\n}: CellProps) {\n  const color = useColor();\n  return (\n    <TouchableOpacity\n      key={`${x}-${y}`}\n      onPress={onItemPress(x, y)}\n      style={{\n        height: size,\n        width: size,\n        backgroundColor: row ? color.primary : color.surface,\n        borderWidth: 1,\n        borderColor: color.light,\n      }}\n    />\n  );\n});\n","import React, {memo, useCallback, useEffect, useRef, useState} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {Button, Screen, Slider, Text} from '../../../components';\nimport {useColor, useNav} from '../../../hooks';\nimport {useRootSelector} from '../../../utils';\nimport {getSmallestDimension} from '../../../models';\nimport {determineBoardItem, generateBoard, swapBoardItem} from './utils';\nimport {Cell} from './Cell';\n\nexport const GameOfLife = memo(function PlaygroundGameOfLife() {\n  const color = useColor();\n  const [form, setForm] = useState({\n    run: false,\n    delay: 16,\n    count: 20,\n  });\n  const [loading, setLoading] = useState(true);\n  const [board, setBoard] = useState(generateBoard(form.count, 0.5));\n  const runRef = useRef(form.run);\n  const delayRef = useRef(form.delay);\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const smallest = useRootSelector(getSmallestDimension);\n  const size = smallest / form.count;\n  const nav = useNav();\n  const styles = StyleSheet.create({\n    container: {\n      backgroundColor: color.background,\n    },\n  });\n\n  const onClear = useCallback(() => setBoard(generateBoard(form.count)), [\n    form.count,\n  ]);\n\n  const onItemPress = useCallback(\n    (x: number, y: number) => () => {\n      setBoard((state) =>\n        state.map((rows, i) =>\n          rows.map((item, j) => swapBoardItem(item, x, y, i, j)),\n        ),\n      );\n    },\n    [],\n  );\n\n  const onRandom = useCallback(() => setBoard(generateBoard(form.count, 0.5)), [\n    form.count,\n  ]);\n\n  const loop = useCallback(() => {\n    if (!runRef.current) {\n      return;\n    }\n\n    setBoard((state) =>\n      state.map((rows, i) =>\n        rows.map((_, j) => determineBoardItem(state, i, j)),\n      ),\n    );\n\n    timeoutRef.current = setTimeout(loop, delayRef.current);\n  }, []);\n\n  const onStart = useCallback(() => {\n    setForm((state) => ({...state, run: !state.run}));\n    runRef.current = !runRef.current;\n    loop();\n  }, [loop]);\n\n  const onCountSlide = useCallback((value: number) => {\n    setForm((state) => ({...state, count: value}));\n    setBoard(generateBoard(value, 0.5));\n  }, []);\n\n  const onDelaySlide = useCallback((value: number) => {\n    setForm((state) => ({...state, delay: value}));\n    delayRef.current = value;\n  }, []);\n\n  useEffect(() => {\n    setLoading(false);\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [timeoutRef]);\n  const navBack = useCallback(nav('landing'), [nav]);\n\n  return (\n    <Screen onLeftPress={navBack} title=\"Game of life\">\n      {loading ? (\n        <Text emphasis=\"medium\" title=\"loading...\" type=\"h5\" />\n      ) : (\n        <>\n          <View style={{flexDirection: 'row'}}>\n            <Text\n              style={{alignSelf: 'center'}}\n              title={`count: ${form.count}`}\n              type=\"h4\"\n            />\n            <Slider\n              maximumValue={100}\n              minimumValue={1}\n              onSlidingComplete={onCountSlide}\n              step={1}\n              style={{flex: 1}}\n              value={10}\n            />\n          </View>\n          <View style={{flexDirection: 'row'}}>\n            <Text\n              style={{alignSelf: 'center'}}\n              title={`delay: ${Math.floor(form.delay)}`}\n              type=\"h4\"\n            />\n            <Slider\n              maximumValue={100}\n              minimumValue={1}\n              onSlidingComplete={onDelaySlide}\n              step={1}\n              style={{flex: 1}}\n              value={10}\n            />\n          </View>\n          <View style={styles.container}>\n            <View style={{flexDirection: 'row', justifyContent: 'center'}}>\n              <Button onPress={onStart} title={form.run ? 'stop' : 'start'} />\n              <Button onPress={onRandom} title=\"random\" />\n              <Button onPress={onClear} title=\"clear\" />\n            </View>\n            {board.map((rows, x) => (\n              <View\n                key={`${x}`}\n                style={{flexDirection: 'row', justifyContent: 'center'}}>\n                {rows.map((row, y) => (\n                  <Cell\n                    key={`${x}-${y}`}\n                    onItemPress={onItemPress}\n                    row={row}\n                    size={size}\n                    x={x}\n                    y={y}\n                  />\n                ))}\n              </View>\n            ))}\n          </View>\n        </>\n      )}\n    </Screen>\n  );\n});\n","import {FlatList} from 'react-native';\nimport React, {memo, useCallback} from 'react';\nimport {Text} from '../../../components';\nimport {Reminder} from '.';\n\ninterface Props {\n  reminders: Reminder[];\n}\n\nexport const Reminders = memo(function Reminders({reminders}: Props) {\n  const renderItem = useCallback(\n    ({item, index}) => (\n      <Text\n        title={item.format}\n        type={index === reminders.length - 1 ? 'button' : undefined}\n      />\n    ),\n    [reminders],\n  );\n\n  const keyExtractor = useCallback((item: Reminder) => item.id, []);\n\n  return (\n    <FlatList\n      data={reminders}\n      inverted\n      keyExtractor={keyExtractor}\n      renderItem={renderItem}\n      style={{flex: 1}}\n    />\n  );\n});\n","import React, {memo} from 'react';\nimport {StyleProp, StyleSheet, View, ViewStyle} from 'react-native';\nimport {Icon, Text, TouchableOpacity} from '../../../components';\nimport {Theme} from '../../../utils';\nimport {useColor} from '../../../hooks';\n\ninterface Props {\n  title: string;\n  description?: string;\n  icon?: string;\n  onPress: () => void;\n  style?: StyleProp<ViewStyle>;\n  marginBottom?: boolean;\n  active?: boolean;\n  hidden?: boolean;\n}\nexport const Item = memo(function ReminderItem({\n  title,\n  description = '',\n  onPress,\n  icon,\n  style,\n  hidden,\n  active,\n  marginBottom,\n}: Props) {\n  const color = useColor();\n  const styles = StyleSheet.create({\n    button: {\n      borderColor: color.secondary,\n      borderRadius: Theme.padding.p01,\n      borderWidth: 1,\n      flexDirection: 'row',\n      height: Theme.padding.p13,\n      justifyContent: 'space-between',\n      marginBottom: marginBottom ? Theme.padding.p02 : 0,\n    },\n    container: {\n      flex: 1,\n      flexDirection: 'row',\n\n      paddingHorizontal: Theme.padding.p02,\n    },\n    icon: {\n      justifyContent: 'center',\n    },\n    subtitle: {\n      paddingLeft: 1,\n      paddingTop: Theme.padding.p01,\n    },\n    textContainer: {\n      flex: 1,\n      justifyContent: 'center',\n    },\n    title: {\n      color: active ? color.primary : color.text,\n    },\n  });\n\n  return hidden ? null : (\n    <TouchableOpacity\n      key={title}\n      onPress={onPress}\n      style={[styles.button, style]}>\n      <View style={styles.container}>\n        <View style={styles.textContainer}>\n          <Text style={styles.title} title={title} type=\"body1\" />\n          {description.length > 0 && (\n            <Text style={styles.subtitle} title={description} type=\"caption\" />\n          )}\n        </View>\n        {icon && (\n          <Icon name={icon} size={Theme.padding.p05} style={styles.icon} />\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n});\n","import dayjs, {Dayjs} from 'dayjs';\nimport React, {memo} from 'react';\nimport {Item} from './Item';\n\nconst daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst generateButtons = () => {\n  const laterToday = dayjs().add(3, 'hour').add(30, 'minute').set('minute', 0);\n\n  const evening = dayjs().set('hour', 18).set('minute', 0);\n\n  const tomorrow = dayjs().add(1, 'day').set('hour', 6).set('minute', 0);\n\n  const nextWeek = dayjs()\n    .add(1, 'week')\n    .set('hour', 6)\n    .set('minute', 0)\n    .set('day', 1);\n\n  const nextMonth = dayjs().add(2, 'month').set('hour', 6).set('minute', 0);\n\n  const yesterday = dayjs().subtract(1, 'day');\n\n  return [\n    {\n      title: 'Later today',\n      description: laterToday.format('hh:mm A'),\n      value: laterToday,\n      visible: dayjs().set('hour', 18),\n    },\n    {\n      title: 'This Evening',\n      description: evening.format('hh:mm A'),\n      value: evening,\n      visible: dayjs().set('hour', 18),\n    },\n    {\n      title: 'Tomorrow',\n      description: `${daysOfWeek[tomorrow.day()]} ${tomorrow.format(\n        'hh:mm A',\n      )}`,\n      value: tomorrow,\n    },\n    {\n      title: 'Next Week',\n      description: `${nextWeek.format('MMM DD, hh:mm A')}`,\n      value: nextWeek,\n    },\n    {\n      title: 'Someday',\n      description: '',\n      value: nextMonth,\n    },\n    {\n      title: 'Custom',\n      description: '',\n      value: yesterday,\n    },\n  ];\n};\n\ninterface Props {\n  onPress: (value: Dayjs) => () => void;\n}\n\nexport const OneTime = memo(function OneTime({onPress}: Props) {\n  const buttons = generateButtons();\n  return (\n    <>\n      {buttons.map((button, index) => {\n        const hidden =\n          button.visible && dayjs().valueOf() > button.visible.valueOf();\n        return (\n          <Item\n            description={button.description}\n            hidden={hidden}\n            icon=\"alarm\"\n            key={button.title}\n            marginBottom={index !== buttons.length - 1}\n            onPress={onPress(button.value)}\n            title={button.title}\n          />\n        );\n      })}\n    </>\n  );\n});\n","import React, {memo} from 'react';\nimport {View} from 'react-native';\nimport {Item} from './Item';\n\ninterface Props {\n  buttons: string[];\n  horizontal?: boolean;\n  value: string;\n  onChange: (id: string) => () => void;\n}\n\nexport const Radio = memo(function Radio({\n  buttons,\n  value,\n  onChange,\n  horizontal,\n}: Props) {\n  return (\n    <View\n      style={{\n        justifyContent: 'center',\n        flexDirection: horizontal ? 'row' : 'column',\n      }}>\n      {buttons.map((button, index) => (\n        <Item\n          active={button === value}\n          key={button}\n          marginBottom={index !== buttons.length - 1}\n          onPress={onChange(button)}\n          title={button}\n        />\n      ))}\n    </View>\n  );\n});\n","import React, {memo, useCallback} from 'react';\n\nimport {v4} from 'uuid';\nimport {Item} from './Item';\n\ninterface LocationItem {\n  id: string;\n  title: string;\n  subtitle?: string;\n}\n\nexport const Location = memo(function Location() {\n  const locations: LocationItem[] = [\n    {\n      id: v4(),\n      title: 'Home',\n      subtitle: 'Tap to add',\n    },\n    {\n      id: v4(),\n      title: 'Work',\n      subtitle: 'Tap to add',\n    },\n    {\n      id: v4(),\n      title: 'Gym',\n      subtitle: 'Tap to add',\n    },\n    {\n      id: v4(),\n      title: 'Add a new location',\n    },\n  ];\n\n  const onPress = useCallback(() => undefined, []);\n\n  return (\n    <>\n      {locations.map((location, index) => (\n        <Item\n          description={location.subtitle}\n          key={location.id}\n          marginBottom={index !== locations.length - 1}\n          onPress={onPress}\n          title={location.title}\n        />\n      ))}\n    </>\n  );\n});\n","import React, {memo, useState} from 'react';\nimport {Item} from './Item';\n\ntype RepeatType = 'Daily' | 'Weekly' | 'Monthly' | 'Yearly';\n\nexport const Repeat = memo(function Repeat() {\n  const [active, setActive] = useState<RepeatType>('Daily');\n  const onPress = (type: RepeatType) => () => setActive(type);\n\n  const items: RepeatType[] = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\n  return (\n    <>\n      {items.map((item, index) => {\n        return (\n          <Item\n            active={item === active}\n            key={item}\n            marginBottom={index !== items.length - 1}\n            onPress={onPress(item)}\n            title={item}\n          />\n        );\n      })}\n    </>\n  );\n});\n","import React, {memo, useCallback, useState} from 'react';\nimport {Dayjs} from 'dayjs';\nimport {StyleSheet} from 'react-native';\nimport {Button, Modal, Text} from '../../../components';\nimport {Theme} from '../../../utils';\nimport {OneTime} from './OneTime';\nimport {Radio} from './Radio';\nimport {Location} from './Location';\nimport {Repeat} from './Repeat';\n\ntype ReminderType = 'One time' | 'Repeat' | 'Location';\nconst reminderTypes: ReminderType[] = ['One time', 'Repeat', 'Location'];\n\ninterface Props {\n  onBackgroundPress: () => void;\n  onOneTimePress: (date: Dayjs) => () => void; // TODO: handle models better so don't have to pass up to parent\n  onLocationPress: (id: string) => () => void;\n}\n\nexport const CreateReminderModal = memo(function CreateReminderModal({\n  onBackgroundPress,\n  onOneTimePress,\n}: Props) {\n  const [state, setState] = useState<ReminderType>('One time');\n  const styles = StyleSheet.create({\n    section: {\n      paddingBottom: Theme.padding.p02,\n      paddingTop: Theme.padding.p06,\n    },\n    submit: {\n      marginTop: Theme.padding.p06,\n    },\n  });\n\n  const handleReminderTypePress = useCallback(\n    (type) => () => setState(type),\n    [],\n  );\n\n  return (\n    <Modal onBackgroundPress={onBackgroundPress}>\n      <Text title=\"Create Reminder\" type=\"h2\" />\n      <Text style={styles.section} title=\"Reminder type\" type=\"caption\" />\n      <Radio\n        buttons={reminderTypes}\n        onChange={handleReminderTypePress}\n        value={state}\n      />\n      <Text style={styles.section} title=\"Reminder time\" type=\"caption\" />\n      {state === 'One time' ? (\n        <OneTime onPress={onOneTimePress} />\n      ) : state === 'Repeat' ? (\n        <Repeat />\n      ) : state === 'Location' ? (\n        <Location />\n      ) : (\n        <Text title=\"invalid form type\" />\n      )}\n      <Button\n        buttonStyle={styles.submit}\n        color=\"primary\"\n        disable\n        emphasis=\"high\"\n        title=\"submit\"\n      />\n    </Modal>\n  );\n});\n","import React, {memo, useCallback, useState} from 'react';\nimport dayjs, {Dayjs} from 'dayjs';\nimport {v4} from 'uuid';\nimport {RateApp} from '../../../features';\nimport {Button, Modal, Screen, Text} from '../../../components';\nimport {useNav} from '../../../hooks';\nimport {Reminders} from './Reminders';\nimport {CreateReminderModal} from './CreateReminderModal';\n\ntype ReminderType = 'one time' | 'repeat' | 'location';\nexport type Reminder = {\n  id: string;\n  date: number;\n  format: string;\n};\ntype State = {\n  type: ReminderType;\n  reminders: Reminder[];\n  modals: {\n    customDate: boolean;\n    createReminder: boolean;\n    location: boolean;\n  };\n  selected: {\n    location: string | undefined;\n  };\n};\n\nexport const ReminderExample = memo(function PlaygroundReminder() {\n  const nav = useNav();\n  const [form, setForm] = useState<State>({\n    type: 'one time',\n    reminders: [],\n    modals: {\n      customDate: false,\n      createReminder: false,\n      location: false,\n    },\n    selected: {\n      location: undefined,\n    },\n  });\n\n  const handleOneTimeReminder = useCallback(\n    (date: Dayjs) => () => {\n      if (date.isBefore(dayjs())) {\n        setForm((prev) => ({\n          ...prev,\n          modals: {...prev.modals, customDate: true},\n        }));\n        return;\n      }\n      setForm((prev) => ({\n        ...prev,\n        modals: {\n          ...prev.modals,\n          createReminder: false,\n        },\n        reminders: [\n          ...prev.reminders,\n          {\n            id: v4(),\n            date: date.valueOf(),\n            format: date.format('MMM DD, YYYY hh:mm A'),\n          },\n        ],\n      }));\n    },\n    [],\n  );\n\n  const handleCustomDateClose = useCallback(() => {\n    setForm((prev) => ({\n      ...prev,\n      modals: {...prev.modals, customDate: false},\n    }));\n  }, []);\n\n  const handleCreateReminder = useCallback(() => {\n    setForm((prev) => ({\n      ...prev,\n      modals: {...prev.modals, createReminder: true},\n    }));\n  }, []);\n\n  const handleCreateReminderClose = useCallback(() => {\n    setForm((prev) => ({\n      ...prev,\n      modals: {...prev.modals, createReminder: false},\n    }));\n  }, []);\n\n  const handleLocation = useCallback(\n    (id: string) => () => {\n      setForm((prev) => ({\n        ...prev,\n        modals: {...prev.modals, location: true},\n        selected: {location: id},\n      }));\n    },\n    [],\n  );\n\n  const handleLocationClose = useCallback(() => {\n    setForm((prev) => ({\n      ...prev,\n      modals: {...prev.modals, location: false},\n    }));\n  }, []);\n\n  const [showRate, setShowRate] = useState(false);\n\n  const handleRate = (value: boolean) => () => setShowRate(value);\n  const navBack = useCallback(nav('landing'), [nav]);\n\n  return (\n    <>\n      <Screen onLeftPress={navBack} title=\"Reminder\">\n        <Button onPress={handleCreateReminder} title=\"create reminder\" />\n        <Text center title=\"reminders\" type=\"h2\" />\n        <Reminders reminders={form.reminders} />\n        <Button onPress={handleRate(true)} title=\"press me\" />\n      </Screen>\n      {showRate && <RateApp onComplete={handleRate(false)} />}\n      {form.modals.createReminder && (\n        <CreateReminderModal\n          onBackgroundPress={handleCreateReminderClose}\n          onLocationPress={handleLocation}\n          onOneTimePress={handleOneTimeReminder}\n        />\n      )}\n      {form.modals.customDate && (\n        <Modal onBackgroundPress={handleCustomDateClose}>\n          <Text title=\"hello\" />\n        </Modal>\n      )}\n      {form.modals.location && (\n        <Modal onBackgroundPress={handleLocationClose}>\n          <Text title=\"location\" />\n        </Modal>\n      )}\n    </>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {Screen} from '../../../components';\nimport {useColor, useNav} from '../../../hooks';\n\nexport const Tinder = memo(function PlaygroundTinder() {\n  const color = useColor();\n  const nav = useNav();\n  const styles = StyleSheet.create({\n    container: {\n      backgroundColor: color.background,\n    },\n  });\n  const navBack = useCallback(nav('landing'), [nav]);\n  return (\n    <Screen onLeftPress={navBack} title=\"Tinder\">\n      <View style={styles.container} />\n    </Screen>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {Screen} from '../../../components';\nimport {useNav} from '../../../hooks';\n\nexport const Drift = memo(function Drift() {\n  const nav = useNav();\n  const navBack = useCallback(nav('landing'), [nav]);\n\n  return <Screen onLeftPress={navBack} title=\"Drift\" />;\n});\n","import React, {memo, useCallback} from 'react';\nimport {Image, ImageSourcePropType, ScrollView, View} from 'react-native';\nimport {Screen, Text} from '../../../components';\nimport {useColor, useNav} from '../../../hooks';\nimport {Theme, useRootSelector} from '../../../utils';\nimport {getWidth} from '../../../models';\n\n// https://support.apple.com/en-us/HT211028\n\ninterface SectionProps {\n  index: number;\n  paddingHorizontal: number;\n  title: string;\n  description?: string;\n  image?: ImageSourcePropType;\n  imageRatio?: number;\n}\nconst Section = ({\n  index,\n  title,\n  description,\n  image,\n  paddingHorizontal,\n  imageRatio = 0,\n}: SectionProps) => {\n  const color = useColor();\n  const width = useRootSelector(getWidth);\n  const leftWidth = Theme.padding.p12;\n  const imageWidth = width - leftWidth - 2 * paddingHorizontal;\n  return (\n    <View\n      style={{\n        paddingVertical: Theme.padding.p08,\n        borderBottomColor: color.surface,\n        borderBottomWidth: 2,\n      }}>\n      <View style={{flexDirection: 'row'}}>\n        <Text\n          style={{width: leftWidth, color: color.primary}}\n          title={String(index)}\n          type=\"h1\"\n        />\n        <View style={{flex: 1}}>\n          <Text title={title} type=\"h3\" />\n          <Text title={description} type=\"subtitle1\" />\n          {image && (\n            <Image\n              source={image}\n              style={{\n                flex: 1,\n                width: imageWidth,\n                height: imageWidth / imageRatio,\n              }}\n            />\n          )}\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport const AppleMask = memo(function AppleMask() {\n  const nav = useNav();\n\n  const sections = [\n    {\n      title: 'Align your preferred slots on the face shield and forehead band',\n      description: 'Either side of the face shield can act as the front.',\n      image: require('./one.png'),\n      imageRatio: 1560 / 750,\n    },\n    {\n      title:\n        'Remove thin protective films from the face shield and forehead band by peeling from either edge',\n      image: require('./two.gif'),\n      imageRatio: 1560 / 1750,\n    },\n    {\n      title: 'Thread the strap through the slots and pull to adjust',\n      image: require('./three.gif'),\n      imageRatio: 1560 / 950,\n    },\n    {title: 'Repeat on other side'},\n    {\n      title: 'Adjust your face shield',\n      image: require('./four.gif'),\n      imageRatio: 1560 / 950,\n    },\n    {\n      title:\n        'Wear the face shield in addition to other personal protective equipment',\n    },\n  ];\n\n  const paddingHorizontal = Theme.padding.p04;\n  const navBack = useCallback(nav('landing'), [nav]);\n  return (\n    <Screen onLeftPress={navBack}>\n      <ScrollView contentContainerStyle={{paddingHorizontal}}>\n        <Text title=\"Assemble and adjust your Face Shield\" type=\"h2\" />\n        <Text\n          style={{paddingTop: Theme.padding.p04}}\n          title=\"To assemble your face shield, follow these steps.\"\n          type=\"subtitle1\"\n        />\n        {sections.map(({title, description, image, imageRatio}, index) => (\n          <Section\n            description={description}\n            image={image}\n            imageRatio={imageRatio}\n            index={index + 1}\n            key={title}\n            paddingHorizontal={paddingHorizontal}\n            title={title}\n          />\n        ))}\n      </ScrollView>\n    </Screen>\n  );\n});\n","import React, {ReactNode, memo} from 'react';\nimport {LayoutChangeEvent, StyleSheet, View} from 'react-native';\nimport {useColor} from '../../../hooks';\n\ninterface Props {\n  onLayout: (event: LayoutChangeEvent) => void;\n  children: ReactNode;\n}\n\nexport type CanvasDimensions = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n};\n\nexport const Canvas = memo(function Canvas({children, onLayout}: Props) {\n  const color = useColor();\n  const styles = StyleSheet.create({\n    container: {\n      backgroundColor: color.surface,\n      flex: 1,\n    },\n  });\n\n  return (\n    <View onLayout={onLayout} style={styles.container}>\n      {children}\n    </View>\n  );\n});\n","import {Animated} from 'react-native';\nimport {CanvasDimensions} from '../Drift/Game';\nimport {Item} from './Balls';\n\nconst rotate = (dx: number, dy: number, angle: number) => {\n  const rotatedVelocities = {\n    x: dx * Math.cos(angle) - dy * Math.sin(angle),\n    y: dx * Math.sin(angle) + dy * Math.cos(angle),\n  };\n\n  return rotatedVelocities;\n};\n\nexport const resolveItemCollision = (\n  particle: Item,\n  otherParticle: Item,\n  maxSpeed: number,\n): void => {\n  const xVelocityDiff = particle.dx - otherParticle.dx;\n  const yVelocityDiff = particle.dy - otherParticle.dy;\n\n  const xDist = otherParticle.x - particle.x;\n  const yDist = otherParticle.y - particle.y;\n\n  // Prevent accidental overlap of particles\n  if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\n    // Grab angle between the two colliding particles\n    const angle = -Math.atan2(\n      otherParticle.y - particle.y,\n      otherParticle.x - particle.x,\n    );\n\n    // Store mass in var for better readability in collision equation\n    const m1 = particle.mass;\n    const m2 = otherParticle.mass;\n\n    // Velocity before equation\n    const u1 = rotate(particle.dx, particle.dy, angle);\n    const u2 = rotate(otherParticle.dx, otherParticle.dy, angle);\n\n    // Velocity after 1d collision equation\n    const v1 = {\n      dx: (u1.x * (m1 - m2)) / (m1 + m2) + (u2.x * 2 * m2) / (m1 + m2),\n      dy: u1.y,\n    };\n    const v2 = {\n      dx: (u2.x * (m1 - m2)) / (m1 + m2) + (u1.x * 2 * m1) / (m1 + m2),\n      dy: u2.y,\n    };\n\n    // Final velocity after rotating axis back to original location\n    const vFinal1 = rotate(v1.dx, v1.dy, -angle);\n    const vFinal2 = rotate(v2.dx, v2.dy, -angle);\n\n    // Swap particle velocities for realistic bounce effect\n    particle.dx = Math.min(vFinal1.x, maxSpeed);\n    particle.dy = Math.min(vFinal1.y, maxSpeed);\n\n    otherParticle.dx = Math.min(vFinal2.x, maxSpeed);\n    otherParticle.dy = Math.min(vFinal2.y, maxSpeed);\n  }\n};\n\nexport const getOverlap = (\n  aX: number,\n  aY: number,\n  aRadius: number,\n  bX: number,\n  bY: number,\n  bRadius: number,\n  center: boolean,\n): boolean => {\n  const aCenter = {x: aX + aRadius, y: aY + aRadius};\n  const bCenter = {x: bX + bRadius, y: bY + bRadius};\n  const dx = center ? aCenter.x - bCenter.x : aX - bX;\n  const dy = center ? aCenter.y - bCenter.y : aY - bY;\n  const radius = aRadius + bRadius;\n  const distance = Math.sqrt(dx * dx + dy * dy);\n  return distance <= radius;\n};\n\nexport const getRandomNumber = (min: number, max: number): number =>\n  Math.random() * (max - min) + min;\n\ntype GetItems = {\n  count: number;\n  canvas: CanvasDimensions;\n  minSize: number;\n  maxSize: number;\n  minSpeed: number;\n  maxSpeed: number;\n  minMass: number;\n  maxMass: number;\n};\n\nexport const getItems = ({\n  count,\n  canvas,\n  minSize,\n  maxSize,\n  minSpeed,\n  maxSpeed,\n  minMass,\n  maxMass,\n}: GetItems): Item[] => {\n  const initialItems: Item[] = [];\n\n  for (let i = 0; i < count; i++) {\n    const radius = getRandomNumber(minSize, maxSize);\n    const mass = getRandomNumber(minMass, maxMass);\n    const dx = getRandomNumber(-minSpeed, maxSpeed);\n    const dy = getRandomNumber(-minSpeed, maxSpeed);\n    let x = getRandomNumber(canvas.x, canvas.x + canvas.width - radius);\n    let y = getRandomNumber(canvas.x, canvas.x + canvas.height - radius);\n\n    if (i !== 0) {\n      for (let j = 0; j < initialItems.length; j++) {\n        const item = initialItems[j];\n        if (getOverlap(x, y, radius, item.x, item.y, item.radius, false)) {\n          x = getRandomNumber(canvas.x, canvas.x + canvas.width - radius);\n          y = getRandomNumber(canvas.x, canvas.x + canvas.height - radius);\n          j = -1;\n        }\n      }\n    }\n    initialItems.push({\n      index: i,\n      x,\n      y,\n      dx,\n      dy,\n      radius,\n      mass,\n      position: new Animated.ValueXY({x, y}),\n    });\n  }\n\n  return initialItems;\n};\n\nexport const resolveBoundCollision = (\n  item: Item,\n  canvas: CanvasDimensions,\n): void => {\n  if (item.x <= canvas.x) {\n    item.dx = -item.dx;\n    item.x = canvas.x;\n  }\n  if (item.x + 2 * item.radius >= canvas.x + canvas.width) {\n    item.dx = -item.dx;\n    item.x = canvas.x + canvas.width - 2 * item.radius;\n  }\n  if (item.y <= canvas.y) {\n    item.dy = -item.dy;\n    item.y = canvas.y;\n  }\n  if (item.y + 2 * item.radius >= canvas.y + canvas.height) {\n    item.dy = -item.dy;\n    item.y = canvas.y + canvas.height - 2 * item.radius;\n  }\n};\n","import React, {useCallback, useEffect, useState} from 'react';\nimport {Animated} from 'react-native';\nimport {Text, TouchableOpacity} from '../../../components';\nimport {useColor} from '../../../hooks';\nimport {Theme} from '../../../utils';\nimport {CanvasDimensions} from './Canvas';\nimport {\n  getItems,\n  getOverlap,\n  resolveBoundCollision,\n  resolveItemCollision,\n} from './utils';\n\nexport type Item = {\n  index: number;\n  position: Animated.ValueXY;\n  dx: number;\n  dy: number;\n  x: number;\n  y: number;\n  radius: number;\n  mass: number;\n};\n\ntype Props = {\n  count: number;\n  canvas: CanvasDimensions;\n  minSize?: number;\n  maxSize?: number;\n  minSpeed?: number;\n  maxSpeed?: number;\n  minMass?: number;\n  maxMass?: number;\n  mitosis?: number;\n};\n\nexport const Balls = ({\n  count,\n  canvas,\n  minSize = 50,\n  maxSize = 50,\n  minSpeed = 1,\n  maxSpeed = 5,\n  minMass = 1,\n  maxMass = 1,\n  mitosis = 0.1,\n}: Props): JSX.Element => {\n  const color = useColor();\n\n  const [items, setItems] = useState<Item[]>(() =>\n    getItems({\n      count,\n      canvas,\n      minSize,\n      maxSize,\n      minSpeed,\n      maxSpeed,\n      minMass,\n      maxMass,\n    }),\n  );\n\n  const draw = useCallback(() => {\n    setItems((prev) => {\n      for (let i = 0; i < prev.length; i++) {\n        const a = prev[i];\n        for (let j = i + 1; j < prev.length; j++) {\n          const b = prev[j];\n          if (getOverlap(a.x, a.y, a.radius, b.x, b.y, b.radius, true)) {\n            resolveItemCollision(a, b, maxSpeed * 1.5);\n          }\n        }\n        resolveBoundCollision(a, canvas);\n        a.x += a.dx;\n        a.y += a.dy;\n        a.position = new Animated.ValueXY({x: a.x, y: a.y});\n      }\n      return [...prev];\n    });\n  }, [canvas, maxSpeed]);\n\n  useEffect(() => {\n    const interval = setInterval(draw);\n    return () => clearInterval(interval);\n  }, [draw]);\n\n  const onPress = useCallback(\n    ({index}) => () => {\n      setItems((prev) => {\n        const item = prev[index];\n        item.radius *= 1 - mitosis;\n        item.dx *= 2 - mitosis;\n        item.dy *= 2 - mitosis;\n        const copy = {...prev[index]};\n        copy.dx *= -1;\n        copy.dy *= -1;\n        return [...prev, copy];\n      });\n    },\n    [mitosis],\n  );\n\n  return (\n    <>\n      {items.map((item, index) => (\n        <Animated.View key={index} style={item.position.getLayout()}>\n          <TouchableOpacity\n            onPress={onPress({index})}\n            style={{\n              alignItems: 'center',\n              borderColor: color.primary,\n              borderWidth: 1,\n              borderRadius: item.radius,\n              flex: 1,\n              padding: Theme.padding.p01,\n              height: item.radius * 2,\n              justifyContent: 'center',\n              position: 'absolute',\n              width: item.radius * 2,\n            }}>\n            <Text adjustsFontSizeToFit title={String(index)} type=\"h3\" />\n          </TouchableOpacity>\n        </Animated.View>\n      ))}\n    </>\n  );\n};\n","import React, {memo, useCallback, useState} from 'react';\nimport {LayoutChangeEvent} from 'react-native';\nimport {Screen} from '../../../components';\nimport {useNav} from '../../../hooks';\nimport {Canvas, CanvasDimensions} from './Canvas';\nimport {Balls} from './Balls';\n\nexport const BouncingBalls = memo(function PlaygroundBouncingBalls() {\n  const nav = useNav();\n  const [canvas, setCanvas] = useState<CanvasDimensions | null>(null);\n\n  const onLayout = useCallback((event: LayoutChangeEvent) => {\n    const {x, y, height, width} = event.nativeEvent.layout;\n    setCanvas({x, y, height, width});\n  }, []);\n\n  const navBack = useCallback(nav('landing'), [nav]);\n  return (\n    <Screen onLeftPress={navBack} title=\"BouncingBalls\">\n      <Canvas onLayout={onLayout}>\n        {canvas && (\n          <Balls\n            canvas={canvas}\n            count={1}\n            maxSize={canvas.width / 6}\n            minSize={canvas.width / 6}\n          />\n        )}\n      </Canvas>\n    </Screen>\n  );\n});\n","import React, {memo, useCallback, useState} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {Screen, TouchableOpacity} from '../../../components';\nimport {useColor, useNav} from '../../../hooks';\nimport {useRootSelector} from '../../../utils';\nimport {getSmallestDimension} from '../../../models';\n\nconst getRandom = (max: number) => {\n  return Math.floor(Math.random() * max);\n};\n\nconst getInitialState = (rows: number, cols: number, gems: Gem[]): Board => {\n  const col = [];\n  for (let i = 0; i < cols; i++) {\n    const row = [];\n    for (let j = 0; j < rows; j++) {\n      row.push(gems[getRandom(gems.length)]);\n    }\n    col.push(row);\n  }\n  return col;\n};\n\ntype Vector = {x: number; y: number};\ntype Gem = {key: string; color: string};\ntype Board = Gem[][];\ntype Matches = {[key: string]: Vector};\n\nconst getMatches = (board: Board): Matches => {\n  const matches: Matches = {};\n  for (let i = 0; i < board.length; i++) {\n    for (let j = 0; j < board[i].length; j++) {\n      const mid = board[i][j];\n      const left = i - 1 < 0 ? undefined : board[i - 1][j];\n      const right = i + 1 >= board.length ? undefined : board[i + 1][j];\n      const up = j - 1 < 0 ? undefined : board[i][j - 1];\n      const down = j + 1 >= board[i].length ? undefined : board[i][j + 1];\n      const vertical = up?.key === mid.key && down?.key === mid.key;\n      const horizontal = left?.key === mid.key && right?.key === mid.key;\n      if (vertical) {\n        matches[`${i}${j - 1}`] = {x: i, y: j - 1};\n        matches[`${i}${j}`] = {x: i, y: j};\n        matches[`${i}${j + 1}`] = {x: i, y: j + 1};\n      }\n      if (horizontal) {\n        matches[`${i - 1}${j}`] = {x: i - 1, y: j};\n        matches[`${i}${j}`] = {x: i, y: j};\n        matches[`${i + 1}${j}`] = {x: i + 1, y: j};\n      }\n    }\n  }\n  return matches;\n};\n\nexport type States = 'idle' | 'swap' | 'validate' | 'swap back' | 'fill gems';\n\nconst initialSelected = {x: -10, y: -10};\nexport const Bejeweled = memo(function PlaygroundBejeweled() {\n  const nav = useNav();\n  const dimension = useRootSelector(getSmallestDimension);\n\n  const color = useColor();\n  const styles = StyleSheet.create({\n    container: {backgroundColor: color.surface},\n  });\n\n  const width = 6;\n  const height = 6;\n  const size = dimension / width;\n  const gems: Gem[] = [\n    {key: 'primary', color: color.primary},\n    {key: 'brand', color: color.brand},\n    {key: 'success', color: color.success},\n    {key: 'info', color: color.info},\n    {key: 'warning', color: color.warning},\n    {key: 'danger', color: color.danger},\n  ];\n\n  const [board, setBoard] = useState<Board>(() =>\n    getInitialState(width, height, gems),\n  );\n  getMatches(board);\n  const [selected, setSelected] = useState(initialSelected);\n\n  const onPress = (x: number, y: number) => () => {\n    const sum = Math.abs(x - selected.x) + Math.abs(y - selected.y);\n    if (sum === 0) {\n      setSelected(initialSelected);\n    } else if (sum === 1) {\n      setBoard((prev) => {\n        const temp = prev[x][y];\n        prev[x][y] = prev[selected.x][selected.y];\n        prev[selected.x][selected.y] = temp;\n        return [...prev];\n      });\n      setSelected(initialSelected);\n    } else {\n      setSelected({x, y});\n    }\n  };\n  const navBack = useCallback(nav('landing'), [nav]);\n\n  return (\n    <Screen onLeftPress={navBack} title=\"Bejeweled\">\n      <View style={styles.container}>\n        {board.map((col, x) => (\n          <View key={`${x}${col[0].key}`} style={{flexDirection: 'row'}}>\n            {col.map((gem, y) => (\n              <View\n                key={`${x}${y}${gem.key}`}\n                style={{\n                  width: size,\n                  height: size,\n                }}>\n                <TouchableOpacity\n                  onPress={onPress(x, y)}\n                  style={{\n                    flex: 1,\n                    borderColor:\n                      selected.x === x && selected.y === y\n                        ? color.text\n                        : color.background,\n                    borderWidth: 4,\n                    backgroundColor: gem.color,\n                  }}\n                />\n              </View>\n            ))}\n          </View>\n        ))}\n      </View>\n    </Screen>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {Screen} from '../../../components';\nimport {useNav} from '../../../hooks';\n\nexport const SlotMachine = memo(function SlotMachine() {\n  const nav = useNav();\n  const navBack = useCallback(nav('landing'), [nav]);\n\n  return <Screen onLeftPress={navBack} title=\"Slot Machine\" />;\n});\n","type GetRandomRange = {\n  min: number;\n  max: number;\n};\n\nconst getRandomRange = ({min, max}: GetRandomRange) => {\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\ntype GetNewLocation = {\n  minSpin: number;\n  maxSpin: number;\n  numOfSegments: number;\n  location: number;\n};\n\nexport const getNewLocation = ({\n  minSpin,\n  maxSpin,\n  numOfSegments,\n  location,\n}: GetNewLocation): number => {\n  const spins = getRandomRange({min: minSpin, max: maxSpin}) * 360;\n  const winner = Math.floor(Math.random() * numOfSegments);\n  const winnerSection = (winner * 360) / numOfSegments;\n  const newLocation = location + spins + winnerSection;\n  return newLocation;\n};\n\ntype GetWinnerIndex = {\n  location: number;\n  numOfSegments: number;\n  angleOfSegment: number;\n};\n\nexport const getWinnerIndex = ({\n  location,\n  numOfSegments,\n  angleOfSegment,\n}: GetWinnerIndex): number => {\n  const deg = 360 - Math.floor(location % 360);\n  const index = Math.floor(deg / angleOfSegment);\n  return index >= numOfSegments ? 0 : index;\n};\n","import React, {memo, useCallback, useEffect, useRef} from 'react';\nimport {Animated, Dimensions, Easing, TouchableOpacity} from 'react-native';\nimport * as d3 from 'd3-shape';\nimport Svg, {G, Path, Polygon, Text} from 'react-native-svg';\nimport {useColor, useDropShadow} from '../../../hooks';\nimport {getNewLocation, getWinnerIndex} from './utils';\n\ntype Segment = {\n  value: string;\n  display: string;\n  color: string;\n};\n\ntype Props = {\n  size?: number;\n  padAngle?: number;\n  backgroundColor?: string;\n  borderColor?: string;\n  textColor?: string;\n  borderWidth?: number;\n  fontSize?: number;\n  innerRadius?: number;\n  segments: Segment[];\n  spinSpeed?: number;\n  noBounce?: boolean;\n  bounceSpeed?: number;\n  minSpin?: number;\n  maxSpin?: number;\n  onComplete: (segment: Segment) => void;\n};\n\nexport const Wheel = memo(\n  ({\n    size = Dimensions.get('screen').width,\n    backgroundColor,\n    textColor,\n    fontSize = 24,\n    segments,\n    noBounce,\n    padAngle = 0.02,\n    innerRadius = 60,\n    spinSpeed = 1000,\n    bounceSpeed = 5000,\n    minSpin = 3,\n    maxSpin = 7,\n    onComplete,\n  }: Props) => {\n    const color = useColor();\n    const dropShadow = useDropShadow();\n    const background = backgroundColor || color.background;\n    const text = textColor || color.text;\n    const radius = size / 2;\n    const knobSize = size / 8;\n    const knobOffset = knobSize * 0.6;\n    const numOfSegments = segments.length;\n    const angleOfSegment = 360 / numOfSegments;\n    const angleOffset = angleOfSegment / 2;\n    const spinning = useRef(false);\n    const location = useRef(0);\n    const angle = new Animated.Value(0);\n    const yPosition = new Animated.Value(-1);\n    const arcs = d3\n      .pie()(segments.map(() => 1))\n      .map((arc: any, index) => {\n        const instance = d3\n          .arc()\n          .padAngle(padAngle)\n          .outerRadius(radius)\n          .innerRadius(innerRadius);\n        return {\n          path: instance(arc),\n          centroid: instance.centroid(arc),\n          segment: segments[index],\n        };\n      });\n\n    const onSpinComplete = useCallback(() => {\n      spinning.current = false;\n      const winnerIndex = getWinnerIndex({\n        location: location.current,\n        numOfSegments,\n        angleOfSegment,\n      });\n      onComplete(segments[winnerIndex]);\n    }, [angleOfSegment, numOfSegments, onComplete, segments]);\n\n    const spin = useCallback(() => {\n      const newLocation = getNewLocation({\n        minSpin,\n        maxSpin,\n        numOfSegments,\n        location: location.current,\n      });\n      location.current = newLocation;\n      spinning.current = true;\n      Animated.timing(angle, {\n        toValue: newLocation,\n        duration: spinSpeed,\n        easing: Easing.inOut(Easing.sin),\n        useNativeDriver: true,\n      }).start(onSpinComplete);\n    }, [angle, maxSpin, minSpin, numOfSegments, onSpinComplete, spinSpeed]);\n\n    const onPress = useCallback(() => {\n      if (spinning.current) {\n        return;\n      }\n      spin();\n    }, [spin]);\n\n    const bounce = useCallback(\n      (toValue: number) => {\n        const config = {toValue, duration: bounceSpeed, useNativeDriver: true};\n        Animated.timing(yPosition, config).start(() =>\n          bounce(toValue === 1 ? -1 : 1),\n        );\n      },\n      [bounceSpeed, yPosition],\n    );\n\n    useEffect(() => {\n      if (noBounce) {\n        return;\n      }\n      bounce(1);\n    }, [bounce, noBounce]);\n\n    return (\n      <TouchableOpacity onPress={onPress}>\n        <Animated.View\n          style={{\n            transform: [\n              {\n                translateY: yPosition.interpolate({\n                  inputRange: [-1, 0, 1],\n                  outputRange: [-10, 0, -10],\n                }),\n              },\n            ],\n            backgroundColor: background,\n            width: size,\n            height: size,\n            borderRadius: size,\n            alignItems: 'center',\n            marginTop: knobOffset,\n            ...dropShadow(3),\n          }}>\n          <Svg\n            style={{\n              marginTop: -knobOffset,\n              position: 'absolute',\n              width: knobSize,\n              height: knobSize,\n              ...dropShadow(6),\n            }}>\n            <Polygon\n              fill={color.light}\n              points={`${knobSize / 2},0 ${knobSize * 0.85},${knobSize / 3} ${\n                knobSize / 2\n              },${knobSize} ${knobSize * 0.15},${knobSize / 3},`}\n              stroke={color.secondary}\n              strokeWidth={0.2}\n            />\n          </Svg>\n          <Animated.View\n            style={{\n              width: size,\n              height: size,\n              transform: [\n                {\n                  rotate: angle.interpolate({\n                    inputRange: [-360, 0, 360],\n                    outputRange: ['-360deg', '0deg', '360deg'],\n                  }),\n                },\n              ],\n            }}>\n            <Svg\n              style={{\n                transform: [{rotate: `-${angleOffset}deg`}],\n              }}>\n              <G x={radius} y={radius}>\n                {arcs.map((arc, i) => (\n                  <G key={`arc-${i}`}>\n                    <Path d={String(arc.path)} fill={arc.segment.color} />\n                    <G\n                      origin={`${arc.centroid}`}\n                      rotation={(i * 360) / segments.length + angleOffset}>\n                      <Text\n                        fill={text}\n                        fontSize={fontSize}\n                        textAnchor=\"middle\"\n                        x={arc.centroid[0]}\n                        y={arc.centroid[1] - knobOffset / 2}>\n                        {arc.segment.display}\n                      </Text>\n                    </G>\n                  </G>\n                ))}\n              </G>\n            </Svg>\n          </Animated.View>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  },\n);\n","import React, {memo, useCallback, useMemo, useState} from 'react';\nimport {Screen, Text} from '../../../components';\nimport {useColor, useNav} from '../../../hooks';\nimport {Wheel} from './Wheel';\n\nconst useSegments = () => {\n  const color = useColor();\n  return useMemo(\n    () => [\n      {display: '1', value: '1', color: color.primary},\n      {display: '2', value: '2', color: color.info},\n      {display: '3', value: '3', color: color.danger},\n      {display: '4', value: '4', color: color.brand},\n      {display: '5', value: '5', color: color.warning},\n      {display: '6', value: '6', color: color.success},\n      {display: '7', value: '7', color: color.secondary},\n    ],\n    [\n      color.brand,\n      color.danger,\n      color.info,\n      color.primary,\n      color.secondary,\n      color.success,\n      color.warning,\n    ],\n  );\n};\n\nexport const FortuneWheel = memo(function PlaygroundFortuneWheel() {\n  const segments = useSegments();\n  const nav = useNav();\n  const [winner, setWinner] = useState(null);\n\n  const onComplete = useCallback((a) => {\n    setWinner(a.display);\n  }, []);\n\n  const navBack = useCallback(nav('landing'), [nav]);\n\n  // TODO: fix text on android\n  // TODO: increase duration based on spin\n\n  return (\n    <Screen onLeftPress={navBack} title=\"FortuneWheel\">\n      <Wheel onComplete={onComplete} segments={segments} />\n      <Text center title={String(winner)} />\n    </Screen>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {Screen} from '../../../components';\nimport {useNav} from '../../../hooks';\n\nexport const AppleFit = memo(function PlaygroundAppleFit() {\n  const nav = useNav();\n  const navBack = useCallback(nav('landing'), [nav]);\n\n  return <Screen onLeftPress={navBack} title=\"Apple Fit\" />;\n});\n","export const stackParams = {\n  landing: undefined,\n  article: undefined,\n  ball: undefined,\n  chat: undefined,\n  drag: undefined,\n  fonts: undefined,\n  imageCollection: undefined,\n  input: undefined,\n  oKRs: undefined,\n  pinchSpread: undefined,\n  questionnaire: undefined,\n  searchBar: undefined,\n  startup: undefined,\n  stopWatch: undefined,\n  darkMode: undefined,\n  colors: undefined,\n  swipeFeed: undefined,\n  gameOfLife: undefined,\n  reminder: undefined,\n  tinder: undefined,\n  drift: undefined,\n  appleMask: undefined,\n  bouncingBalls: undefined,\n  bejeweled: undefined,\n  slotMachine: undefined,\n  fortuneWheel: undefined,\n  appleFit: undefined,\n};\n","import React, {memo, useCallback} from 'react';\nimport {FlatList} from 'react-native';\nimport {useNavigation} from '@react-navigation/native';\nimport {Button, Screen} from '../../../components';\nimport {stackParams} from '../navParams';\n\nconst screens = Object.keys(stackParams);\n\nexport const Landing = memo(function Playground() {\n  const {goBack, navigate} = useNavigation();\n  const navToItem = useCallback((item: string) => () => navigate(item), [\n    navigate,\n  ]);\n  const renderItem = useCallback(\n    ({item}: {item: string}) => (\n      <Button key={item} onPress={navToItem(item)} title={item} />\n    ),\n    [navToItem],\n  );\n  const keyExtractor = useCallback((item: string) => item, []);\n  const navBack = useCallback(() => goBack(), [goBack]);\n  return (\n    <Screen onLeftPress={navBack} title=\"Playground\">\n      <FlatList\n        data={screens}\n        keyExtractor={keyExtractor}\n        renderItem={renderItem}\n      />\n    </Screen>\n  );\n});\n","import React, {memo} from 'react';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport {Article} from './Article';\nimport {Ball} from './Ball';\nimport {Chat} from './Chat';\nimport {Drag} from './Drag';\nimport {Fonts} from './Fonts';\nimport {ImageCollection} from './ImageCollection';\nimport {Input} from './Input';\nimport {OKRs} from './OKRs';\nimport {PinchSpread} from './PinchSpread';\nimport {Questionnaire} from './Questionnaire';\nimport {SearchBar} from './SearchBar';\nimport {Startup} from './Startup';\nimport {StopWatch} from './Stopwatch';\nimport {DarkMode} from './DarkMode';\nimport {Colors} from './Colors';\nimport {SwipeFeed} from './SwipeFeed';\nimport {GameOfLife} from './GameOfLife';\nimport {ReminderExample} from './Reminder';\nimport {Tinder} from './Tinder';\nimport {Drift} from './Drift';\nimport {AppleMask} from './AppleMask';\nimport {BouncingBalls} from './BouncingBalls';\nimport {Bejeweled} from './Bejeweled';\nimport {SlotMachine} from './SlotMachine';\nimport {FortuneWheel} from './FortuneWheel';\nimport {AppleFit} from './AppleFit';\nimport {Landing} from './Landing';\nimport {stackParams} from './navParams';\n\nconst noHeader = {headerShown: false};\nconst Stack = createStackNavigator<typeof stackParams>();\n\nexport default memo(function Games() {\n  return (\n    <Stack.Navigator screenOptions={noHeader}>\n      <Stack.Screen component={Landing} name=\"landing\" />\n      <Stack.Screen component={Article} name=\"article\" />\n      <Stack.Screen component={Ball} name=\"ball\" />\n      <Stack.Screen component={Chat} name=\"chat\" />\n      <Stack.Screen component={Drag} name=\"drag\" />\n      <Stack.Screen component={Fonts} name=\"fonts\" />\n      <Stack.Screen component={ImageCollection} name=\"imageCollection\" />\n      <Stack.Screen component={Input} name=\"input\" />\n      <Stack.Screen component={OKRs} name=\"oKRs\" />\n      <Stack.Screen component={PinchSpread} name=\"pinchSpread\" />\n      <Stack.Screen component={Questionnaire} name=\"questionnaire\" />\n      <Stack.Screen component={SearchBar} name=\"searchBar\" />\n      <Stack.Screen component={Startup} name=\"startup\" />\n      <Stack.Screen component={StopWatch} name=\"stopWatch\" />\n      <Stack.Screen component={DarkMode} name=\"darkMode\" />\n      <Stack.Screen component={Colors} name=\"colors\" />\n      <Stack.Screen component={SwipeFeed} name=\"swipeFeed\" />\n      <Stack.Screen component={GameOfLife} name=\"gameOfLife\" />\n      <Stack.Screen component={ReminderExample} name=\"reminder\" />\n      <Stack.Screen component={Tinder} name=\"tinder\" />\n      <Stack.Screen component={Drift} name=\"drift\" />\n      <Stack.Screen component={AppleMask} name=\"appleMask\" />\n      <Stack.Screen component={BouncingBalls} name=\"bouncingBalls\" />\n      <Stack.Screen component={Bejeweled} name=\"bejeweled\" />\n      <Stack.Screen component={SlotMachine} name=\"slotMachine\" />\n      <Stack.Screen component={FortuneWheel} name=\"fortuneWheel\" />\n      <Stack.Screen component={AppleFit} name=\"appleFit\" />\n    </Stack.Navigator>\n  );\n});\n"],"sourceRoot":""}