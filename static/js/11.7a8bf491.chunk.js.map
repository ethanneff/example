{"version":3,"sources":["apps/Portfolio/Landing/index.web.tsx","apps/Portfolio/ForgotPassword/index.tsx","apps/Portfolio/Login/index.tsx","apps/Portfolio/NotFound/index.tsx","apps/Portfolio/Settings/index.tsx","apps/Portfolio/Home/index.tsx","apps/Portfolio/index.tsx"],"names":["missingCallback","SignInButton","memo","onPress","icon","title","color","useColor","style","alignItems","justifyContent","flexDirection","borderColor","text","borderWidth","padding","Theme","p02","marginBottom","borderRadius","p10","name","width","height","paddingLeft","type","NavButton","inverted","paddingVertical","paddingHorizontal","backgroundColor","background","bold","inverse","Header","View","position","secondary","p04","borderBottomWidth","zIndex","Image","source","image","AppIcon","store","alignSelf","Section","paddingTop","children","require","Landing","p18","passwordSentence","onNavLinkPress","url","window","open","light","p08","words","flex","styles","StyleSheet","create","row","ForgotPassword","useState","email","setEmail","nav","useNav","handleEmail","useCallback","val","navLogin","gutter","onLeftPress","onChangeText","placeholder","value","Login","password","setPassword","handlePassword","navBack","navPortfolio","navPassword","NotFound","goBack","useNavigation","Settings","dispatch","useRootDispatch","currentTheme","useRootSelector","state","theme","currentColor","themePress","changeTheme","renderItem","item","key","renderHeader","disable","keyExtractor","FlatList","data","colorThemes","horizontal","ListHeaderComponent","Home","navTo","to","noHeader","headerShown","Stack","createStackNavigator","Navigator","screenOptions","Screen","component"],"mappings":"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","file":"static/js/11.7a8bf491.chunk.js","sourcesContent":["import React, {ReactNode, memo} from 'react';\nimport {Image, View} from 'react-native';\nimport {\n  Icon,\n  Sentence,\n  Text,\n  TouchableOpacity,\n  Word,\n} from '../../../components';\nimport {useColor} from '../../../hooks';\nimport {Theme} from '../../../utils';\n\nconst missingCallback = () => undefined;\n\ninterface SignInButtonProps {\n  onPress: () => void;\n  icon: string;\n  title: string;\n}\nconst SignInButton = memo(function SignInButton({\n  onPress,\n  icon,\n  title,\n}: SignInButtonProps) {\n  const color = useColor();\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={{\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'row',\n        borderColor: color.text,\n        borderWidth: 2,\n        padding: Theme.padding.p02,\n        marginBottom: Theme.padding.p02,\n        borderRadius: Theme.padding.p10,\n      }}>\n      <Icon name={icon} style={{width: '30px', height: '30px'}} />\n      <Text style={{paddingLeft: Theme.padding.p02}} title={title} type=\"h4\" />\n    </TouchableOpacity>\n  );\n});\n\ninterface NavButtonProps {\n  onPress: () => void;\n  inverted?: boolean;\n  title: string;\n}\nconst NavButton = memo(function NavButton({\n  onPress,\n  title,\n  inverted,\n}: NavButtonProps) {\n  const color = useColor();\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={{\n        justifyContent: 'center',\n        borderRadius: Theme.padding.p10,\n        paddingVertical: Theme.padding.p02,\n        paddingHorizontal: Theme.padding.p02,\n        backgroundColor: inverted ? color.text : color.background,\n      }}>\n      <Text bold inverse={inverted} title={title} type=\"h5\" />\n    </TouchableOpacity>\n  );\n});\n\ninterface HeaderProps {\n  height: number;\n}\n\nexport const Header = memo(function Header({height}: HeaderProps) {\n  const color = useColor();\n  return (\n    <View\n      style={{\n        backgroundColor: color.background,\n        position: 'absolute',\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        borderColor: color.secondary,\n        padding: Theme.padding.p04,\n        borderBottomWidth: 1,\n        zIndex: 2,\n        height,\n      }}>\n      <View style={{flexDirection: 'row', alignItems: 'center'}}>\n        <Image source={image} style={{width: '30px', height: '30px'}} />\n        <Text\n          bold\n          style={{paddingHorizontal: Theme.padding.p04}}\n          title=\"Core\"\n          type=\"h3\"\n        />\n        <NavButton onPress={missingCallback} title=\"Features\" />\n        <NavButton onPress={missingCallback} title=\"Premium\" />\n      </View>\n      <View style={{flexDirection: 'row', justifyContent: 'flex-end'}}>\n        <NavButton onPress={missingCallback} title=\"Sign In\" />\n        <NavButton inverted onPress={missingCallback} title=\"Sign Up\" />\n      </View>\n    </View>\n  );\n});\n\ninterface AppIconProps {\n  onPress: () => void;\n  type: 'google-play' | 'apple';\n}\n\nconst AppIcon = memo(function AppIcon({onPress, type}: AppIconProps) {\n  const color = useColor();\n  const iconSize = '48px';\n  const text = type === 'apple' ? 'Download on the' : 'GET IT ON';\n  const store = type === 'apple' ? 'App Store' : 'Google Play';\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={{\n        width: '248px',\n        justifyContent: 'center',\n        borderRadius: Theme.padding.p02,\n        flexDirection: 'row',\n        backgroundColor: color.text,\n        paddingVertical: Theme.padding.p02,\n        paddingHorizontal: Theme.padding.p04,\n      }}>\n      <Icon\n        color={color.background}\n        name={type}\n        style={{width: iconSize, height: iconSize, alignSelf: 'center'}}\n      />\n      <View style={{paddingLeft: Theme.padding.p02}}>\n        <Text inverse title={text} type=\"h5\" />\n        <Text inverse title={store} type=\"h3\" />\n      </View>\n    </TouchableOpacity>\n  );\n});\n\ninterface SectionProps {\n  children: ReactNode | ReactNode[];\n  paddingTop?: number;\n  backgroundColor: string;\n}\n\nconst Section = memo(function Section({\n  paddingTop,\n  children,\n  backgroundColor,\n}: SectionProps) {\n  return (\n    <View\n      style={{\n        paddingTop: paddingTop,\n        height: '100vh',\n        backgroundColor: backgroundColor,\n      }}>\n      {children}\n    </View>\n  );\n});\n\nconst image = require('../../../assets/line-chart.png');\n\nexport const Landing = memo(function PortfolioLanding() {\n  const height = Theme.padding.p18;\n  const titleSentence: Word[] = [\n    {title: 'Get started with ', type: 'h2'},\n    {title: 'Core', bold: true, type: 'h2'},\n  ];\n  const passwordSentence: Word[] = [\n    {title: 'Or use your password to '},\n    {\n      title: 'sign up ',\n      bold: true,\n      onPress: () => undefined,\n    },\n    {title: 'or '},\n    {\n      title: 'sign in ',\n      bold: true,\n      onPress: () => undefined,\n    },\n  ];\n  const color = useColor();\n\n  const onNavLinkPress = (url: string) => () => window.open(url, '_blank');\n\n  return (\n    <>\n      <Header height={height} />\n      <Section backgroundColor={color.light} paddingTop={height}>\n        <Sentence\n          style={{paddingVertical: Theme.padding.p08, alignSelf: 'center'}}\n          words={titleSentence}\n        />\n        <View style={{width: '400px', alignSelf: 'center'}}>\n          <SignInButton\n            icon=\"apple\"\n            onPress={missingCallback}\n            title=\"Continue with Apple\"\n          />\n          <SignInButton\n            icon=\"google\"\n            onPress={missingCallback}\n            title=\"Continue with Google\"\n          />\n          <SignInButton\n            icon=\"facebook\"\n            onPress={missingCallback}\n            title=\"Continue with Facebook\"\n          />\n          <Sentence\n            style={{\n              alignSelf: 'center',\n              paddingVertical: Theme.padding.p04,\n            }}\n            words={passwordSentence}\n          />\n        </View>\n        <View style={{flex: 1}} />\n        <View style={{flexDirection: 'row', justifyContent: 'space-around'}}>\n          <AppIcon onPress={missingCallback} type=\"apple\" />\n          <AppIcon onPress={missingCallback} type=\"google-play\" />\n        </View>\n      </Section>\n      <Section backgroundColor={color.background}>\n        <View style={{flex: 1}} />\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'center',\n            marginBottom: Theme.padding.p04,\n          }}>\n          <NavButton\n            onPress={onNavLinkPress('https://www.linkedin.com/in/ethanneff')}\n            title=\"About us\"\n          />\n          <NavButton\n            onPress={onNavLinkPress('mailto:ethan.neff@eneff.com')}\n            title=\"Contact us\"\n          />\n          <NavButton onPress={missingCallback} title=\"Terms of Service\" />\n          <NavButton onPress={missingCallback} title=\"Privacy Policy\" />\n        </View>\n      </Section>\n    </>\n  );\n});\n","import React, {memo, useCallback, useState} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {Button, Screen, TextInput} from '../../../components';\nimport {useNav} from '../../../hooks';\n\nconst styles = StyleSheet.create({\n  row: {flexDirection: 'row', justifyContent: 'space-around'},\n});\n\nexport const ForgotPassword = memo(function PortfolioForgotPassword() {\n  const [email, setEmail] = useState('');\n  const nav = useNav();\n  const handleEmail = useCallback((val: string) => setEmail(val), []);\n  const navLogin = useCallback(nav('login'), [nav]);\n  return (\n    <Screen gutter onLeftPress={navLogin} title=\"Forgot Password\">\n      <TextInput\n        onChangeText={handleEmail}\n        placeholder=\"example@gmail.com\"\n        title=\"email\"\n        value={email}\n      />\n      <View style={styles.row}>\n        <Button onPress={navLogin} title=\"Send email\" />\n      </View>\n    </Screen>\n  );\n});\n","import React, {memo, useCallback, useState} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {Button, Screen, TextInput} from '../../../components';\nimport {useNav} from '../../../hooks';\n\nconst styles = StyleSheet.create({\n  row: {flexDirection: 'row', justifyContent: 'space-around'},\n});\n\nexport const Login = memo(function PortfolioLogin() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const nav = useNav();\n  const handlePassword = useCallback((val: string) => setPassword(val), []);\n  const handleEmail = useCallback((val: string) => setEmail(val), []);\n  const navBack = useCallback(nav('landing'), [nav]);\n  const navPortfolio = useCallback(nav('home'), [nav]);\n  const navPassword = useCallback(nav('forgotPassword'), [nav]);\n\n  return (\n    <Screen gutter onLeftPress={navBack} title=\"Login\">\n      <TextInput\n        onChangeText={handleEmail}\n        placeholder=\"example@gmail.com\"\n        title=\"email\"\n        value={email}\n      />\n      <TextInput\n        onChangeText={handlePassword}\n        placeholder=\"•••••••\"\n        title=\"password\"\n        value={password}\n      />\n      <View style={styles.row}>\n        <Button onPress={navPortfolio} title=\"Login\" />\n        <Button onPress={navPassword} title=\"Forgot\" />\n      </View>\n    </Screen>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {useNavigation} from '@react-navigation/native';\nimport {Button, Screen} from '../../../components';\n\nexport const NotFound = memo(function PortfolioNotFound() {\n  const {goBack} = useNavigation();\n  const navBack = useCallback(() => goBack(), [goBack]);\n  return (\n    <Screen title=\"404 :(\">\n      <Button onPress={navBack} title=\"go back\" />\n    </Screen>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {FlatList, View} from 'react-native';\nimport {useNavigation} from '@react-navigation/native';\nimport {Button, Screen} from '../../../components';\nimport {ColorTheme, changeTheme, colorThemes} from '../../../models';\nimport {useRootDispatch, useRootSelector} from '../../../utils';\n\nexport const Settings = memo(function PortfolioSettings() {\n  const dispatch = useRootDispatch();\n  const currentTheme = useRootSelector((state) => state.theme.currentColor);\n  const {goBack} = useNavigation();\n  const themePress = useCallback(\n    (theme: ColorTheme) => () => dispatch(changeTheme(theme)),\n    [dispatch],\n  );\n  const renderItem = useCallback(\n    ({item}) => (\n      <View>\n        <Button\n          color={currentTheme === item ? 'primary' : 'text'}\n          key={item}\n          onPress={themePress(item)}\n          title={item}\n        />\n      </View>\n    ),\n    [currentTheme, themePress],\n  );\n\n  const renderHeader = useCallback(() => <Button disable title=\"Theme\" />, []);\n  const keyExtractor = useCallback((item) => item, []);\n\n  const navBack = useCallback(() => goBack(), [goBack]);\n  return (\n    <Screen onLeftPress={navBack} title=\"Settings\">\n      <FlatList\n        data={colorThemes}\n        horizontal\n        keyExtractor={keyExtractor}\n        ListHeaderComponent={renderHeader}\n        renderItem={renderItem}\n      />\n    </Screen>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {Button, Screen} from '../../../components';\nimport {useNav} from '../../../hooks';\n\nexport const Home = memo(function PortfolioHome() {\n  const nav = useNav();\n  const navTo = useCallback((to: string) => nav(to), [nav]);\n  return (\n    <Screen gutter title=\"Home\">\n      <Button onPress={navTo('login')} title=\"logout\" />\n      <Button onPress={navTo('settings')} title=\"settings\" />\n      <Button onPress={navTo('notFound')} title=\"not found\" />\n    </Screen>\n  );\n});\n","import React, {memo} from 'react';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport {Landing} from './Landing';\nimport {ForgotPassword} from './ForgotPassword';\nimport {Login} from './Login';\nimport {NotFound} from './NotFound';\nimport {Settings} from './Settings';\nimport {Home} from './Home';\n\nconst noHeader = {headerShown: false};\nconst Stack = createStackNavigator();\n\nexport default memo(function Portfolio() {\n  return (\n    <Stack.Navigator screenOptions={noHeader}>\n      <Stack.Screen component={Landing} name=\"landing\" />\n      <Stack.Screen component={Login} name=\"login\" />\n      <Stack.Screen component={ForgotPassword} name=\"forgotPassword\" />\n      <Stack.Screen component={Home} name=\"home\" />\n      <Stack.Screen component={NotFound} name=\"notFound\" />\n      <Stack.Screen component={Settings} name=\"settings\" />\n    </Stack.Navigator>\n  );\n});\n"],"sourceRoot":""}