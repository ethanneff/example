{"version":3,"sources":["apps/Complete/utils/configs.tsx","apps/Complete/utils/useKeyboardHeight.tsx","apps/Complete/utils/userFactory.ts","apps/Complete/utils/useTabTap.tsx","apps/Complete/components/TextInputWithIcons.tsx","apps/Complete/components/AddButton.tsx","apps/Complete/components/AddItem.tsx","apps/Complete/components/Card.tsx","apps/Complete/components/ListHeader.tsx","apps/Complete/components/ListItem.tsx","apps/Complete/components/ListItems.tsx","apps/Complete/components/List.tsx","apps/Complete/components/Board.tsx","apps/Complete/components/DeleteModal.tsx","apps/Complete/components/ItemDetailHeader.tsx","apps/Complete/components/ItemContext.tsx","apps/Complete/components/ItemEdit.tsx","apps/Complete/components/ModalHeader.tsx","apps/Complete/screens/Account/index.tsx","apps/Complete/screens/Capture/index.tsx","apps/Complete/screens/ItemDetail/index.tsx","apps/Complete/screens/LogIn/index.tsx","apps/Complete/screens/Project/index.tsx","apps/Complete/screens/Projects/index.tsx","apps/Complete/screens/Reflect/Graph.tsx","apps/Complete/screens/Reflect/index.tsx","apps/Complete/screens/ResetPassword/index.tsx","apps/Complete/screens/SignUp/index.tsx","apps/Complete/screens/Welcome/index.tsx","apps/Complete/navigation.tsx","apps/Complete/index.tsx"],"names":["completeConfig","borderRadius","config","padding","alert","width","height","useKeyboardHeight","isFocused","useIsFocused","keyboardHeight","useRootSelector","s","device","dItem","u","date","Date","now","id","v4","title","userId","description","active","createdAt","updatedAt","tags","editable","children","type","dKanban","getDefaultUserTemplate","inboxItems","homeTodoItems","homeItems","map","i","townItems","workItems","gymItems","appItems","meetItems","bookItems","giftItems","checkItems","codeItems","projectItems","userItems","user","email","name","items","useTabTap","addListener","useNavigation","useEffect","SoundManager","play","TextInputWithIcons","memo","value","multiline","iconHeight","placeholder","backgroundColor","pointerEvents","icons","onSubmit","blurOnSubmit","onFocus","numberOfLines","onBlur","onRef","color","useColor","bgColor","background","useState","text","setText","showControls","setShowControls","onTextChange","useCallback","change","onFocusInternal","onSubmitInternal","result","trim","onBlurInternal","onIconPressInternal","callback","onIconParentPress","e","preventDefault","View","style","flex","flexDirection","alignItems","onChangeText","onSubmitEditing","returnKeyType","onPress","icon","hidden","focus","disabled","required","length","padded","size","AddButton","noSubmitFocus","textInputRef","useRef","showInput","setShowInput","onAddItemPress","p","onItemTitleClose","onItemTitleSubmit","current","blur","primary","justifyContent","center","AddItem","parentItemId","dispatch","useRootDispatch","completeUser","Error","Keyboard","dismiss","itemId","item","createItem","addItemToItem","Card","onLayout","margin","marginRight","marginBottom","ListHeader","navigate","completeItem","onSave","updateItem","onDetail","navItemDetails","ListItem","index","parentChildrenCount","onItemNav","navItemProject","projectItemId","onItemDetails","onItemLongPress","onItemPress","onItemUp","console","log","swapItemOrderInItem","j","onItemDown","onLongPress","surface","ListItems","list","cardsRef","cardsLength","onKeyExtractor","onCardSizeChange","scrollToEnd","onRenderItem","FlatList","data","keyExtractor","keyboardShouldPersistTaps","onContentSizeChange","ref","renderItem","showsVerticalScrollIndicator","List","orientation","listWidth","maxHeight","footer","horizontal","Board","listMaxHeight","listSize","board","getItemId","getItemLayout","_","offset","renderAddList","renderList","ListFooterComponent","contentContainerStyle","decelerationRate","showsHorizontalScrollIndicator","snapToAlignment","snapToInterval","DeleteModal","onCancel","onDelete","onBackgroundPress","showOverlay","widthPercent","paddingBottom","ItemDetailHeader","emphasis","ItemContext","ItemEdit","onClose","ModalHeader","onLeftPress","onRightPress","invisible","Account","goBack","navBack","onLogout","removeUser","onNavToAdmin","initialState","container","button","Capture","containerRefs","containerHeight","setContainerHeight","getInbox","noItemChildren","onOrganize","key","event","nativeEvent","layout","dimensions","navToAccount","rightIcon","disable","ItemDetail","nav","deleteModal","setDeleteModal","onItemDelete","removeItem","removeItemFromItem","onItemSubmit","onDeletePress","onDeleteClose","password","LogIn","form","setForm","navWelcome","onSecondary","completeForm","createUser","onFormChange","val","lowercase","Project","screenWidth","getSmallestDimension","projectItemType","projectItemTitle","setContainer","typePadding","keyboardPadding","Projects","setDimensions","getProjects","onSecondRightPress","secondRightIcon","getDomain","domain","Math","min","max","Graph","scaleX","scaleTime","d","range","scaleY","scaleLinear","strokeWidth","shape","x","y","curve","StyleSheet","absoluteFill","x1","x2","y1","y2","stopColor","fill","stroke","Title","getTime","Reflect","Dimensions","get","ResetPassword","passwordError","SignUp","slides","sections","titleType","titleStyle","paragraphs","Welcome","onSignUp","onLogIn","duration","noHeader","headerShown","tabIcons","plan","focused","unFocused","implement","reflect","HomeStack","createBottomTabNavigator","Home","tabBarOptions","keyboardHidesTabBar","activeTintColor","inactiveTintColor","secondary","showLabel","screenOptions","route","tabBarIcon","iconColor","useTabs","Navigator","Screen","component","Implement","ImplementStack","createStackNavigator","LandingStack","Landing","mode","rootMode","rootScreenOptions","MainStack","Main","App"],"mappings":"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","file":"static/js/12.9337a1f8.chunk.js","sourcesContent":["import {config} from '../../../utils';\n\nexport const completeConfig = {\n  borderRadius: config.padding(2),\n  padding: config.padding(4),\n  alert: {\n    width: 0.8,\n    height: 0.6,\n  },\n};\n","import {useIsFocused} from '@react-navigation/native';\nimport {useRootSelector} from '../../../utils';\n\nexport const useKeyboardHeight = (): number => {\n  const isFocused = useIsFocused();\n  const keyboardHeight = useRootSelector((s) => s.device.keyboardHeight);\n  return isFocused && keyboardHeight ? keyboardHeight : 0;\n};\n","import {v4} from 'uuid';\nimport {Item, User} from '../models';\n\ntype GetDefaultUserTemplate = {\n  user: User;\n  items: Item[];\n};\n\nconst dItem = (u: string): Item => {\n  const date = Date.now();\n  return {\n    id: v4(),\n    title: '',\n    userId: u,\n    description: '',\n    active: true,\n    createdAt: date,\n    updatedAt: date,\n    tags: [],\n    editable: true,\n    children: [],\n    type: 'note',\n  };\n};\n\nconst dKanban = (u: string): Item[] => {\n  const items: Item[] = [\n    {...dItem(u), title: 'Backlog', type: 'list'},\n    {...dItem(u), title: 'Todo', type: 'list'},\n    {...dItem(u), title: 'In Progress', type: 'list'},\n    {...dItem(u), title: 'Done', type: 'list'},\n  ];\n  return items;\n};\n\nexport const getDefaultUserTemplate = (): GetDefaultUserTemplate => {\n  // user\n  const date = Date.now();\n  const u = v4();\n\n  // inbox\n  const inboxItems: Item[] = [\n    {...dItem(u), title: 'do dishes'},\n    {...dItem(u), title: 'schedule meeting with Jim'},\n    {...dItem(u), title: 'run 4 miles'},\n    {...dItem(u), title: 'change oil'},\n    {...dItem(u), title: 'what is the best mediation'},\n    {...dItem(u), title: 'record Kelly birthday on Sep 22'},\n    {...dItem(u), title: 'drink water'},\n    {...dItem(u), title: 'intensity + focus = deep work'},\n    {...dItem(u), title: 'put $20 in phone'},\n    {...dItem(u), title: 'clear emails'},\n  ];\n\n  // projects\n  const homeTodoItems: Item[] = [\n    {...dItem(u), title: 'clean desk'},\n    {...dItem(u), title: 'clean room'},\n    {...dItem(u), title: 'walk dog'},\n    {...dItem(u), title: 'brush teeth'},\n    {...dItem(u), title: 'do laundry'},\n    {...dItem(u), title: 'fix sink'},\n  ];\n  const homeItems: Item[] = dKanban(u);\n  homeItems[0].children = homeTodoItems.map((i) => i.id);\n  const townItems: Item[] = dKanban(u);\n  const workItems: Item[] = dKanban(u);\n  const gymItems: Item[] = dKanban(u);\n  const appItems: Item[] = dKanban(u);\n  const meetItems: Item[] = [\n    {...dItem(u), title: 'one one one'},\n    {...dItem(u), title: 'q1 planning'},\n  ];\n  const bookItems: Item[] = [\n    {...dItem(u), title: 'eat that frog'},\n    {...dItem(u), title: 'deep work'},\n    {...dItem(u), title: 'the one thing'},\n  ];\n  const giftItems: Item[] = [\n    {...dItem(u), title: 'girlfriend'},\n    {...dItem(u), title: 'sister'},\n    {...dItem(u), title: 'parents'},\n  ];\n  const checkItems: Item[] = [\n    {...dItem(u), title: 'after bathroom'},\n    {...dItem(u), title: 'before car'},\n    {...dItem(u), title: 'before sleep'},\n  ];\n  const codeItems: Item[] = [\n    {...dItem(u), title: 'php'},\n    {...dItem(u), title: 'javascript'},\n    {...dItem(u), title: 'swift'},\n  ];\n  const projectItems: Item[] = [\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at home',\n      children: homeItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at town',\n      children: townItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at work',\n      children: workItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'at gym',\n      children: gymItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'board',\n      title: 'app release',\n      children: appItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'meeting notes',\n      children: meetItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'book notes',\n      children: bookItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'gift ideas',\n      children: giftItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'checklists',\n      children: checkItems.map((i) => i.id),\n    },\n    {\n      ...dItem(u),\n      type: 'list',\n      title: 'coding',\n      children: codeItems.map((i) => i.id),\n    },\n  ];\n\n  // user\n  const userItems: Item[] = [\n    {\n      ...dItem(u),\n      title: 'Inbox',\n      type: 'list',\n      children: inboxItems.map((i) => i.id),\n      editable: false,\n    },\n    {\n      ...dItem(u),\n      title: 'Projects',\n      type: 'list',\n      children: projectItems.map((i) => i.id),\n      editable: false,\n    },\n  ];\n  const user: User = {\n    id: u,\n    active: true,\n    email: 'bob@smith.com',\n    createdAt: date,\n    updatedAt: date,\n    name: 'Bob Smith',\n    items: userItems.map((i) => i.id),\n  };\n\n  return {\n    user,\n    items: [\n      ...inboxItems,\n      ...homeTodoItems,\n      ...homeItems,\n      ...townItems,\n      ...workItems,\n      ...gymItems,\n      ...appItems,\n      ...meetItems,\n      ...bookItems,\n      ...giftItems,\n      ...checkItems,\n      ...codeItems,\n      ...projectItems,\n      ...userItems,\n    ],\n  };\n};\n","import {useNavigation} from '@react-navigation/native';\nimport {useEffect} from 'react';\nimport {SoundManager} from '../../../utils/Sound';\n\nexport const useTabTap = (): void => {\n  const {addListener} = useNavigation();\n  useEffect(() => {\n    const unsubscribe = addListener('tabPress', () => {\n      SoundManager.play('tap');\n    });\n    return unsubscribe;\n  }, [addListener]);\n};\n","import React, {\n  memo,\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport {TextInput as Original, View} from 'react-native';\nimport {Icon, TextInput} from '../../../components';\nimport {PointerEvents} from '../../../components/TextInput/types';\nimport {TouchableWithoutFeedback} from '../../../conversions';\nimport {useColor} from '../../../hooks';\nimport {config, FontType} from '../../../utils';\n\ntype Icon = {\n  name: string;\n  onPress: (text: string) => void;\n  hidden?: boolean;\n  color?: string;\n  focus?: boolean;\n  required?: boolean;\n};\n\ntype TextInputWithIconsProps = {\n  value: string;\n  placeholder: string;\n  icons: Icon[];\n  onRef?: MutableRefObject<Original | null>;\n  onSubmit: (text: string) => void;\n  backgroundColor?: string;\n  pointerEvents?: PointerEvents;\n  type?: FontType;\n  onBlur?: () => void;\n  onFocus?: () => void;\n  blurOnSubmit?: boolean;\n  multiline?: boolean;\n  iconHeight?: number;\n  editable?: boolean;\n  numberOfLines?: number;\n};\n\nexport const TextInputWithIcons = memo(function TextInputWithIcons({\n  value,\n  multiline,\n  iconHeight = config.padding(6),\n  placeholder,\n  backgroundColor,\n  editable,\n  pointerEvents,\n  icons,\n  type,\n  onSubmit,\n  blurOnSubmit,\n  onFocus,\n  numberOfLines,\n  onBlur,\n  onRef,\n}: TextInputWithIconsProps) {\n  const color = useColor();\n  const bgColor = backgroundColor || color.background;\n  const [text, setText] = useState(value);\n  const [showControls, setShowControls] = useState(false);\n\n  const onTextChange = useCallback((change) => {\n    setText(change);\n  }, []);\n\n  const onFocusInternal = useCallback(() => {\n    setShowControls(true);\n    if (onFocus) onFocus();\n  }, [onFocus]);\n\n  const onSubmitInternal = useCallback(() => {\n    const result = text.trim();\n    onSubmit(result);\n    if (value === '') setText('');\n  }, [onSubmit, text, value]);\n\n  const onBlurInternal = useCallback(() => {\n    setText(value);\n    setShowControls(false);\n    if (onBlur) onBlur();\n  }, [onBlur, value]);\n\n  const onIconPressInternal = useCallback(\n    (callback) => () => {\n      callback(text);\n      if (value === '') setText('');\n    },\n    [text, value],\n  );\n\n  const onIconParentPress = useCallback((e) => e.preventDefault(), []);\n\n  useEffect(() => {\n    setText(value);\n  }, [value]);\n\n  return (\n    <View style={{flex: 1, flexDirection: 'row', alignItems: 'center'}}>\n      <TextInput\n        backgroundColor={bgColor}\n        blurOnSubmit={blurOnSubmit}\n        editable={editable}\n        flex\n        multiline={multiline}\n        numberOfLines={numberOfLines}\n        onBlur={onBlurInternal}\n        onChangeText={onTextChange}\n        onFocus={onFocusInternal}\n        onRef={onRef}\n        onSubmitEditing={onSubmitInternal}\n        placeholder={placeholder}\n        pointerEvents={pointerEvents}\n        returnKeyType=\"done\"\n        type={type}\n        value={text}\n      />\n      <TouchableWithoutFeedback\n        onPress={onIconParentPress}\n        style={{flexDirection: 'row'}}>\n        {icons.map((icon) =>\n          icon.hidden ||\n          (showControls && !icon.focus) ||\n          (!showControls && icon.focus) ? null : (\n            <Icon\n              color={icon.color}\n              disabled={icon.required && text.trim().length === 0}\n              key={`${icon.name}-focus`}\n              name={icon.name}\n              onPress={onIconPressInternal(icon.onPress)}\n              padded\n              size={iconHeight}\n            />\n          ),\n        )}\n      </TouchableWithoutFeedback>\n    </View>\n  );\n});\n","import React, {memo, useCallback, useEffect, useRef, useState} from 'react';\nimport {TextInput as OriginalTextInput, View} from 'react-native';\nimport {Button} from '../../../components';\nimport {useColor} from '../../../hooks';\nimport {config} from '../../../utils';\nimport {completeConfig} from '../utils';\nimport {TextInputWithIcons} from './TextInputWithIcons';\n\ntype AddButtonProps = {\n  width?: number;\n  placeholder: string;\n  title: string;\n  onSubmit: (value: string) => void;\n  noSubmitFocus?: boolean;\n};\n\nexport const AddButton = memo(function AddButton({\n  width,\n  placeholder,\n  title,\n  noSubmitFocus,\n  onSubmit,\n}: AddButtonProps) {\n  const color = useColor();\n  const textInputRef = useRef<OriginalTextInput | null>(null);\n  const [showInput, setShowInput] = useState(false);\n  const onAddItemPress = useCallback(() => {\n    setShowInput((p) => !p);\n  }, []);\n\n  const onItemTitleClose = useCallback(() => {\n    setShowInput(false);\n  }, []);\n\n  const onItemTitleSubmit = useCallback(\n    (text) => {\n      onSubmit(text);\n      if (noSubmitFocus) textInputRef.current?.blur();\n    },\n    [noSubmitFocus, onSubmit],\n  );\n\n  const onBlur = useCallback(() => {\n    setShowInput(false);\n  }, []);\n\n  const icons = [\n    {name: 'close', onPress: onItemTitleClose, focus: true},\n    {\n      name: 'send',\n      onPress: onItemTitleSubmit,\n      color: color.primary,\n      focus: true,\n      required: true,\n    },\n  ];\n\n  useEffect(() => {\n    if (showInput) textInputRef.current?.focus();\n  }, [showInput]);\n\n  return (\n    <View\n      style={{\n        width,\n        height: config.padding(12),\n        borderRadius: completeConfig.borderRadius,\n        backgroundColor: color.background,\n        justifyContent: 'center',\n      }}>\n      {showInput ? (\n        <TextInputWithIcons\n          blurOnSubmit={false}\n          icons={icons}\n          onBlur={onBlur}\n          onRef={textInputRef}\n          onSubmit={onItemTitleSubmit}\n          placeholder={placeholder}\n          value=\"\"\n        />\n      ) : (\n        <Button center color=\"primary\" onPress={onAddItemPress} title={title} />\n      )}\n    </View>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {Keyboard} from 'react-native';\nimport {v4} from 'uuid';\nimport {useRootDispatch, useRootSelector} from '../../../utils';\nimport {addItemToItem, createItem, Item} from '../models';\nimport {AddButton} from './AddButton';\n\ntype AddItemProps = {\n  parentItemId: string | null;\n  placeholder: string;\n  title: string;\n  width?: number;\n};\n\nexport const AddItem = memo(function AddItem({\n  placeholder,\n  title,\n  parentItemId,\n  width,\n}: AddItemProps) {\n  const dispatch = useRootDispatch();\n  const userId = useRootSelector((s) => s.completeUser?.id);\n  if (!userId) throw new Error('missing userId on add item');\n  if (!parentItemId) throw new Error('missing parentItemId on add item');\n  const onSubmit = useCallback(\n    (value: string) => {\n      if (!value) return Keyboard.dismiss();\n      const itemId = v4();\n      const date = Date.now();\n      const item: Item = {\n        id: itemId,\n        userId,\n        active: true,\n        title: value,\n        createdAt: date,\n        updatedAt: date,\n        children: [],\n        tags: [],\n        description: '',\n        editable: true,\n        type: 'note',\n      };\n      dispatch(createItem(item));\n      dispatch(addItemToItem({parentItemId, itemId}));\n    },\n    [dispatch, parentItemId, userId],\n  );\n\n  return (\n    <AddButton\n      onSubmit={onSubmit}\n      placeholder={placeholder}\n      title={title}\n      width={width}\n    />\n  );\n});\n","import React, {memo, ReactElement} from 'react';\nimport {LayoutChangeEvent, View} from 'react-native';\nimport {useColor} from '../../../hooks';\nimport {completeConfig} from '../utils';\n\n// TODO: combine card components with global card\n\ntype CardProps = {\n  onLayout?: (event: LayoutChangeEvent) => void;\n  children: ReactElement | ReactElement[];\n  margin?: 'bottom' | 'right' | 'none';\n  width?: number;\n  flex?: boolean;\n};\n\nexport const Card = memo(function Card({\n  children,\n  onLayout,\n  margin = 'none',\n  width,\n  flex,\n}: CardProps) {\n  const color = useColor();\n  return (\n    <View\n      onLayout={onLayout}\n      style={{\n        flex: flex ? 1 : 0,\n        width,\n        borderRadius: completeConfig.borderRadius,\n        backgroundColor: color.background,\n        padding: completeConfig.padding / 2,\n        marginRight: margin === 'right' ? completeConfig.padding : 0,\n        marginBottom: margin === 'bottom' ? completeConfig.padding : 0,\n      }}>\n      {children}\n    </View>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback} from 'react';\nimport {Keyboard, View} from 'react-native';\nimport {useColor} from '../../../hooks';\nimport {useRootDispatch, useRootSelector} from '../../../utils';\nimport {navItemDetails, updateItem} from '../models';\nimport {TextInputWithIcons} from './TextInputWithIcons';\n\ntype ListHeaderProps = {\n  itemId: string;\n  parentItemId: string | null;\n};\n\nexport const ListHeader = memo(function ListHeader({\n  itemId,\n  parentItemId,\n}: ListHeaderProps) {\n  const dispatch = useRootDispatch();\n  const {navigate} = useNavigation();\n  const color = useColor();\n  const item = useRootSelector((s) => s.completeItem.items[itemId]);\n\n  const onSave = useCallback(\n    (title) => {\n      dispatch(updateItem({...item, title}));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onDetail = useCallback(() => {\n    dispatch(navItemDetails({parentItemId, itemId}));\n    navigate('item-detail');\n  }, [dispatch, itemId, navigate, parentItemId]);\n\n  const onClose = useCallback(() => Keyboard.dismiss(), []);\n\n  const icons = [\n    {name: 'close', onPress: onClose, focus: true},\n    {\n      name: 'send',\n      onPress: onSave,\n      color: color.primary,\n      focus: true,\n      required: true,\n    },\n    {name: 'dots-horizontal', onPress: onDetail},\n  ];\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n      }}>\n      <TextInputWithIcons\n        editable={item.editable}\n        icons={icons}\n        onSubmit={onSave}\n        placeholder=\"List title...\"\n        type=\"h4\"\n        value={item.title}\n      />\n    </View>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useRef} from 'react';\nimport {Keyboard, TextInput as OriginalTextInput} from 'react-native';\nimport {TouchableWithoutFeedback} from '../../../conversions';\nimport {useColor} from '../../../hooks';\nimport {useRootDispatch, useRootSelector} from '../../../utils';\nimport {\n  navItemDetails,\n  navItemProject,\n  swapItemOrderInItem,\n  updateItem,\n} from '../models';\nimport {completeConfig} from '../utils';\nimport {TextInputWithIcons} from './TextInputWithIcons';\n\ntype ListItemProps = {\n  index: number;\n  itemId: string;\n  parentItemId: string;\n};\n\nexport const ListItem = memo(function ListItem({\n  index,\n  itemId,\n  parentItemId,\n}: ListItemProps) {\n  const item = useRootSelector((s) => s.completeItem.items[itemId]);\n  const parentChildrenCount = useRootSelector(\n    (s) => s.completeItem.items[parentItemId].children.length,\n  );\n  const textInputRef = useRef<OriginalTextInput | null>(null);\n  const dispatch = useRootDispatch();\n  const {navigate} = useNavigation();\n  const color = useColor();\n\n  const onItemTitleClose = useCallback(() => {\n    Keyboard.dismiss();\n  }, []);\n\n  const onItemTitleSubmit = useCallback(\n    (title: string) => {\n      dispatch(updateItem({...item, title}));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onItemNav = useCallback(() => {\n    dispatch(navItemProject({projectItemId: itemId}));\n    navigate('project');\n  }, [dispatch, itemId, navigate]);\n\n  const onItemDetails = useCallback(() => {\n    dispatch(navItemDetails({parentItemId, itemId}));\n    navigate('item-detail');\n  }, [dispatch, itemId, navigate, parentItemId]);\n\n  const onItemLongPress = useCallback(() => undefined, []);\n\n  const onItemPress = useCallback(() => {\n    textInputRef.current?.focus();\n  }, []);\n\n  const onItemUp = useCallback(() => {\n    console.log('up', index);\n    if (index === 0) return;\n    dispatch(swapItemOrderInItem({parentItemId, i: index, j: index - 1}));\n  }, [dispatch, index, parentItemId]);\n\n  const onItemDown = useCallback(() => {\n    console.log('down', index, parentChildrenCount);\n    if (index >= parentChildrenCount - 1) return;\n    dispatch(swapItemOrderInItem({parentItemId, i: index, j: index + 1}));\n  }, [dispatch, index, parentChildrenCount, parentItemId]);\n\n  const icons = [\n    {name: 'close', onPress: onItemTitleClose, focus: true},\n    {\n      name: 'send',\n      onPress: onItemTitleSubmit,\n      color: color.primary,\n      focus: true,\n      required: true,\n    },\n    {name: 'chevron-up', onPress: onItemUp, hidden: true},\n    {name: 'chevron-down', onPress: onItemDown, hidden: true},\n    {name: 'dots-horizontal', onPress: onItemDetails},\n    {\n      name: 'chevron-right',\n      onPress: onItemNav,\n      hidden: !item.children.length,\n    },\n  ];\n\n  return (\n    <TouchableWithoutFeedback\n      key={item.id}\n      onLongPress={onItemLongPress}\n      onPress={onItemPress}\n      style={{\n        flex: 1,\n        borderRadius: completeConfig.borderRadius,\n        margin: completeConfig.padding / 2,\n        backgroundColor: color.surface,\n        flexDirection: 'row',\n      }}>\n      <TextInputWithIcons\n        backgroundColor={color.surface}\n        icons={icons}\n        onRef={textInputRef}\n        onSubmit={onItemTitleSubmit}\n        placeholder=\"Item name...\"\n        pointerEvents=\"none\"\n        value={item.title}\n      />\n    </TouchableWithoutFeedback>\n  );\n});\n","import React, {memo, useCallback, useRef} from 'react';\nimport {FlatList, ListRenderItem} from 'react-native';\nimport {useRootSelector} from '../../../utils';\nimport {ListItem} from './ListItem';\n\ntype ListItemsProps = {\n  parentItemId: string;\n};\n\nexport const ListItems = memo(function ListItems({\n  parentItemId,\n}: ListItemsProps) {\n  const list = useRootSelector(\n    (s) => s.completeItem.items[parentItemId].children,\n  );\n  const cardsRef = useRef<FlatList | null>(null);\n  const cardsLength = useRef(list.length);\n\n  const onKeyExtractor = useCallback((item) => item, []);\n\n  const onCardSizeChange = useCallback(() => {\n    if (list.length > cardsLength.current) {\n      cardsRef.current?.scrollToEnd();\n      cardsLength.current = list.length;\n    }\n  }, [list.length]);\n\n  const onRenderItem: ListRenderItem<string> = useCallback(\n    ({item, index}) => {\n      return (\n        <ListItem\n          index={index}\n          itemId={item}\n          key={item}\n          parentItemId={parentItemId}\n        />\n      );\n    },\n    [parentItemId],\n  );\n\n  return (\n    <FlatList\n      data={list}\n      keyExtractor={onKeyExtractor}\n      keyboardShouldPersistTaps=\"handled\"\n      onContentSizeChange={onCardSizeChange}\n      ref={cardsRef}\n      renderItem={onRenderItem}\n      showsVerticalScrollIndicator={false}\n    />\n  );\n});\n","import React, {memo, ReactElement} from 'react';\nimport {View} from 'react-native';\nimport {completeConfig} from '../utils';\nimport {AddItem} from './AddItem';\nimport {Card} from './Card';\nimport {ListHeader} from './ListHeader';\nimport {ListItems} from './ListItems';\n\ntype ListProps = {\n  listWidth?: number;\n  itemId: string;\n  parentItemId: string | null;\n  orientation?: 'vertical' | 'horizontal';\n  footer?: ReactElement;\n  maxHeight: number;\n};\n\nexport const List = memo(function List({\n  itemId,\n  parentItemId,\n  orientation = 'vertical',\n  listWidth,\n  maxHeight,\n  footer,\n}: ListProps) {\n  const horizontal = orientation === 'horizontal';\n  const padding = horizontal ? 0 : completeConfig.padding;\n  const margin = horizontal ? 'right' : 'bottom';\n  return (\n    <View style={{padding, maxHeight}}>\n      <Card margin={margin} width={listWidth}>\n        <ListHeader itemId={itemId} parentItemId={parentItemId} />\n        <ListItems parentItemId={itemId} />\n        <AddItem\n          parentItemId={itemId}\n          placeholder=\"Item title...\"\n          title=\"Add item\"\n        />\n      </Card>\n      {footer ? footer : null}\n    </View>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {View} from 'react-native';\nimport {FlatList} from '../../../conversions';\nimport {useRootSelector} from '../../../utils';\nimport {completeConfig} from '../utils';\nimport {AddItem} from './AddItem';\nimport {List} from './List';\n\ntype BoardProps = {\n  projectItemId: string;\n  listMaxHeight: number;\n  listWidth: number;\n};\n\nexport const Board = memo(function Board({\n  projectItemId,\n  listMaxHeight,\n  listWidth,\n}: BoardProps) {\n  const listSize = listWidth + completeConfig.padding;\n  const board = useRootSelector((s) => s.completeItem.items[projectItemId]);\n  const getItemId = useCallback((item) => item, []);\n  const getItemLayout = useCallback(\n    (_, index) => ({length: listSize, offset: listSize * index, index}),\n    [listSize],\n  );\n\n  const renderAddList = useCallback(() => {\n    return (\n      <AddItem\n        parentItemId={board.id}\n        placeholder=\"List title...\"\n        title=\"Add list\"\n        width={listWidth}\n      />\n    );\n  }, [board.id, listWidth]);\n\n  const renderList = useCallback(\n    ({item}) => {\n      return (\n        <List\n          itemId={item}\n          key={item}\n          listWidth={listWidth}\n          maxHeight={listMaxHeight}\n          orientation=\"horizontal\"\n          parentItemId={board.id}\n        />\n      );\n    },\n    [board.id, listMaxHeight, listWidth],\n  );\n\n  return (\n    <View>\n      {board.type === 'list' ? (\n        <List\n          itemId={board.id}\n          maxHeight={listMaxHeight}\n          parentItemId={board.id}\n        />\n      ) : (\n        <FlatList\n          ListFooterComponent={renderAddList}\n          contentContainerStyle={{padding: completeConfig.padding}}\n          data={board.children}\n          decelerationRate=\"fast\"\n          getItemLayout={getItemLayout}\n          horizontal\n          keyExtractor={getItemId}\n          keyboardShouldPersistTaps=\"handled\"\n          renderItem={renderList}\n          showsHorizontalScrollIndicator={false}\n          snapToAlignment=\"center\"\n          snapToInterval={listSize}\n          style={{height: '100%'}}\n        />\n      )}\n    </View>\n  );\n});\n","import React, {memo} from 'react';\nimport {View} from 'react-native';\nimport {Button, Modal, Text} from '../../../components';\nimport {config} from '../../../utils';\n\ntype DeleteModalProps = {\n  onDelete: () => void;\n  onCancel: () => void;\n};\n\nexport const DeleteModal = memo(function DeleteModal({\n  onCancel,\n  onDelete,\n}: DeleteModalProps) {\n  return (\n    <Modal onBackgroundPress={onCancel} showOverlay widthPercent={0.5}>\n      <View style={{alignItems: 'center'}}>\n        <Text\n          style={{paddingBottom: config.padding(2)}}\n          title=\"Are you sure?\"\n          type=\"h5\"\n        />\n        <View style={{flexDirection: 'row', justifyContent: 'center'}}>\n          <Button onPress={onCancel} title=\"close\" />\n          <Button color=\"danger\" onPress={onDelete} title=\"delete\" />\n        </View>\n      </View>\n    </Modal>\n  );\n});\n","import React, {memo} from 'react';\nimport {Text} from '../../../components';\nimport {config} from '../../../utils';\n\ntype ItemDetailHeaderProps = {\n  title: string;\n};\n\nexport const ItemDetailHeader = memo(function ItemDetailHeader({\n  title,\n}: ItemDetailHeaderProps) {\n  return (\n    <Text\n      emphasis=\"medium\"\n      style={{padding: config.padding(2)}}\n      title={title}\n      type=\"overline\"\n    />\n  );\n});\n","import React, {memo} from 'react';\nimport {View} from 'react-native';\nimport {RelativeDate, Text} from '../../../components';\nimport {config} from '../../../utils';\nimport {Card} from './Card';\nimport {ItemDetailHeader} from './ItemDetailHeader';\n\ntype ItemContextProps = {\n  userId: string;\n  createdAt: number;\n  updatedAt: number;\n  type: string;\n};\n\nexport const ItemContext = memo(function ItemContext({\n  type,\n  userId,\n  createdAt,\n  updatedAt,\n}: ItemContextProps) {\n  return (\n    <View>\n      <Card margin=\"bottom\">\n        <ItemDetailHeader title=\"Type\" />\n        <Text style={{padding: config.padding(2)}} title={type} />\n        <ItemDetailHeader title=\"Creator\" />\n        <Text style={{padding: config.padding(2)}} title={userId} />\n        <ItemDetailHeader title=\"Created\" />\n        <RelativeDate date={createdAt} style={{padding: config.padding(2)}} />\n        <ItemDetailHeader title=\"Updated\" />\n        <RelativeDate date={updatedAt} style={{padding: config.padding(2)}} />\n      </Card>\n    </View>\n  );\n});\n","import React, {memo, useCallback} from 'react';\nimport {Keyboard, View} from 'react-native';\nimport {useColor} from '../../../hooks';\nimport {Card} from './Card';\nimport {ItemDetailHeader} from './ItemDetailHeader';\nimport {TextInputWithIcons} from './TextInputWithIcons';\n\ntype ItemEditProps = {\n  title: string;\n  description?: string;\n  placeholder: string;\n  onSubmit: (type: string) => (text: string) => void;\n};\n\nexport const ItemEdit = memo(function ItemEdit({\n  title,\n  description = '',\n  placeholder,\n  onSubmit,\n}: ItemEditProps) {\n  const color = useColor();\n  const onClose = useCallback(() => Keyboard.dismiss(), []);\n\n  const icons = useCallback(\n    (type: string) => [\n      {name: 'close', onPress: onClose, focus: true},\n      {\n        name: 'send',\n        onPress: onSubmit(type),\n        color: color.primary,\n        focus: true,\n        required: true,\n      },\n    ],\n    [color.primary, onClose, onSubmit],\n  );\n\n  return (\n    <View>\n      <Card margin=\"bottom\">\n        <ItemDetailHeader title=\"Title\" />\n        <TextInputWithIcons\n          icons={icons('title')}\n          onSubmit={onSubmit('title')}\n          placeholder={`${placeholder} title...`}\n          value={title}\n        />\n        <ItemDetailHeader title=\"Details\" />\n        <TextInputWithIcons\n          icons={icons('description')}\n          multiline\n          onSubmit={onSubmit('description')}\n          placeholder={`${placeholder} details...`}\n          value={description || ''}\n        />\n      </Card>\n    </View>\n  );\n});\n","import React, {memo} from 'react';\nimport {View} from 'react-native';\nimport {Icon, Text} from '../../../components';\nimport {config} from '../../../utils';\n\ntype Props = {\n  title: string;\n  onLeftPress?: () => void;\n  onRightPress?: () => void;\n  size?: number;\n};\n\nexport const ModalHeader = memo(function ModalHeader({\n  title,\n  onLeftPress,\n  size = config.padding(8),\n  onRightPress,\n}: Props) {\n  return (\n    <View style={{flexDirection: 'row', alignItems: 'center'}}>\n      <Icon\n        invisible={!onLeftPress}\n        name=\"chevron-left\"\n        onPress={onLeftPress}\n        padded\n        size={size}\n      />\n      <Text center flex title={title} type=\"h4\" />\n      <Icon\n        invisible={!onRightPress}\n        name=\"close\"\n        onPress={onRightPress}\n        padded\n        size={size}\n      />\n    </View>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback} from 'react';\nimport {Button, Modal, Text} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {config, useRootDispatch} from '../../../../utils';\nimport {Card} from '../../components';\nimport {removeUser} from '../../models';\n\n// TODO: figure out a place for this\n// TODO: add reminders\n// TODO: add profile information\n// TODO: add payment\n\nexport const Account = memo(function Account() {\n  const color = useColor();\n  const dispatch = useRootDispatch();\n  const {goBack, navigate} = useNavigation();\n  const navBack = useCallback(() => goBack(), [goBack]);\n\n  const onLogout = useCallback(() => {\n    dispatch(removeUser());\n  }, [dispatch]);\n\n  const onNavToAdmin = useCallback(() => navigate('admin'), [navigate]);\n\n  return (\n    <Modal backgroundColor={color.surface} onBackgroundPress={navBack}>\n      <Card margin=\"bottom\">\n        <Text\n          emphasis=\"low\"\n          style={{paddingBottom: config.padding(4)}}\n          title=\"Profile\"\n          type=\"h5\"\n        />\n        <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n      </Card>\n      <Card margin=\"bottom\">\n        <Text\n          emphasis=\"low\"\n          style={{paddingBottom: config.padding(4)}}\n          title=\"Reminders\"\n          type=\"h5\"\n        />\n        <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n      </Card>\n      <Card margin=\"bottom\">\n        <Text\n          emphasis=\"low\"\n          style={{paddingBottom: config.padding(4)}}\n          title=\"Payment\"\n          type=\"h5\"\n        />\n        <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n      </Card>\n      <Card margin=\"bottom\">\n        <Text\n          emphasis=\"low\"\n          style={{paddingBottom: config.padding(4)}}\n          title=\"Feedback\"\n          type=\"h5\"\n        />\n        <Text center emphasis=\"medium\" title=\"...\" type=\"h4\" />\n      </Card>\n      <Button onPress={onLogout} title=\"logout\" />\n      <Button onPress={onNavToAdmin} title=\"go to admin\" />\n    </Modal>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useRef, useState} from 'react';\nimport {LayoutChangeEvent} from 'react-native';\nimport {Button, KeyboardHandler, Screen} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {config, useRootSelector} from '../../../../utils';\nimport {Card, List} from '../../components';\nimport {getInbox} from '../../models';\nimport {useTabTap} from '../../utils';\nimport {useKeyboardHeight} from '../../utils/useKeyboardHeight';\n\nconst initialState = {container: 0, button: 0, size: 0};\nexport const Capture = memo(function Capture() {\n  useTabTap();\n  const {navigate} = useNavigation();\n  const color = useColor();\n  const containerRefs = useRef(initialState);\n  const keyboardHeight = useKeyboardHeight();\n  const [containerHeight, setContainerHeight] = useState(0);\n  const keyboardPadding = config.padding(keyboardHeight ? 11 : 48);\n  const maxHeight = containerHeight - keyboardHeight - keyboardPadding;\n\n  const itemId = useRootSelector(getInbox);\n  if (!itemId) throw new Error('missing item id');\n  const noItemChildren = useRootSelector(\n    (s) => s.completeItem.items[itemId].children.length === 0,\n  );\n\n  const onOrganize = useCallback(() => undefined, []);\n\n  const onLayout = useCallback(\n    (key: keyof typeof initialState) => (event: LayoutChangeEvent) => {\n      const {height} = event.nativeEvent.layout;\n      if (!containerRefs.current[key]) containerRefs.current[key] = height;\n      const {container, button, size} = containerRefs.current;\n      if (container > 0 && button > 0 && !size) {\n        const dimensions = container - button;\n        setContainerHeight(dimensions);\n        containerRefs.current.size = dimensions;\n      }\n    },\n    [],\n  );\n\n  const navToAccount = useCallback(() => navigate('account'), [navigate]);\n\n  return (\n    <Screen onRightPress={navToAccount} rightIcon=\"account\" title=\"Plan\">\n      <KeyboardHandler\n        backgroundColor={color.surface}\n        onLayout={onLayout('container')}>\n        <List\n          footer={\n            <Card onLayout={onLayout('button')}>\n              <Button\n                center\n                color=\"primary\"\n                disable={noItemChildren}\n                onPress={onOrganize}\n                title=\"Organize\"\n              />\n            </Card>\n          }\n          itemId={itemId}\n          maxHeight={maxHeight}\n          parentItemId={null}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useState} from 'react';\nimport {Keyboard, View} from 'react-native';\nimport {Button, Modal, Text} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {config, useRootDispatch, useRootSelector} from '../../../../utils';\nimport {Card, DeleteModal, ItemContext, ItemEdit} from '../../components';\nimport {removeItem, removeItemFromItem, updateItem} from '../../models';\n\nexport const ItemDetail = memo(function ItemDetail() {\n  const dispatch = useRootDispatch();\n  const {goBack} = useNavigation();\n  const color = useColor();\n  const navBack = useCallback(() => goBack(), [goBack]);\n  const {itemId, parentItemId} = useRootSelector((s) => s.completeItem.nav);\n  const item = useRootSelector((s) => s.completeItem.items[itemId || '']);\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  const onItemDelete = useCallback(() => {\n    if (!itemId || !parentItemId)\n      throw new Error('missing listId or itemId on item detail screen');\n    dispatch(removeItem(itemId));\n    dispatch(removeItemFromItem({parentItemId, itemId}));\n    setDeleteModal(false);\n    goBack();\n  }, [dispatch, goBack, itemId, parentItemId]);\n\n  const onItemSubmit = useCallback(\n    (type: string) => (text: string) => {\n      dispatch(updateItem({...item, [type]: text}));\n      Keyboard.dismiss();\n    },\n    [dispatch, item],\n  );\n\n  const onDeletePress = useCallback(() => setDeleteModal(true), []);\n  const onDeleteClose = useCallback(() => setDeleteModal(false), []);\n\n  return !item ? null : (\n    <>\n      <Modal backgroundColor={color.surface} onBackgroundPress={navBack}>\n        {!item ? (\n          <Text title=\"missing item\" />\n        ) : (\n          <View>\n            <ItemEdit\n              description={item.description}\n              onSubmit={onItemSubmit}\n              placeholder=\"Item\"\n              title={item.title}\n            />\n            <Card margin=\"bottom\">\n              <Text title=\"Reminders\" />\n            </Card>\n            <Card margin=\"bottom\">\n              <Text title=\"Tags\" />\n            </Card>\n            <Card margin=\"bottom\">\n              <Text title=\"Comments\" />\n            </Card>\n            <ItemContext\n              createdAt={item.createdAt}\n              type={item.type}\n              updatedAt={item.updatedAt}\n              userId={item.userId}\n            />\n            {!item.editable ? (\n              <Card flex>\n                <Button center onPress={navBack} title=\"close\" />\n              </Card>\n            ) : (\n              <View\n                style={{\n                  flexDirection: 'row',\n                  flex: 1,\n                  justifyContent: 'space-between',\n                }}>\n                <Card flex>\n                  <Button center onPress={navBack} title=\"close\" />\n                </Card>\n                <View style={{padding: config.padding(2)}} />\n                <Card flex>\n                  <Button\n                    center\n                    color=\"danger\"\n                    onPress={onDeletePress}\n                    title=\"delete\"\n                  />\n                </Card>\n              </View>\n            )}\n          </View>\n        )}\n      </Modal>\n      {!deleteModal ? null : (\n        <DeleteModal onCancel={onDeleteClose} onDelete={onItemDelete} />\n      )}\n    </>\n  );\n});\n","import {useIsFocused, useNavigation} from '@react-navigation/native';\nimport {StackNavigationProp} from '@react-navigation/stack';\nimport React, {memo, useCallback, useState} from 'react';\nimport {Button, Modal, TextInput} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {useRootDispatch} from '../../../../utils';\nimport {ModalHeader} from '../../components';\nimport {createItem, createUser} from '../../models';\nimport {LandingStackParams} from '../../navigation-types';\nimport {getDefaultUserTemplate} from '../../utils';\n\nconst initialState = {email: '', password: ''};\n\nexport const LogIn = memo(function LogIn() {\n  const color = useColor();\n  const dispatch = useRootDispatch();\n  const focus = useIsFocused();\n  const [form, setForm] = useState(initialState);\n  const {goBack, navigate} = useNavigation<\n    StackNavigationProp<LandingStackParams>\n  >();\n  const navBack = useCallback(() => goBack(), [goBack]);\n  const navWelcome = useCallback(() => navigate('welcome'), [navigate]);\n  const onSecondary = useCallback(() => navigate('reset-password'), [navigate]);\n  const completeForm = form.email.length > 0 && form.password.length > 0;\n\n  const onSubmit = useCallback(() => {\n    const {user, items} = getDefaultUserTemplate();\n    items.map((item) => dispatch(createItem(item)));\n    dispatch(createUser({...user, email: form.email}));\n  }, [dispatch, form.email]);\n\n  const onFormChange = useCallback(\n    (key: keyof typeof initialState) => (val: string) =>\n      setForm((p) => ({...p, [key]: val})),\n    [],\n  );\n\n  return !focus ? null : (\n    <Modal backgroundColor={color.surface} onBackgroundPress={navWelcome}>\n      <ModalHeader onRightPress={navBack} title=\"Log in\" />\n      <TextInput\n        onChangeText={onFormChange('email')}\n        placeholder=\"Email address\"\n        value={form.email}\n      />\n      <TextInput\n        onChangeText={onFormChange('password')}\n        placeholder=\"Password\"\n        value={form.password}\n      />\n      <Button\n        center\n        color=\"primary\"\n        lowercase\n        onPress={onSecondary}\n        title=\"Forgot password?\"\n      />\n      <Button\n        center\n        color=\"primary\"\n        disable={!completeForm}\n        emphasis=\"high\"\n        onPress={onSubmit}\n        title=\"Log In\"\n      />\n    </Modal>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useState} from 'react';\nimport {LayoutChangeEvent} from 'react-native';\nimport {KeyboardHandler, Screen} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {getSmallestDimension} from '../../../../models';\nimport {config, useRootSelector} from '../../../../utils';\nimport {Board} from '../../components';\nimport {useKeyboardHeight} from '../../utils/useKeyboardHeight';\n\n// TODO: figure out centering of list\n\nexport const Project = memo(function Project() {\n  const {goBack} = useNavigation();\n  const color = useColor();\n  const screenWidth = useRootSelector(getSmallestDimension);\n  const {projectItemId} = useRootSelector((s) => s.completeItem.nav);\n  if (!projectItemId) throw new Error('missing projectItemId on board screen');\n  const projectItemType = useRootSelector(\n    (s) => s.completeItem.items[projectItemId].type,\n  );\n  const projectItemTitle = useRootSelector(\n    (s) => s.completeItem.items[projectItemId].title,\n  );\n  if (!projectItemType)\n    throw new Error('missing projectItemType on board screen');\n  const listWidth = screenWidth * 0.7;\n  const [container, setContainer] = useState(0);\n  const keyboardHeight = useKeyboardHeight();\n  const typePadding = config.padding(projectItemType === 'list' ? 12 : 0);\n  const keyboardPadding = config.padding(keyboardHeight ? 28 : 48);\n  const listMaxHeight =\n    container - keyboardHeight - keyboardPadding + typePadding;\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      if (container > 0) return;\n      setContainer(event.nativeEvent.layout.height);\n    },\n    [container],\n  );\n\n  const navBack = useCallback(() => {\n    goBack();\n  }, [goBack]);\n\n  return (\n    <Screen onLeftPress={navBack} title={projectItemTitle}>\n      <KeyboardHandler backgroundColor={color.surface} onLayout={onLayout}>\n        <Board\n          listMaxHeight={listMaxHeight}\n          listWidth={listWidth}\n          projectItemId={projectItemId}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback, useState} from 'react';\nimport {LayoutChangeEvent} from 'react-native';\nimport {KeyboardHandler, Screen} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {config, useRootSelector} from '../../../../utils';\nimport {List} from '../../components';\nimport {getProjects} from '../../models';\nimport {useKeyboardHeight} from '../../utils/useKeyboardHeight';\n\n// TODO: add journal\n// TODO: add historical data\n// TODO: add purpose\n// TODO: add goals\n\n// TODO: render as <Board />\n\nexport const Projects = memo(function Projects() {\n  const color = useColor();\n  const {navigate} = useNavigation();\n  const [dimensions, setDimensions] = useState(0);\n  const keyboardHeight = useKeyboardHeight();\n  const itemId = useRootSelector(getProjects);\n  if (!itemId) throw new Error('missing item id');\n  const keyboardPadding = config.padding(keyboardHeight ? 16 : 35);\n  const maxHeight = dimensions - keyboardHeight - keyboardPadding;\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      if (dimensions > 0) return;\n      setDimensions(event.nativeEvent.layout.height);\n    },\n    [dimensions],\n  );\n\n  const navToAccount = useCallback(() => navigate('account'), [navigate]);\n\n  return (\n    <Screen\n      onRightPress={navToAccount}\n      onSecondRightPress={navToAccount}\n      rightIcon=\"account\"\n      secondRightIcon=\"magnify\"\n      title=\"Implement\">\n      <KeyboardHandler backgroundColor={color.surface} onLayout={onLayout}>\n        <List\n          itemId={itemId}\n          key={itemId}\n          maxHeight={maxHeight}\n          parentItemId={null}\n        />\n      </KeyboardHandler>\n    </Screen>\n  );\n});\n","import {scaleLinear, scaleTime} from 'd3-scale';\nimport * as shape from 'd3-shape';\nimport * as React from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport Svg, {Defs, LinearGradient, Path, Stop} from 'react-native-svg';\n\ninterface DataPoint {\n  date: number;\n  value: number;\n}\n\ninterface GraphProps {\n  data: DataPoint[];\n  width: number;\n  height: number;\n}\n\nconst strokeWidth = 4;\nconst padding = strokeWidth / 2;\nconst getDomain = (domain: number[]) => [\n  Math.min(...domain),\n  Math.max(...domain),\n];\n\nexport const Graph = ({\n  data,\n  width,\n  height,\n}: GraphProps): React.ReactElement => {\n  const scaleX = scaleTime()\n    .domain(getDomain(data.map((d) => d.date)))\n    .range([0, width]);\n  const scaleY = scaleLinear()\n    .domain(getDomain(data.map((d) => d.value)))\n    .range([height - padding, padding]);\n  const d = shape\n    .line<DataPoint>()\n    .x((p) => scaleX(p.date))\n    .y((p) => scaleY(p.value))\n    .curve(shape.curveBasis)(data) as string;\n  return (\n    <View style={{width, height}}>\n      <Svg style={StyleSheet.absoluteFill}>\n        <Defs>\n          <LinearGradient id=\"gradient\" x1=\"50%\" x2=\"50%\" y1=\"0%\" y2=\"100%\">\n            <Stop offset=\"0%\" stopColor=\"#cee3f9\" />\n            <Stop offset=\"80%\" stopColor=\"#ddedfa\" />\n            <Stop offset=\"100%\" stopColor=\"#feffff\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d={`${d}L ${width} ${height} L 0 ${height}`}\n          fill=\"url(#gradient)\"\n        />\n        <Path fill=\"transparent\" stroke=\"#3977e3\" {...{d, strokeWidth}} />\n      </Svg>\n    </View>\n  );\n};\n","import {useNavigation} from '@react-navigation/native';\nimport React, {memo, useCallback} from 'react';\nimport {Dimensions, View} from 'react-native';\nimport {Calendar, Screen, Text} from '../../../../components';\nimport {ScrollView} from '../../../../conversions';\nimport {useColor} from '../../../../hooks';\nimport {config} from '../../../../utils';\nimport {Card} from '../../components/Card';\nimport {completeConfig, useTabTap} from '../../utils';\nimport {Graph} from './Graph';\n\n// TODO: add journal\n// TODO: add historical data\n// TODO: add purpose\n// TODO: add goals\n\ntype TitleProps = {name: string};\n\nconst Title = ({name}: TitleProps) => {\n  return (\n    <Text\n      emphasis=\"high\"\n      style={{paddingBottom: completeConfig.padding}}\n      title={name}\n      type=\"h4\"\n    />\n  );\n};\n\nconst data = [\n  {date: new Date(2018, 9, 1).getTime(), value: 0},\n  {date: new Date(2018, 9, 16).getTime(), value: 0},\n  {date: new Date(2018, 9, 17).getTime(), value: 200},\n  {date: new Date(2018, 10, 1).getTime(), value: 200},\n  {date: new Date(2018, 10, 2).getTime(), value: 300},\n  {date: new Date(2018, 10, 5).getTime(), value: 300},\n];\n\nexport const Reflect = memo(function Reflect() {\n  useTabTap();\n  const color = useColor();\n  const {navigate} = useNavigation();\n  const navToAccount = useCallback(() => navigate('account'), [navigate]);\n\n  return (\n    <Screen onRightPress={navToAccount} rightIcon=\"account\" title=\"Reflect\">\n      <ScrollView\n        contentContainerStyle={{\n          padding: config.padding(4),\n          backgroundColor: color.surface,\n        }}\n        style={{backgroundColor: color.surface}}>\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Purpose\" />\n            <Text title=\"Make a significant positive difference in global productivity\" />\n          </View>\n        </Card>\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Goals\" />\n            <Text title=\"Top 3\" />\n            <Text title=\"Deep Focus\" />\n            <Text title=\"Smile\" />\n            <Text title=\"1 More Rep\" />\n          </View>\n        </Card>\n        <Card margin=\"bottom\">\n          <View>\n            <Title name=\"Review (Progress)\" />\n            <View\n              style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n              <Graph\n                data={data}\n                height={200}\n                width={\n                  Dimensions.get('window').width - completeConfig.padding * 4\n                }\n              />\n            </View>\n          </View>\n        </Card>\n        <Card>\n          <View>\n            <Title name=\"Reflect (Journal)\" />\n            <Calendar />\n          </View>\n        </Card>\n      </ScrollView>\n    </Screen>\n  );\n});\n","import {useIsFocused, useNavigation} from '@react-navigation/native';\nimport {StackNavigationProp} from '@react-navigation/stack';\nimport React, {memo, useCallback, useState} from 'react';\nimport {Button, Modal, TextInput} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {config} from '../../../../utils';\nimport {ModalHeader} from '../../components';\nimport {LandingStackParams} from '../../navigation-types';\n\nconst initialState = {email: ''};\nexport const ResetPassword = memo(function ResetPassword() {\n  const color = useColor();\n  const [form, setForm] = useState(initialState);\n  const {goBack, navigate} = useNavigation<\n    StackNavigationProp<LandingStackParams>\n  >();\n  const focus = useIsFocused();\n\n  const onSubmit = useCallback(() => goBack(), [goBack]);\n  const navWelcome = useCallback(() => navigate('welcome'), [navigate]);\n  const onFormChange = useCallback(\n    (key: keyof typeof form) => (val: string) =>\n      setForm((p) => ({...p, [key]: val})),\n    [],\n  );\n  const navBack = useCallback(() => goBack(), [goBack]);\n\n  return !focus ? null : (\n    <Modal backgroundColor={color.surface} onBackgroundPress={navWelcome}>\n      <ModalHeader onRightPress={navBack} title=\"Reset password\" />\n      <TextInput\n        onChangeText={onFormChange('email')}\n        placeholder=\"Email address\"\n        style={{padding: config.padding(2)}}\n        value={form.email}\n      />\n      <Button\n        center\n        color=\"primary\"\n        disable={!form.email.length}\n        emphasis=\"high\"\n        onPress={onSubmit}\n        title=\"Reset\"\n      />\n    </Modal>\n  );\n});\n","import {useIsFocused, useNavigation} from '@react-navigation/native';\nimport {StackNavigationProp} from '@react-navigation/stack';\nimport React, {memo, useCallback, useState} from 'react';\nimport {Button, Modal, Text, TextInput} from '../../../../components';\nimport {useColor} from '../../../../hooks';\nimport {useRootDispatch} from '../../../../utils';\nimport {ModalHeader} from '../../components';\nimport {createItem, createUser} from '../../models';\nimport {LandingStackParams} from '../../navigation-types';\nimport {getDefaultUserTemplate} from '../../utils';\n\nconst passwordError = 'Password is too short';\nconst initialState = {email: '', password: '', passwordError: false};\n\nexport const SignUp = memo(function SignUp() {\n  const color = useColor();\n  const dispatch = useRootDispatch();\n  const focus = useIsFocused();\n  const [form, setForm] = useState(initialState);\n  const {goBack, navigate} = useNavigation<\n    StackNavigationProp<LandingStackParams>\n  >();\n  const navBack = useCallback(() => goBack(), [goBack]);\n  const navWelcome = useCallback(() => navigate('welcome'), [navigate]);\n  const onSecondary = useCallback(() => navigate('log-in'), [navigate]);\n  const completeForm =\n    form.email.length && form.password.length && !form.passwordError;\n\n  const onSubmit = useCallback(() => {\n    const {user, items} = getDefaultUserTemplate();\n    items.map((item) => dispatch(createItem(item)));\n    dispatch(createUser({...user, email: form.email}));\n  }, [dispatch, form.email]);\n\n  const onFormChange = useCallback(\n    (key: keyof typeof initialState) => (val: string) => {\n      setForm((p) => ({\n        ...p,\n        [key]: val,\n        passwordError: key === 'password' && val.length > 0 && val.length < 10,\n      }));\n    },\n    [],\n  );\n\n  return !focus ? null : (\n    <Modal backgroundColor={color.surface} onBackgroundPress={navWelcome}>\n      <ModalHeader onRightPress={navBack} title=\"Sign up\" />\n      <TextInput\n        onChangeText={onFormChange('email')}\n        placeholder=\"Email address\"\n        value={form.email}\n      />\n      <TextInput\n        onChangeText={onFormChange('password')}\n        placeholder=\"Create password\"\n        value={form.password}\n      />\n      <Text\n        color=\"danger\"\n        invisible={!form.passwordError}\n        title={passwordError}\n      />\n      <Button\n        center\n        color=\"primary\"\n        lowercase\n        onPress={onSecondary}\n        title=\"Already have an account?\"\n      />\n      <Button\n        center\n        color=\"primary\"\n        disable={!completeForm}\n        emphasis=\"high\"\n        onPress={onSubmit}\n        title=\"Sign up\"\n      />\n    </Modal>\n  );\n});\n","import {useNavigation} from '@react-navigation/native';\nimport {StackNavigationProp} from '@react-navigation/stack';\nimport React, {memo, useCallback} from 'react';\nimport {View} from 'react-native';\nimport {Button, Carousel, Screen} from '../../../../components';\nimport {Slide} from '../../../../components/Carousel/types';\nimport {config} from '../../../../utils';\nimport {LandingStackParams} from '../../navigation-types';\nimport {completeConfig} from '../../utils';\n\nconst slides: Slide[] = [\n  {\n    id: '1',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'Welcome to accomplish',\n        titleType: 'h4',\n        titleStyle: {paddingBottom: config.padding(10)},\n        paragraphs: [\n          [{title: 'Start investing commission-free'}],\n          [\n            {title: 'Other fees may apply. View our'},\n            {title: 'fee schedule', onPress: () => undefined},\n            {title: 'to learn more. All investments have risks.'},\n          ],\n        ],\n      },\n    ],\n  },\n  {\n    id: '2',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'Enjoy commission-free stock trading',\n        titleType: 'h4',\n        titleStyle: {paddingBottom: config.padding(10)},\n        paragraphs: [\n          [\n            {\n              title:\n                'Invest in thousands of US an global stocks without paying commission or foreign exchange fees.',\n            },\n          ],\n          [{title: 'View fee disclosures', onPress: () => undefined}],\n        ],\n      },\n    ],\n  },\n  {\n    id: '3',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'No account minimum',\n        titleType: 'h4',\n        titleStyle: {paddingBottom: config.padding(10)},\n        paragraphs: [\n          [\n            {\n              title:\n                'Top up your account with as little or as much as you like.',\n            },\n          ],\n        ],\n      },\n    ],\n  },\n  {\n    id: '4',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'Everything at your fingertips',\n        titleType: 'h4',\n        titleStyle: {paddingBottom: config.padding(10)},\n        paragraphs: [\n          [\n            {\n              title:\n                'Stay on top of your portfolio with real-time market data, business news, and customized notifications.',\n            },\n          ],\n        ],\n      },\n    ],\n  },\n  {\n    id: '5',\n    icon: 'trophy-outline',\n    sections: [\n      {\n        title: 'Account protection',\n        titleType: 'h4',\n        titleStyle: {paddingBottom: config.padding(10)},\n        paragraphs: [\n          [\n            {\n              title:\n                'Robinhood Financial is a member of SIPC. Securities in your account are protected up to $500,000. For details, please see',\n            },\n            {title: 'www.sipc.org', onPress: () => undefined},\n            {title: '.'},\n          ],\n        ],\n      },\n    ],\n  },\n];\n\nexport const Welcome = memo(function Welcome() {\n  const {navigate} = useNavigation<StackNavigationProp<LandingStackParams>>();\n  const onSignUp = useCallback(() => navigate('sign-up'), [navigate]);\n  const onLogIn = useCallback(() => navigate('log-in'), [navigate]);\n\n  return (\n    <Screen>\n      <View style={{flex: 1}}>\n        <Carousel duration={6000} slides={slides} />\n        <View style={{padding: completeConfig.padding}}>\n          <Button\n            center\n            color=\"primary\"\n            emphasis=\"high\"\n            onPress={onSignUp}\n            title=\"Sign up\"\n          />\n          <Button center color=\"primary\" onPress={onLogIn} title=\"Log in\" />\n        </View>\n      </View>\n    </Screen>\n  );\n});\n","import {\n  BottomTabBarOptions,\n  createBottomTabNavigator,\n} from '@react-navigation/bottom-tabs';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport React, {ReactElement, useCallback} from 'react';\nimport {Icon} from '../../components';\nimport {useColor} from '../../hooks';\nimport {rootMode, rootScreenOptions} from '../../providers/Navigation/configs';\nimport {\n  HomeStackParams,\n  ImplementStackParams,\n  LandingStackParams,\n  MainStackParams,\n} from './navigation-types';\nimport {\n  Account,\n  Capture,\n  ItemDetail,\n  LogIn,\n  Project,\n  Projects,\n  Reflect,\n  ResetPassword,\n  SignUp,\n  Welcome,\n} from './screens';\nimport {useTabTap} from './utils';\n\nconst noHeader: StackNavigationOptions = {headerShown: false};\ntype TabIcons = {\n  [key in keyof HomeStackParams]: {focused: string; unFocused: string};\n};\n\nconst tabIcons: TabIcons = {\n  plan: {focused: 'pencil-plus-outline', unFocused: 'pencil-plus-outline'},\n  implement: {\n    focused: 'checkbox-multiple-marked-outline',\n    unFocused: 'checkbox-multiple-marked-outline',\n  },\n  reflect: {focused: 'finance', unFocused: 'finance'},\n};\n\ntype TabBarIconProps = {\n  focused: boolean;\n  size: number;\n};\n\nconst useTabs = () => {\n  const color = useColor();\n  const tabBarOptions: BottomTabBarOptions = {\n    keyboardHidesTabBar: true,\n    activeTintColor: color.text,\n    inactiveTintColor: color.secondary,\n    showLabel: false,\n  };\n  const screenOptions = useCallback(\n    ({route}) => ({\n      tabBarIcon: function tabBarIcon({focused, size}: TabBarIconProps) {\n        const key = focused ? 'focused' : 'unFocused';\n        const iconColor = focused ? color.text : color.secondary;\n        const name = (tabIcons as any)[route.name][key];\n        return <Icon color={iconColor} name={name} size={size} />;\n      },\n    }),\n    [color],\n  );\n\n  return {tabBarOptions, screenOptions};\n};\n\nconst HomeStack = createBottomTabNavigator<HomeStackParams>();\nconst Home = () => {\n  const {tabBarOptions, screenOptions} = useTabs();\n  return (\n    <HomeStack.Navigator\n      screenOptions={screenOptions}\n      tabBarOptions={tabBarOptions}>\n      <HomeStack.Screen component={Capture} name=\"plan\" />\n      <HomeStack.Screen component={Implement} name=\"implement\" />\n      <HomeStack.Screen component={Reflect} name=\"reflect\" />\n    </HomeStack.Navigator>\n  );\n};\n\nconst ImplementStack = createStackNavigator<ImplementStackParams>();\nconst Implement = () => {\n  useTabTap();\n  return (\n    <ImplementStack.Navigator screenOptions={noHeader}>\n      <ImplementStack.Screen component={Projects} name=\"projects\" />\n      <ImplementStack.Screen component={Project} name=\"project\" />\n    </ImplementStack.Navigator>\n  );\n};\n\nconst LandingStack = createStackNavigator<LandingStackParams>();\nexport const Landing = (): ReactElement => {\n  return (\n    <LandingStack.Navigator mode={rootMode} screenOptions={rootScreenOptions}>\n      <LandingStack.Screen component={Welcome} name=\"welcome\" />\n      <LandingStack.Screen component={SignUp} name=\"sign-up\" />\n      <LandingStack.Screen component={LogIn} name=\"log-in\" />\n      <LandingStack.Screen component={ResetPassword} name=\"reset-password\" />\n    </LandingStack.Navigator>\n  );\n};\n\nconst MainStack = createStackNavigator<MainStackParams>();\nexport const Main = (): ReactElement => {\n  return (\n    <MainStack.Navigator mode={rootMode} screenOptions={rootScreenOptions}>\n      <MainStack.Screen component={Home} name=\"home\" />\n      <MainStack.Screen component={Account} name=\"account\" />\n      <MainStack.Screen component={ItemDetail} name=\"item-detail\" />\n    </MainStack.Navigator>\n  );\n};\n","import React, {memo} from 'react';\nimport {useRootSelector} from '../../utils';\nimport {Landing, Main} from './navigation';\n\nexport default memo(function Complete() {\n  const user = useRootSelector((s) => s.completeUser);\n  const App = user ? Main : Landing;\n  return <App />;\n});\n\n/*\n\n# Data\n\n- user\n-> collections [projects, lists]\n-> boards [home, work, town] | [meeting notes, book summaries, checklists]\n-> lists [backlog, todo, in progress, done] | [draft, final]\n-> item [find comb, clear emails, daily standup]\n\n# Screens\n\n## Plan\n\n### Inbox (list -> item -> details)\n- \"add grey list\" -> @app\n- \"find comb\" -> @home\n- \"clear emails\" -> @work\n- \"put $20 in phone\" -> @town\n- \"drink water\" -> @after-waking-up\n- \"intensity + implement = deep work\" -> book summaries\n\n## Organize\n\n### Projects (item -> lists -> item -> details )\n- @home -> (backlog, todo, in progress, done xx, done xx)\n- @town\n- @work\n- @gym\n- @app\n\n### Lists (item -> list -> item -> detail)\n- meeting notes\n - one-on-one\n - daily standup\n- book summaries\n - the one thing\n - getting things done\n - eat that frog\n- gift ideas\n - mom\n - dad\n - girlfriend\n- checklists\n - after waking up\n - after entering bathroom\n\n## Reflect\n\n### Purpose\n\n### Goals\n\n### Review (Progress)\n\n### Reflect (Journal)\n\n## Account\n\n### Profile\n\n### Notifications\n\n### Payment\n*/\n"],"sourceRoot":""}