{"version":3,"sources":["../node_modules/react-native-web/dist/exports/Easing/index.js","apps/Games/PapiJump/index.tsx"],"names":["Easing","Papi","memo","size","color","dropShadow","useDropShadow","useDriver","useNativeDriver","location","Animated","ValueXY","x","y","useEffect","timing","toValue","duration","easing","bounce","start","View","style","getLayout","height","width","borderRadius","backgroundColor","useColor","nav","useNav","styles","StyleSheet","create","container","surface","flex","navBack","useCallback","onLeftPress","title","primary"],"mappings":"qGAAA,YASeA,MAAf,G,oHCFMC,EAAOC,gBAAK,YAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAClBC,EAAaC,cACbC,EAAYC,cACZC,EAAW,IAAIC,IAASC,QAAQ,CAACC,EAAG,EAAGC,EAAG,IAYhD,OAVAC,qBAAU,WAERJ,IAASK,OAAON,EAAU,CACxBO,QAFc,CAACJ,EAAG,IAAKC,EAAG,KAG1BI,SAAU,IACVC,OAAQlB,IAAOmB,OACfX,gBAAiBD,IAChBa,UACF,CAACX,EAAUF,IAGZ,kBAAC,IAASc,KAAV,CACEC,MAAO,CACLb,EAASc,YADJ,aAGHC,OAAQrB,EACRsB,MAAOtB,EACPuB,aAAcvB,EACdwB,gBAAiBvB,GACdC,EAAW,WAOTH,0BAAK,WAClB,IAAME,EAAQwB,cACRC,EAAMC,cACNC,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTP,gBAAiBvB,EAAM+B,QACvBC,KAAM,KAGJC,EAAUC,sBAAYT,EAAI,oBAAqB,CAACA,IACtD,OACE,kBAAC,IAAD,CAAQU,YAAaF,EAASG,MAAM,aAClC,kBAAC,IAAD,CAAMlB,MAAOS,EAAOG,WAClB,kBAACjC,EAAD,CAAMG,MAAOA,EAAMqC,QAAStC,KAAM","file":"static/js/13.0cd18610.chunk.js","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport Easing from '../../vendor/react-native/Animated/Easing';\nexport default Easing;","import React, {memo, useCallback, useEffect} from 'react';\nimport {Animated, Easing, StyleSheet, View} from 'react-native';\nimport {Screen} from '../../../components';\nimport {useColor, useDropShadow, useNativeDriver, useNav} from '../../../hooks';\n\ntype PapiProps = {size: number; color: string};\n\nconst Papi = memo(({size, color}: PapiProps) => {\n  const dropShadow = useDropShadow();\n  const useDriver = useNativeDriver();\n  const location = new Animated.ValueXY({x: 0, y: 0});\n\n  useEffect(() => {\n    const toValue = {x: 300, y: 600};\n    Animated.timing(location, {\n      toValue,\n      duration: 3000,\n      easing: Easing.bounce,\n      useNativeDriver: useDriver,\n    }).start();\n  }, [location, useDriver]);\n\n  return (\n    <Animated.View\n      style={[\n        location.getLayout(),\n        {\n          height: size,\n          width: size,\n          borderRadius: size,\n          backgroundColor: color,\n          ...dropShadow(10),\n        },\n      ]}\n    />\n  );\n});\n\nexport default memo(function PapiJump() {\n  const color = useColor();\n  const nav = useNav();\n  const styles = StyleSheet.create({\n    container: {\n      backgroundColor: color.surface,\n      flex: 1,\n    },\n  });\n  const navBack = useCallback(nav('portfolioLanding'), [nav]);\n  return (\n    <Screen onLeftPress={navBack} title=\"Papi Jump\">\n      <View style={styles.container}>\n        <Papi color={color.primary} size={50} />\n      </View>\n    </Screen>\n  );\n});\n"],"sourceRoot":""}