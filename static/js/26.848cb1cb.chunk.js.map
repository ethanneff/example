{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toArray.js","apps/Debug/screens/Stopwatch/index.tsx"],"names":["_toArray","arr","arrayWithHoles","iterableToArray","nonIterableRest","styles","StyleSheet","create","button","alignItems","borderRadius","height","justifyContent","width","buttonBorder","borderWidth","buttonTitle","fontSize","buttonsRow","alignSelf","flexDirection","marginBottom","marginTop","container","backgroundColor","flex","paddingHorizontal","paddingTop","fastest","color","lap","borderColor","borderTopWidth","paddingVertical","lapText","fontFamily","scrollView","slowest","timer","fontWeight","timerContainer","Timer","interval","style","pad","n","duration","moment","centiseconds","Math","floor","milliseconds","View","Text","minutes","seconds","RoundButton","title","background","onPress","disabled","TouchableOpacity","activeOpacity","Lap","num","lapStyle","LapsTable","laps","finishedLaps","slice","min","Number","MAX_SAFE_INTEGER","max","MIN_SAFE_INTEGER","length","forEach","ScrollView","map","index","key","ButtonsRow","children","Container","state","now","start","Date","getTime","setState","run","timestamp","firstLap","other","stop","clearInterval","reset","setInterval","resume","nav","to","props","navigate","this","onLeftPress","reduce","total","curr","React","PureComponent","mapDispatchToProps","connect"],"mappings":"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","file":"static/js/26.848cb1cb.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();\n}","import moment from \"moment\";\nimport React from \"react\";\nimport {\n  ScrollView,\n  StyleProp,\n  StyleSheet,\n  Text,\n  TextStyle,\n  TouchableOpacity,\n  View\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { Screen } from \"../../../../components\";\nimport { navigate, NavigationScreen } from \"../../../../models\";\n\nconst styles = StyleSheet.create({\n  button: {\n    alignItems: \"center\",\n    borderRadius: 40,\n    height: 80,\n    justifyContent: \"center\",\n    width: 80\n  },\n  buttonBorder: {\n    alignItems: \"center\",\n    borderRadius: 38,\n    borderWidth: 1,\n    height: 76,\n    justifyContent: \"center\",\n    width: 76\n  },\n  buttonTitle: {\n    fontSize: 18\n  },\n  buttonsRow: {\n    alignSelf: \"stretch\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginBottom: 30,\n    marginTop: 80\n  },\n  container: {\n    alignItems: \"center\",\n    backgroundColor: \"#0D0D0D\",\n    flex: 1,\n    paddingHorizontal: 20,\n    paddingTop: 130\n  },\n  fastest: {\n    color: \"#4BC05F\"\n  },\n  lap: {\n    borderColor: \"#151515\",\n    borderTopWidth: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingVertical: 10\n  },\n  lapText: {\n    color: \"#FFFFFF\",\n    fontFamily: \"Courier\",\n    fontSize: 18\n  },\n  scrollView: {\n    alignSelf: \"stretch\"\n  },\n  slowest: {\n    color: \"#CC3531\"\n  },\n  timer: {\n    color: \"#FFFFFF\",\n    fontFamily: \"Courier\",\n    fontSize: 54,\n    fontWeight: \"200\"\n  },\n  timerContainer: {\n    flexDirection: \"row\"\n  }\n});\n\ninterface TimerProps {\n  interval: number;\n  style: StyleProp<TextStyle>;\n}\n\nfunction Timer({ interval, style }: TimerProps) {\n  const pad = (n: number) => (n < 10 ? \"0\" + n : n);\n  const duration = moment.duration(interval);\n  const centiseconds = Math.floor(duration.milliseconds() / 10);\n  return (\n    <View style={styles.timerContainer}>\n      <Text style={style}>{pad(duration.minutes())}:</Text>\n      <Text style={style}>{pad(duration.seconds())}.</Text>\n      <Text style={style}>{pad(centiseconds)}</Text>\n    </View>\n  );\n}\n\ninterface RoundButtonProps {\n  title: string;\n  color: string;\n  background: string;\n  disabled?: boolean;\n  onPress(): void;\n}\n\nfunction RoundButton({\n  title,\n  color,\n  background,\n  onPress,\n  disabled = false\n}: RoundButtonProps) {\n  return (\n    <TouchableOpacity\n      onPress={() => !disabled && onPress()}\n      style={[styles.button, { backgroundColor: background }]}\n      activeOpacity={disabled ? 1.0 : 0.7}\n    >\n      <View style={styles.buttonBorder}>\n        <Text style={[styles.buttonTitle, { color }]}>{title}</Text>\n      </View>\n    </TouchableOpacity>\n  );\n}\n\ninterface LapProps {\n  num: number;\n  interval: number;\n  fastest: boolean;\n  slowest: boolean;\n}\n\nfunction Lap({ num, interval, fastest, slowest }: LapProps) {\n  const lapStyle = [\n    styles.lapText,\n    fastest && styles.fastest,\n    slowest && styles.slowest\n  ];\n  return (\n    <View style={styles.lap}>\n      <Text style={lapStyle}>Lap {num}</Text>\n      <Timer style={lapStyle} interval={interval} />\n    </View>\n  );\n}\n\ninterface LapTableProps {\n  laps: number[];\n  timer: number;\n}\n\nfunction LapsTable({ laps, timer }: LapTableProps) {\n  const finishedLaps = laps.slice(1);\n  let min = Number.MAX_SAFE_INTEGER;\n  let max = Number.MIN_SAFE_INTEGER;\n  if (finishedLaps.length >= 2) {\n    finishedLaps.forEach(lap => {\n      if (lap < min) {\n        min = lap;\n      }\n      if (lap > max) {\n        max = lap;\n      }\n    });\n  }\n  return (\n    <ScrollView style={styles.scrollView}>\n      {laps.map((lap, index) => (\n        <Lap\n          num={laps.length - index}\n          key={laps.length - index}\n          interval={index === 0 ? timer + lap : lap}\n          fastest={lap === min}\n          slowest={lap === max}\n        />\n      ))}\n    </ScrollView>\n  );\n}\n\ninterface ButtonRowProps {\n  children: React.ReactElement | React.ReactElement[];\n}\n\nfunction ButtonsRow({ children }: ButtonRowProps) {\n  return <View style={styles.buttonsRow}>{children}</View>;\n}\n\ninterface DispatchProps {\n  navigate: typeof navigate;\n}\n\ntype Props = DispatchProps;\n\nclass Container extends React.PureComponent<Props> {\n  public state = {\n    laps: [],\n    now: 0,\n    start: 0\n  };\n  public timer?: any;\n\n  public componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  public start = () => {\n    const now = new Date().getTime();\n    this.setState({\n      laps: [0],\n      now,\n      start: now\n    });\n    this.run();\n  };\n\n  public lap = () => {\n    const timestamp = new Date().getTime();\n    const { laps, now, start } = this.state;\n    const [firstLap, ...other] = laps;\n    this.setState({\n      laps: [0, firstLap + now - start, ...other],\n      now: timestamp,\n      start: timestamp\n    });\n  };\n\n  public stop = () => {\n    clearInterval(this.timer);\n    const { laps, now, start } = this.state;\n    const [firstLap, ...other] = laps;\n    this.setState({\n      laps: [firstLap + now - start, ...other],\n      now: 0,\n      start: 0\n    });\n  };\n\n  public reset = () => {\n    this.setState({\n      laps: [],\n      now: 0,\n      start: 0\n    });\n  };\n\n  public run = () => {\n    this.timer = setInterval(() => {\n      this.setState({ now: new Date().getTime() });\n    }, 100);\n  };\n\n  public resume = () => {\n    const now = new Date().getTime();\n    this.setState({\n      now,\n      start: now\n    });\n    this.run();\n  };\n\n  public render() {\n    const { now, start, laps } = this.state;\n    const timer = now - start;\n    return (\n      <Screen onLeftPress={this.nav(\"debug\")} style={styles.container}>\n        <Timer\n          interval={laps.reduce((total, curr) => total + curr, 0) + timer}\n          style={styles.timer}\n        />\n        {laps.length === 0 && (\n          <ButtonsRow>\n            <RoundButton\n              title=\"Lap\"\n              color=\"#8B8B90\"\n              background=\"#151515\"\n              onPress={this.lap}\n              disabled\n            />\n            <RoundButton\n              title=\"Start\"\n              color=\"#50D167\"\n              background=\"#1B361F\"\n              onPress={this.start}\n            />\n          </ButtonsRow>\n        )}\n        {start > 0 && (\n          <ButtonsRow>\n            <RoundButton\n              title=\"Lap\"\n              color=\"#FFFFFF\"\n              background=\"#3D3D3D\"\n              onPress={this.lap}\n            />\n            <RoundButton\n              title=\"Stop\"\n              color=\"#E33935\"\n              background=\"#3C1715\"\n              onPress={this.stop}\n            />\n          </ButtonsRow>\n        )}\n        {laps.length > 0 && start === 0 && (\n          <ButtonsRow>\n            <RoundButton\n              title=\"Reset\"\n              color=\"#FFFFFF\"\n              background=\"#3D3D3D\"\n              onPress={this.reset}\n            />\n            <RoundButton\n              title=\"Start\"\n              color=\"#50D167\"\n              background=\"#1B361F\"\n              onPress={this.resume}\n            />\n          </ButtonsRow>\n        )}\n        <LapsTable laps={laps} timer={timer} />\n      </Screen>\n    );\n  }\n\n  private nav = (to: NavigationScreen) => () => this.props.navigate(to);\n}\n\nconst mapDispatchToProps: DispatchProps = { navigate };\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Container);\n"],"sourceRoot":""}