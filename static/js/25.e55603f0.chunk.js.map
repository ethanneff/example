{"version":3,"sources":["../node_modules/react-native-web/dist/exports/Keyboard/index.js","apps/Debug/screens/SearchBar/index.tsx"],"names":["addListener","remove","dismiss","dismissKeyboard","removeAllListeners","removeListener","styles","StyleSheet","create","container","flex","header","backgroundColor","Theme","color","light","height","padding","p20","justifyContent","p02","item","borderBottomColor","borderWidth","p06","text","fontSize","textContainer","alignItems","background","flexDirection","textInput","marginLeft","DATA","id","name","Container","props","iconSearch","state","animation","Animated","Value","iconName","input","iconBack","textInputPlaceHolder","animationDuration","translateIcon","interpolate","inputRange","outputRange","fadeContainer","colorWithOpacity","secondary","iconChangeTimeout","keyboardDidShowListener","keyboardDidHideListener","keyboardWillShowListener","keyboardWillHideListener","nav","to","navigate","keyboardWillShow","Platform","OS","Config","os","ios","onSearchBarFocus","keyboardWillHide","onSearchBarUnFocus","keyboardDidShow","android","keyboardDidHide","Keyboard","this","clearTimeout","onLeftPress","View","style","transform","translateX","value","onChangeText","setState","placeholder","containerStyle","FlatList","keyExtractor","toString","data","renderItem","subtitle2","title","animate","changeIcon","timing","duration","toValue","start","setTimeout","React","PureComponent","mapDispatchToProps","connect"],"mappings":"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","file":"static/js/25.e55603f0.chunk.js","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport dismissKeyboard from '../../modules/dismissKeyboard';\nvar Keyboard = {\n  addListener: function addListener() {\n    return {\n      remove: function remove() {}\n    };\n  },\n  dismiss: function dismiss() {\n    dismissKeyboard();\n  },\n  removeAllListeners: function removeAllListeners() {},\n  removeListener: function removeListener() {}\n};\nexport default Keyboard;","import React from \"react\";\nimport {\n  Animated,\n  EmitterSubscription,\n  FlatList,\n  Keyboard,\n  Platform,\n  StyleSheet,\n  View\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { Icon, Screen, Text, TextInput } from \"../../../../components\";\nimport { navigate, NavigationScreen } from \"../../../../models\";\nimport { colorWithOpacity, Config, Theme } from \"../../../../utils\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    backgroundColor: Theme.color.light,\n    height: Theme.padding.p20,\n    justifyContent: \"center\",\n    padding: Theme.padding.p02\n  },\n  item: {\n    borderBottomColor: Theme.color.light,\n    borderWidth: 0.2,\n    padding: Theme.padding.p06\n  },\n  text: {\n    fontSize: Theme.padding.p06\n  },\n  textContainer: {\n    alignItems: \"center\",\n    backgroundColor: Theme.color.background,\n    flexDirection: \"row\",\n    height: \"100%\",\n    padding: Theme.padding.p02\n  },\n  textInput: {\n    flex: 1,\n    marginLeft: Theme.padding.p02\n  }\n});\n\nconst DATA = [\n  { id: 1, name: \"1\" },\n  { id: 2, name: \"2\" },\n  { id: 3, name: \"3\" },\n  { id: 4, name: \"4\" },\n  { id: 5, name: \"5\" },\n  { id: 6, name: \"6\" },\n  { id: 7, name: \"7\" },\n  { id: 8, name: \"8\" },\n  { id: 9, name: \"9\" },\n  { id: 10, name: \"10\" },\n  { id: 11, name: \"11\" },\n  { id: 12, name: \"12\" },\n  { id: 13, name: \"13\" },\n  { id: 14, name: \"14\" },\n  { id: 15, name: \"15\" },\n  { id: 16, name: \"16\" },\n  { id: 17, name: \"17\" },\n  { id: 18, name: \"18\" },\n  { id: 19, name: \"19\" }\n];\n\ninterface State {\n  input: string;\n  iconName: string;\n  animation: Animated.Value;\n}\n\ninterface DispatchProps {\n  navigate: typeof navigate;\n}\n\ntype Props = DispatchProps;\n\nclass Container extends React.PureComponent<Props, State> {\n  public iconSearch = \"magnify\";\n  public state: State = {\n    animation: new Animated.Value(0),\n    iconName: this.iconSearch,\n    input: \"\"\n  };\n  private iconBack = \"arrow-left\";\n  private textInputPlaceHolder = \"Search\";\n  private animationDuration = 400;\n  private translateIcon = this.state.animation.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [1, -60, 1]\n  });\n  private fadeContainer = this.state.animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\n      Theme.color.background,\n      colorWithOpacity(Theme.color.secondary)\n    ]\n  });\n  private iconChangeTimeout?: any;\n  private keyboardDidShowListener: EmitterSubscription;\n  private keyboardDidHideListener: EmitterSubscription;\n  private keyboardWillShowListener: EmitterSubscription;\n  private keyboardWillHideListener: EmitterSubscription;\n\n  public constructor(props: Props) {\n    super(props);\n    this.keyboardDidShowListener = Keyboard.addListener(\n      \"keyboardDidShow\",\n      this.keyboardDidShow\n    );\n    this.keyboardDidHideListener = Keyboard.addListener(\n      \"keyboardDidHide\",\n      this.keyboardDidHide\n    );\n    this.keyboardWillShowListener = Keyboard.addListener(\n      \"keyboardWillShow\",\n      this.keyboardWillShow\n    );\n    this.keyboardWillHideListener = Keyboard.addListener(\n      \"keyboardWillHide\",\n      this.keyboardWillHide\n    );\n  }\n\n  public componentWillUnmount() {\n    this.keyboardDidShowListener.remove();\n    this.keyboardDidHideListener.remove();\n    this.keyboardWillShowListener.remove();\n    this.keyboardWillHideListener.remove();\n    clearTimeout(this.iconChangeTimeout);\n  }\n  public render() {\n    const { iconName, input } = this.state;\n    return (\n      <Screen onLeftPress={this.nav(\"debug\")}>\n        <View style={styles.header}>\n          <View style={styles.textContainer}>\n            <Animated.View\n              style={{\n                transform: [{ translateX: this.translateIcon }]\n              }}\n            >\n              <Icon name={iconName} style={styles.text} />\n            </Animated.View>\n            <TextInput\n              value={input}\n              onChangeText={(value: string) => this.setState({ input: value })}\n              placeholder={this.textInputPlaceHolder}\n              containerStyle={[styles.textInput, styles.text]}\n            />\n          </View>\n        </View>\n        <Animated.View style={{ flex: 1, backgroundColor: this.fadeContainer }}>\n          <FlatList\n            keyExtractor={item => item.id.toString()}\n            data={DATA}\n            renderItem={({ item }) => (\n              <Text subtitle2 style={styles.item} title={item.name} />\n            )}\n          />\n        </Animated.View>\n      </Screen>\n    );\n  }\n\n  private nav = (to: NavigationScreen) => () => this.props.navigate(to);\n\n  private onSearchBarFocus() {\n    this.animate(1);\n    this.changeIcon(this.iconBack);\n  }\n\n  private animate(value: number) {\n    Animated.timing(this.state.animation, {\n      duration: this.animationDuration,\n      toValue: value\n    }).start();\n  }\n\n  private changeIcon(iconName: string) {\n    this.iconChangeTimeout = setTimeout(() => {\n      clearTimeout(this.iconChangeTimeout);\n      this.setState({ iconName });\n    }, this.animationDuration / 2);\n  }\n\n  private onSearchBarUnFocus() {\n    this.animate(0);\n    this.changeIcon(this.iconSearch);\n  }\n\n  private keyboardWillShow = () => {\n    if (Platform.OS !== Config.os.ios) {\n      return;\n    }\n    this.onSearchBarFocus();\n  };\n\n  private keyboardWillHide = () => {\n    if (Platform.OS !== Config.os.ios) {\n      return;\n    }\n    this.onSearchBarUnFocus();\n  };\n\n  private keyboardDidShow = () => {\n    if (Platform.OS !== Config.os.android) {\n      return;\n    }\n    this.onSearchBarFocus();\n  };\n\n  private keyboardDidHide = () => {\n    if (Platform.OS !== Config.os.android) {\n      return;\n    }\n    this.onSearchBarUnFocus();\n  };\n}\n\nconst mapDispatchToProps: DispatchProps = { navigate };\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Container);\n"],"sourceRoot":""}