{"version":3,"sources":["apps/Portfolio/screens/Settings/index.tsx"],"names":["memo","dispatch","useRootDispatch","themes","Object","values","ColorTheme","currentTheme","useRootSelector","state","theme","currentColor","nav","useNav","themePress","useCallback","changeTheme","renderItem","item","key","title","onPress","color","renderHeader","disable","onLeftPress","to","ListHeaderComponent","horizontal","keyExtractor","data"],"mappings":"qGAAA,2EAOeA,0BAAK,WAClB,IAAMC,EAAWC,cACXC,EAASC,OAAOC,OAAOC,KACvBC,EAAeC,aAAgB,SAACC,GAAD,OAAWA,EAAMC,MAAMC,gBACtDC,EAAMC,cACNC,EAAaC,uBACjB,SAACL,GAAD,OAAuB,kBAAMT,EAASe,YAAYN,OAClD,CAACT,IAEGgB,EAAaF,uBACjB,gBAAEG,EAAF,EAAEA,KAAF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,IAAKD,EACLE,MAAOF,EACPG,QAASP,EAAWI,GACpBI,MAAOf,IAAiBW,EAAO,UAAY,YAIjD,CAACX,EAAcO,IAGXS,EAAeR,uBAAY,kBAAM,kBAAC,IAAD,CAAQS,SAAO,EAACJ,MAAM,YAAY,IACzE,OACE,kBAAC,IAAD,CAAQK,YAAab,EAAIc,GAAG,oBAAqBN,MAAM,YACrD,kBAAC,IAAD,CACEO,oBAAqBJ,EACrBK,YAAU,EACVC,aAAc,SAACX,GAAD,OAAUA,GACxBY,KAAM3B,EACNc,WAAYA","file":"static/js/47.aaf7caa8.chunk.js","sourcesContent":["import React, {memo, useCallback} from 'react';\nimport {FlatList, View} from 'react-native';\nimport {Button, Screen} from '../../../../components';\nimport {ColorTheme, changeTheme} from '../../../../models';\nimport {useRootDispatch, useRootSelector} from '../../../../utils';\nimport {useNav} from '../../../../hooks';\n\nexport default memo(function PortfolioSettings() {\n  const dispatch = useRootDispatch();\n  const themes = Object.values(ColorTheme);\n  const currentTheme = useRootSelector((state) => state.theme.currentColor);\n  const nav = useNav();\n  const themePress = useCallback(\n    (theme: ColorTheme) => () => dispatch(changeTheme(theme)),\n    [dispatch],\n  );\n  const renderItem = useCallback(\n    ({item}) => (\n      <View>\n        <Button\n          key={item}\n          title={item}\n          onPress={themePress(item)}\n          color={currentTheme === item ? 'primary' : 'text'}\n        />\n      </View>\n    ),\n    [currentTheme, themePress],\n  );\n\n  const renderHeader = useCallback(() => <Button disable title=\"Theme\" />, []);\n  return (\n    <Screen onLeftPress={nav.to('portfolioLanding')} title=\"Settings\">\n      <FlatList\n        ListHeaderComponent={renderHeader}\n        horizontal\n        keyExtractor={(item) => item}\n        data={themes}\n        renderItem={renderItem}\n      />\n    </Screen>\n  );\n});\n"],"sourceRoot":""}