{"version":3,"sources":["apps/Checklists/screens/ListCreate/index.tsx"],"names":["initialState","name","description","memo","nav","useNav","dispatch","useRootDispatch","useState","form","setForm","isInvalidForm","trim","length","onLeftPress","to","title","gutter","value","onChangeText","state","onPress","now","Date","createList","id","uuid","v4","active","userId","createdAt","updatedAt","navigate"],"mappings":"yMAQMA,EAAe,CAAEC,KAAM,GAAIC,YAAa,IAE/BC,0BAAK,WAClB,IAAMC,EAAMC,cACNC,EAAWC,cAF4B,EAGrBC,mBAASR,GAHY,mBAGtCS,EAHsC,KAGhCC,EAHgC,KAIvCC,EAA4C,IAA5BF,EAAKR,KAAKW,OAAOC,OA0BvC,OACE,kBAAC,IAAD,CAAQC,YAAaV,EAAIW,GAAG,cAAeC,MAAM,mBAAmBC,QAAM,GACxE,kBAAC,IAAD,CACED,MAAM,OACNE,MAAOT,EAAKR,KACZkB,aAVmB,SAAClB,GAAD,OACvBS,GAAQ,SAAAU,GAAK,sBAAUA,EAAV,CAAiBnB,eAW5B,kBAAC,IAAD,CACEe,MAAM,cACNE,MAAOT,EAAKP,YACZiB,aAb0B,SAACjB,GAAD,OAC9BQ,GAAQ,SAAAU,GAAK,sBAAUA,EAAV,CAAiBlB,sBAc5B,kBAAC,IAAD,CAAQc,MAAM,SAASK,QApCN,WAAO,IAClBpB,EAAsBQ,EAAtBR,KAAMC,EAAgBO,EAAhBP,YACd,IAAIS,EAAJ,CAGA,IAAMW,EAAMC,KAAKD,MACjBhB,EACEkB,YAAW,CACTC,GAAIC,IAAKC,KACT1B,OACA2B,QAAQ,EACRC,OAAQ,IACR3B,cACA4B,UAAWR,EACXS,UAAWT,KAGfhB,EAAS0B,YAAS","file":"static/js/18.1d6983e4.chunk.js","sourcesContent":["import React, { memo, useState } from \"react\";\nimport { Button, Screen, TextInput } from \"../../../../components\";\nimport { navigate } from \"../../../../models\";\nimport { useRootDispatch } from \"../../../../utils\";\nimport { useNav } from \"../../../../hooks\";\nimport { createList } from \"../../models\";\nimport uuid from \"uuid\";\n\nconst initialState = { name: \"\", description: \"\" };\n\nexport default memo(function ChecklistCreate() {\n  const nav = useNav();\n  const dispatch = useRootDispatch();\n  const [form, setForm] = useState(initialState);\n  const isInvalidForm = form.name.trim().length === 0;\n\n  const handleSubmit = () => {\n    const { name, description } = form;\n    if (isInvalidForm) {\n      return;\n    }\n    const now = Date.now();\n    dispatch(\n      createList({\n        id: uuid.v4(),\n        name,\n        active: true,\n        userId: \"1\",\n        description,\n        createdAt: now,\n        updatedAt: now\n      })\n    );\n    dispatch(navigate(\"checklists\"));\n  };\n  const handleNameChange = (name: string) =>\n    setForm(state => ({ ...state, name }));\n  const handleDescriptionChange = (description: string) =>\n    setForm(state => ({ ...state, description }));\n\n  return (\n    <Screen onLeftPress={nav.to(\"checklists\")} title=\"Create Checklist\" gutter>\n      <TextInput\n        title=\"name\"\n        value={form.name}\n        onChangeText={handleNameChange}\n      />\n      <TextInput\n        title=\"description\"\n        value={form.description}\n        onChangeText={handleDescriptionChange}\n      />\n      <Button title=\"create\" onPress={handleSubmit} />\n    </Screen>\n  );\n});\n"],"sourceRoot":""}