{"version":3,"sources":["apps/Checklists/screens/ListCreate/index.tsx"],"names":["initialState","name","description","memo","nav","useNav","dispatch","useRootDispatch","useState","form","setForm","isInvalidForm","trim","length","onLeftPress","to","title","gutter","value","onChangeText","state","onPress","now","Date","createList","id","v4","active","userId","createdAt","updatedAt","navigate"],"mappings":"iMASMA,G,OAAe,CAACC,KAAM,GAAIC,YAAa,KAE9BC,0BAAK,WAClB,IAAMC,EAAMC,cACNC,EAAWC,cAF4B,EAGrBC,mBAASR,GAHY,mBAGtCS,EAHsC,KAGhCC,EAHgC,KAIvCC,EAA4C,IAA5BF,EAAKR,KAAKW,OAAOC,OA0BvC,OACE,kBAAC,IAAD,CAAQC,YAAaV,EAAIW,GAAG,cAAeC,MAAM,mBAAmBC,QAAM,GACxE,kBAAC,IAAD,CACED,MAAM,OACNE,MAAOT,EAAKR,KACZkB,aAVmB,SAAClB,GAAD,OACvBS,GAAQ,SAACU,GAAD,sBAAgBA,EAAhB,CAAuBnB,eAW7B,kBAAC,IAAD,CACEe,MAAM,cACNE,MAAOT,EAAKP,YACZiB,aAb0B,SAACjB,GAAD,OAC9BQ,GAAQ,SAACU,GAAD,sBAAgBA,EAAhB,CAAuBlB,sBAc7B,kBAAC,IAAD,CAAQc,MAAM,SAASK,QApCN,WAAO,IACnBpB,EAAqBQ,EAArBR,KAAMC,EAAeO,EAAfP,YACb,IAAIS,EAAJ,CAGA,IAAMW,EAAMC,KAAKD,MACjBhB,EACEkB,YAAW,CACTC,GAAIC,cACJzB,OACA0B,QAAQ,EACRC,OAAQ,IACR1B,cACA2B,UAAWP,EACXQ,UAAWR,KAGfhB,EAASyB,YAAS","file":"static/js/23.0fc8b0d7.chunk.js","sourcesContent":["import React, {memo, useState} from 'react';\nimport {v4} from 'uuid';\nimport {Button, Screen, TextInput} from '../../../../components';\nimport {navigate} from '../../../../models';\nimport {useRootDispatch} from '../../../../utils';\nimport {useNav} from '../../../../hooks';\nimport {createList} from '../../models';\nimport 'react-native-get-random-values';\n\nconst initialState = {name: '', description: ''};\n\nexport default memo(function ChecklistCreate() {\n  const nav = useNav();\n  const dispatch = useRootDispatch();\n  const [form, setForm] = useState(initialState);\n  const isInvalidForm = form.name.trim().length === 0;\n\n  const handleSubmit = () => {\n    const {name, description} = form;\n    if (isInvalidForm) {\n      return;\n    }\n    const now = Date.now();\n    dispatch(\n      createList({\n        id: v4(),\n        name,\n        active: true,\n        userId: '1',\n        description,\n        createdAt: now,\n        updatedAt: now,\n      }),\n    );\n    dispatch(navigate('checklists'));\n  };\n  const handleNameChange = (name: string) =>\n    setForm((state) => ({...state, name}));\n  const handleDescriptionChange = (description: string) =>\n    setForm((state) => ({...state, description}));\n\n  return (\n    <Screen onLeftPress={nav.to('checklists')} title=\"Create Checklist\" gutter>\n      <TextInput\n        title=\"name\"\n        value={form.name}\n        onChangeText={handleNameChange}\n      />\n      <TextInput\n        title=\"description\"\n        value={form.description}\n        onChangeText={handleDescriptionChange}\n      />\n      <Button title=\"create\" onPress={handleSubmit} />\n    </Screen>\n  );\n});\n"],"sourceRoot":""}