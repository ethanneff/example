{"version":3,"sources":["apps/Portfolio/screens/Settings/index.tsx"],"names":["memo","dispatch","useRootDispatch","themes","Object","values","ColorTheme","currentTheme","useRootSelector","state","theme","currentColor","nav","useNav","onLeftPress","to","h1","center","title","ListHeaderComponent","disable","horizontal","keyExtractor","item","data","renderItem","key","onPress","changeTheme","contained","secondary","style","flex","centerVertically"],"mappings":"yGAAA,2EAOeA,yBAAK,WAClB,IAAMC,EAAWC,cACXC,EAASC,OAAOC,OAAOC,KACvBC,EAAeC,YAAgB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,eACpDC,EAAMC,cAEZ,OACE,kBAAC,IAAD,CAAQC,YAAaF,EAAIG,GAAG,qBAC1B,kBAAC,IAAD,CAAMC,IAAE,EAACC,QAAM,EAACC,MAAM,aACtB,kBAAC,IAAD,CACEC,oBAAqB,kBAAM,kBAAC,IAAD,CAAQC,SAAO,EAACF,MAAM,WACjDG,YAAU,EACVC,aAAc,SAAAC,GAAI,OAAIA,GACtBC,KAAMrB,EACNsB,WAAY,gBATEf,EASCa,EAAH,EAAGA,KAAH,OACV,kBAAC,IAAD,CACEG,IAAKH,EACLL,MAAOK,EACPI,SAbUjB,EAaUa,EAbY,kBAAMtB,EAAS2B,YAAYlB,MAc3DmB,UAAWtB,IAAiBgB,EAC5BO,UAAWvB,IAAiBgB,OAIlC,kBAAC,IAAD,CAAMQ,MAAO,CAAEC,KAAM,IACnB,kBAAC,IAAD,CAAMd,MAAM,QAAQe,kBAAgB,EAAChB,QAAM","file":"static/js/34.9729f366.chunk.js","sourcesContent":["import React, { memo } from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport { Button, Screen, Text } from \"../../../../components\";\nimport { changeTheme, ColorTheme } from \"../../../../models\";\nimport { useRootDispatch, useRootSelector } from \"../../../../utils\";\nimport { useNav } from \"../../../../behaviors\";\n\nexport default memo(function PortfolioSettings() {\n  const dispatch = useRootDispatch();\n  const themes = Object.values(ColorTheme);\n  const currentTheme = useRootSelector(state => state.theme.currentColor);\n  const nav = useNav();\n  const themePress = (theme: ColorTheme) => () => dispatch(changeTheme(theme));\n  return (\n    <Screen onLeftPress={nav.to(\"portfolioLanding\")}>\n      <Text h1 center title=\"Settings\" />\n      <FlatList\n        ListHeaderComponent={() => <Button disable title=\"Theme\" />}\n        horizontal\n        keyExtractor={item => item}\n        data={themes}\n        renderItem={({ item }) => (\n          <Button\n            key={item}\n            title={item}\n            onPress={themePress(item)}\n            contained={currentTheme === item}\n            secondary={currentTheme !== item}\n          />\n        )}\n      />\n      <View style={{ flex: 1 }}>\n        <Text title=\"hello\" centerVertically center />\n      </View>\n    </Screen>\n  );\n});\n"],"sourceRoot":""}